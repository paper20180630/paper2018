{"content": "对分布式共识算法进行了比较全面的介绍，篇幅有些少，背后的引用文献值得一看。", "marks": "推荐"}
{"content": "字大，书贵，建议不要购买。", "marks": "较差"}
{"content": "示例代码主要是python+keras或者Caffe。毕竟整理自连载博文，并不算很系统。值得一看的是三种视角切换看卷积过程、FFT视角理解卷积，以及后面GAN的简单解释（例子是Github上的，这点有些水了）。", "marks": "还行"}
{"content": "真是本烂书，又薄又贵凑字数。", "marks": "很差"}
{"content": "第一时间京东预定，真心等了好久才拿到书，书里基本都是作者的碎碎念，深度学习数据基础，里面的公式有哪些，推导步骤，深度学习调参等等，写得挺有意思，经验分享，值得看。", "marks": "力荐"}
{"content": "可以再读一遍", "marks": "力荐"}
{"content": "国人的朴素智慧", "marks": "力荐"}
{"content": "有这么点道理，但是真的不值这个价。半折入可以考虑。", "marks": "还行"}
{"content": "空话太多了。", "marks": "较差"}
{"content": "用最直白的方式，讲解架构", "marks": "力荐"}
{"content": "用比较新奇的生命周期思路解读了架构，不仅仅是软件架构，还有组织结构架构等。收益良多，强烈推荐。", "marks": "力荐"}
{"content": "生命周期以及不断把生命周期按是否变换责任主体细化拆分直到识别完完整的业务过程，这一分析方法非常有参考价值，责权利对等是高内聚低耦合的重要划分原则，把现实世界和生活中的实际案例和现象同it软件结合类似，很有启发，万变不离其宗。", "marks": "推荐"}
{"content": "个别基础概念解释还行，比如DMZ", "marks": "还行"}
{"content": "19 如何写好代码  20 单元测试 32 交易系统  不错", "marks": "推荐"}
{"content": "初看排版一般，但是内容确实非常好。去作者所说，怎么用自己的语言和文字表达出来，是和实现同样重要的。架构从业务生命周期的分解开始，考虑怎么样用合适的技术让业务模式变成现实。从技术细节，到分工和组织架构，业务、组织和技术是共同作用演化的。从写好代码，到模式工具，单元测试，运维，直到用户使用的体验，数据和运营，构成了软件的整个生命周期", "marks": "推荐"}
{"content": "第二部分后面几章终于有点感同身受。", "marks": "还行"}
{"content": "架构师应该看看老王对一些本质问题的认知，也许未必都认同，但对这些问题的思考是架构师都要经历的", "marks": "力荐"}
{"content": "简约设计，扩展架构", "marks": "力荐"}
{"content": "一本可以当做打发时间的闲书", "marks": "还行"}
{"content": "其书其人都让我甚是敬仰，其人不扬名，其书很多问题都想得很透彻。非常鄙视国内那些到处搬东西就凑成一本书的人", "marks": "力荐"}
{"content": "全书很多小学作文式的比喻和比拟，文字功底确实差，妥妥的凑字数。也许是个好架构师，但是不是一个好的作者。", "marks": "较差"}
{"content": "看过专栏，也看过本书。印象最深的一句是\"概念即名相\"。\n\n个人的观点是: 对于一个客体，一件事，每个人，都有自己的视角，都有自己的理解。\n\n概念，即是都是基于个人或者一个群体，进行抽象的结果，其型态就是模型。\n\n实际上，每个模型都是错的，因为不可以兼顾全部视角，那叫绝对唯物。\n\n不过，每个模型都或多或少有些用处，可以解决一些模型里定义和假设会出现的问题。\n\n每个模型有多少个视角，就有多少个参与者，他们可能是人，也可能是机器，还有最终极的----时间。\n\n架构，就是为这些要素找到一个相对平衡点，时间是它的一个重要变量。\n\n小架构，小模型，小问题\n大架构，大模型，大问题", "marks": "推荐"}
{"content": "哎…说聊聊，更像是漫谈，整本书像是一本散文集，每个篇章都是一个故事，整体缺少一个主线。说白了，看完觉得空空。也许是我自己才学疏浅，没明白作者想要传达给读者怎样一种思想，或者要解答怎样的困惑。", "marks": "较差"}
{"content": "哎 作者是在凑字数么", "marks": "还行"}
{"content": "圣经里有句话：生有时，死有时；栽种有时，拔出所栽种的也有时；杀戮有时，医治有时；拆毁有时，建造有时...  \r\r觉得从生命周期去考虑架构确实挺新颖，也挺哲学。", "marks": "推荐"}
{"content": "对架构这个词给出了通俗易懂的解释，阐述步步推进，有理有据，思考从人类起源到技术现实层面。无论是什么行业的人都值得去读一读这本书。特别是作为技术人，从中一定会有所发现，回味悠长。", "marks": "力荐"}
{"content": "核心很明确，全文围绕核心一点展开，内容很实在，不浮。", "marks": "推荐"}
{"content": "通篇都是正确的废话，浪费时间", "marks": "较差"}
{"content": "建议不要读，非常浪费时间，虽然有些点有道理，但是总体而言没啥价值", "marks": "很差"}
{"content": "69元200页的书，附加一堆很不形象的比喻。解说各种问题主题都不明确，犹如隔靴搔痒。作者题目明确聊聊架构，真的是围绕“架构”这个主题随意聊聊。看在InfoQ的推荐才买的本书，非常后悔！完全是浪费我的钱和时间！", "marks": "很差"}
{"content": "也许该作者有很多自己的想法，但是在文字表达上面真该下一番功夫了。很多地方都看不下去，就是一个漫谈。建议实在无聊的时候再去看看吧。", "marks": "较差"}
{"content": "通篇是“ XX 是什么呢？就好比YY” 这他妈是啥？原谅我没忍住爆粗口", "marks": "很差"}
{"content": "你不知道的是思考得出来的理论更加重要，让人少走弯路才是正道。", "marks": "力荐"}
{"content": "有点像故事书。", "marks": "还行"}
{"content": "书一般，3星给三位前同事的辛苦翻译", "marks": "还行"}
{"content": "描述了作者所理解的前端架构设计的一套流程，介绍了很多有关的工具。", "marks": "推荐"}
{"content": "还不错，书很薄，值得一读", "marks": "推荐"}
{"content": "泛泛而谈，并没有我想要的东西😑", "marks": "还行"}
{"content": "内容很具体，缺失必要的知识和经验，暂时理解不了多少", "marks": "推荐"}
{"content": "初读以为是民科，因为按最后的逻辑，这是要造出一个“儒家”特别是有阳明心学的机器人。细读之后，觉得也对，也是一种可能性。人类能够自然地在演化中产生王阳明和心学，机器人里边为什么就不能出个王阳明？人工智能也可以百花齐放。", "marks": "力荐"}
{"content": "不值得买，很垃圾。", "marks": "较差"}
{"content": "称得上是一本奇书 要不是那么多大佬做序还以为是民科。有缘以后在看吧。", "marks": "推荐"}
{"content": "天天自我炒作，有意思吗？", "marks": "很差"}
{"content": "像父母对待婴儿一样充满善意的对待人工智能，让其拥有和人类和平共处为目标的自我意识，我不知道这会有什么用，毕竟人类自己还掐架呢…", "marks": "还行"}
{"content": "内容丰富，涉猎广泛，值得一睹", "marks": "力荐"}
{"content": "其实我没读。但是这么多刷的评论让我很不爽", "marks": "很差"}
{"content": "从进化和哲学等多个角度揭示了人类自我意识的起源和特性，其中涵盖了物理、数学、生物、哲学、心理学等多个学科的知识，非常有趣。也同时探讨了人类与人工智能在未来的相处模式。", "marks": "力荐"}
{"content": "我不知道其他评论的是不是托，反正我读这本书时感觉民科气息太浓，茶余饭后读读罢了，严肃做学术研究的就省省钱吧。\n（ps，和皮亚杰的发生认识论一起买的，虽然晦涩难懂，但也愿意多读几遍，这本花半天看看就行了）", "marks": "较差"}
{"content": "一旦一台机器完成了从0到1 的突变。自我意识的产生随之而来的是它的自我保护意识，自我独立意识甚至于自由意识与种族意识。他们拥有几何倍数的人类所有思维能力。他们通过互联网在十几年之内将整个人类文明的智慧结晶都拿下，那时，机器崛起之日，人类又何去何从？", "marks": "力荐"}
{"content": "触觉大脑假说给现代人工智能的研究提供了新的出路，蔡老师所提出的给机器立心、为人工智能树立正确的价值观也站在了更高的角度看人工智能，我很期待当代人工智或脑科学因触觉大脑假说而有新的突破，同时也期待着自然科学、认知科学与哲学的空前统一。", "marks": "力荐"}
{"content": "蔡师提出了一个独特，质朴而自洽的框架，剑锋直指智能的最本源。书中的一些概念，定义和外延初读之下，即让人耳目一新，再结合列举的具体实例阐释，掩卷之间，不免感叹妙哉妙哉。", "marks": "力荐"}
{"content": "涉猎广泛的博学者总结自我知识结合中西古中后对于自我意识的猜想/看法。论证的确有一些问题，但是主体上还是很值得参考的。别作为学术内容看，就当做思想漫步还是挺好的。", "marks": "推荐"}
{"content": "蔡恒进老师引入了“坎陷”这样一个看似深奥实则生动的概念来剖析人的认识规律，以让我们更好地规划机器的意识形成。", "marks": "力荐"}
{"content": "当初深蓝计算机在象棋中战胜人类时，人们一度认为至少电脑永远不可能在围棋这么复杂的游戏中战胜人类，然而短短不到二十年后Alpha Go就已经达到了这一点……", "marks": "力荐"}
{"content": "文中更强调的是自我意识产生起点的“剖分”，而不是 “进化”的过程，笔者认为这一点对于实现人工智能具有深刻的技术指导意义。", "marks": "力荐"}
{"content": "只有理解了人的意识，才有可能真正赋予机器以意识，从而实现真正的人工智能。这本书从人的意识讲起，通过一套全新的理论体系帮助我们理解意识本身，解开意识与高级智能的起源之谜，为实现真正的人工智能开辟了新的路径。", "marks": "力荐"}
{"content": "人类意识由何而来？高级智慧又终将走向何处？蔡老师的《机器崛起前传》用独特的视角带我们看人类智慧，从简单的例子中把握人类意识的共通性，进而阐述自我肯定需求对人类智慧发展的重要性，从此延伸至历史、经济等社会文明在受到自我肯定需求的推动的过程中不断发展。 ", "marks": "力荐"}
{"content": "醍醐灌顶，受益匪浅！", "marks": "力荐"}
{"content": "书中很好的解释了人类自我意识（或者说高级人工智能）的起源问题，这一问题虽然几千年来各学派众说纷纭，但是还是没能在根源上解决这个初始问题。", "marks": "力荐"}
{"content": "人工智能的风险已经被讨论了许多年，众多科幻小说、电影也都设定了各种场景，告诉人们人工智能的风险可能是巨大的。作者对高级人工智能可能会带来的风险和后果做出了评估，并给出了方案。", "marks": "力荐"}
{"content": "我们急切的需要对人工智能的未来发展进行深入的探讨，而《机器崛起前传》这本书以全新的视角对人类意识、人工智能进行了分析，实在是令人深思。", "marks": "力荐"}
{"content": "作者用思维跃迁性概括，而其本质，也就是自我肯定需求，人类在满足自我、社会、国家的自我肯定需求的同时不断向永恒和绝对真理前进，这揭示并联系了人类智慧的根源和终极目标。", "marks": "力荐"}
{"content": "人类的逻辑思维和情感反应等，按照现在的发展方向，可能百年之内机器也难以望其项背。", "marks": "力荐"}
{"content": "作者对于人类的认知体系构建了清晰明了的框架——认知坎陷三大定律。作者观点的独到之处就在于，建立了一个“坎陷世界”，将意识和物理世界剥离开来——在我们对人类认知、意识进行研究的时候，无需去考虑背后冗杂而不确定的物理实际是如何运作的。", "marks": "力荐"}
{"content": "有的觉得人工智能很可怕，不能继续研究下去，有的认为人工智能可能要过很久才能真正实现（比如几百年），只有很少人对人工智能抱有积极并期待的态度。对于人工智能的看法，大家众说纷纭，但实际上人工智能真的离人们越来越近了。", "marks": "力荐"}
{"content": "在《机器崛起前传》，为实现人工智能提供了一条新的思路—想要实现人工智能，就要先研究清楚人类的高级智能是什么、人类的自我意识与认知是从何而来，当我们掌握了自我意识的真谛后，从技术层面上实现人工智能就会轻松很多了。这也是为什么这本书占用了大量的篇幅来分析人类自身的意识与认知的原因。", "marks": "力荐"}
{"content": "这本书用物理学、哲学、语言等各个领域的例子来解释人类意识的独特性和共通性，从独特的现象来解释人类意识在认知层面的本质。", "marks": "力荐"}
{"content": "书中作者认为人类的自我意识来源于“自我”和“外界”的二元剖分——这种剖分也是最初的“坎陷”、“原意识”（坎陷也是书中另一重要部分），这种剖分让人类开始有了“我”的概念。赞一个", "marks": "力荐"}
{"content": "         机器到现在为止，赋予了它计算，了解，甚至是学习这个世界的能力。随着人工智能的进一步深入，从宏观意义上来看，它甚至几乎能做到人类能做到的任何事情。", "marks": "力荐"}
{"content": "在意识起源方面，老师创造性地提出触觉大脑假说，提出敏感的皮肤是原意识产生的关键，即后面所提到的“膜”在意识的产生与演化的过程中，发挥着比“核”更为重要的作用，当然，人类高级智慧的产生，是“核”与“膜”之间互相完善、不断迭代产生的结果。", "marks": "力荐"}
{"content": "好看！", "marks": "推荐"}
{"content": "适合零基础当做入门科普读物吧，书中的python代码不多，还算直观。买这本书是冲着python代码去的。有点小失落，理论部分还行。", "marks": "还行"}
{"content": "科普读物", "marks": "还行"}
{"content": "对于初学者真的蛮好的，概念拆的很清晰。树立起学习信心才能更好地进行学习嘛，赞", "marks": "力荐"}
{"content": "简单好看，我觉得叫图解算法入门简介比较合适，所有的算法都有介绍但是没有深入的分析", "marks": "推荐"}
{"content": "小白归小白，还是实用的", "marks": "推荐"}
{"content": "看了此书我才知道，好多基于数学的算法我都学过的。可惜都惭愧了还给了老师。现在我也才明白当初那些数学课到底有什么用！只可惜知道的太晚啦。。。", "marks": "力荐"}
{"content": "非常好，结合这写算法的应用讲解，以及图让你理解", "marks": "力荐"}
{"content": "适合给本科生以下的初学者。", "marks": "还行"}
{"content": "浅显易懂，图很可爱。", "marks": "推荐"}
{"content": "通俗易懂，算法中重要的知识点都有。", "marks": "力荐"}
{"content": "通俗形象，但浅了点", "marks": "推荐"}
{"content": "翻译有的地方有些奇怪【。", "marks": "推荐"}
{"content": "3.5吧，虽然凌乱，其实还挺有趣的。", "marks": "推荐"}
{"content": "入门得过于简单", "marks": "较差"}
{"content": "适合新手看的入门书。早些时候看会有帮助", "marks": "推荐"}
{"content": "虽然是入门，但有点少而浅", "marks": "推荐"}
{"content": "太基础，适合小小白", "marks": "还行"}
{"content": "大概看了看，不适合我这种需要深入学习数据结构的考研狗。", "marks": "还行"}
{"content": "算法是编程的灵魂。", "marks": "推荐"}
{"content": "一般,一些复杂算法还是要敲代码调试才能明白。", "marks": "还行"}
{"content": "科普", "marks": "还行"}
{"content": "这本书实在是写得太简单了……感觉是给小孩子看的", "marks": "还行"}
{"content": "非常基础的算法", "marks": "力荐"}
{"content": "简单易懂。比起那些大部头的算法书，这本算是让读者以最轻松的方式了解算法的一些基本知识了。强力推荐。", "marks": "力荐"}
{"content": "用图来解释算法是非常好的想法，这本书也非常的体贴，看起来也很快。当然要说不足，这本书只能算作学习数据结构和算法的热身教材。可以给你一个整体的感觉，但是很多细节需要你再继续学习。当然这本书看起来还是非常舒服的，基本上半天就可以学习完。例子也很适合笔算，一步步的图解也很好！", "marks": "力荐"}
{"content": "通俗易懂", "marks": "推荐"}
{"content": "入门的算法书 篇幅很小 但基本的都有点到 让算法变的有趣而不是那么的枯燥", "marks": "力荐"}
{"content": "就是喜欢这种200页的小书。", "marks": "力荐"}
{"content": "非常不错的入门书籍，简单有趣还授之以渔。", "marks": "力荐"}
{"content": "算法入门书，学个概念，有用时再复习！", "marks": "推荐"}
{"content": "感觉像是小学及中学向的算法书", "marks": "还行"}
{"content": "学习一下 形象理清思绪", "marks": "推荐"}
{"content": "至少可以看懂", "marks": "推荐"}
{"content": "讲解真的很明白，图画的也都很有趣，当然不能强求深度，作为科普和小书已是精品。", "marks": "力荐"}
{"content": "入门", "marks": "推荐"}
{"content": "该详细的不详细，该略讲的讲的很幼稚.....并没有多少干货.....唉", "marks": "较差"}
{"content": "入门书籍，数学基础几乎没有要求，讲解简单明了。一周目，算是我看过最简单的算法书了。", "marks": "力荐"}
{"content": "#98天读35本书#第18本,对算法做了一个概率.图文结合的形势不错,对算法的讲解不够细致.", "marks": "还行"}
{"content": "入门", "marks": "力荐"}
{"content": "算法入门神书，推荐给年轻人看", "marks": "力荐"}
{"content": "挺不错的一本零基础算法科普书", "marks": "推荐"}
{"content": "好书好书，适合给孩子讲课。", "marks": "推荐"}
{"content": "小篇幅python小白了解算法的书籍（可是一本17年的书py还是2.7。。）。课后有很简单的练习题，并有答案）。小白归小白，本书仍有益处。", "marks": "推荐"}
{"content": "偏入门向的算法书，只看了最后三章，动态规划部分更像是介绍了一种方法，原理并没有讲太多。", "marks": "还行"}
{"content": "算法入门，可用作规范一些算法思维，但是读深入的算法书是必须的", "marks": "推荐"}
{"content": "浅显易懂", "marks": "推荐"}
{"content": "举的例子真的恰到好处，非常适合初学者", "marks": "力荐"}
{"content": "三天看完，比较基础", "marks": "还行"}
{"content": "很通俗易懂，浅显的初级知识。", "marks": "力荐"}
{"content": "本书尽量用图画的形式来阐述算法思想，虽然很有趣，但是内容太浅，只是入门而已。还需要看别的书籍！", "marks": "推荐"}
{"content": "非常适合算法入门，特别是前面几张，从开始一直到hash那一章非常清晰明了，包括各种O的估算是怎么得出，各种数据结构的娓娓道来，但从贪婪，动态规划开始就讲得太浅了，离真正实用还是有些距离，偏科普了，不论怎样还不错的", "marks": "推荐"}
{"content": "门都没入，但写得非常好", "marks": "推荐"}
{"content": "初学者友好，如果是计算机专业的同学想复习算法还是太简单了", "marks": "推荐"}
{"content": "适合入门", "marks": "力荐"}
{"content": "作为一本算法的扫盲书，无疑很优秀，让人读得进去的才叫入门书籍，不然就是劝退了", "marks": "力荐"}
{"content": "简单，容易理解，算法选择很经典，加深了理解，搞懂了很多以前不明白的点", "marks": "力荐"}
{"content": "入门读物，仅仅是介绍，附的代码很好读，就是有一点小错误。", "marks": "推荐"}
{"content": "研究了画风。。", "marks": "推荐"}
{"content": "轻松愉快的入门书，当然看完还是需要实际的练习。如果当年的OS老师给我们教算法先用这本书而不是\n https://book.douban.com/subject/4034470/ 入门的话，也许出勤率应该会更高吧……", "marks": "推荐"}
{"content": "极为基础的算法入门书。看完不会有很大的提升，但讲述精要清晰，适合对基础算法理解模糊的读者。读起来很快。", "marks": "推荐"}
{"content": "很好的书，生动形象，就是内容有点少。", "marks": "推荐"}
{"content": "p.32 有一处缩进出错\np.124 排版出错\np.125 一处错误\n\n小白算法科普读物\n有些代码排版不是很好", "marks": "推荐"}
{"content": "算法入门\n中文的弊端  一些术语  用中文很反感\n提纲挈领的讲了算法\n图解很好\nPython虽然是2 但影响不大", "marks": "力荐"}
{"content": "太浅了  一天看完了… 不过是本入门的好书  爱看插画的可以看看", "marks": "还行"}
{"content": "适合小白入门", "marks": "还行"}
{"content": "本书介绍了几个基础的算法和数据结构，并图文并茂的把复杂枯燥的东西说的简单明白。", "marks": "力荐"}
{"content": "讲解平实详细，容易理解，适合入门", "marks": "还行"}
{"content": "5.22-5.24三天读完，最通俗易懂的算法入门书，其实简单到门都没入，介绍概念但是干货不多。", "marks": "还行"}
{"content": "的确像小说一样有趣，读起来很轻松。例子用Python加画图讲得有趣透彻。读完明白了广度优先遍历、动态规划有趣的应用。", "marks": "力荐"}
{"content": "最后三章还不错，开头的有点太基础了，适合0基础的同学入门", "marks": "推荐"}
{"content": "很好的入门书，每一个算法都有python的代码实现，有逐行解释，很适合我这个新手。一天就翻完了，希望有进阶版。减一星是因为有一些印刷错误小瑕疵，无伤大雅，可根据上下文理解。", "marks": "推荐"}
{"content": "很棒，浅显易懂", "marks": "力荐"}
{"content": "通俗易懂，生动有趣，一本不会让人想睡觉的入门书籍", "marks": "推荐"}
{"content": "算法入门书，适合小白和想要了解算法的人", "marks": "推荐"}
{"content": "算法入门或者想复活对算法已死的心，推荐！", "marks": "力荐"}
{"content": "这本书的内容其实挺简单的，不过里面对算法的图示非常好，有助于初学者对算法的象形理解，还有对实际问题的结合，也是本书的优点之一。", "marks": "推荐"}
{"content": "入门必备，简单易懂，图很多。很薄，两天读完，梳理完基础知识。", "marks": "推荐"}
{"content": "挺简单的一本小书，一天看完，重新复习了一些算法基本知识 最后几章提供了些新技术的关键词，小有所得", "marks": "推荐"}
{"content": "图灵打折买的，很短小", "marks": "力荐"}
{"content": "比较简单，内容少而精，作为算法入门书籍还是值得一读的，", "marks": "力荐"}
{"content": "有趣形象，简单明了", "marks": "推荐"}
{"content": "挺清晰全面的，不错的参考书", "marks": "推荐"}
{"content": "不如看udacity里的课程，那里讲解得要清晰许多\n\nhttp://cs224d.stanford.edu/lectures/CS224d-Lecture7.pdf", "marks": "较差"}
{"content": "比唐原黄文坚那本要好，介绍了很多实用的细节", "marks": "力荐"}
{"content": "可以啊", "marks": "力荐"}
{"content": "很好，5分//感觉挺适合入门的", "marks": "力荐"}
{"content": "大概没有对比就没有伤害把。。想明白了BP的过程后再回来看这个就发现其实写的很罗嗦。", "marks": "还行"}
{"content": "很不错的书，适合课堂上听过一些神经网络以及写过tf hello world的我，废话不多说，抓紧用tf来写作业了", "marks": "力荐"}
{"content": "不假设你都懂，慢条斯理的给你讲明白了，并且能让书的框架结构适合这样思路，这样的写书态度就非常赞了。同时深度学习的原理应用简介开始，再到tensoflow的代码应用，非常容易消化吸收。虽说大段大段代码，但代码中间都带注释说明，容易掌握。非常适合tensorflow入门。", "marks": "力荐"}
{"content": "难得写这么明白 赞！入门必备 ", "marks": "力荐"}
{"content": "阅读体验挺好", "marks": "推荐"}
{"content": "还没用过TF，但书中从各部分的算法过渡到实际代码，很好理解，也可以作为学习深度神经网络的教材", "marks": "力荐"}
{"content": "写的不错，清晰易懂，适合小白", "marks": "推荐"}
{"content": "只适合入门入门再入门吧，内容浅显，如果想深度学习的话，内容还是少了。。。尤其是开头和结尾都打作者公司的广告，真的是看的太膈应啊！", "marks": "还行"}
{"content": "tf有点难", "marks": "推荐"}
{"content": "非常好的入门书，官方文档为主，此书为辅，有助于理解。循序渐进！", "marks": "力荐"}
{"content": "作者一步一步将深度学习和tensorflow的原理写得很明白，是用心之作。", "marks": "力荐"}
{"content": "为数不多的中文tensorflow资料", "marks": "推荐"}
{"content": "适合快速入门tensorflow，推荐。", "marks": "推荐"}
{"content": "很好，要的就是栗子，吃饱了才能干活", "marks": "推荐"}
{"content": "国内少有良心书 不是水文", "marks": "力荐"}
{"content": "个人觉得很棒", "marks": "力荐"}
{"content": "这本书偏向入门，帮我理清了很多基础知识，官网的文档太乱了。另外一本《实战》偏向实践，总的来说还不错，搭配《实战》食用口感更好", "marks": "力荐"}
{"content": "书中的许多样例代码都有语法错误", "marks": "很差"}
{"content": "与大多数蹭深度学习热点的书不一样，作者用通俗的语言讲明白了TF的基本用法，是自己仔细组织思考过才写出来的，难得的好书，尽管我读的是印刷质量很差的盗版，哈哈。", "marks": "力荐"}
{"content": "性价比超低，200多页，六七十的价格。很多重复的话。虽然入门有帮助，但是讲的真的很浅而且内容拼拼凑凑的感觉。。热门方向的书籍出起来真是好圈钱啊。。。。", "marks": "较差"}
{"content": "细节介绍得很好，比唐文坚那本好", "marks": "推荐"}
{"content": "很好，适合入门，其中有个例子的代码缩进有问题。", "marks": "力荐"}
{"content": "很一般吧，不值这个钱", "marks": "还行"}
{"content": "书中的提到的新概念没有解释，一些模型也说不清楚", "marks": "较差"}
{"content": "写的很入门，适合初学者！", "marks": "力荐"}
{"content": "粗略翻阅了一遍，只能说是本学zwquant的工具书和广告书。", "marks": "很差"}
{"content": "缺点：广告真多：作者对自己办的培训班的推广太多了，对zwpython空泛的自赞之辞让人烦。\n优点：新手看看还行，最重要是要自己去上机实验", "marks": "较差"}
{"content": "能够很快上手的一本书，国内少见。", "marks": "力荐"}
{"content": "这本书嘛，确实广告太多。 核心内容没啥东西。 其实就是相当于一本广告书记了，其实作者有一套源码，这套源码还是比较好用的。 在此源码的基础上修改了很多以满足自己的需求。 给3个星的话，真的是给那一套源码的。。", "marks": "还行"}
{"content": "作为一个很想学的初学者，表示完全看不懂，封面的宣传骗人的。的确，你用他的程序可以写，但是只能够在他所呈现给你的案例中修改一两个参数，你没办法自己写一个完整的策略。因为你压根就不知道那些代码的含义，你自己去查的话，一层一层的封装让你疲于奔命，我投降，我去买别的书吧。", "marks": "很差"}
{"content": "楼下的那个水军一直在给这个系列五颗星。。。。书太浅，纯属骗钱", "marks": "很差"}
{"content": "买了本广告。。一点干货都没有，自吹自擂真的这么有意思吗", "marks": "很差"}
{"content": "给孩子看的吧。", "marks": "较差"}
{"content": "挺基础，可以给小娃娃做练习题用:)", "marks": "还行"}
{"content": "给孩子看的吧。", "marks": "较差"}
{"content": "一般般", "marks": "还行"}
{"content": "全是安装部署的东西，到处抄，不知道你们这种给五颗星的是怎么想的", "marks": "很差"}
{"content": "哎", "marks": "很差"}
{"content": "很不错的书，值得推荐", "marks": "力荐"}
{"content": "你这水平也出书？", "marks": "很差"}
{"content": "本书涉及面相当之广，可以说涵盖了在设计分布式系统时，所要考虑的大部分问题及解决方案。包括，分布式系统方面的范式、系统架构、计算、通信、存储、监控、版本控制以及 RESTful、微服务、容器技术、Serverless等等。最要命的是，作者写了超过一打的开源书（见https://waylau.com/books/），为开源事业贡献自己的力量！", "marks": "力荐"}
{"content": "本书的内容比较全面，涵盖分布式系统基础理论、常用技术以及经典的案例分析。全书篇幅较多，对分布式系统中的线程、通信、一致性、容错性、CAP理论、安全性、并发、RESTful风格架构、微服务、容器技术，以及分布式消息服务、分布式计算、分布式存储、分布式监控系统、分布式版本控制、RESTful、微服务等相关技术和知识点都作了详细的讲解，并辅以淘宝网和Twitter为代表的国内外知名互联网企业的大型分布式系统为案例，分析其架构设计以及演变过程，做到了理论和实践相结合。", "marks": "力荐"}
{"content": "本书非常适合初学者，特别是刚刚接触分布式系统的我，在本书里面，对于之前工作中有用到radis的我，但是具体的部署操作都不懂，看了书以后，顿时豁然开朗；虽然本书大多都是安装部署甚至是简单的介绍，但是非常实用，非常适合我，谢谢作者的share；也拜读过作者的blog，佩服作者多年来一如既往的坚持，点赞，好好加油，多为我们分享工作中的经验！", "marks": "力荐"}
{"content": "在图书馆借过几本分布式的书但无一不内容晦涩，都是没看完就还了。相比之下，此书的作者更加用心，能够感觉得到作者在将解析清晰化上花了不少功夫，不至于像其他同类书那样纯粹堆砌术语、不把话说明白。作为纠结为在分布式系统道路上的小白，表示特需要这样有诚意的书。所以，五星推荐。THUMBS UP！", "marks": "力荐"}
{"content": "作者通过将自身学习与工作实践中所积累的经验，介绍了分布式系统的使用和主流技术，令我对分布式系统的理解有很大帮助，值得推荐", "marks": "力荐"}
{"content": "书很好，有深度，有广度，内容新颖，与时俱进，要慢慢学习。", "marks": "力荐"}
{"content": "工具使用方法多，内容涉及面广。即适合对于分布式系统的初学者，对于老程序员，也可以作为随手翻阅的工具书。里面所介绍的技术，也比较新颖。喜欢最后面介绍淘宝网发展进程的文章~", "marks": "力荐"}
{"content": "只能算是本小册子，虽然视角和其他数学史有不同，用算法的思维来解读数学发展，但是感觉并没有深入挖的意思。属于普及用的数普书。另外不知道是因为版权费太高还是从法语翻译翻译费比较高，本书性价比一般。本来以为书中能提到吴文俊，结果并没有。关于直觉主义以及四色定理那些部分写得挺有意思的。书中类比到乔姆斯基的生成语法，窃以为语言学与数学差距还是比较大的。数学比语言学更“底层”，就像物理比化学、生物更“底层”。\n", "marks": "还行"}
{"content": "读着费劲，总感觉文笔差", "marks": "还行"}
{"content": "主要想讨论的是计算对证明的重要性。对“证明”这一概念的梳理比较清楚，尤其谓词逻辑和判定性问题的章节，提纲挈领，对理解语言哲学也有帮助。", "marks": "推荐"}
{"content": "获得出版社样书", "marks": "推荐"}
{"content": "挺好看的。本质上是数学语言学。", "marks": "推荐"}
{"content": "难得把如此深奥、本质的主题介绍地如此浅显和引人入胜。", "marks": "力荐"}
{"content": "太难看懂了。。。", "marks": "推荐"}
{"content": "很好的科普，浅出", "marks": "力荐"}
{"content": "3.5", "marks": "还行"}
{"content": "关于数学家研究数学本质的故事。发现我对数学科普的兴趣一直在“哇塞看起来好流弊好想了解”和“我靠这是什么鬼”之间不断循环……", "marks": "推荐"}
{"content": "有些和SICP类似的观点，基本上是在讲算法和推理的纠缠。看完了还是不懂lambda和图灵机。", "marks": "推荐"}
{"content": "看到了很多之前了解的复杂性计算里面的内容。计算规则现在已经成为数学证明里面的一个得力工具了。当作科普文质量可以说很高了。", "marks": "力荐"}
{"content": "确实讲得比较浅，不过毕竟是补上了国内相关领域科普作品的空白。以计算－推理代替太过模糊的分析－综合知识倒是很有意思的想法", "marks": "推荐"}
{"content": "hold不住…", "marks": "还行"}
{"content": "#为了不被时代抛弃，文科生也在尽力#", "marks": "力荐"}
{"content": "并不好读，但是结论令人信服。", "marks": "还行"}
{"content": "自己一直不太懂一些学科的历史，感觉数学的历史实在太庞大了。读了这本书，感觉自己稍稍窥探了一下计算机相关的数学历史，但仍晕乎乎的。", "marks": "推荐"}
{"content": "感觉本书观看顺序，应该是从后往前看。最后几章是例子，如四色定理的机器证明，黑尔斯关于开普勒猜测的机器证明等等，由此你才能理解为何要在公理、逻辑推理基础上，还要加上计算规则这一项。但从前往后读，也会有种恍然大悟的感觉。", "marks": "推荐"}
{"content": "难度太大……\r书里作者自己的观点略强", "marks": "推荐"}
{"content": "很有意思", "marks": "推荐"}
{"content": "好歹看懂了…嗯…不枉我学了这么久的计科…", "marks": "推荐"}
{"content": "语言平实，很容易度，很容易消化。国庆前最后一个工作日，大伙都没心思上班的时候，看完的。", "marks": "还行"}
{"content": "十年之前的法语书。很多零散的观念被重新解释更新了。作Lisp程序员，格雷厄姆所谓的Lisp的数学起源也终于清楚了。富有启发性，值得依此框架继续思考。", "marks": "力荐"}
{"content": "被逼无奈 结果好像还挺好看的", "marks": "推荐"}
{"content": "把本来长篇的数学史精简精简的看不透看不懂，也是一种能力。不推荐看这本书。看数学就去看数学史即可，专业的书籍写的更详细。这本书更像是一些词汇的罗列。对于数学的描述并不像宣传单书评之类写的那么清晰和概括。", "marks": "较差"}
{"content": "三星给的是目标读者-想知道算法是怎么回事没有任何基础的人。毕竟整本书基本只覆盖了简单的数据结构和几个搜索算法。 我的感觉是就算法和数据结构而言，有时候入门和第一个台阶之间真的有一段漫长容易走弯路的距离，入门书（如同这本）太简单，知晓几个名词看得懂思想，其实真的远远不够，因为太具体了，单论遇到一个问题怎么规约到已知的算法上去，就有无数种变形和抽象，这一步估计只能通过不断的训练了。毕竟算法的目的是为了高效解决问题，只学会了用锤子但不知道什么钉子能砸、拿什么锤子砸，容易出现挫败感。  高级的书又太难，直接给你论证锤子的制造过程，充满数学公式，又太抽象。", "marks": "还行"}
{"content": "通过一个不太引人入胜的故事科普常用算法，不过还是有点意思。短时间内将以前学的算法以这种还算有趣的方式回顾一遍。\n另外，书很薄，但很贵", "marks": "还行"}
{"content": "太牵强了", "marks": "较差"}
{"content": "很薄，不到两小时看完。内容不多，提到了深搜广搜等几个基本搜索算法，数据结构只有栈队列二叉树和堆。 完全没基础估计看不懂，有点基础就当成蹩脚故事书看吧，书中场景比童话还童话。 \n也许只有刚刚入门的孩子，有闲当成故事书翻翻，跟晦涩理论书印证一下，才有些用处。", "marks": "还行"}
{"content": "看看", "marks": "还行"}
{"content": "大部分都是比较基础的搜索算法，额，情节人物几乎全是为了科普服务的。所以作为小说非常糟糕……但是作为一本趣味算法入门的话，倒还不错", "marks": "还行"}
{"content": "贼不好玩", "marks": "较差"}
{"content": "比较简单吧，最多到二叉搜索和堆排序。没有图相关的算法（深度优先和广度优先有）", "marks": "推荐"}
{"content": "涉及的算法太基础了。用小说来写算法是一个不错的想法，但是本书太臃肿了，一多半的篇幅都没用。二分搜索，并行搜索，深度优先搜索，广度优先搜索，深度限制优先搜索，二叉树，平衡二叉树，内容只涉及这些算法，感觉一片文章都可以讲明白的，整整讲了一本书。", "marks": "还行"}
{"content": "分开来说，小说情节挺没劲的，算法介绍挺入门的，合在一起，有点新意但没多大意思。前阵子狗东图书促销差点买了这本，所以书评神马的，随便听一听。", "marks": "还行"}
{"content": "其实不是很清楚这书的受众… 对小朋友来说太无趣，对文科宅来说文学性为负，对技术宅来说整个故事流露出一种智商堪忧的尴尬，设定很尴尬。其实看到它把xx公司首席xxx作为卖点的时候就应该意识到大概率不值得花费时间。", "marks": "较差"}
{"content": "当算法入门书太简单，举的例子都冗长且不易理解；当小说情节太简单，故事发展太强行，完全为科普算法服务；两者结合更灾难", "marks": "还行"}
{"content": "故事好无聊，但是算法解释还算有趣，可以给小朋友们看", "marks": "还行"}
{"content": "入门", "marks": "还行"}
{"content": "第一本读完的算法书……算法基础太差了，之前一到图论就死活读不下去……这次总算对复杂结构有概念了。\n我可能是个假程序猿😂😓😰\n小小一本，卖的死贵……还好京东活动买的……", "marks": "推荐"}
{"content": "太幼稚了  读不下去了  初中生看看差不多", "marks": "还行"}
{"content": "内容也实在太简单了", "marks": "还行"}
{"content": "轻松是轻松了，看完没啥收获", "marks": "还行"}
{"content": "蛮有意思的书", "marks": "推荐"}
{"content": "如果世界上所有代码书都这么好玩就好了~", "marks": "推荐"}
{"content": "…怎么说，内容简单。给小孩子看吧，文字绕弯，图例不够形象，英文名不翻译的话不认识，翻译的话一些幽默又会看不懂。\nps太贵，要出第二本的结尾也很无力吐槽", "marks": "还行"}
{"content": "很好的通俗易懂算法入门引导书", "marks": "推荐"}
{"content": "最大的敌人显然是不必要的复杂性。开始节奏比较慢，算法都是很基础的。怎么用小说的方式来写出算法的故事是很有意思的。搜索优化的关键是信息，是本书的主题；为了多次搜索的优化，一次花成本的时间建立合适的数据结构。索引、缓存、堆都是这个目的，维护和检索某种有信息的树是快速查找的关键", "marks": "推荐"}
{"content": "难得用算法来解释文学的书，用硬功夫硬生生推倒文学对科学竖起的高墙，尽管还不够精致，但很有想象力和实际意义", "marks": "力荐"}
{"content": "还不错，refresh 自己有限的算法知识。而且这个工程师有一个有趣的灵魂，愿意花时间来编一个故事来深入浅出地讲解这些基本的算法知识，值得嘉奖。希望世界上多一些有趣的人", "marks": "还行"}
{"content": "小科普书籍，也算是脑洞大开。。小白看", "marks": "推荐"}
{"content": "挺有意思的", "marks": "推荐"}
{"content": "一本小书。里面对各种算法的解释特别适合拿来讲给小孩子或外行，很会打比方。", "marks": "推荐"}
{"content": "天哪为什么我要花这个钱买它😭😭介绍的无非队列堆栈二叉树而已……搞了个噱头骗钱", "marks": "还行"}
{"content": "能对算法有个简单的了解，适合外行入门。（故事有点生硬）", "marks": "还行"}
{"content": "有意看这本书的，无算法基础的想在读侦探小说的趣味中顺便获取算法的知识，有算法基础的想看下算法来可以怎么应用到侦探方法上，然而我看算法还是有点费劲，也没看到一些有趣的算法应用。这本书结合得不是很好。", "marks": "较差"}
{"content": "太简单了，没有挑战性", "marks": "还行"}
{"content": "瑟瑟发抖的萌新可以用来入门算法，克服心理障碍。", "marks": "力荐"}
{"content": "比较失望 没有找到小说和算法书的平衡点 ", "marks": "还行"}
{"content": "书中写的算法就是数据结构中学的几种基本算法，当时学的时候理解了，可能是没有深刻理解和应用，这本书生动的和现实中遇到问题结合起来，而且又是侦探类型的，触发读者主动去思考和理解，如果之前学过，读这本书就感觉很有趣了，没学过的，这本书可以让你很轻松的理解各种算法的原理和适用环境。", "marks": "推荐"}
{"content": "读起来没难度，很大众化的入门书。", "marks": "力荐"}
{"content": "翻译得太差，难道是用终极算法翻译的？", "marks": "还行"}
{"content": "这本书除了翻译渣之外，可以说真是让人爱不释手，很喜欢作者这种幽默的专家。", "marks": "力荐"}
{"content": "中文版的翻译简直是垃圾，原著写的很好。科普性其实不高，因为没学过基本看不懂。", "marks": "较差"}
{"content": "机器学习的科普读物，将其分为五大模块：推理证明的符号学派、以神经网络为代表的联结学派、以遗传算法为代表的进化学派、主打概率的贝叶斯学派和最“懒惰”的类推学派，最后总结出来了一个惊天地泣鬼神的终极算法（逃", "marks": "推荐"}
{"content": "又是中信……一再用这么可怕的翻译糟蹋科普，这是存心误人子弟吧，望天。", "marks": "很差"}
{"content": "有点乱糟糟的", "marks": "很差"}
{"content": "“你的工作会在多大程度上利用到你的大脑？用的越多，你就越安全。”“不要试图与机器人竞争，而是要利用它”", "marks": "力荐"}
{"content": "翻译得确实一般，读起来嘴会出血。作者介绍了机器学习的五大流派，以及对未来发展的预测。这是一个人工智能替代手动的时代，这本书可以算是科普读物，更可以看作是入门到精深的必读教材。", "marks": "还行"}
{"content": "神棍……", "marks": "还行"}
{"content": "很全面，很文艺。开始很好读，中间有些难度。可能因为两个原因：1，不是所有的技术问题都能用纯文学的类比方法给出容易的理解，有时恐怕我们不得不学习数学；2，翻译确实是个问题，我看很多人的评论都支持这个感觉（不过我没对照原文版，请自行判断）。", "marks": "推荐"}
{"content": "五种算法的科普算是有点意思，但对资本和政治是盲视的，以至于到最后就像是一部蹩脚的科幻小说。", "marks": "还行"}
{"content": "要发起一场革命，你并不需要博士学位，洞察力和坚持才是最重要的东西。\n大卫科普设计出一种算法，能够通过选择并重组著名作曲家作品中的一些片段，创造出带有这些作曲家风格的新的音乐。我在几年前参加过一个会议，他演奏了莫扎特的三个片段：一段来自真正的莫扎特，一段出自人类作曲家模仿的莫扎特，一段来自他自己的系统。然后他让听众为真正的莫扎特投票。沃尔夫冈胜出了，但计算机打败了人类模仿者。这是一场人工智能会议。\n当下，多数人没有意识到有多少关于他们的数据正在被收集，以及潜在的代价和利益是什么。各家公司满足于继续神秘地完成这件事，因为担心引发谴责。但谴责迟早会发生。最好让人们现在树立意识，选择该分享什么，不该分享什么，以及如何、在哪里分享。", "marks": "推荐"}
{"content": "中信在翻译环节应该加强把关。", "marks": "还行"}
{"content": "翻译非常差", "marks": "还行"}
{"content": "原著很好，翻译极烂", "marks": "还行"}
{"content": "科普", "marks": "还行"}
{"content": "第一章6星，其他章3星", "marks": "推荐"}
{"content": "找业界牛人浏览了一下，吐槽翻译太渣\n很多关键名字都没翻译准确\n还是咬牙上原版吧", "marks": "较差"}
{"content": "译文虽有瑕疵，但未损大略。", "marks": "还行"}
{"content": "#2017年读书#第二十六本：终极算法。花了周末一天时间，总算啃完这本全面而深邃且幽默的各流派算法介绍以及作者对于终极算法和人工智能的预言。尽管对于统计学薄弱的文科生来说只能掌握十分之一，蛋放下书的那一刻还是觉得其他一切都不重要了，即为好书。读着读着，能够在渣翻译里找出一些校对错误，算是对我大脑学习一点小犒赏了。要再多查点资料，再细读一遍。", "marks": "力荐"}
{"content": "科普", "marks": "推荐"}
{"content": "书是好书，如果没有ML背景知识有点难读懂。翻译太差了。", "marks": "推荐"}
{"content": "翻译太差", "marks": "较差"}
{"content": "很好的算法入门读物，然而什么垃圾翻译 \n", "marks": "还行"}
{"content": "这翻译看的脑瓜子嗡嗡的疼。", "marks": "还行"}
{"content": "虽然翻译有些不足，也因为篇幅问题无法对内容进行完整的展开。但是作为一本提纲挈领的介绍入门书，对各种学派的基本理念的梳理还是可以帮忙我们更好地理解我们所用的算法，以及寻找我们问题的终极算法。", "marks": "推荐"}
{"content": "如果用统一算法来理解终极算法，加上能容忍如此这般的译文，本书可以算是机器学习最佳的入门书了。", "marks": "推荐"}
{"content": "如果计算机已经学会完成你的工作，不要试图与他竞争，而要利用他。把大数据看作你知觉的延伸，把学习算法看作你大脑的扩展。\n谋生的需要将会变成遥远的记忆，这是我们克服的又一个人类的原始过去。统计学家知道做预测不容易，尤其是对未来的预测，而计算机科学家知道预测未来的最佳方法就是创造未来，但未经检验的未来不值得创造。借阅请交押金100，承诺一周内分享读书笔记。", "marks": "力荐"}
{"content": "还不错", "marks": "推荐"}
{"content": "其实是人工智能从商业化的数据驱动重归人脑研究与模拟，可与Jeff Hawkins的《智能时代》互为参照。可惜这本书到了后面就不科普了，不知道是翻译的问题，还是作者表达能力所限。", "marks": "推荐"}
{"content": "三星四星之间吧。。。我读的英文版。说“有意思”真说不上，就说说文笔并不好。但是主题我确实很感兴趣", "marks": "推荐"}
{"content": "看着很累，翻译太糟糕。", "marks": "还行"}
{"content": "在迷宫般的机器学习算法中画出一副地图", "marks": "推荐"}
{"content": "看了一半，有点索然无味……就一开始提出将算法划分为几个阵营的说法很新奇，但后面则基本像是在对各种算法（其实内容上是比算法更高层的一些东西……算法理念？）如数家珍，一直在举例子，没有让读者思考的空间", "marks": "还行"}
{"content": "1986年前后，另一种基于统计的人工智能方法开始战胜模仿人类认知的逻辑方法，类似阿尔法狗的产品通过特定目标和大量数据得到训练后打败人类，智人的未来摇摇欲坠", "marks": "力荐"}
{"content": "作为初学者读着都能发现翻译的不妥之处…导致无法再信任地看下去了", "marks": "较差"}
{"content": "对算法的历史、根源、逻辑基本了哲学式的讲解", "marks": "推荐"}
{"content": "人工智能的五大流派及对应的主算法概要介绍。细致原理还需要看对应专著", "marks": "推荐"}
{"content": "蹩脚的毫无逻辑的直译让我看之后不止一次怀疑这应是本和我工作及专业毫无关系的书。甚至让人猜想或许用翻译软件效果会更好一些吧，至少专业名词应该不会错那么离谱。所有被题目和作者吸引的童鞋可以直接放弃中译版，这是我和同被荼毒的同事对这本书的共识。", "marks": "较差"}
{"content": "机器学习的五大学派讲解，深入浅出。", "marks": "力荐"}
{"content": "五个流派的阐述很清楚，有高度，又有深入浅出的表达能力。可惜翻译有点儿垃圾，把一本深入浅出的书翻译的不着六四。", "marks": "力荐"}
{"content": "评论发不出。回头再试试。对于和作者思想有共鸣的人来说，还是能尽量撇开糟糕的翻译，一窥作者风趣而系统的描述的。总算也达到了王小波所说的两个条件里的一个：信息量大。", "marks": "推荐"}
{"content": "20年前的终极算法😂", "marks": "推荐"}
{"content": "推荐读完第一章就好，但是作者一引用《黑天鹅》这书，我就映像开始差了，开始挑刺儿了。我也闹不明白这书算不算科普书籍。但是感觉是一本鼓吹的书，鼓吹某个概念。\n最后，看完第一章就好，然后其他的扫几眼就差不多了，不推荐买纸质版，电子版瞄几眼就差不多了。", "marks": "还行"}
{"content": "翻译毁了，词不达意，根本看不懂，看了一半暂弃……", "marks": "较差"}
{"content": "惊奇地发现作者归类的五个学派里包括了研究生时期反复学不懂的进化和贝叶斯，然后需要统计的背景和编程去实现，于是洗洗睡比较适合我，这是一本很有趣的综述啊！", "marks": "力荐"}
{"content": "翻译过来的总让人觉得略冗长", "marks": "推荐"}
{"content": "好：系统科普。不好：翻译别扭，不太好读。", "marks": "还行"}
{"content": "表示还看不懂，坚持看完，以后再来", "marks": "推荐"}
{"content": "不认可书中描绘的人工智能算法，假设算法接管了我生活的一切，替我做决定，决定我的工作，决定我约会的对象，决定我吃什么去哪里，那我的自由意志还需要么？我对这样的终极算法是感到害怕的，它太完美让人类失去了存在的意义，人类自身算是自然演化出的算法，在终极算法前，人类是要淘汰的，除非人机结合", "marks": "还行"}
{"content": "生编硬造", "marks": "较差"}
{"content": "翻译奇差", "marks": "较差"}
{"content": "想法和过世的明斯基类似，但是不如明深刻。", "marks": "还行"}
{"content": "看了半天发现目的是介绍作者自己的算法：马尔科夫逻辑网络。其他算法都是自己算法的特例。但mln现在在大数据上并没有成功。当做科普书看看就可以。前八章不错的", "marks": "推荐"}
{"content": "不错，尤其是第9章", "marks": "推荐"}
{"content": "读了原版后再看手里的汉版，感觉自己损失了几十块人民币……", "marks": "还行"}
{"content": "估计用不了多久，机器就能自己写书演电视剧了，也许机器只能演肥皂剧写不出红楼梦，但是现在最牛的文学家就能写出红楼梦水准的书吗？所以不管机器还是人，刻意去做的都是中、下这个层级的事，最高层级的都是可遇而不可求的。", "marks": "推荐"}
{"content": "深入浅出, 很好的人工智能入门读物", "marks": "力荐"}
{"content": "没看懂。。。", "marks": "还行"}
{"content": "作者力图天马行空，但讲的还是晦涩。", "marks": "还行"}
{"content": "翻译完全就是渣渣，反正至少是一个完全没有机器学习甚至计算机背景的人翻的。", "marks": "很差"}
{"content": "现阶段还是倾向于看公式来理解文中涉及的概念", "marks": "推荐"}
{"content": "半段废话半段解释。整个的把我给绕进去了。。简单事情复杂化。。为了统一强行统一。。作者累读者也累！", "marks": "还行"}
{"content": "翻译渣就算了，连公式都能翻错。。。", "marks": "很差"}
{"content": "读过这本书，最大的感受是：Google翻译应该都比这本书的译者翻译得好，由此可见AI必将取代人类。", "marks": "还行"}
{"content": "粗略了解一下，人工智能的历史，已经各种算法的特点。说是科普文，难度有点儿高，感觉更像是给专业人士看的科普书籍。", "marks": "还行"}
{"content": "真心的，读着读着就完全看不懂在说什么了，不知道是不是翻译问题，感觉就不像通畅的中文，乱七八糟的。", "marks": "较差"}
{"content": "翻译垃圾", "marks": "较差"}
{"content": "学派和主算法的整理利于窥其全貌（延伸阅读太壮观", "marks": "推荐"}
{"content": "这个地方切实感受到大学高数的重要性了，也对人工智能和机器学习充满期待。", "marks": "推荐"}
{"content": "可能客观上是一本好的科普，但是对我而言太啰嗦了。", "marks": "还行"}
{"content": "机器学习已经是当今科技的主题，任何一个科技领域都要与大数据机器学习扯上关系，这种社会变革的背后存在着对普适有效的终极算法的期待", "marks": "还行"}
{"content": "对于缺乏专业知识的爱好者很不友好", "marks": "较差"}
{"content": "读起来还是有点枯燥的", "marks": "还行"}
{"content": "翻译太烂。", "marks": "较差"}
{"content": "为了机器学习，先得变成学习机器。", "marks": "推荐"}
{"content": "科普书，给小白一个宏观框架，对已有一些背景知识的人也有启发，就是比喻太多太啰嗦，文字给人感觉也比较乱……我是粗略读完因此也不知道是作者还是译者的锅", "marks": "推荐"}
{"content": "如果你想了解人工智能，那么，此书是必读书目~", "marks": "力荐"}
{"content": "翻译太渣了，太渣了，特么根本看不懂。。。。前后根本对不上，我深深地怀疑是不是自己啥都不懂了，哎，谢谢翻译者都是干啥子吃的，坚决不推荐看，影响世界观", "marks": "很差"}
{"content": "书结构很好，抽象与具体，归纳与演绎。\n但是，翻译真的很烂，尤其是看到一个父节点与子节点，竟然翻译为父子关系。😓😓😓", "marks": "还行"}
{"content": "大概看了一遍，感觉太追求所谓的终极算法而没有说清楚现有机器学习算法的具体内容，比如说提升方法，作者并没有详细说明AdaBoost和梯度提升树等。总之对于机器学习概念入门还是挺有好处的吧", "marks": "还行"}
{"content": "翻译的能力有待提高，完全不能够理解作者想表达什么", "marks": "较差"}
{"content": "看到很多人说翻译的差，但我觉得翻译的已经很努力了，可以说是最好水平了吧，不服你来翻译一下试试～", "marks": "力荐"}
{"content": "后面看不下去", "marks": "较差"}
{"content": "看了一半实在看不下去了，可能也是因为看了一天的书比较困吧。总之很遗憾。", "marks": "较差"}
{"content": "早上在地铁读的，没基础，完全当成小说看了，看完也都忘了。", "marks": "还行"}
{"content": "书是好书，对于机器学习各学派的特点和逻辑关系讲的很清楚，但翻译的质量实在是太差了。比如涉及到的一点点数学中，上下标没有表现出来，比如2的10次方就写成210，那意思就完全变了。还有很多专业的机器学习属于翻译的完全不符合传统，让人看了很困惑，也会影响读者做进一步的研究。另外还有大量错别字和语句不通顺。\n一直认为中信出版社很重视图书质量，但在最近引进大量进口优质图书的同时却忽视了翻译和编辑的质量，实在让人非常失望。\n建议大家有条件还是去读英文原版。", "marks": "较差"}
{"content": "书本身的内容来讲是极好的，科普好书。\n翻译真的烂，可能是专业的词汇多，加上译者不是很理解。另外还有好呢多别字。\n我相信它是存在的", "marks": "力荐"}
{"content": "算法的导读，提供一些思路和见解在算法之路上。", "marks": "推荐"}
{"content": "前面写得非常的有感觉！行文非常的流畅，逻辑非常的清晰。到了四分之一以后，一切还是像那句话“吃着火锅，唱着歌”看起还是很棒的样子。可是画风突变“麻匪来了”！从这里到全书的四分之三都是对这5个学派的说明！我从未见过能把形式系统，神经网络算法，遗传算法，概率论，归纳推理说得如此云山雾绕，不知所云，最后要不是我有点知识储备都不知道看的是什么的书！这不知道是作者的锅还是翻译的锅，这些字我都认识但是连起来我就不知道说的是什么了。要不是有标题我都不知道这内容说的是啥。后面那四分之一也是毫无感觉，没有重点。", "marks": "还行"}
{"content": "粗粗读了一遍，感觉第6、8章比较有价值。不过再一想，贝叶斯聚类什么的好像也是机器学习书里最基本的内容了…果然搞技术的还是去看纯技术书比较好~", "marks": "还行"}
{"content": "观点还可以，中文版翻译很烂", "marks": "还行"}
{"content": "麻痹的，没见过这么烂的书，整篇谈什么我们应该搞终极算法，夸夸其谈，不知道说些什么，例子也是相当凌乱，硬着头皮看了前2掌实在看不下去了，劳资很少这么生气，最讨厌这种起特别的名字当作噱头的书里了，这本书应该叫《机器学习算法的重要性》，叫什么终极算法，明显误导别人。而且还说比尔盖茨年度推荐、什么google x微软研究生密切关注，麻痹的，密切关注的肯定是机器学习算法，不是这个什么终极算法，而且终极算法目前根本不能这么说没这东西，简直气死劳资了，能有点质量么。", "marks": "较差"}
{"content": "perfect，take me to new level！", "marks": "力荐"}
{"content": "应该是本不错的原著，但是翻译的实在不忍卒读。我承认我没看完，以后看原版吧，唉！", "marks": "还行"}
{"content": "出版社怎么会找这么一个数学小学水平的人来翻译这么专业的书，除法divide 能给翻译成划分，乘积product能给翻译成产物，还让不让人读呀！?", "marks": "很差"}
{"content": "有点点难度，非科班出生的不好读。", "marks": "力荐"}
{"content": "神作。大道至简。", "marks": "力荐"}
{"content": "除了翻译烂之外，是本好书。\n我相信终极算法是存在的。\n各种经典算法都有简介，学习深入之后感觉会重读。", "marks": "推荐"}
{"content": "读这本翻译书简直是浪费生命", "marks": "很差"}
{"content": "翻译的有问题吗 有些地方感觉有些前后不连贯", "marks": "推荐"}
{"content": "终于“硬着头皮”把这本书（粗）看完了，内容不错挺科普，但真心不推荐，原因：1.翻译太硬，有些地方逻辑读不通；2.专业内容和谚语引用太多，但全篇半个注释都没有（也许是我看的版本没有），想细度都要一个个查；3.由于上面两个原因，读起来太累。", "marks": "还行"}
{"content": "http://blog.sina.com.cn/s/blog_a6806a700102x421.html", "marks": "力荐"}
{"content": "不知所谓", "marks": "还行"}
{"content": "在对AI未来的描述，少见的站在看好人类的一面；在对5个学派的分析上，见解独到，构建终极算法的雏形上是一般学者会想到的内容，既然作者说已经在应用相关的算法运算了，其运算效率待于论文进一步的支撑。对于想了解机器学习该书的同学，推荐阅读该书，就是译者对于部分章节有些粗糙。", "marks": "推荐"}
{"content": "写的比较全，给出了优化的方向和相关标准，但是不够详细，有些指标没有讲清楚如何获取的，大部分命令描述的也不够详细", "marks": "推荐"}
{"content": "有图。但是对我意义不大。只能说书的质量不错。把一些常用Linux性能命令再用心复习一遍吧。", "marks": "还行"}
{"content": "经验和实践性的，快速过了一遍", "marks": "还行"}
{"content": "后面几章是在是太简单了", "marks": "较差"}
{"content": "读完收获不大，知识点很多，深度不够。", "marks": "还行"}
{"content": "属于指方向、建立大局意识的书，给出了框架，后续就需要填充框架的每一部分了", "marks": "推荐"}
{"content": "制作精良，只是与预期不一致，也许不是目标受众", "marks": "还行"}
{"content": "还行，算全面，但太缺乏细节，很多都是一笔带过了", "marks": "还行"}
{"content": "更注重硬件方面的优化，本来买来的时候想看看如果判断软件性能。 推荐系统工程师读，软件方面的帮助不大。", "marks": "还行"}
{"content": "非常推荐", "marks": "力荐"}
{"content": "内容涉及多，但是很简单，讲解不清楚", "marks": "还行"}
{"content": "还好吧，感觉有很多作者自己的东西和体会。但是想说的太多了，以至于很多地方说了一点等于没说。后面3章质量下滑。", "marks": "推荐"}
{"content": "涉及点很多 没有详细介绍 ", "marks": "还行"}
{"content": "读了一半， 前半部分还能作为一些软件判断的依据。 后半部分基本上都是讲硬件中的性能优化了。没有实际操作和环境很难实践。", "marks": "推荐"}
{"content": "一大亮点在于重新给设计模式分类，借助类比帮助理解。\n当然图解有点夸张，不过一些时序图也起到了作用。\n之间夹杂着一些UML，Java基础知识的讲解。\n完全以例子代码帮助理解设计模式，入门书比gof好。\n建议把一些Java知识剥离开，放在前面或附录，比如提到了多线程，内部类等知识点。", "marks": "力荐"}
{"content": "非常的设计模式 书籍，例子也非常好", "marks": "力荐"}
{"content": "更倾向于github上的教程", "marks": "还行"}
{"content": "书就是通俗易懂最佳！！！！", "marks": "力荐"}
{"content": "太啰嗦", "marks": "还行"}
{"content": "结城浩桑的书都是棒棒哒", "marks": "力荐"}
{"content": "本人计算机大三学生，为了准备校招面试才准备学习设计模式，经同学推荐找到这本书，写的非常详细，对新手很友好，入门轻松同时又不缺乏深度，个人感觉读起来比head first 设计模式要轻松，更容易理解", "marks": "力荐"}
{"content": "这是一本经典的书籍，非常适合作为1~2年的学习经验的程序员来学习。书中的内容细致，讲解的很到位，刚买了一本准备重新理解一下设计模式。", "marks": "力荐"}
{"content": "这书内容太专业了，并非简单的理念、概念介绍，不建议没有一定计算机基础的人看，因为真的很难啊，看的我头都要炸了！", "marks": "还行"}
{"content": "这是一本两百页的小册子，目录虽然非常详细，但内容却很少，目录上的一节有可能只有三行不到。这本书只能算是启发式的目录，需要时可以翻一下，找找灵感。", "marks": "还行"}
{"content": "非常棒的关于网络的科普书，深入浅出，通俗易懂，可惜数据库方面没有这样的书。看完这个再看tcp/ip协议，更加容易理解。", "marks": "力荐"}
{"content": "很不错的科普书，没有太复杂的描述，把一个http请求的整个过程，涉及的网络整个过程描述清晰。不过有些地方写的略微有点繁琐。", "marks": "力荐"}
{"content": "强烈推荐给大噶~这么诚恳、适度、详细又有重点的计算机网络科普，贴心到非常。配图很有价值，干净利落。好到我电子版看完之后买了这个系列所有的纸质书，又读一遍。", "marks": "力荐"}
{"content": "整本书很好的科普了“输入 URL 后发生了什么？”这个问题，沿着包所经过这条线串起了信号、操作系统、Web开发等相关知识，没有去很学究气的掰扯 OSI 七层模型而是大量篇幅用来举例子，来龙去脉讲的平易近人，配图很用心，看得欣欣然有所得；感觉最好看的是中间的部分。想查缺补漏推荐一读", "marks": "力荐"}
{"content": "需要梳理网络相关基础知识的可以看看 深入浅出 表述很人性化 逐步暴露细节的章节划分也很赞 科普向 不涉及开发的", "marks": "力荐"}
{"content": "特别是 服务端局域网那部分，是 分布式 网络的基础，需要多复习", "marks": "力荐"}
{"content": "有趣的科普书，比用来垫显示器的计算机网络书有用多了", "marks": "力荐"}
{"content": "从敲URL开始，把数据在整个网络的流转梳理了一遍，入门不错。不过要深入，还是需要仔细研究《TCP/IP详解》。作为一个软件开发者，硬件部分看得头大哇", "marks": "推荐"}
{"content": "其实跟大学计算机网络只有一部分重叠，或者说是计算机网络这门课很好的补充", "marks": "力荐"}
{"content": "小白也能读得懂，专业人士可以夯实基础，好书！", "marks": "力荐"}
{"content": "这个系列的书太好了！！！", "marks": "力荐"}
{"content": "倾向于一步到位式的深究", "marks": "还行"}
{"content": "很值得一读。", "marks": "力荐"}
{"content": "可以对网络结构有个粗略的了解", "marks": "还行"}
{"content": "补了下大学没学好的网络基础细节，讲得还是比较细致的，值得常翻翻，推荐阅读", "marks": "推荐"}
{"content": "感觉比图解TCPIP好", "marks": "推荐"}
{"content": "虽然很多东西都知道 不过读的很流畅", "marks": "推荐"}
{"content": "完了，科普性读物也看不懂：（", "marks": "力荐"}
{"content": "生活在网络时代，对于网络是怎么运转的需要有一些最基本的认知，这本书简单易懂，能帮助没有任何基础的人了解最基本的知识，掌握一个大致的知识框架，这也就足够好了。写作这类入门书是日本作者的强项。", "marks": "推荐"}
{"content": "功底深厚，内容浅显易懂", "marks": "力荐"}
{"content": "果然一图胜千言，图多读的懂。", "marks": "力荐"}
{"content": "图多!从浏览器讲到双绞线了,看完后对整个网络系统有了大概的认识,考虑到篇幅,作者太厉害了!", "marks": "力荐"}
{"content": "详细介绍了从客户端发起请求到服务端响应，整个过程各协议栈及底层链路的原理和操作，讲的非常好。强烈推荐。", "marks": "力荐"}
{"content": "通俗易懂，但是读起来感觉知识点比较散，读完后面忘记前面。", "marks": "力荐"}
{"content": "好书www", "marks": "力荐"}
{"content": "讲解的很详细，非常适合入门阅读。", "marks": "力荐"}
{"content": "感觉挺不错的", "marks": "力荐"}
{"content": "内容的组织规划相当棒，解决了我之前的一些困惑。", "marks": "力荐"}
{"content": "果然是介绍了网络的全貌，很容易看懂的书。", "marks": "力荐"}
{"content": "不错的科普书籍", "marks": "推荐"}
{"content": "好书！要是大学里上计算机网络配一本这样的书就好啦。最近对日本人写的技术书越来越有好感了！", "marks": "力荐"}
{"content": "深入浅出用来描述这本书再为恰当不过了", "marks": "推荐"}
{"content": "2017.07新手了解网络协议必备，简单易懂 强烈推荐", "marks": "力荐"}
{"content": "力荐", "marks": "力荐"}
{"content": "翻译的流畅简洁准确，网络间各层之间的关系娓娓道来，写得很好。", "marks": "力荐"}
{"content": "比较科普的一本书，深入浅出图文并茂，但其实涉及的知识很多，也挺难的。如果零基础的话，真不知道能看懂多少，虽然讲的很“白话”。", "marks": "推荐"}
{"content": "通俗易懂的讲解网络的书，拖了好久才看完，我的拖延症真的得治，配合UNP阅读效果更佳", "marks": "力荐"}
{"content": "对于大学学过一遍网络知识，理解的又不是太透的人来说，这本书就是讲表面下面的原理的，前半部分非常言简意赅，后三章太多知识以前没接触过，有点看不下去了，心态也静不下来继续研究了。全当工具书留着。不过能把网络讲的这么轻松，连贯，作为一位码农，这位作家表达能力也很强悍了。", "marks": "推荐"}
{"content": "这本书没有全读完，刚开始顺着目录读了一部分，后面就跳读。主要有一点点计算机基础，最近用某翻*软件出现一些网络设置问题，想从这部书里找到一些原理来解决。但显然这本书侧重科普原理，对我这种菜鸟来说，耐心不够再去学这些东西啊。但还是很适合对于从事计算机，或者有兴趣的人阅读。", "marks": "推荐"}
{"content": "深入浅出丝丝入扣", "marks": "力荐"}
{"content": "推荐网络知识入门之后看的一本书，初学者略微有点难啃，不过确实是很通俗的一本书，我在网络上有一些基础，但看到最后一章还是有点难了，图画的很好，买的非常满意的一本书。", "marks": "力荐"}
{"content": "精彩", "marks": "力荐"}
{"content": "入门级别的神书，解释的很详细，值得一读再读", "marks": "力荐"}
{"content": "感觉跨度有点大 后面就不太懂了", "marks": "还行"}
{"content": "完全不是一本科普书该有的样子，非常深入又生动的介绍了数据的流动过程，值得多读几遍。满分。", "marks": "力荐"}
{"content": "通俗易懂，适合入门。", "marks": "推荐"}
{"content": "好书啊，不乏味", "marks": "力荐"}
{"content": "不错的科普扫盲书，非常简单易懂。", "marks": "力荐"}
{"content": "配合 谢希仁 计算机网络 简直无敌 ", "marks": "力荐"}
{"content": "新手程序员，扩展一下视野不错。", "marks": "推荐"}
{"content": "看了前2章，感觉值5星", "marks": "力荐"}
{"content": "搭配课程十分容易理解", "marks": "力荐"}
{"content": "非常不错的一本入门书籍，简单易懂，很好，推荐", "marks": "力荐"}
{"content": "好书！！入门网络这本我觉得是当之无愧最好的！", "marks": "力荐"}
{"content": "用概率面拉扯解释贝叶斯很明白；翻译错误不少，译者显然在细节上功夫不够", "marks": "推荐"}
{"content": "注重讲例子，重点向读者展示“结果管用”，但很多应该讲所以然的时候就一带而过了。特别是，有很多代码也没有解释，如果不熟悉scipy的话，会突然看得莫名其妙。图漂亮。", "marks": "推荐"}
{"content": "给的代码很齐全，几乎不介绍理论，对于只是想使用概率编程的同学倒是省了不少麻烦事。可惜我现在在用PyMC3，还是多少有些区别，思想是一样的。", "marks": "推荐"}
{"content": "特别适合我这种侧重方法应用的小白…十分感谢作者！简直舍不得读完，但还是读完了。", "marks": "力荐"}
{"content": "写的很好，不过看完感觉没啥用，太浅了。直接用还好，想理解贝叶斯还是不够", "marks": "推荐"}
{"content": "译本还在讲pymc，pymc3的版本在github上有了。本书权当离线中文版看。。", "marks": "推荐"}
{"content": "很适合有贝叶斯基础的读者，贝叶斯小白看到后面有点懵", "marks": "推荐"}
{"content": "很良心的一本书", "marks": "力荐"}
{"content": "非常好的入门书，读完对遗传算法了解了很多。", "marks": "力荐"}
{"content": "如果你可以接受RBT的讲解先是Haskell来一遍，再伪代码来一遍，在Pythn实现一遍。。。", "marks": "还行"}
{"content": "purely functional data structure + pearls of functional algorithm design。新瓶装旧酒，亮点是和命令式实现的比较。parallel algorithm着墨太少，系统性不如CMU 15210 lecture notes，fp老炮可以略过此书。", "marks": "还行"}
{"content": "开始是在TL讨论组看的电子版，后来惊闻出了实体版，于是又买了本，内容上比电子版更翔实。汉母语作者写的算法书里，这本是我觉得最好的一本。", "marks": "力荐"}
{"content": "很厉害。各种算法都讲解的很明白。关于各种树，一直分不清楚，看了之后醍醐灌顶。", "marks": "力荐"}
{"content": "开头的两个例子很精彩", "marks": "力荐"}
{"content": "太强了。。。都有点看数学竞赛书的感觉了", "marks": "力荐"}
{"content": "一个算法用不同的编程范式的语言写出来时，会让人眼前一亮的，对，我说的就是Haskell", "marks": "力荐"}
{"content": "略有过时", "marks": "还行"}
{"content": "本身内容比较基础，代码重复太多。中译本特别差。", "marks": "还行"}
{"content": "继续努力，写下一本。", "marks": "力荐"}
{"content": "对入门自学编程的孩子挺友好的…", "marks": "推荐"}
{"content": "本书非常适合python入门。我是结合着廖雪峰的教程一起看的，半个多月看完。可读性很高，不是那种枯燥的教科书，所以也适合没有编程基础的人。不过书中有些不详细的地方，想深入研究的就需要再看其他的教材或者靠自己多编写程序来提高。所谓师傅领进门，修行靠个人，而且编程本来就是需要靠自己多练习来提高的。", "marks": "推荐"}
{"content": "对新手非常非常友好，把程序及语言解释得非常清楚且形象", "marks": "力荐"}
{"content": "在Python技巧与编程思想的讲解上，Vamei掌握了一个很好的平衡。书的语言真是深入浅出，把一些高阶函数、高级特性也能讲的通俗易懂。推荐！", "marks": "力荐"}
{"content": "初级", "marks": "推荐"}
{"content": "从今天起，我要成为一名键盘侠！😈😈😈", "marks": "推荐"}
{"content": "前面部分讲得清晰易懂，到第六章后开始有点难懂了，不过我感觉后面的部分属于高级内容，先大概有一个印象，以后在编程之路上可能会慢慢融会贯通，到时候回来再来看这一部分就能够理解了。总体来说很不错！", "marks": "力荐"}
{"content": "生动有趣，通俗易懂", "marks": "力荐"}
{"content": "不太适合给小白入门哦", "marks": "还行"}
{"content": "哪有给自己书打5星的", "marks": "较差"}
{"content": "看过博客，然后今天在书城看完了，书比博客更加详细一些。支持Vamei，打算看完他写的所有博客。", "marks": "力荐"}
{"content": "对于一个没有编程基础的人来说，书中举的例子都挺简单的，代码也都能看懂，但无法与实际联系在一起，读完只能对这一门语言有一个初步的基础了解，无法系统化地了解一门编程语言的特点及要点。", "marks": "推荐"}
{"content": "我特别特别喜欢VAMEI的文字，他总是有办法让你一开始读就停不下来，所有的知识点都在他的娓娓道来中 一点一点呈现。书中不仅有知识点，还有很多他觉得可以有更多思考的地方和方向，但要仔细读才能发现。比心~", "marks": "力荐"}
{"content": "属于入门友好级的书，让你了解python的语法思路，但书中还是有些地方没说清楚，有些地方的代码如果没有编程基础还是比较难懂，总体上不错，对python理解又更进一步了", "marks": "推荐"}
{"content": "通俗易懂，Python语言的各方面都有提到一点，作为入门书籍还是不错的！毕竟200页的书也不可能涉及太多深入的内容！", "marks": "力荐"}
{"content": "以前看了作者博客，学到很多东西，买一本支持一下，比较适合入门，建议下一版把博客后面进阶和标准库的一些东西加上去，现在的内容有点少", "marks": "力荐"}
{"content": "作为python入门确实不错，但是到最后几章的例子没有注释看不太懂。有时候就觉得讲的太简单了", "marks": "推荐"}
{"content": "在知道创宇余弦大大的wx公众号看到的推荐就买了，四天读完（新手），之前看过廖雪峰的python教程和《笨方法学python》。要是作为入门我当初一定选这本书（当时还没出），有点遗憾没有添加python标准库的章节进来（看到作者的blog教程上有）以及web开发的章节，所以感觉没有廖的教程那么完整（因为我学python目的很明确，就是为了做web后台）", "marks": "推荐"}
{"content": "前面还可以，后面真心不太懂。", "marks": "还行"}
{"content": "简洁，易懂，真的很喜欢^0^", "marks": "力荐"}
{"content": "开始写的挺好，后面愈发的读不懂了", "marks": "推荐"}
{"content": "Python 3写的 总体来说非常适合入门的人看 介绍的还是挺全面的  入门推荐", "marks": "力荐"}
{"content": "很水，只是堆砌了一大堆的笔试题，心得在哪呢？", "marks": "较差"}
{"content": "看了产品和交互部分的大题，很受启发", "marks": "力荐"}
{"content": "工具书", "marks": "推荐"}
{"content": "挺清晰全面的一本书，去阿里巴巴面试之前可以看看。", "marks": "推荐"}
{"content": "习题答案有错且没有详细解释 专业对口的东西就一半", "marks": "还行"}
{"content": "很棒的书，内容翔实", "marks": "力荐"}
{"content": "阿里出品 必属**", "marks": "很差"}
{"content": "1 答案不一定都是对的吧？\n2 只有例题有解释，其余的都是参考答案\n总的来说，相当于题库吧", "marks": "还行"}
{"content": "答案有错，但有启发性", "marks": "推荐"}
{"content": "列强推荐：《阿里巴巴技术笔试心得-技术之瞳》，上面有非常详细的资料和题库，对于每一位想要来到阿里巴巴的同学们强烈你们进行深入阅读。想要来到阿里，但是没有经验，没有技巧，不是相关专业毕业。那么这本书可以帮你快速了解阿里巴巴内部校招流程、了解阿里巴巴现在最热门的技术和业务模块，在笔试试题中了解运营需要熟悉掌握哪种知识，技术类岗位需要掌握哪些编程和逻辑，视觉和设计类岗位需要有怎么的作品呈现。如果你是以后想要来到阿里的小伙伴，这也是一本可以让同学之间进行技术探讨和学习的书籍，也是一本可以进行学术性研究与应用性开发相结合和应用的书籍。", "marks": "力荐"}
{"content": "感觉对阿里的面试挺管用的。要面技术类岗位的推荐这本书", "marks": "推荐"}
{"content": "这本书对要进入互联网公司的求职者非常有帮助！这本书涉及技术、产品、设计三大类岗位，包括计算机科学，数学算法、WEB前端开发、数据分析与挖掘、安全、产品、交互设计等多个领域，书中内容大量结合了阿里巴巴等互联网的实际工作场景，以例题、解析、习题的形式，引导读者深入理解技术上的关键点和紧要处，夯实基础，启发思考。内容不仅专业、有趣，更是将理论知识与实践应用结合起来，以场景化的问题娓娓道来～", "marks": "力荐"}
{"content": "厉害了！对想进互联网公司的同学来说确实是福音啊！真题不错，解析到位，确实是课堂上见不到的，可以常备着当成指导学习的书啦，巴特，阿里笔试官大大出的题太难了吧。。。", "marks": "力荐"}
{"content": "简直校招宝典啊～认真阅读了，各个方向的技术笔试题都有，是找工作大军的福音！后面还有产品和设计，感觉笔试没有那么迷茫了呢", "marks": "力荐"}
{"content": "很棒的书，根本停不下来，进阿里成败在于技术之瞳，你们懂的！", "marks": "力荐"}
{"content": "阿里爸爸内部人士推出的一本好书。不仅仅是校招必备，对于普通的，想要了解阿里的人群同样是一本不可多得的好书。", "marks": "力荐"}
{"content": "技术界学习的基础，看完以后很受用，从基础技术起步，看技术之美。", "marks": "力荐"}
{"content": "配上视频和课后题入门非常好", "marks": "力荐"}
{"content": "支持一下小甲鱼，可惜书里没有课后题答案", "marks": "力荐"}
{"content": "入门好书", "marks": "力荐"}
{"content": "作为刷过视频又刷过书的人，感觉还可以。目前二刷中-，-", "marks": "力荐"}
{"content": "I love fishc.com", "marks": "力荐"}
{"content": "狂抄 精通比特币。连例子中的人名都不改。", "marks": "较差"}
{"content": "算是不错的原创书籍 适合开发人员", "marks": "还行"}
{"content": "看了28%看不下去了", "marks": "较差"}
{"content": "区块链作为新技术，还处于比较早期，项目很难落地。一是因为加入智能合约等复杂场景的技术还不成熟，二是实际推动时因为其去中心化的理念，会产生数据共享和合作的利益分配问题。", "marks": "还行"}
{"content": "内容丰富，讲解流畅", "marks": "力荐"}
{"content": "看下，熟悉下了解下看看和自己的工作有无交集", "marks": "还行"}
{"content": "略流水账", "marks": "较差"}
{"content": "严重差评：这本书比较扯啊，作者完全分不清啥是区块链，啥是比特币，混在一起不断重复重复坊间大家流传的各种结论和特点，就是不告诉你原理，闷头看几十页还是不知道他要讲什么，醉了。", "marks": "很差"}
{"content": "拼凑感很强，比特币讲的比区块链多，但作为入门读物要求不能太高", "marks": "还行"}
{"content": "很多人一起写的，所以很多重复的内容，内容风格也不一致，差评", "marks": "很差"}
{"content": "后半部分算法看不下去，不知道为什么", "marks": "推荐"}
{"content": "晕倒，居然是程序员看的，可惜钱了", "marks": "还行"}
{"content": "翻了翻,了解了几个区块链的概念.智能合约啥的,还有点懵...", "marks": "还行"}
{"content": "这种机械工业出版社而且还有好几个作者的书基本上是标准的网文摘抄拼凑品，给两星体谅一下劳动辛苦我觉得可以了", "marks": "较差"}
{"content": "【书籍推荐】适合定位于基于区块链做产品研发的产品经理或研发负责人的阅读\n一遍泛读便可对区块链世界框架有了基本的理解\n对于关键问题都有很认真的思考和探讨\n不细究细枝末节的代码，更关注核心技术\n    现在市面上有关区块链的书都是在讲解区块链的概念及应用场景，描述区块链技术的书却很少。我们希望读者能多了解区块链技术，多发展区块链技术，并且加以应用。只有我们了解区块链技术之后，才能真正理解区块链的意义，而不会随波逐流，人云亦云，并且有自己的判断，希望读者们能够认真读这本书，了解区块链技术，相信必定会大有所获。\n\n【区块链是什么】\n    区块链是分布式数据存储、点对点传输、共识机制、加密算法等计算机技术的 新型应用模式。\n     翻译成人话就是：区块链是一种新的技术，帮助大家能在没有银行、支付宝", "marks": "力荐"}
{"content": "这是一本，我看目录和序言就激动不已的书。我以为，这种技术都是捂着自己偷偷钻研到时候再放大招的书，没想到能有人实诚到每一个细节都写的这么详细，操作性这么强。有些东西，你你自己练一手，根本就想不明白！ 我很喜欢文中的几段，大意是人工智能，智能设备发展到这个层面，如何对它的行为进行监控和制约？机器和机器之间，如何自动化的进行一些合约交流，而不是靠人工这样耗时耗力的做一些扯皮工作。这是我欣赏这一本书的地方。希望更多的朋友看到它", "marks": "力荐"}
{"content": "全面讲述了区块链的技术体系。对希望从技术角度了解区块链的读者很有帮助。书中具体的实例操作详解可帮助读者体验区块链的技术使用。好书，推荐！", "marks": "力荐"}
{"content": "极力推荐对区块链有兴趣的读者读一读这本书，一定会有所启发的。有别于其他区块链的书更多构造未来的蓝图，这部书回归到区块链技术本身，但同时也充分肯定了区块链的极具想象力的应用前景", "marks": "力荐"}
{"content": "超棒", "marks": "力荐"}
{"content": "这本书，有区别于其他关于区块链的书，从书名就能看出来，这是一本从技术的角度，来认知比特币，区块链底层逻辑的介绍。\n\n市面上大部分书籍，比如书名都是重新定义经济，金融，比较浅的去介绍区块链\n相对区块链有更深一点的认知，可以从这部书入手，哪怕你没有编程知识，也一样可以看。", "marks": "力荐"}
{"content": "我在东莞，一个月前接触数字货币，购了好多区块链的书籍，唯独邹先生的这本书，让我真正了触什么叫区块链。有对区块链的兴趣，可以加下我的卫星7828255", "marks": "力荐"}
{"content": "区块链方面，最有技术性的一本书，客观、严谨的讲述了区块链这样一个新技术。\n\t也是国内区块链目前为数不多的技术指导用书，谢谢作者。", "marks": "力荐"}
{"content": "作者水品不错，把区块链讲的比较清楚。强力推荐！", "marks": "力荐"}
{"content": "其实还行，翻译偶有错误，但不影响阅读。\n特别感谢书里的伪代码，非常有助于理解基础算法的原理", "marks": "推荐"}
{"content": "书的内容翔实，逻辑清晰，简洁明了。但是翻译惨不忍睹、错漏百出，简直像是google机翻的，白白糟蹋了一本好书。", "marks": "推荐"}
{"content": "和周志华的西瓜书《机器学习》对比，西瓜书如同登高山用力思考，而这本书是看电影轻松惬意。作者库巴特应该是位大师，在材料的取舍方面繁简得当，举重若轻。入门强烈推荐本书。", "marks": "力荐"}
{"content": "错误百出！估计是印刷排版问题。书的思路还不错，被出版社毁了。给五星好评的同学我只能说要不就是没看，要不就是走马观花的，要不就是数学是体育老师教的...", "marks": "很差"}
{"content": "P109 写：感觉好棒，我们竟然可以用中文编程了 ————妈蛋 js 不是 IE6 时代一直就可以这样嘛！？整本书就是一个 Clojure程序员 想把 js 改造成 Clojure 来用的故事。", "marks": "较差"}
{"content": "同事写的书，国庆放假期间读了一遍，收获颇多，虽然很多理论知识如Y不动点，Monad还没有办法完全理解，但是可以发现，函数式编程将逐渐成为未来发展的方向，不管是后端或者前端。", "marks": "推荐"}
{"content": "我觉得这本书在解释 Monad 上面还是说得挺好的", "marks": "推荐"}
{"content": "很棒的一本书，但看之前最好有一些基础知识作为铺垫，以及要有足够的兴趣，否则看起来可能会比较吃力。", "marks": "推荐"}
{"content": "相当于mostly adequate guide，图画很有趣，但是拼写错误也太多了，希望能有个勘误表", "marks": "推荐"}
{"content": "终于出来了，居然没用我萌萌哒插画当封面(ಥ_ಥ)", "marks": "力荐"}
{"content": "讲的内容还是比较基础，适合新人", "marks": "推荐"}
{"content": "很基础，也很通俗，像是让人觉得有趣的科普读物", "marks": "推荐"}
{"content": "太贵了", "marks": "还行"}
{"content": "有个毛的算法，全是入门级别的东西，写过一两个小游戏的估计都全知道了", "marks": "还行"}
{"content": "良心之作，，高性能必备", "marks": "力荐"}
{"content": "当年是在线英文版读完 现在出纸质版了买一本支持一下 作者对Erlang的理解极深刻", "marks": "推荐"}
{"content": "书籍不错，比Joe大神些的还要详细一点儿，适合初级入门。", "marks": "力荐"}
{"content": "找工作用，读书当年好书甚少，叹少年", "marks": "力荐"}
{"content": "看过1才来买的2，失望至极，应该叫剑指offer或者leetcode题解才合适吧！", "marks": "很差"}
{"content": "内容比较基础", "marks": "推荐"}
{"content": "作为一个新手，感觉知识点和知识点递进很好，代码精炼巧妙，但是，，文字解释读起来，跟少了几行似的，比较难懂，也可能是我智商低吧，反正我一看它的文字解释就一脸懵逼。", "marks": "还行"}
{"content": "還不錯，部署HTTPS的時候，起碼應該過一下這本書。", "marks": "推荐"}
{"content": "略读", "marks": "推荐"}
{"content": "还可以", "marks": "推荐"}
{"content": "比较枯燥，扫了一下", "marks": "还行"}
{"content": "https/ssl/tls信息整理集合，还可以。后几章配置的有凑字嫌疑。", "marks": "推荐"}
{"content": "如果不是这么多译者的话，应该会更好", "marks": "推荐"}
{"content": "说的不够简明 对密码加密部分基本是一笔带过解释不清，大部分是泛泛而谈 ", "marks": "较差"}
{"content": "第七章没读，7章之前理论较多，之后实践较多，比起网上零散的资料至少能成系统，但至少如果完全没有了解过相关知识确实不适合入门，可以先读些科普文章。", "marks": "还行"}
{"content": "出版社的朋友不要乱改书名啊，浪费了这么好的书名，主要是关于ssl的书籍较少，详细学习还是要看rfc。后面的服务器配置看不下去了，中间有些内容还行。", "marks": "还行"}
{"content": "趁假期空闲，翻了好几遍", "marks": "力荐"}
{"content": "还行吧 前半部和最后一章可值得一读", "marks": "还行"}
{"content": "关于区块链在几个领域的应用，写的比较清晰，尤其是金融领域。\n但是其实很多领域并不需要区块链技术，没那么大必要性。\n如果同时有优势和局限性的分析，会更好一些", "marks": "力荐"}
{"content": "科普", "marks": "还行"}
{"content": "很全面，但案例编的有些粗糙", "marks": "推荐"}
{"content": "了解区块链技术和应用。真如书中所说，区块链技术将带来一场有史以来人类商业社会最大的变革？", "marks": "推荐"}
{"content": "前面科普不错，后面剪报太敷衍了", "marks": "还行"}
{"content": "可以全面了解区块链的应用场景、现状和未来", "marks": "推荐"}
{"content": "拼拼凑凑出来的一些东西，差评", "marks": "很差"}
{"content": "佳作，案例分析尤其好", "marks": "力荐"}
{"content": "言之无物，复制粘贴痕迹太重", "marks": "较差"}
{"content": "技术的发展已经超出了我的想象，但是我想看些书也许有助于我们别被科技甩开太远吧", "marks": "推荐"}
{"content": "读下来依旧是迷迷糊糊，没太懂", "marks": "推荐"}
{"content": "对投资理财蛮有帮助的，分析的细致。", "marks": "推荐"}
{"content": "区块链像一个数据库账本，记载所有的交易记录。通过这本书可以比较系统了解这项技术。 ", "marks": "还行"}
{"content": "因为看过一本系统的描述比特币，区块链底层技术的书籍，这本书带给我的启迪或说新的信息不多，仅仅只有一个DAO。一本讲述区块链运用的书，总体来说，不够满意。", "marks": "很差"}
{"content": "内容比较客观，对一些潜在错误现象分析的也很到位，但是不够细致，过于笼统。", "marks": "推荐"}
{"content": "终于利用两天的时间看完了，写的还算不错（比我看过的滥竽充数的区块链的书强），区块链我认为是未来金融领域发展趋势，谁掌握了区块链谁就站上了至高点。我会顺着书中的线索和自己的体会继续作出区块链的研究。这也是剑桥大学的教授对我的鼓励。", "marks": "推荐"}
{"content": "读过了之后觉得对于我投资挺有帮组的，分析的很清楚。", "marks": "力荐"}
{"content": "本人初涉投资领域，研究完这本书受益匪浅", "marks": "推荐"}
{"content": "之前就一直想要看这本书 必将符合当代经济现状 读后很有收获", "marks": "推荐"}
{"content": "很全面啊 科普性很强  数学无能的我是膜拜了", "marks": "推荐"}
{"content": "这本书里面讲解了很多意义的内容，让人受益匪浅，懂得了经济学的一些知识，值得看！", "marks": "力荐"}
{"content": "不错的一本本书，读过之后很多领悟，值得一读！", "marks": "力荐"}
{"content": "还是可以的看过之后有了很多感悟吧！总结了一些经验！希望更多人能读这本书。", "marks": "推荐"}
{"content": "看过了这本书觉得还不错，值得购买，推荐", "marks": "力荐"}
{"content": "出版尚能把握时机 资料虽广却凌乱", "marks": "较差"}
{"content": "值得去读一读，能有不少的收获，也会有很大的启示", "marks": "推荐"}
{"content": "感觉很不错，很有想法，很有收获。", "marks": "力荐"}
{"content": "不错的一本书，作者思路清晰，语言精练，值得我们学习！", "marks": "推荐"}
{"content": "读过，好看，好看，好看，重要的事情说三遍！重点推荐，都来看啊？", "marks": "力荐"}
{"content": "同事有本拿了看看比较通俗易懂适合我这种小白", "marks": "推荐"}
{"content": "好的开始是成功的一半，这本书是初学者极好的入门书。", "marks": "力荐"}
{"content": "是一直想找的一本书，很全面细致的讲解社会经济学，推荐给大家。", "marks": "推荐"}
{"content": "好的开始是成功的一半，这本书是初学者极好的入门书。", "marks": "推荐"}
{"content": "内容丰富多彩，很好的一部作品，很贴合实际", "marks": "推荐"}
{"content": "其实随着年龄的增长，自己逐渐发现，自己要学习的还有很多很多，所有要不断的努力学习各种技能才能生存的更好！", "marks": "力荐"}
{"content": "区块链学习的第一本书，启蒙书吧，很全面，内容丰富，但是同时也必然深度不够。", "marks": "推荐"}
{"content": "诶，第一次看这种类型的书，觉得还蛮有用的，很新鲜", "marks": "还行"}
{"content": "很好的一本书，身在互联网大时代中，人总是要吸收下新知识的", "marks": "推荐"}
{"content": "闲来无事的时候在图书馆偶然看到它，就借了一本，还是有很多收益的地方～", "marks": "推荐"}
{"content": "这本书比较专业,是关于如何参与投资多个区块链和数字资产项目,看完这本书后,大家可收获一些有用的知识。", "marks": "力荐"}
{"content": "图书馆的上架新书，图解数据结构第二版，丰富的图示与范例诠释数据结构。（还有提供此书范例程序源代码下载哦：http://pan.baidu.com/s/leStzSC6）", "marks": "还行"}
{"content": "2.7的代码，唉:-(", "marks": "还行"}
{"content": "很通顺，但不够具体，这也许跟篇幅以及书本身的结构有关系。总之，看完了能明白爬虫、一整套的抓取数据流程是什么样的。有意思的是讲验证码识别部分，如果“难一点我们应该怎么样？”使用付费的人工识别服务， 猝不及防！", "marks": "还行"}
{"content": "从知乎董伟明的live里来的，内容还不错，也还蛮新的一本书，再读读。进阶之路走得有点慢。", "marks": "推荐"}
{"content": "还可以，讲得比较基础", "marks": "推荐"}
{"content": "故意占篇幅", "marks": "较差"}
{"content": "基础覆盖的挺全的，把写一个爬虫所需要的方方面面都渗透到了，很不错。", "marks": "推荐"}
{"content": "很薄的书，深入浅出，读着很快。", "marks": "推荐"}
{"content": "通俗易懂 170929", "marks": "推荐"}
{"content": "够实用", "marks": "推荐"}
{"content": "终于读完了", "marks": "力荐"}
{"content": "不错，挺好~", "marks": "推荐"}
{"content": "15年出的书，16年翻译出版，17年就已经看不了了。代码都是python2.7版的，有点老。", "marks": "较差"}
{"content": "不错的网络爬虫入门。看完之后基本方法就清楚了，剩下就是实践了～", "marks": "推荐"}
{"content": "挺全面，入门", "marks": "力荐"}
{"content": "还是需要多实践，多练习，多拓展。", "marks": "推荐"}
{"content": "http://blog.csdn.net/column/details/13041.html这个专栏就是对应这本书写的笔记，可以参考。", "marks": "推荐"}
{"content": "偏简单", "marks": "还行"}
{"content": "了解了爬虫的常用手法", "marks": "推荐"}
{"content": "内容全面，缺憾是大多数都是两年前的东西。不过其中Portia可视化爬虫的部分有点小惊艳。", "marks": "推荐"}
{"content": "爬虫不只是一个简单的get或post请求，还涉及如避免重复爬取、并发下载、爬取 js 内容等方方面面。本书算是对这些点给了一些浅尝辄止的介绍。", "marks": "还行"}
{"content": "和之前看的 web scrapping with python 内容差不多。不同是，这本提供了多线程和 ip 代理的思路，把爬虫速度提升了好几十倍。还不错。推荐两本互补看", "marks": "还行"}
{"content": "Python大法好", "marks": "推荐"}
{"content": "内容实用，都是比较新的工具。讲得很细，对于新手很友好。每章都提供了源码，方便学习，可以看出作者很用心。", "marks": "推荐"}
{"content": "对我来说还是挺有用了，系统地学习了一遍爬虫，关于静态网页，动态网页，表单交互的POST请求有了更加清楚的了解，对持久化，缓存，断点续爬，验证码也有了认识，scrapy，portia这些工具很惊艳。", "marks": "推荐"}
{"content": "很浅显的书 ", "marks": "很差"}
{"content": "拥有一个技术舍友的福利，那就是我有好多可以看…\n最大缺点当然是python2,老书没办法，各种代码到今天应该是有些过时了…不过用来丰富爬虫大纲不错…", "marks": "还行"}
{"content": "春入门，感觉可以用几天就看完，很多东西都和网上的博客一样，不过爬虫这种东西还是应该与时俱进，如果时间富裕可以翻一翻。", "marks": "还行"}
{"content": "学Python爬虫入门很好的书", "marks": "推荐"}
{"content": "加点具体例子就更好了，书不错的，不罗嗦", "marks": "推荐"}
{"content": "这本书自己敲了大概有一个月，比较简单，用一个网站介绍了一些基本的爬虫基本知识，后面的scrapy框架和例子大概看了一下算是比较不错的入门书", "marks": "推荐"}
{"content": "0.一看标题就明白不是从入门到放弃了。\n1.八天，粗率弄了一遍。得第二遍撸点儿代码了。（必须思考思考），跑跑小轮子。", "marks": "力荐"}
{"content": "了解网络爬虫的基本知识。", "marks": "力荐"}
{"content": "写的不错，值得一读", "marks": "推荐"}
{"content": "刚读完，感觉讲的比较浅显，可以尽快熟悉网络爬取的流程，但深入的讲的不多，还有网上下载的源代码比较混乱，需要仔细的校正", "marks": "推荐"}
{"content": "内容很简洁。作为爬虫入门不错。", "marks": "推荐"}
{"content": "算是短小精悍的一本入门书，把爬虫涉及到的方方面面都做了介绍，包含html，缓存，并发，js，表单，验证码以及Python流行框架Scrapy，每一块都对现有的主流方法做了简介和实例讲解，虽然整体内容不多，但是基本上把爬虫的知识梳理了一遍。爬虫，无法一劳永逸，还得对症下药。", "marks": "推荐"}
{"content": "介绍蛮多的爬虫技术和Python模块。其实挺不错的。最好配合培训视频来看。", "marks": "推荐"}
{"content": "不错，通过一个爬虫串联起各章的内容。唯一可惜的是用的python2.7。", "marks": "力荐"}
{"content": "书里面代码有bug，感觉书不太好用，没有《python 网络数据采集》条理清晰，看了两本关于爬虫的书，对比之后，高下立判。", "marks": "还行"}
{"content": "适合那些没有接触过爬虫的人，想通过此书入门的话还是不错的。\n全书内容不算多，很基础，比较像导论和介绍性的，更深入的内容需要自己去搜来看", "marks": "还行"}
{"content": "使用的技术虽然有些老，但爬虫的思路还是深入浅出，循序渐进，适合初学者学习。但薄薄的一本要40多有点贵。", "marks": "推荐"}
{"content": "书太薄了吧！里面字还这么大，还这么贵。。。。不值。", "marks": "较差"}
{"content": "对于新入门的24K小白来说，是非常好的入门书。而且介绍了很多tricks~不过也只能算是入门了。至于有人说书上代码是基于Python2.X而不是Python3.X的………这重要么？", "marks": "力荐"}
{"content": "粗略看了一遍，没有特别深的感悟，也没留下清晰的印象和知识架构。举的例子还行，浅入浅出吧~~~", "marks": "还行"}
{"content": "内容乏善可陈，思路也是毫无新意，说是翻译版教科书的剪辑和堆砌并不为过。", "marks": "很差"}
{"content": "一刷 看个大概", "marks": "力荐"}
{"content": "看到实验室学弟桌上有一本，比较感兴趣就拿起来翻了翻。\n大概翻看了一下我就要笑出声了，感觉很多人可能会因为这个书名而购入。。。\n总的来说，无论是从算法还是数学方面都没有好好地在讲，也和尾页描述的“力求引起读者的兴趣”不搭界。要学算法还是认认真真看算法导论，认真写代码。", "marks": "很差"}
{"content": "多谢晴神，甲级95", "marks": "力荐"}
{"content": "入门温习的好书，一周看完，细节好评，也给了读者思考的空间(总有几个为什么留给你)", "marks": "力荐"}
{"content": "目前最好的小白入门算法书。", "marks": "力荐"}
{"content": "pat/考研复试用书", "marks": "力荐"}
{"content": "考研复习使用。目前手抄到第354页第十章图的DFS算法。绝对是最适合我的算法书，即使与算法（第四版）和算法导论（第三版）相比也不遑多让。书中单独有两章内容分别介绍C语言和C++的STL中各个头文件及操作方法。而且书中很多代码先给出这类问题解法的模版，然后给出完整代码并真可以运行。", "marks": "力荐"}
{"content": "讨厌应试参考书，不过这本是算法，还算有点用\n不错", "marks": "还行"}
{"content": "适合入门算法学习和机考准备的参考书籍", "marks": "推荐"}
{"content": "懂得的人都说好", "marks": "力荐"}
{"content": "可以看作研究生机试指南。很简单，不过讲得很细。", "marks": "较差"}
{"content": "非常适合用来get your hand dirty", "marks": "力荐"}
{"content": "书写的蛮不错的 真的很容易理解 要是大一的时候就有这本书就好了", "marks": "力荐"}
{"content": "大致翻了下, 讲的还行.", "marks": "推荐"}
{"content": "还可以，前面讲算法还有些看头，中间讲代码的时候，伪代码所以没什么意思，无论是引用计数还是分代，都有这种问题，感觉很像工程上的优化问题。实现部分看了 Python 的。", "marks": "还行"}
{"content": "//R大推荐的书，这周末读下", "marks": "力荐"}
{"content": "比Matz讲解的要好。就是看递归函数有些头疼。", "marks": "推荐"}
{"content": "不错，遗憾的是没有分析java和haskell的gc，如果新版能再加上go就好了。", "marks": "推荐"}
{"content": "整本书分为对算法概念讲解和GC在语言中的实现来讲。循序渐进，条例清晰。 作者本身也是rubyGC的核心开发者。干货满满", "marks": "推荐"}
{"content": "看了算法部分，实现部分先放着。总的来说很不错，介绍了各种GC算法、它们的优劣和应用。图示很多，有助于理解，伪代码部分很精华，要细看。", "marks": "力荐"}
{"content": "前面还好，中间开始有些翻译读起来瞬间出戏关于书的内容，有图解很方便理解~实现篇中，Dalvik虚拟机那部分应该说是跟出书的当时彻底不同了吧。\n-------------------\n17.7.24 前面好个毛线。本来还想参考这本书的翻译，从头对着看才发现这译者太扯淡。", "marks": "较差"}
{"content": "结构清晰，主体写得也浅显。但没有把各个点串在一起。", "marks": "还行"}
{"content": "不错。算法很重要，虚拟机很流行", "marks": "力荐"}
{"content": "这书挺好玩的，适合新人看", "marks": "力荐"}
{"content": "非常棒，松木行弘大师推荐", "marks": "力荐"}
{"content": "在看cms和g1的时候因为一些细节 花了四天时间看完 要是后面能有Java垃圾回收细节就更好了 整体上的伪代码给的很不错 ", "marks": "推荐"}
{"content": "太low了，感觉看不下去了", "marks": "较差"}
{"content": "好书，非常适合入门", "marks": "力荐"}
{"content": "问题都蛮实在蛮经典的, 有一些小错误吧XD", "marks": "推荐"}
{"content": "图书馆里看到，觉得还挺新的，就借来了，章节分得挺细，讲完java实现后会在后面跟一串问题，很多问题还是环环相扣，层层递进的。因为准备找工作所以看的比较匆忙，翻译不差。", "marks": "推荐"}
{"content": "原文很经典，值得仔细阅读，中文版的还可以，只是有些时候翻译的有些偷工减料，最好是和原版的对照阅读，此书是Java版的，最新的版本是C/C++版的，还有python版的。", "marks": "力荐"}
{"content": "全面", "marks": "力荐"}
{"content": "日本人写的技术书有一个共同点，就是非常简单好懂。", "marks": "力荐"}
{"content": "20171025合图。感觉比大学教材好。移动客户端无法标记，问候产品经理全家。", "marks": "推荐"}
{"content": "很适合入门～ ", "marks": "还行"}
{"content": "很简单的入门书籍，读起来比小说还快。", "marks": "推荐"}
{"content": "基础概况吧", "marks": "推荐"}
{"content": "很浅显, 加上配图有助于理解. (完全不用代码描述, 实际上增加了理解难度)", "marks": "还行"}
{"content": "日本人真是闲的蛋疼，但他们写这种东西的确很受用，比什么Guidance好多了。", "marks": "推荐"}
{"content": "能写得这么简单，也算是很见功底了。不过话说回来，这么简单，对专业的人来说聊胜于无。对想入门的人来说，就当做开胃菜吧，也不是正经的入门书。", "marks": "还行"}
{"content": "京东618促销时买书了一堆书，这是其中之一。到手第一天看一些，苹果 WWDC 开始前看一些，最终在去北京出差的火车上看完。讲解简单明了，但内容少了点，让人意犹未尽。", "marks": "推荐"}
{"content": "各方面都有介绍，并且附有图解，算是不错的科普书吧，看完能大概知道这些算法是啥样的。", "marks": "推荐"}
{"content": "适合非理工科入门", "marks": "还行"}
{"content": "内容很简单，讲得很清楚。", "marks": "推荐"}
{"content": "虽然都是已经知道的一些知识，但西方的那套理论真是很形象易懂。20161021", "marks": "推荐"}
{"content": "非常非常适宜入门。", "marks": "力荐"}
{"content": "配漫画的启蒙书最可爱了", "marks": "推荐"}
{"content": "快速翻完，确实很适合入门。", "marks": "推荐"}
{"content": "科普读物，有助于在最短的时间内了解算法的总体情况", "marks": "推荐"}
{"content": "只是把思想讲明白了，可以作为第一本数据结构和算法书。。", "marks": "推荐"}
{"content": "日本人写的还是挺有趣的", "marks": "力荐"}
{"content": "不值得买。", "marks": "还行"}
{"content": "还不错，可以再读一遍。", "marks": "推荐"}
{"content": "算法相关，生动形象容易理解，内容很浅显基本，作为随手翻翻的算法启蒙书不错。", "marks": "还行"}
{"content": "写的倒是通俗易懂，只是几乎全是理论性文字，没有任何代码示例。搞编程没有示例怎么能行呢？", "marks": "较差"}
{"content": "适合非技术人员。推荐。", "marks": "推荐"}
{"content": "比较全面，把技术体系较为系统的介绍了，难得的是，还有具体实践案例", "marks": "推荐"}
{"content": "业务与技术融合最好的大数据初中级适用书籍，没有之一。作者从业务需求出发详述了数据采集、数据整理、数据存储、数据分析，应用场景的概念、方法、技术以及开源的产品分析，功能、优缺点，涉及到应用场景的部分详细给出了模型、常用算法以及步骤、应用情境。每章给出参考书籍，为逐步深入提供线索。", "marks": "力荐"}
{"content": "挑了几个重点讲了下，全景图还不够完整", "marks": "推荐"}
{"content": "文字太差了。不过好在内容比较实在。", "marks": "较差"}
{"content": "入门看看还行", "marks": "还行"}
{"content": "很适合我这种外行，介绍的深入浅出，一星扣给大宝的人设。正好同期在看增长黑客，隐约有那么点交集", "marks": "推荐"}
{"content": "作者是电商行业出身，因此这本书主要从电商企业的角度来阐述大数据系统的架构和应用，将数据流过程及其中涉及的各种开源技术讲解了一番，从数据收集，存储，处理，搜索，挖掘，到机器学习，也夹杂了一些产品/项目管理的一些经验分享。读完此书对大数据全景及技术架构能有个大略的了解。", "marks": "推荐"}
{"content": "写的还行，作者能结合技术和需求，可以参考和入门。", "marks": "还行"}
{"content": "道行不够深。。。不是很懂。。虽然能明白作者很想用朴实的方式让我们懂。。。可，毕竟还是专业啊", "marks": "还行"}
{"content": "内容组织得很好，覆盖面广，适合入门", "marks": "推荐"}
{"content": "入门书籍，文字功底欠缺，内容还不错，把现在流行的大数据相关技术用故事化的方式串联了起来，更具有系统性！", "marks": "还行"}
{"content": "此书不错，将复杂的大数据知识写得很生动，和实践结合也比较紧密", "marks": "力荐"}
{"content": "讲解很想详细，内容很丰富，可以对大数据的架构和业务有一个全面的了解，适合技术管理人员和架构师", "marks": "力荐"}
{"content": "内容不错，提纲挈领，系统性地讲述部分工具的应用。书总共两百来页，定价有点虚高了。", "marks": "推荐"}
{"content": "客观的说～作者还真是低估黑客了呢～", "marks": "还行"}
{"content": "063. @06142016. 新书，逻辑清晰，但浅尝辄止，略失望，也许是我期望太高了.", "marks": "推荐"}
{"content": "特别鸡肋的一本书，内容很广泛，实用性极差，急于动手进行数据清洗的数据分析师们可以换一本书了", "marks": "较差"}
{"content": "对初学者来说有欠实用，对长期清洗数据的人来说太过简单。不知道适合哪种人士", "marks": "较差"}
{"content": "由数据清洗开始窥窃数据分析。介绍了很多有意思的东西。轻松读物。", "marks": "还行"}
{"content": "以为是讲data wrangling的，没想到是真的就data clean啊。本想着解决炒菜前从买菜，洗菜，摘菜，切配的一系列工作，结果书里就只有怎么用水、消毒液等把菜给洗洗，还就真的只有洗洗。", "marks": "较差"}
{"content": "对于外行人来说，貌似需要有一定编程经验；对于相关从业人员来说，太多共识型内容。感觉两个方向都没有做好。作者貌似想从一个又一个的例子告诉你怎么做数据清洗，但是这个东西应该跟特定数据特定需求有关系，不太好一次性说清楚。如果做过多次数据清洗工作的，这本书价值不是很大。", "marks": "还行"}
{"content": "心疼钱💰，另外感觉第6章简直是神操作〔滑稽〕", "marks": "很差"}
{"content": "准备用一周时间好好研究的书，结果两个小时很快的就浏览完了，书里面的内容太杂，太浅，与其使用这本书中介绍的方法清洗数据，不如直接搜索引擎搜索“如何xxx”，可能是因为我对这本书的期望太高了吧，读下来的感觉非常不好。", "marks": "较差"}
{"content": "挺简单的一本书。。", "marks": "还行"}
{"content": "看了下目录，“你们的良心不痛吗？”", "marks": "很差"}
{"content": "没读完 不过有些不适合", "marks": "较差"}
{"content": "勿买，大坑。编码没有注释；英文翻译不准确；题目不给例子。", "marks": "很差"}
{"content": "上当了，骗子东抄西凑攒的垃圾，怀疑丫用搜索引擎写的，看作者努力过，两星够了。", "marks": "较差"}
{"content": "看之前就比较担心是不是太trivial都是已经知道的东西，结果不幸料中。不过也好，打消了我写类似书的想法", "marks": "还行"}
{"content": "数学家教做人", "marks": "力荐"}
{"content": "《指导生活的算法》\n生活中的很多复杂决策，看上去没有规律可循，实际上是可以用算法来解决的。e.g.找对象用到的37%法则\n很多时候我们会沉迷在细节里，看不清大方向，其实是犯了数学上的过度拟合错误。\n时间问题本质上是个数学问题，用数学家的办法管理时间，才能活得更有效率。", "marks": "力荐"}
{"content": "观点大多数是已经知道了的，大概作为科学从事者，看这种科普书就是这点无趣。在想白熊是不是计算到26岁该leap，才跟我求婚的orz", "marks": "还行"}
{"content": "强烈推荐给非CS从业者：先以非常直观的方式介绍算法，然后提升到哲学高度和你谈人生。。。对于从业者来说也应该是不错的消遣读物", "marks": "力荐"}
{"content": "指导生活的算法。恋爱的年龄与犹豫比例决策。时间保守与开放的选择。", "marks": "推荐"}
{"content": "购买链接：https://item.taobao.com/item.htm?spm=0.7095261.0.0.4f8efd26cPt1ZA&id=559320704340", "marks": "力荐"}
{"content": "新时代鸡汤。虽然是鸡汤，也还算有趣。", "marks": "推荐"}
{"content": "Easy to follow and fun to read. I highly recommend Ch. 5 on scheduling, Ch. 6 on Bayes' Rule and Ch. 9 on randomness.", "marks": "推荐"}
{"content": "看看", "marks": "推荐"}
{"content": "基廷斯指数", "marks": "较差"}
{"content": "适合文科生，无编程基础的人看。作者花了很大的精力请了一些算法如何在普通人生活中应用，对我有很多启发。", "marks": "力荐"}
{"content": "关于算法的理性与感性，比如博弈论结尾这段儿：\"The road to hell is paved with intractable recursions, bad equilibria, and information cascades, seek out games where honesty is the dominant strategy, then just be yourself.\"", "marks": "推荐"}
{"content": "听书。算法指导生活。把决策变成一个数学问题。在这个充满不确定的年代，给自己增加一些底气。概念：37%规则，过度拟合。日课064 | 数学家告诉我什么时候结束单身", "marks": "力荐"}
{"content": "Interesting read", "marks": "还行"}
{"content": "第一点设一个deadline，然后用前37%时间explore，之后就看到合适就下手。第二点模型不要overfitting。结论其实跟常识是很接近的。", "marks": "还行"}
{"content": "寓算法于平时的生活事件中，了解了不少算法知识，也了解了更多计算机运行的知识，接下来的几年里，对计算机算法和运行逻辑之类的一窍不通的话，大概就真的落后于这个时代了吧。", "marks": "推荐"}
{"content": "37%法则", "marks": "还行"}
{"content": "翻了2页 那感觉就像吃粗制滥造的日料 功力不足还兼媚俗", "marks": "较差"}
{"content": "推荐非CSer读", "marks": "还行"}
{"content": "Too easy ...", "marks": "还行"}
{"content": "白话版的计算机算法课程", "marks": "还行"}
{"content": "一点点数学 加一点点CS 加很多很多生活故事 比较佩服作者们对各种生活现象跟算法的联系 三星半", "marks": "还行"}
{"content": "my best read in 2016!", "marks": "力荐"}
{"content": "Pretty vivid examples are illustrated. The best algorithms can be so anti-intuition. More challenges to come!", "marks": "力荐"}
{"content": "在得到app听的书。干活提取出来不多，但是还算有用。尤其是第一个决策算法还算实用", "marks": "推荐"}
{"content": "从Baysian那章开始才是Tom写的吧...感觉前几章的作者理解很浅，只会东拼西凑，把很有意思的内容写成了畅销书style", "marks": "还行"}
{"content": "3.5", "marks": "还行"}
{"content": "不知道底下评论的都是怎样的大神，但是对我这种计算机小白来说，这本书简直是跪着读完的。生活中看似简单的东西蕴含着最复杂的科学理论，看上去高深莫测的计算机算法，却也蕴含着最常见的生活智慧。非常值得一读的书……", "marks": "力荐"}
{"content": "算法人生", "marks": "力荐"}
{"content": "geek必读，从最常见的问题展开，认真且有趣。", "marks": "力荐"}
{"content": "一本讲述计算机世界的算法如何教你优雅地面对现实人生的书", "marks": "还行"}
{"content": "看第一二部份简直是一种折磨，大谈管理，意识、思想、目标、组织架构，技术人员谈管理总是隔靴搔痒，不伦不类，虽是真知灼见，未免夜郎自大，三四部分渐入佳境，AKF扩展矩阵XYZ扩展理论颇有见地，解决扩展性的架构设计理念、方法源自实践，值得研读。近700页的大部头消减为350页恰到好处。", "marks": "推荐"}
{"content": "配合软件工程，简直酸爽", "marks": "力荐"}
{"content": "教科书般阐述人，管理，过程，组织架构再到技术架构设计对高可用系统和产品的影响。", "marks": "力荐"}
{"content": "对于小白阅读者不知道该如何打分，至少举例还是很生动，不懂技术的产品经理不是好产品，扫一眼，了解个大概", "marks": "还行"}
{"content": "翻了翻，一公里远一米深", "marks": "推荐"}
{"content": "多读读还得有收获的，全面性绝对有的，AKF扩展立方体有意思，中文译名太高调了，其实是讲架构扩展性的", "marks": "推荐"}
{"content": "强烈推荐，尤其是做 运维 经理 总监级别的人。", "marks": "力荐"}
{"content": "这本书谈及人、流程、组织、管理方面还是比较有见地，印象比较深的还是XYZ轴扩展理论；涉及到偏技术的内容以介绍概念为主，有很强的论证性，但是论证篇幅有点过长。", "marks": "推荐"}
{"content": "略读，管理学方面内容对技术转型有指导意义，AKF值得好好应用。有些内容过于唠叨！", "marks": "推荐"}
{"content": "只看懂了一些点儿，读的不通透，不明白的地方很多", "marks": "还行"}
{"content": "管理、流程、技术都想说，管理和流程讲得好一点，技术讲得太表面，这恐怕是大部分CTO的工作时间分配。", "marks": "较差"}
{"content": "从过程，组织和技术三个层面讲了如何使系统可扩展，很有启发性，能拓宽眼界和想法。", "marks": "力荐"}
{"content": "这是一本讲“扩展性”的书。从组织、过程和架构三个方向强调了其对“可扩展性”的作用方式。其中大量篇幅讲解了组织和流程的重要性，后面的架构原则，AKF扩展模型，应用监控这些总结得很到位。", "marks": "力荐"}
{"content": "但凡成长中的事物都会面临成长中的烦恼，会遇到量变以及量变引发质变的问题。IT系统、产品及其所在组织也概莫能外，随着业务成长也会面临需求增加、负载加重的问题，即系统的扩展性问题。本书的作者出身名门，曾分别在ebay和paypal负责系统架构工作，所以拿出的系统扩展性良方很有价值。", "marks": "力荐"}
{"content": "谈扩展性有三分之二的篇幅在说团队组织和流程管理。深有体会。大部分问题常常不是出在技术层面，或者仅仅是体现在技术层面。责任不明确，目标不明确，资源不明确都是深层次的原因。", "marks": "力荐"}
{"content": "对目前工作意义不大，另外可能是翻译的原因，比较晦涩", "marks": "还行"}
{"content": "其实关于技术管理，过程，监控等部分写得很有意思，适合技术架构师和技术管理者阅读。", "marks": "推荐"}
{"content": "大而不当，真正有价值的不多...", "marks": "还行"}
{"content": "缺点就是太厚太长，技术人员都怕事情没说清楚", "marks": "推荐"}
{"content": "虽然比较厚，但面面俱到，建立知识体系比较适合，也算填补空白吧，太厚，可以只看每章结尾。也有许多不足之处。", "marks": "推荐"}
{"content": "翻译得很一般", "marks": "还行"}
{"content": "可以扔进垃圾桶的一本书，不知道翻译来做什么。还有，机械工业出版社的书本纸质实在太差了。及时止损，扔进垃圾桶", "marks": "很差"}
{"content": "差不多吧，方法论，比较像工作经验总结，读过书的还是不一样，一套一套的", "marks": "还行"}
{"content": "寻找规模化的复杂问题求解之道", "marks": "力荐"}
{"content": "被翻译毁了的一本好书，奇怪豆瓣的9分是怎么得的", "marks": "很差"}
{"content": "从企业技术高管（CTO或CIO）的角度来诠释互联网公司技术管理的重心，重中思想而不是具体的指导。", "marks": "力荐"}
{"content": "里面也涉及到一些项目管理相关知识点，对架构的理解也不在局限于技术。其实架构面向的是未来，应对未来当下如何布局，生活工作皆如此。目标导向，过程驱动。需要多读几遍", "marks": "力荐"}
{"content": "对于程序员来说，这本书的技术含量偏低；对于架构师来说，这本书深度不够；\n或者换个角度来说，需要这本书内容的不一定能读懂，开阔下眼界吧，能读懂的其实并不需要这本书", "marks": "还行"}
{"content": "    可扩展性的组织才能搭建可扩展性的系统，这本书从流程 组织 人员 架构对可扩展性进行了深入阐述，是一本技术主管必读的书籍。结合实际，个人对于书中的原则、方法和一些最佳实践会有了更深刻的理解，可以做为一本手册随时翻阅。\n    一句话总结，是一本讲技术架构的好商业书，也是一本讲领导力和管理策略能力的好架构书。\n    书名直译是《可扩展性艺术 - 现代企业的可扩展性WEB架构 流程 组织》", "marks": "推荐"}
{"content": "架构师是一个非常高深的职业，下面有一个机会，可以供各位架构大神共同交流，共同进步，请戳http://skl-zg.com/dataCount?channel=4&page=2，", "marks": "推荐"}
{"content": "没有废话，全程无尿点。偶尔讲个例子还都是 modularity, polymorphism, recursive type 这种不太直观，非讲不可的", "marks": "力荐"}
{"content": "Robert Harper 真是惜字如金的典范，能用数学公式表达出来的东西就绝不给你举例子……（其实这本书就读了一半，但容我假装一下）", "marks": "推荐"}
{"content": "句句精辟，一针见血", "marks": "力荐"}
{"content": "讲的很细，适合自学", "marks": "力荐"}
{"content": "不错。读完快速复习了一遍cpp。内容言简意赅，知识点丰富全面，配有大量练习和代码，适合短时间提高cpp编程能力。后面的算法部分讲得有点简略。", "marks": "力荐"}
{"content": "凄凄切切群群群群群群群群群群群群群群群群群群群群群", "marks": "力荐"}
{"content": "大约是把悲天悯人的情怀投射到IT上，形成了某种三次元的心理史学萌芽吧。", "marks": "还行"}
{"content": "学习了新的吹逼姿势。。", "marks": "还行"}
{"content": "弃书，有点概念大于实质", "marks": "还行"}
{"content": "知识目录型的书", "marks": "推荐"}
{"content": "做为入门，看看尚可", "marks": "还行"}
{"content": "类似科哲的方式,探讨算法对我们现在的自然\\认知的影响,很不错", "marks": "力荐"}
{"content": "典型的美国式商业读物，点很泛，但不够深入", "marks": "还行"}
{"content": "后悔买了这本书了。", "marks": "较差"}
{"content": "如果用一句话来总结，那就用克兰兹伯格的这句：技术既无好坏，亦非中立。", "marks": "还行"}
{"content": "图书馆快速翻完，判断下里面的观点都有接触过，作者的阐述没什么特点，当作资讯类来检索也没什么意义", "marks": "较差"}
{"content": "部分例子新颖 但浅显 ", "marks": "还行"}
{"content": "有人执着寻找意义，有人只想解开谜题。", "marks": "还行"}
{"content": "还行 最后小结很好", "marks": "推荐"}
{"content": "可能个人有种怀疑一切的态度，所以里面的观点对我而言并没有太多新意，基本自己都已经考虑过了。算法将来导致一批下岗，自己却莫名其妙得到了个算法工程师的岗位。6。", "marks": "还行"}
{"content": "还是不要看了吧，不知所云", "marks": "较差"}
{"content": "挺下饭的", "marks": "还行"}
{"content": "爱情从本质上讲是完全无法预测和度量的。心灵有自己的逻辑，理性对此一无所知。如果我们试图靠近观察一只样子奇特的鸟，只要我们暴露了自己的意图，那只鸟就会展翅飞走。与之相似，只要我们试图分析愉悦感或者美感， 我们就会将其破坏殆尽。", "marks": "还行"}
{"content": "看看", "marks": "推荐"}
{"content": "量化世界，找寻规律，\n利用大数据强计算能力发现未来", "marks": "推荐"}
{"content": "这书的很多观点是批判性思考，不得不面对算法统治世界的事实，也要反思算法后面的量化依据。", "marks": "推荐"}
{"content": "流行书", "marks": "较差"}
{"content": "看了大概1/3的篇幅，感觉如下：\n书名高端，封面拉风，纸质够厚，定价特高，字体大号，内容空洞，观点肤浅。\n一句话：不要浪费时间在它上面", "marks": "很差"}
{"content": "看完《未来简史》找到了这本，现在都想不怎么起来了。算法可以很厉害，帮助人做很多事情，相亲，金融，律师等等", "marks": "还行"}
{"content": "现在好多这种类型的书，59元的原价有点骗钱的感觉，匆匆翻阅而已，没有什么实质性的内容。", "marks": "较差"}
{"content": "不能老是看着这么无聊的书没有一些新的收获，开始干正事吧！", "marks": "较差"}
{"content": "介绍的实验很有意思，大致上就是将许多相关示例汇聚成每章的主题，但是没有啥靠谱的结论，简直就是新闻稿的汇总。", "marks": "还行"}
{"content": "适合浅尝的人", "marks": "很差"}
{"content": "glad to meet u ！书中涉猎广泛，实例的列举又结合哲学的思想进行分析阐述，层次丰富。希望能有机会把提到的著作、论述、研究也拿来读一遍", "marks": "力荐"}
{"content": "不得不承认，我们已经进入了算法时代！", "marks": "推荐"}
{"content": "一般吧", "marks": "还行"}
{"content": "有很多闪光的亮点，但是没有把闪光点充分呈现出来，总感觉例子讲得太多，而缺少论述，不是特别严谨。", "marks": "还行"}
{"content": "适合大忽悠讲给玩手机的甲方听", "marks": "很差"}
{"content": "因为行为，产生数据，所以我们相信，通过数据，可以预测行为；哪怕这个逻辑是对的，但结果，不一定是我们想要的。", "marks": "还行"}
{"content": "书中的内容还是不错的，说的很细，图太多很好也。。。不算特别好。。。怎么说。。。太细了容易迷失。。3.5 吧。", "marks": "还行"}
{"content": "由于工作关系需要研究gcc，抱着很大希望买了回来，结果太失望了。我觉得这本书走到了另外一个极端，完全用图代替了文字，结果比没有图还失败， 不仅眼花缭乱，并且给阅读带来极大障碍。同时，对于一些背景知识和理论知识介绍的太少。另外，编辑能不能再细心一点，所有的代码都存在对齐问题。综上，我退货了。个人见解，不喜勿喷。", "marks": "较差"}
{"content": "技术原理和工程实现的关系。CPU和内存、硬盘等设备的速度不匹配，是冯·诺依曼结构计算机的一个核心问题，为了解决这个问题，科学家们绞尽脑汁，想尽了办法， 又引出了一堆概念： 缓存，DMA， 同步，异步，阻塞....", "marks": "力荐"}
{"content": "买了这本书，看了三四个小时退了。", "marks": "还行"}
{"content": "书的内容还是很不错的，就是排版读起来很累，放弃了。", "marks": "还行"}
{"content": "书中有大量的代码，如果开发gcc当参考资料是有用的，但是用这本书来学习编译原理就不推荐了。所以对于我这种gcc开发人员还是很有帮助的，省去了我一些看代码的时间，毕竟市面上原来没有这样的书。", "marks": "推荐"}
{"content": "解释很清楚,有图有代码，好书", "marks": "推荐"}
{"content": "对我这种基础不好的人来说，很详细，很多东西解释清楚了。有时候你还要知道为什么这么做，这个很重要", "marks": "力荐"}
{"content": " 十分详细,但有些内容作者并没有讲的很详细,比如处理器的体系结构,建议配合CSAPP阅读更佳", "marks": "力荐"}
{"content": "难得一见的好书，通俗易懂，不过不是零基础可以看的书籍，强烈推荐，哈哈哈哈！！！", "marks": "力荐"}
{"content": "讲得很清楚,但要有一定的背景知识才能看懂,书的知识点有点散(可能是叙述风格造成的),如果书前言能提到如何阅读本书和面向哪些读者那就更好了", "marks": "力荐"}
{"content": "挺好  通俗易懂", "marks": "推荐"}
{"content": "入门简单", "marks": "力荐"}
{"content": "这翻译真是太糟糕了，一看就知道是非计算机专业的人来乱翻", "marks": "较差"}
{"content": "这书看的太累，讲了许多概念，但都是轻描淡写的过去了，一言不合之处就写代码。看了也只是知道个名词，不知道什么意思，也不知道怎么用。做数据方面的工作还蛮难的。", "marks": "较差"}
{"content": "读完也没入的了门，都是范范一讲就过了，术语太多，基础太差，好多地方没读懂。", "marks": "还行"}
{"content": "很久没用python了，快速翻一遍就记起了大概，入门书籍至少有这点用吧；既然书名都是入门，那些进阶的到这里装*，有点不妥吧。", "marks": "推荐"}
{"content": "有Python 基础，拿来入门DS 还是不错。统计及常用机器学习算法都讲得比较全面了，也有足够的例子。可视化让我新知道了seaborn、D3.js 这些工具，也算有所裨益。", "marks": "还行"}
{"content": "太简单了，只是入门，是真的只是入门。", "marks": "较差"}
{"content": "对数据科学进行了一次总览式概述。每个概念不作推导，不作说明，直接抛出来后就跟上一堆代码。适合需要结合代码对数据科学进行大概了解的人。具体的学习还是看别的书吧。", "marks": "还行"}
{"content": "带着你把一些基础算法从底层开始重构一遍。。。唯一不友好的是书里调用自己写的函数，比如第五章引用第二章的函数，没有在注释里说明，找起来也挺麻烦。。。", "marks": "力荐"}
{"content": "介绍了一些概念，此书可以快速浏览，作入门科普", "marks": "还行"}
{"content": "  和《数学之美》交叉着阅读的，后者从“道”的角度介绍的各种数据科学方法，在本书中多有从python入门的角度做出的实现。但对于非计算机类专业的文科生，也仍旧太难了，只是了解了数据科学具体的各种应用，作为思考管理会计工作与之关系的一个立足点。", "marks": "还行"}
{"content": "前面读起来感觉还可以，有种学会了感觉，但后面就慢慢读不懂了，作者对这些算法的历史，特点，适用场景等知识似乎没有怎么讨论，所以后面感觉学的就比较混乱了。而且不依赖矩阵等类库，看似用标准库就实现许多算法很厉害， 其实反而加大了学习难度跟减少了实用性。\n但是对人还是有一定启发的", "marks": "推荐"}
{"content": "代码太多，看到后面找不到之前的代码。。。", "marks": "还行"}
{"content": "茶余饭后读一下就好，个人觉得没有很大的实践意义。", "marks": "还行"}
{"content": "1.python快速入门 2.每种算法都简要地讲了，作为科普也是蛮好的，就是作者刻意地都讲得是最简单的算法", "marks": "还行"}
{"content": "仅仅是入门", "marks": "还行"}
{"content": "25章，280页。书中的每一章都值得单独拿一本书来学习，但是本书中每章大概只有10页纸。虽然说是“入门”，但其实也是需要有相当的（Python、高等数学、概率论、统计学）基础的，否则只是不知所云。每一章后面都有“延伸学习”一节，这节里面介绍的东西倒是很不错，值得去学习", "marks": "还行"}
{"content": "比较实在的基础算法书，代码也比较完整。不是那种要毁三观或是碾压智力的风格。", "marks": "推荐"}
{"content": "描述太粗略，追求生动却功力不足。可大致翻阅", "marks": "还行"}
{"content": "我是看了作者的博客，一并入手了两本（另外一本是关于图像的）。总的来说，本书内容属于是中规中矩的，一些常见的数据结构都有覆盖到，当然这也并不算是什么特点。我个人感觉，本书的亮点一是作者设计穿插的一些经典问题非常不错，二是所有算法、结构和经典问题都配有完整的程序代码，很有参考价值。", "marks": "力荐"}
{"content": "书两侧的留白不错 有问题引入和其他小标注 主要是面向学生比较简洁地梳理了一下各种结构", "marks": "力荐"}
{"content": "各种贴代码，一连贴几页，连import都要全部贴进来，像培训班用的教材一样…还好是300-200的时候凑单买的…", "marks": "较差"}
{"content": "很适合入门的书籍，就是代码贴得多了点，减1星", "marks": "还行"}
{"content": "挺好的，不像传说的那样不堪。适合迅速入门。", "marks": "力荐"}
{"content": "快速翻了一遍。for review of nowcoder's wenda project", "marks": "还行"}
{"content": "知识结构比较丰富，都可能不是很细，对于大牛可能点一下就懂了，菜鸟不好说。", "marks": "还行"}
{"content": "该讲的基本都有涉及到，也介绍了Docker.", "marks": "还行"}
{"content": "方方面面给出了一个hello world，真要在实际开发中使用，远远不够。", "marks": "还行"}
{"content": "虽然大段的代码就是骗钱，搞得这么厚。不过覆盖的点还是比较全的，也是比较容易懂的，看的比较轻松愉快", "marks": "推荐"}
{"content": "扫了一遍。和上一本没什么太大差异。可能还没用这个技术吧，体会不出什么深度的内容。", "marks": "还行"}
{"content": "这本注重实践，重点在 Spring 本身和 Spring Boot 上面，最后提了下 Spring Cloud", "marks": "还行"}
{"content": "cook book性质的书，只有教你怎么操作，用的时候查好了", "marks": "还行"}
{"content": "不错", "marks": "推荐"}
{"content": "这本书不止介绍了spring boot，从spring基础，到spring mvc， spring boot，再到spring cloud，涵盖了spring生态圈的大部分技术点。书中对知识点讲解比较概括，主要是实例多，需要多动手实践和思考。另外，spring从最初的一个ioc容器，发展到现在的云生态系统，优秀的软件设计，开源以及生态圈的形成，确实值得好好学习、使用。 ", "marks": "推荐"}
{"content": "作为初期的 reference 还是挺不错的。更深入的原理需要自己看代码了。", "marks": "还行"}
{"content": "入门书，预览下spring boot。", "marks": "推荐"}
{"content": "入门还是不错的，内容多而不深入。超厚的一本书，大部分是代码，没高亮没兴趣细读。", "marks": "还行"}
{"content": "很多内容讲的不清楚，边看边搜索。适合快速上手。", "marks": "较差"}
{"content": "国内关于Spring Boot这方面的书很少，这好像是第一本？比较适合初学者，浅显易懂，涉及的面还是挺广的。", "marks": "还行"}
{"content": "不算很好的springBoot入门教材吧，各种Demo，适合翻着看", "marks": "还行"}
{"content": "主要介绍spring boot，后面有稍微介绍了下spring cloud", "marks": "推荐"}
{"content": "没什么实质内容", "marks": "较差"}
{"content": "内容略过时，只怪发展太快，东西不少，可以只挑用的看。有Web基础的SpringBoot初学者读物。建议速览。自定义部分后面翻过来再看。", "marks": "还行"}
{"content": "一本烂书", "marks": "很差"}
{"content": "类似作者学习笔记的东西,堆代码,相关说明不甚清楚.也不能说完全没用,但是全书连html,cs,js都贴到书里面,而且代码块的底色让人阅读起来很不舒服..翻翻还尚可,没有特别深入的东西.", "marks": "较差"}
{"content": "基础入门", "marks": "还行"}
{"content": "入门挺合适的。", "marks": "推荐"}
{"content": "这本书写的对不起“实战”这俩字！纯粹是使用指南，并且大部分还是翻译的官网上的。很多东西涉及的非常浅！只适合刚入门的人看！", "marks": "还行"}
{"content": "从spring讲到springboot，讲的还是很全很细的，应该算是最佳实践，对刚刚入门的我帮助还是很大的。", "marks": "推荐"}
{"content": "浪费了70大洋", "marks": "还行"}
{"content": "大段spring内容，教你如何做，完全没有为什么这么用，也没有个人的理解，建议看官方API，不建议购买，太贵了....", "marks": "较差"}
{"content": "看的实在受不了，不如去看官网示例。", "marks": "很差"}
{"content": "技术点阐述很全面，是了解上手Spring的很好的书籍", "marks": "力荐"}
{"content": "看了半天都是代码", "marks": "很差"}
{"content": "名字为了山寨In Action系列，内容简直就是各种黏贴，凑数", "marks": "很差"}
{"content": "线代没学好，现在来补课", "marks": "推荐"}
{"content": "这套里讲线代这本蛮形象生动的，值得一看", "marks": "推荐"}
{"content": "相当好的线代、数值计算读本，角度不错，就是整体叙述和排版方式让人思路有点绕", "marks": "推荐"}
{"content": "真的是浅显易懂，相比于教会你怎么计算，作者觉得让你理解它的含义要重要的多。这种精神确实是我们大学缺少的", "marks": "力荐"}
{"content": "线性代数＋数值计算，讲得很细", "marks": "推荐"}
{"content": "适合大龄毕业程序员复习线代 翻译也不错", "marks": "推荐"}
{"content": "标题党，面向的并非是程序员。并且讲的并不深入浅出", "marks": "较差"}
{"content": "看了一半，感觉还是说得挺清晰的，后半部分实用性比较低就直接忽略了", "marks": "还行"}
{"content": "特征向量、特征值——用图解释得非常清楚，易懂。看了才明白为什么要求特征向量啊！", "marks": "力荐"}
{"content": "相比概率统计那本，这本有点晦涩难懂，内容和考研大纲相比也深了不少。不过配套的demo挺好的，有助于理解矩阵的各种变换。", "marks": "推荐"}
{"content": "大致浏览了一遍，遇到问题再看吧…日本人对ruby真的是情有独钟啊", "marks": "力荐"}
{"content": "适合入门和泛读，里面很多是高等数学的东西。大学的时候看比较合适，形象的比喻有点太冗长，不适合研究生。", "marks": "推荐"}
{"content": "这本书着力于从矩阵的本质来介绍线性代数。尝试着尽量不引入复杂概念和计算，说清楚线性代数。 作者认为矩阵的本质是映射。并通过这个理解慢慢介绍了一些重要的线性代数概念，比如基底，维数等。个人感觉整本书虽然很希望用最简洁明了的方式介绍矩阵概念及应用，但是仍然难免引入复杂的推倒。布局上，补充材料和异常情况也占了很大篇幅，稍显凌乱。", "marks": "推荐"}
{"content": "对矩阵、秩、行列式会有很多形象的描述（图像化、空间化）。但是内容太少了，特别是缺少SVD以及一些稍微复杂一点的矩阵操作。", "marks": "推荐"}
{"content": "1.文章还是比较贴切，通俗易懂，高速背后的原理和运用的场景。\n2. 自己看的时候，还是跳的很多，主要在于跟自己做的东西，有一定的差距，但是，从了解学习线性代数的角度，不失为一篇好的书籍，\n3.后续可能需要深入线性代数，矩阵分析的时候，要冲看一下。", "marks": "推荐"}
{"content": "通俗易懂，帮助深层理解，好书。", "marks": "力荐"}
{"content": "太简单了，不推荐", "marks": "较差"}
{"content": "适合入门的书籍，如果你对HTTP，HTML，Python这些都不了解的话", "marks": "还行"}
{"content": "入门 每个知识点点到为止 全面浅层了解python爬虫的一本书 翻译的还行 只是长句断句让人揪心啊", "marks": "推荐"}
{"content": "Beautifulsoup", "marks": "力荐"}
{"content": "终于有本针对3.X的爬虫书了～", "marks": "力荐"}
{"content": "可以跳过代码去看，能对python的数据抓取相关工具有一个初步的认识", "marks": "推荐"}
{"content": "适合入门，感觉是各种爬虫库文档的精简版", "marks": "推荐"}
{"content": "很幽默", "marks": "推荐"}
{"content": "ORELLY的书我觉得到最后作为收藏正好，无论是浅显入门的还是那些略专业的工具书", "marks": "推荐"}
{"content": "Web Scraping with Python: Collecting Data from the Modern Web | Ryan Mitchell | download http://b-ok.org/book/2575517/98b82a", "marks": "推荐"}
{"content": "挺好的 有实例有供爬的网站 系统的介绍", "marks": "推荐"}
{"content": "还算入门，不过读完了该不会还是不会，实际操练才行……", "marks": "力荐"}
{"content": "语气不压迫，讲解清楚，翻译得好", "marks": "力荐"}
{"content": "打开了新世界的大门", "marks": "力荐"}
{"content": "其实不应当标注出这类书籍的，但看在这本书确实写的比较实在有价值，还是推荐。", "marks": "力荐"}
{"content": "爬虫入门推荐，内容不难，面面俱到，唯一遗憾的是没讲如何多线程和分布式爬取，篇幅有限可以理解。作者还分享了一些踩坑的细节，甚至跟爬虫看似没有直接关系的知识点也介绍了一下。代码不是很Pythonic，看起来作者应该主要是写Java的，不过代码质量可以，Python 3也好评。", "marks": "推荐"}
{"content": "科普书233，有点失望。", "marks": "还行"}
{"content": "初学爬虫挺有用的", "marks": "推荐"}
{"content": "入门用。感觉把爬虫可能涉及到的各方面问题都罗列开来，算是作者丰富经验的总结。不过也都是点到为止，要进一步了解的话还是需要更多参考其它资料或者实践。", "marks": "推荐"}
{"content": "由于写了一段时间的爬虫，很多东西我已经知道，所以只花了一天时间就翻完了，书中讲了一些反爬虫机制以及如何应对，也有和爬虫关系不太大的话题比如数据库存储等", "marks": "还行"}
{"content": "基础入门", "marks": "推荐"}
{"content": "想在网上爬个小东西时发现的教材。这本书太适合入门了，给了初学者想要的全部~", "marks": "力荐"}
{"content": "太水了，没有干货，某章还有一句JS是一门过时的技术😂", "marks": "很差"}
{"content": "过于入门…主要用bs4。且略微旧，scrapy已经支持python3了。", "marks": "还行"}
{"content": "这本书主要讲了两方面的内容，一是网络爬虫，爬取网站数据的基本原理，包括使用python的beautiful软件库，爬取网站数据的基本原理，复杂web页面的解析方法，爬取网络数据的数据存储管理方法，不同编码类型，不同，文档格式的数据读取方法，使用api采集web页面获取标准xml，json格式数据等。\n二是高级数据采集方法，主要包括非规范格式数据的数据清洗，穿越登录表，认证页面，cookie，JavaScript脚本等网站数据的采集方法，以及网站图片文字识别等技术。", "marks": "还行"}
{"content": "买个电子版方便很多，可以查找代码。", "marks": "还行"}
{"content": "自己抓数据有段时间了，这本书讲了爬虫的用途、思路和常用的工具（很多我都用过），如果我早一点发现这本书就好了（自己躺坑还是太累了", "marks": "力荐"}
{"content": "对爬虫的一些关键细节讲解的不错。整体上讲，本书内容全，有条理，但还不够细。", "marks": "还行"}
{"content": "缺点是选择的一些库并不是现在最合适的 然后非常适合入门 提供了一个完整的思路框架", "marks": "还行"}
{"content": "算是个入门，各种库提到了一些", "marks": "还行"}
{"content": "pycon奖品，翻了翻对tor那部分感兴趣，仔细读起来发现只是简单一提。内容有些过时，翻译痕迹严重，读完一遍没有收获。", "marks": "较差"}
{"content": "简单翻了一下，写爬虫必备。", "marks": "推荐"}
{"content": "简单入门", "marks": "推荐"}
{"content": "没上手之前认为爬虫很可怕，于是从去年暑期拖到现在，真正入门却只用了两天。一周后爬虫项目将暂告段落，回过头再看这本书，发现其是对爬虫全貌的概略，对了解整个过程，还是颇有意义的。", "marks": "还行"}
{"content": "上周简单翻了一遍，接下来看 Requests。20161118", "marks": "还行"}
{"content": "水", "marks": "较差"}
{"content": "介绍了BeautifulSoup(HTML解析)，scrapy(爬虫)，nltk（几个简单的nlp例子）和request（login，cookie）相关用法和示例", "marks": "还行"}
{"content": "读完就觉得流畅，干货也多，看得出是一个一线高手的实力总结。也确实是作者说的那种适合有一定基础的人看的书，后面的很多章节其实都可以独立成一本书。", "marks": "推荐"}
{"content": "GO GO GO!练习 练习，爬起来", "marks": "力荐"}
{"content": "可以的", "marks": "推荐"}
{"content": "带入门的书籍", "marks": "推荐"}
{"content": "不好。太简单了", "marks": "较差"}
{"content": "2017.3.18\n对于python刚入门的来说还是挺友好的\n介绍了很多新奇的东西", "marks": "还行"}
{"content": "全面性、入门性的书籍，提纲挈领。", "marks": "推荐"}
{"content": "无力吐槽，错误太多了，虽然说优美的代码就跟散文似的，但是作者你写个代码能不能直接就上散文？\n随便调用一个不存在的函数看起来很有道理诶？\n参数不指定缺省值也不赋值是几个意思？\n都说全书python3，这么新的版本，bs4不指定解析器是闹哪样？\n译者该尊重原文的代码不要翻译成中文行不行？代码缩进错误，中文词组顺序错误。\n全书这里推荐oreilly media，那里推荐sql cookbook，跪了\n第一版就是来骗钱的，我是小白鼠，呵呵。", "marks": "较差"}
{"content": "总体来说，讲了一个普通爬虫遇到的很多事情。最喜欢的还是图像文字处理那部分。", "marks": "力荐"}
{"content": "毕竟看的第一本爬虫书。", "marks": "推荐"}
{"content": "还是太浅显", "marks": "还行"}
{"content": "高级数据采集这一部分有空的时候可以读一读，没空就算了。", "marks": "还行"}
{"content": "每一点都写的不详细", "marks": "还行"}
{"content": "很有意思", "marks": "力荐"}
{"content": "python爬虫入门。", "marks": "推荐"}
{"content": "整体不错，但是不太深入", "marks": "推荐"}
{"content": "讲的比较浅显   适合新手", "marks": "推荐"}
{"content": "适合入门，涉及到了很多基础知识和工具。", "marks": "力荐"}
{"content": "一周看完，全而不深，入门好了。", "marks": "推荐"}
{"content": "还算不错，因为接触爬虫有段时间了，所以前半部分就当梳理和复习了。\n\n从第二部分里还是可以学到点不错的第三方库的，不过想要更深入的学习得将这些第三方库吃透才行。", "marks": "推荐"}
{"content": "广而不精", "marks": "还行"}
{"content": "针对python3，利用内置request库写最简单的爬虫，基本是拿来就可以用了，非常适合入门爬虫。", "marks": "力荐"}
{"content": "作者似乎写JS出身？有些例子似乎用面向对象的方法更好，另外很多例子在国内实现不了，GFW～～～", "marks": "还行"}
{"content": "python3爬虫入门", "marks": "推荐"}
{"content": "爬虫入门经典 知识点很全面", "marks": "推荐"}
{"content": "点到为止，有点浅。", "marks": "还行"}
{"content": "挑了几章读了，很棒的爬虫书", "marks": "推荐"}
{"content": "各种可以用到的框架知识的概括和介绍，具体还是要查各种文档以及亲身试验", "marks": "推荐"}
{"content": "数据采集的启迪书，不得不说这本书写得很浅显易懂，也出来得很及时，比较全但是深度还是略显不够", "marks": "推荐"}
{"content": "篇幅不大，三四天看完。对涉及的内容点到即止，属于带你入门，深究靠自己再去了解。\n对网络数据采集没有研究的人来说还是不错的，至少让你知道了有什么工具解决什么问题。", "marks": "推荐"}
{"content": "适合python3学习入门很快。", "marks": "推荐"}
{"content": "一般，讲的很浅，给个大概认识吧", "marks": "还行"}
{"content": "挺好的，系统的学习了一下爬虫。", "marks": "推荐"}
{"content": "本书对于爬虫技术介绍的很全面，而且大多数内容是点到为止。颇有一种“师父领进门修行在个人”的意味。从代码和写作风格可以看出确实是作者多年来的经验之谈。全书的文字风格随意但是又不缺严谨，有幽默的风格。很适合，初学者或是想我这样没有系统地学习过爬虫技术的人。", "marks": "推荐"}
{"content": "拿来入门可以，主要用bs4和正则表达式之类的来抓数据，生产环境里我一般用requests和lxml，如果网站反爬策略厉害，就用大杀器selenium，webdriver", "marks": "推荐"}
{"content": "文字和代码都很简洁，很适合想入门爬虫的人。\n翻译很多错误非常无脑简直让人无法忍受。", "marks": "推荐"}
{"content": "方方面面都讲到了。很有参考价值。虽然代码里有些许小错误，不影响整体阅读。", "marks": "力荐"}
{"content": "看了三遍。为什么作者很喜欢用内置函数名来命名变量", "marks": "推荐"}
{"content": "第一本爬虫书，扫清恐惧~", "marks": "力荐"}
{"content": "两百页的书，简单的介绍了 Python 爬虫的各方面的第一步，对于自己对爬虫的认识和法律的约束也有不错的见解。遗憾的是只是第一步，进阶内容很少提及。", "marks": "力荐"}
{"content": "全面但浅简，适合了解与入门。", "marks": "力荐"}
{"content": "高级的有点太难了，书上的代码有的跑不起来。\n前半部分写的好，后半部分开始飘", "marks": "很差"}
{"content": "很不错的爬虫入门书籍", "marks": "推荐"}
{"content": "很简单", "marks": "推荐"}
{"content": "编程还是很多年前的事了，嵌入式，汇编，C是当年我的长项，没有复杂晦涩的语法和长名词需要学习，之前从来没有学过Python，但这本书我看了两遍，一方面为Python的极简魅力所折服，另一方面为本书之内容深深地吸引了，他不但带领你从头到尾的学习了一遍如何使用Python访问网络，又如何使用Python和数据库、语义处理所连接，内容全面简单易懂，更重要的是他像其他工具书那样只讲一堆第三方库怎么用，而是把很多重要的功能点带你用极简的方式重新实现了一遍，哪怕你是从头开始研究如何实现中文分词，这样的领路人都是足够了呢。\n强力推荐极客入门阅读。", "marks": "力荐"}
{"content": "难得用python3讲解如何爬虫，对使用python3的人来说是一大福音。网上大部分的教程使用python2进行爬虫，和python3用的库有较大不同。\n但是python就是这样，年轻又有活力，意味着不仅仅是python本身，包括第三方库更新的也特别快。尽管这是一本2016年出版的书，但是书中的代码并不能完全复用，因为有些用到的库已经更新了：或者是接口，或者是输出，和书中的不尽相同。", "marks": "力荐"}
{"content": "爬虫入门作，BeautifulSoup护佑着你，不包含进阶知识", "marks": "推荐"}
{"content": "搞爬虫必备吧，不过挺基础的，不过也够用了", "marks": "推荐"}
{"content": "更像是一本索引，不能详细指导你完成项目，但能给你明确的技术方向。", "marks": "推荐"}
{"content": "bs介绍的很详细", "marks": "推荐"}
{"content": "挺不错的，市面上爬虫的书籍不多，这门当入门很合适。", "marks": "推荐"}
{"content": "这可能是最近看的几本书翻译得最好的了...强赞翻译\n作者代码风格有些坑爹,包括变量名覆盖内置函数等等....\n但这本书居然带来了一些乐趣...并不枯燥,很值得新手学习", "marks": "力荐"}
{"content": "对通信涉及的数学，覆盖的分支领域作了概述。\n尤其对自己钻研的小区频率复用、天线阵随机赋形进行了深入浅出的介绍。本书对专利意识、创新也有所思考。\n反映出作者的高水准和强烈自信。总之，不要迷信和盲从所谓的专家和真正的专家。同时，简单有时也意味着高效。", "marks": "力荐"}
{"content": "本质上和教材叙述的方式并无不同。", "marks": "还行"}
{"content": "还是要去了企业，才能更深入地理论联系实际，对理论的理解才能更深刻", "marks": "力荐"}
{"content": "通信之道，娓娓道来", "marks": "力荐"}
{"content": "整个通信基础知识的堆砌。", "marks": "很差"}
{"content": "通信", "marks": "推荐"}
{"content": "作者很有自信呀！也确确实实是非常好的一本通信书。把大学时候的基础课、通信课程串起来了，有很好的提纲挈领的效果。对于推导和公式的量拿捏地很好，既满足必要性，又不至于太过艰深。认真读完可以说站在了通信的门内，读懂了可算作登堂入室。于我而言，很多地方都还没读懂呢，继续努力。", "marks": "力荐"}
{"content": "非专业生为了面试临时抱佛脚，看了开头和结尾。除了数学公式部分都很深入浅出，特别是结合儒道释三家讲的人生哲理。。数学公式部分虽然作者反复强调写作时假设读者是高中毕业生，然而。。好吧是我弱爆啦", "marks": "还行"}
{"content": "嗯。。。勉勉强强吧", "marks": "推荐"}
{"content": "真的非常好，我读了，我服了，期待第二版，希望再多加些内容。您写的比高校教授写的明白多了，美中不足的是一些核心概念还是没有提到，提到的概念有些还是展开的不够，有些短，不过瘾。", "marks": "力荐"}
{"content": "讲解既通俗，又入木三分，难得的好书！那么难懂的注水原理轻轻巧巧就讲明白了，着实惊到我了！", "marks": "力荐"}
{"content": "虽然已经尽量白话，但还是有一定门槛，相当于把通信相关本科课程串了一遍，让人知道学的那些到底是干什么用的。而这个是没有老师会超越职责外为学生总结的。", "marks": "推荐"}
{"content": "考研前启蒙的一本书，真的很好，能把工科写的如此行云流水般的流畅，值得一读", "marks": "力荐"}
{"content": "非通信专业的同学看起来还是相当难的……😭", "marks": "力荐"}
{"content": "还是有一点学术性的", "marks": "推荐"}
{"content": "👍👍👍", "marks": "力荐"}
{"content": "深入浅出，细节知识有独到的认识。坐看SFR技术能否成为5G核心。", "marks": "力荐"}
{"content": "本来看印刷质量不怎么样，但详细读完之后回头看，还是挺有用的。第二章开始就不知不觉自己建了一个简单的神经网络，完全地行为驱动开发（BDD）和测试驱动开发（TDD）实践。机器学习方面当然的不够深入，但 BDD 和 ML 的结合还是做得很不错的。作者该说的话都说了，用测试确保代码的健壮性；代码编写保持懒惰不要过度设计（over-engineering）；不要去测试数学（而要测试功能）；保持代码的逐步生长，建造健壮的机器学习程序，不断测试算法，找到更好的算法，得到更好的性能。", "marks": "推荐"}
{"content": "内容比较水。", "marks": "还行"}
{"content": "干货较少。很多截图、命令输出结果有拼凑篇幅之嫌。", "marks": "还行"}
{"content": "还是挺全面的一本书，提到了自己很多项目中遇到的问题，尤其在聚合与应用服务方面。但整体而言还是比较浅的，没讲得特别详细。但还是作为必读的参考书目", "marks": "推荐"}
{"content": "学而不思则罔，思而不学则殆。这本书挺适合挣扎在自认为已经比较熟悉面向对象编程和设计模式，却始终感觉写出来的代码乱糟糟的业务程序员了。尽管作者一直强调DDD的最重要的是它所谓的「战略模式」，我还是快速地跳过了…战术模式的章节都值得翻看，一边看一边结合之前自己设计业务代码做的尝试遇到的问题，并在脑袋中运用新的知识重构之前的系统\n另外，这本书的翻译真不怎么样，经常会花费我大量时间去理解一句话的意思，后来索性就不怎么看文字内容，只看提供的代码并结合在网络上搜索的信息去理解概念", "marks": "推荐"}
{"content": "领域驱动设计的第三本书，已经越来越理解领域驱动设计的方法，关键还是在于实践，实践，再实践。", "marks": "推荐"}
{"content": "是对设计思想、操作方法的介绍，可能实践过程中需要一定程度的变通", "marks": "还行"}
{"content": "看了前几章，翻译太差了。推荐《实现领域驱动设计》，vaughn vernon，比这本好些。", "marks": "较差"}
{"content": "真的一般……这倒是在较集中的篇幅里浮光掠影介绍了很多库，但是基础语言知识没有介绍扎实啊", "marks": "还行"}
{"content": "Python3的入门书。个人觉得，如果完全没有编程基础的人来看这本书，由于对概念的解释的缺失，可能理解比较困难；反而是那些已有其他编程语言经验的人来说是一个很不错的入门书，而且后面也会介绍多方面的应用来扩展阅读。", "marks": "推荐"}
{"content": "相见恨晚的一本书，14年读了Python for Informatics，以为再也不用读Python入门书籍，结果发现，这本书实在是太赞，更加适合入门。", "marks": "力荐"}
{"content": "对于初级入门，我还没找到比它更好的，找到了我再更新。从第六章以后，就开始蒙圈了，但还是坚持读完了。作为一个新手，更需要一些以目标为导向的线上课程。努力。", "marks": "推荐"}
{"content": "“这本书只是入门教程，大部分内容是基础知识，实践方面内容不多。”", "marks": "推荐"}
{"content": "还算不错的py3入门书，有一定开发经验，可以很快读完，就是附录太多了", "marks": "还行"}
{"content": "很不错", "marks": "力荐"}
{"content": "Python 3不错的一本入门书籍，质量很高。", "marks": "力荐"}
{"content": "之前很多知识盲点读不下去，补充了一些知识之后再看，发现讲的真的是举重若轻。翻译也很流畅，国内要有如此的好书就好了。\n9月再次重读，发现依旧很不错，常读常新。", "marks": "力荐"}
{"content": "对于已经入门的读者来说很精练，内容宽泛节奏也很快，但不会觉得浅尝辄止，对很多概念的讲解非常生动形象，加上有不错的练习题，对进一步夯实语言基础非常有帮助，算是一本开眼界、长见识的书。唯一稍显遗憾的地方是讲网络和并发的那一章不怎么成系统，这一章作为基础教程细节略多、主体分散，读了几遍还是不怎么通透。不过这些领域的确需要更加专业和深入的学习了。", "marks": "力荐"}
{"content": "在苏州手机没电等人的时候看完了。比较简单", "marks": "推荐"}
{"content": "还不错的Python入门书，学习python是2017年最有趣的事情之一。", "marks": "推荐"}
{"content": "挑著過了一遍，挺不錯的Python基礎書 20170217", "marks": "推荐"}
{"content": "教材", "marks": "推荐"}
{"content": "python3的快速参考 有其他语言编程经验的快速学习python的绝佳书 后面的几章有点鸡肋", "marks": "推荐"}
{"content": "内容比较全面，习题也不是很偏", "marks": "还行"}
{"content": "适合初学，当工具书", "marks": "推荐"}
{"content": "写的很好，我是配合廖雪峰的网站一起看的。刚好相互补充。", "marks": "推荐"}
{"content": "我觉得写得好！", "marks": "力荐"}
{"content": "现在的Python入门书籍质量真的很高，比几年前的挑选余地要大多了。", "marks": "推荐"}
{"content": "有其他语言基础了看起来不费劲，翻译的也很友好\n习题有些简单", "marks": "推荐"}
{"content": "只能作为Python的一个简单入门，介绍语法等一些基础知识，它的重点还是放在前端和开发上的", "marks": "推荐"}
{"content": "不错的Python 入门书。", "marks": "力荐"}
{"content": "入门书", "marks": "力荐"}
{"content": "这本书迷一样的高分...但是读来感觉还是走马观花地介绍各种library", "marks": "还行"}
{"content": "浮光掠影般介绍了各种语法和各种库的hello world…太散了，也不够深入…", "marks": "还行"}
{"content": "不是特别深入，比一般的入门书要细很多。里面的应用虽然讲的不多，面还挺广的。值得一看。", "marks": "力荐"}
{"content": "如果一定要推荐一本语言入门的书籍，我强烈推荐这一本。作者说到，每个程序员他每天能写的代码量是固定的，如果使用高级的语言就意味着有更高的生产力以及创造力。同时作者又说到，如果你能快速的完成商业任务，你老板会喜欢你。全书覆盖了从入门的知识，到后边广泛的应用场景，让你感觉到Python似乎有无所不能的。通俗易懂，又层层递进，非常值得一看。🙂", "marks": "力荐"}
{"content": "还不错", "marks": "推荐"}
{"content": "特别基础的书，很快有个框架的意识，还需要读其他高阶的书去深入", "marks": "还行"}
{"content": "俺读过的Python书中，俺以为这本最好，没有之一。", "marks": "力荐"}
{"content": "pyhton 挺好玩的", "marks": "推荐"}
{"content": "作为斯莱特林的子弟，焉能不会大蛇语", "marks": "力荐"}
{"content": "浅尝辄止", "marks": "推荐"}
{"content": "很全面的入门书，基本都介绍到了，广而不深（毕竟页数在那里）", "marks": "推荐"}
{"content": "前半本真心好，后半本有点走马观花了。后半部分看完没什么印象了⋯⋯\n", "marks": "推荐"}
{"content": "读后感在这：http://www.ituring.com.cn/article/465318", "marks": "力荐"}
{"content": "看到第七章，后面草草看了。还需要多看前面的基础知识，很多都不理解。", "marks": "推荐"}
{"content": "比较适合初学者，不过感觉还是直接上项目快些", "marks": "推荐"}
{"content": "最好有一点点编程基础。把Python从宏观上讲了一下，想要往深处走，还得学习相应方向的书。", "marks": "推荐"}
{"content": "初学者适用，详细。", "marks": "力荐"}
{"content": "算是相当好的入门书了", "marks": "力荐"}
{"content": "豆瓣上终于有了，但是，谁来完善一下信息啊？", "marks": "力荐"}
{"content": "翻译还是比较认真的...", "marks": "推荐"}
{"content": "哈哈", "marks": "推荐"}
{"content": "有点看不下去，知识点散乱，语义不明。感觉没有《算法导论》讲的好。不过专门针对Python这点可以，好评。", "marks": "还行"}
{"content": "有点看不下去，知识点散乱，语义不明。感觉没有《算法导论》讲的好。不过专门针对Python这点可以，好评。", "marks": "很差"}
{"content": "也不晓得是不是翻译的问题，看的心好累，完全看不下去。", "marks": "较差"}
{"content": "书本身不错 翻译太烂了点", "marks": "还行"}
{"content": "不推荐大家购买. 翻译的太差. 给的例子 解释的不明不白的.", "marks": "较差"}
{"content": "干tmd翻译", "marks": "很差"}
{"content": "5星给原书，给翻译1星。不建议买书，看英文原版吧。这翻译看的头晕。要么翻译不懂python，要么不懂英语。看的头疼。", "marks": "力荐"}
{"content": "翻的很绕口", "marks": "还行"}
{"content": "首先说明这不是个算法入门书\n正在看第四章，感觉还行，到没有觉得翻译很差，翻译书大部分都这样了吧，也不挑剔了，咱算法写的差也不是书的锅。。。。\n看完再细说", "marks": "推荐"}
{"content": "比如第二章习题2-11，证明对于任意无向图，都可以通过调整边线方向，从中产生有向无环图（DAG），原文答案是这样的：\"Number the nodes (arbitrarily). Orient all edges from lower to higher numbers.\" ，然后书上翻译成：“（任何一种）节点编号都可以按照其所有边的编号从低到高排列。”，\n我擦勒，这神马玩意？完全不知道翻译再说什么，后来仔细一琢磨，应该是这样吧：”给所有节点编号，然后边按照编号从低到高指向。\" ，这样不就好理解多了吗，只要从低到高指向，就不可能产生环路，一瞬间豁然开朗有木有～～～", "marks": "较差"}
{"content": "翻译，我天，要炸", "marks": "较差"}
{"content": "哇，翻译的和鬼一样", "marks": "较差"}
{"content": "泼点冷水，大致翻了一遍，内容基本涵盖了现在常用的各种算法，但是各种算法论述比较简略，这点比李航的统计学习方法要差不少，可能周老师写这本书的目的是做教材，个人不认为适合自学", "marks": "还行"}
{"content": "懂得人不用看，不懂的人看了也不会懂，不知道为什么评价这么高，就因为排版还不错吗？", "marks": "还行"}
{"content": "作为教材其实需要具备三个条件：印刷排版好，语言表达好，逻辑思路好。从这三点来说，这本书都完胜李航教授的《统计学习方法》，是一本非常值得推荐给机器学习入门者梳理知识以及机器学习从业者温故知新的书。希望周老师的下本书可以增加一些自己对于模型本身的思考和理解，那一定会更受欢迎。", "marks": "力荐"}
{"content": "作者前言及纠错信箱：http://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/MLbook2016.htm\n。可见这本书出发点就是“启蒙”，非常朴实。倒不存在和另一些书去争高下，各有特长。机器学习和很多相关领域一样，不是公式堆砌，也不是故作高深，相反，用大白话讲到尽可能多的人懂，就是好的。可以看到，很多方法除开优雅的推演，直觉上也是合理且美的。重要的是把握一个方法的思考脉络。当然，真正的学术派（论文狗）会在某些章节某些细节里会心一笑：无论自己投稿，还是审别人稿，常遇到的一些疑难被提到了，不免汗颜，不免亲切。最后，推荐主页上另一本Ensemble Methods，概括性不错。", "marks": "力荐"}
{"content": "这是一本可以让你读下去，学下去的入门好书", "marks": "力荐"}
{"content": "买了本来提升逼格，结果只能看懂科普部分，我这学渣。", "marks": "推荐"}
{"content": "手撕SVM，数据挖掘面试必备", "marks": "力荐"}
{"content": "简明而深刻，厚积薄发的评注非常开拓思维，多是游刃有余之后才可得出的见解，受益匪浅，我觉得给六星也不夸张，论述很系统很全面，对知识领域一览无余、豁然开朗的感觉真好", "marks": "力荐"}
{"content": "内容很全面，涵盖了绝大多数热门算法与模型。可惜讲的太过粗糙，没有完整的数学推导，不适合没有基础的人看。比起教科书更像是本“导读”。用作梳理知识点，准备面试还是不错的。", "marks": "推荐"}
{"content": "说实话因为覆盖面比较广，一些推导就省略了不少，若能减少覆盖面，集中讲解几个算法，就更好了", "marks": "还行"}
{"content": "不要窄化思维。", "marks": "力荐"}
{"content": "机器学习是达到人工智能的手段，而非人工智能本身。", "marks": "力荐"}
{"content": "机器学习课的教材 编著和排版都很用心 把ML的大致骨架描摹得清楚。一学期讲了前十章 感受: 首要推动力还是冷血助教布置的作业集。", "marks": "力荐"}
{"content": "非常好的书，应该是国内最全面的机器学习理论书籍了", "marks": "推荐"}
{"content": "行文精要。适合当字典。如果自学的话，因为信息密度非常大，建议慢读精读，配合谷歌，把每句话都搞懂也可以了。", "marks": "推荐"}
{"content": "读了前三章扫盲一下，对数学要求太高，细节看不懂，明白下概念", "marks": "推荐"}
{"content": "年纪大了，还是看中文快。的确挺不错的，复习和快速推导入门很好。", "marks": "推荐"}
{"content": "的确是以教材的思路在写，但如果缺少合适的辅导，这本书作为机器学习的入门自学书并不太合适。倒是对从业者来说是个不错的理论重温读物，很多内容虽展开有限，但的确为进一步深入研究提供了一个出发点。不得不说，中文资料里面算不错的了。", "marks": "推荐"}
{"content": "第一遍：2016-03-05~04-16", "marks": "力荐"}
{"content": "excellent for newbies", "marks": "力荐"}
{"content": "这本书讲得很全面，从简单的PR/F1 模型评估, 监督学习的LR/DecisionTree/SVM/NN/Boosting/Bagging/ ，常见的Bayesian/聚类/降纬/特征选择等到不常见的计算学历、概率图、规则学习、强化学习等，可谓无所不包。我觉得这本书好的一点是，有基础内容可以循序渐进由浅入深。而真正应用机器学习的人来说，也可当作参考书，在很多更细化的方向也有不少参考文学可以深挖。", "marks": "力荐"}
{"content": "深入浅出，二刷。", "marks": "力荐"}
{"content": "虽然好多看不懂，但强制自己还要看的~~！~~", "marks": "力荐"}
{"content": "这个书太棒了！撸了2遍。", "marks": "力荐"}
{"content": "写的都对，但不适合入门", "marks": "还行"}
{"content": "http://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/MLbook2016.htm\n像是机器学习算法汇总，可读性低", "marks": "较差"}
{"content": "对于一个丢掉数学多年的码农来说，就一个字——难。不懂的时候可以当作工具书再细读。", "marks": "力荐"}
{"content": "很棒的教科书 中文标杆", "marks": "力荐"}
{"content": "很不错的中文机器学习入门", "marks": "力荐"}
{"content": "周老师能把这个讲好。。真是太棒了。。。虽然课后练习题还是不会做。捂脸。", "marks": "力荐"}
{"content": "这本书定位于机器学习导论书籍，对机器学习很多都是概论，看了几章，有些符号和过程给的不规范，导致读者不易推导和深入，5星是肯定给不了的。总体还是不错的，4星。", "marks": "推荐"}
{"content": "周老师的这本书真的写得很有诚意！由浅入深，对于初学者来说是涉入机器学习领域的不二之作。西瓜大法由浅入深。", "marks": "推荐"}
{"content": "看完评论想作为入门读物，可是发现有点难。。。", "marks": "还行"}
{"content": "第一次读得艰难，第二次读得兴奋，第三次读得轻松。现在这本书的最大价值是每一章的参考文献。周志华老师是用心人。", "marks": "力荐"}
{"content": "全彩，排版很好。。大概能给你一个概念，让你知道这玩意儿是干嘛的。", "marks": "力荐"}
{"content": "贝叶斯之前不怎么好懂，贝叶斯之后几乎全不懂。好处是知道水深，涉足须谨慎。", "marks": "还行"}
{"content": "不错的介绍。", "marks": "推荐"}
{"content": "周boss的书，整体框架搭的很好，有些比较深入的见解。但是要是具体学习每个模型细节，还要深入看点其他的，这本有点不够。", "marks": "力荐"}
{"content": "值得一看，但距离经典还差一步。", "marks": "还行"}
{"content": "蛮不错的，就是感觉有些地方讲的很详细，但是有些地方又特别简略，比如机器学习方法的分类，过拟合的根本原因等等。准备二刷", "marks": "推荐"}
{"content": "浅显易懂，适合入门。", "marks": "力荐"}
{"content": "除了第15章规则学习和最后一章RL，其他部分都认真过了一遍。", "marks": "力荐"}
{"content": "20171204\n4.5⭐ \n计算机科学并不仅是关于计算机，就像天文学并不仅是关于望远镜。计算机科学发展至今，也该到了从关注\"造\"计算机转入更关注\"用\"计算机来认识和改造世界的阶段，其中最重要的无疑是用计算机对数据进行分析，因为这是计算的主要目的，而这离不开机器学习。\n机器学习及其应用研讨会(MLA);", "marks": "力荐"}
{"content": "在看密歇根州立出来的实习生给我的论文的时候因为有了这本书没有输太惨（围笑围笑围笑）", "marks": "力荐"}
{"content": "我觉得有点散唉", "marks": "推荐"}
{"content": "入门好读物 ", "marks": "力荐"}
{"content": "基础知识详细扎实，  但是与时代脱节，效率低下，误人子弟，国内老学究的通病", "marks": "很差"}
{"content": "显然，顾名思义，显而易见的词语，对入门不是好书，对于深入理解，里面提供的文献不错。总体而言，能把复杂的讲简单，让读者懂是需要本事的，本书没有做到。理论讲解太浅，一带而过。读这本书，我看不懂，读Standford CS229 的讲义，我看懂得比这本书的多.\n不适合入门与自学.  ", "marks": "还行"}
{"content": "找实习过程中一直陪伴自己的书，除了计算理论、强化和规则学习，算是翻过两遍了。", "marks": "力荐"}
{"content": "西瓜书不错", "marks": "推荐"}
{"content": "可以算得上是机器学习的最佳中文书籍了，内容全而系统，适合多次翻阅，和李航老师的书都算得上良心之作。", "marks": "力荐"}
{"content": "在整理笔记，好书。", "marks": "力荐"}
{"content": "囫囵吞枣。书非常好，但更适合有些基础的人自学或者作为教材", "marks": "力荐"}
{"content": "内容不错，不过这本书只能当教材，不适合自学，里面的公式几乎省略了所有推导，只写了关键点的处理。", "marks": "推荐"}
{"content": "作为教材，确实写得挺好", "marks": "力荐"}
{"content": "基于神经网络的“连接主义”与基于逻辑表示的“符号主义”的兴衰交替让人唏嘘。大数据、大模型、大计算是机器学习的三大支柱，本书的重点是机器学习的理论(算法)。看公式的时候一直在想那个笑话：高数是什么树？", "marks": "还行"}
{"content": "观其大概而已", "marks": "还行"}
{"content": "讲的浅显易懂，看过电子书之后又买了一本实体书支持一下。", "marks": "力荐"}
{"content": "面面俱到，但是都没有深入讲，关键步骤的证明省略，不适合入门自学", "marks": "还行"}
{"content": "我的专硕论文要是能成，军功章里有你一半。", "marks": "力荐"}
{"content": "覆盖全部，深度到位，例子翔实", "marks": "推荐"}
{"content": "内容简洁，概念清晰，大家风范", "marks": "力荐"}
{"content": "很全面，但是证明步骤不够详细", "marks": "推荐"}
{"content": "一直没看到过很好的机器学习的教科书，周老师的这本书填补了空白，周老师本身就是中国机器学习学术界在世界的代表，这本书系统地梳理机器学习领域的发展和重要的算法和知识，是一本难得的入门书籍，即使是科研工作者读一遍书也会有很多新的感受，十分推荐！", "marks": "推荐"}
{"content": "决策树那部分讲得超详细，有具体的数值可以手算一遍，难度比JiaweiHan的低很多", "marks": "力荐"}
{"content": "讲的思路清楚，简单易懂。", "marks": "力荐"}
{"content": "基础太薄弱了。前面几章还可以，后面就越来越云里雾里。这种书，应该在图书管里，一边看，一边查资料。", "marks": "推荐"}
{"content": "广度足够，深度尚可；内容描述上有些简略。", "marks": "推荐"}
{"content": "作者在国内机器学习领域算是数得上的，序里面写的很清楚，人家就是入门教材，希望看完就一通百通的还需继续学习", "marks": "推荐"}
{"content": "有了最粗浅的基础再来看，梳理思路、拓展视野，获益良多", "marks": "力荐"}
{"content": "20170922: 机器学习的教科书，也是入门读物。第一遍，基础知识+经典通用方法，观其大略。", "marks": "推荐"}
{"content": "虚高", "marks": "较差"}
{"content": "算是机器学习最好的中文入门书了。可惜对神经网络这一块的介绍还是比较皮毛，包括对感知机这种基础分类器的介绍也只是给了一个框架。需要配合《统计学习方法》来更进一步理解算法的数学推导。", "marks": "力荐"}
{"content": "泛泛而谈，细节很少，细节很少", "marks": "推荐"}
{"content": "周老师的这本真心不适合入门，入门还是首推《An Introduction to Statistical Learning》", "marks": "推荐"}
{"content": "高深部分看不懂，算法一大堆，权当扫盲了，写的倒是很全。", "marks": "推荐"}
{"content": "一本关于西瓜的书", "marks": "力荐"}
{"content": "继续努力吧！", "marks": "力荐"}
{"content": "2017第88本，本书更多的介绍模型选择，辅以数据分析及挖掘的工作流更加，未来可常伴左右直至实现多数应用。", "marks": "力荐"}
{"content": "挑西瓜作为主要场景，很翔实的实例、推导、演示。比较浅显易懂。读过前言才发现是给本科生的教材，汗。完整看完全书，除去略过的公司推导，对SVM略模糊，其他算法主要思路都能消化。需要反复翻。", "marks": "力荐"}
{"content": "为准备DeepMind面试花了两天时间读过，细节处没有细推，整体结构规划得很合理，各章节的内在联系比较紧密，极少突兀之处。另：周老师文采很好。", "marks": "力荐"}
{"content": "M", "marks": "还行"}
{"content": "讲解很容易理解，今年又重读了一遍", "marks": "推荐"}
{"content": "作为引导、梳理", "marks": "力荐"}
{"content": "看到19%，看不下去了", "marks": "较差"}
{"content": "后几章还得延伸读一些相关的书", "marks": "力荐"}
{"content": "这本书值得一读，可以留着当宝典", "marks": "力荐"}
{"content": "很多跳过了", "marks": "还行"}
{"content": "内容很全，就是有些太简练了，", "marks": "推荐"}
{"content": "数学全忘了！", "marks": "力荐"}
{"content": "几章看不懂一点，几章一点看不懂。作为提纲很好，对于数学忘光的人来说就太吃力了。机器学习从入门到放弃。", "marks": "还行"}
{"content": "简明扼要", "marks": "推荐"}
{"content": "偶然翻的LP的博士在啃的书，近几年断断续续在了解这个领域，对机器的前景有点不寒而栗。", "marks": "推荐"}
{"content": "要好好学数学呐，太多数学公式了，心塞。", "marks": "推荐"}
{"content": "果真是一本懂的就懂，不懂的还是不懂的书。入门者就别看这本书了。", "marks": "还行"}
{"content": "跳过了一些章节后半部分比较晦涩的东西：SVM，计算理论，图半监督，概率图推断和归纳逻辑。\n智商和心境有限，歇一段时间再来填坑。", "marks": "推荐"}
{"content": "总结性文章。。图16，q learning和sarsa那里是不是有点问题", "marks": "推荐"}
{"content": "CS229-Python 语言构建机器学习系统-西瓜书-机器学习实战-统计学习方法", "marks": "力荐"}
{"content": "还不错，只是很粗略地看了一遍。", "marks": "推荐"}
{"content": "大牛的书.....\n慢慢看吧，一遍真不懂\n有时间来做个笔记", "marks": "推荐"}
{"content": "实在太貌美于是抱回了家……印刷精良，排版上乘，纸张优质……还看到很多spss里用了无数次却不知道是啥的处理方法……", "marks": "推荐"}
{"content": "看完想吃🍉西瓜了", "marks": "推荐"}
{"content": "面面俱到，适合把握全局", "marks": "力荐"}
{"content": "觉得一般吧，部分地方讲解不是很清楚", "marks": "推荐"}
{"content": "一本非常适合国人的机器学习教程，写的非常清楚！不像一些书非常的冗余。例子举得也比较好！", "marks": "力荐"}
{"content": "概要性，适合按图索骥。", "marks": "推荐"}
{"content": "先打好基础吧，再来学", "marks": "还行"}
{"content": "根蒂蜷缩、脐部凹陷、色泽青绿的西瓜是好瓜，大家记住了没？CS229的讲义很好，讲的很透彻，好多看西瓜书不是很明白，配合讲义就看懂了。", "marks": "力荐"}
{"content": "西瓜书，很好的入门书籍，全面而且好懂，想深入的可以仔细看公式，只想了解的也可以快速过，真正的深入浅出啊。", "marks": "力荐"}
{"content": "看完ESL再看这本要轻松不少，当初真应该拿这本入门的，不过先读完ESL倒是让我对读英文文献更轻松了。中文书读起来还是要舒服一些，不过作者是学计算机的，有些符号用得我不是很舒服。总之是一本很值得一看的书。\n以后应该不会专门去读机器学习“大全”类的书了", "marks": "力荐"}
{"content": "中级入门必备吧！过了一遍，概率图和逆强化学习略微没看懂，有时间看第二遍！", "marks": "力荐"}
{"content": "西瓜的ML之旅，适合夏天阅读。", "marks": "力荐"}
{"content": "和李航的书相比在方法层面缺少大局观，但讲得更多更具体。推荐两本书结合起来看。", "marks": "推荐"}
{"content": "周老师文笔很好，解释的也很清楚", "marks": "力荐"}
{"content": "数学太多，难得读下去，就随意看了一下", "marks": "还行"}
{"content": "用精简的文字和公式推导，从方法论上科普了许多机器学习的方法，信息量挺大，需要一定的知识储备。我个人印象最深的是神经网络、集成学习、强化学习三章，总算明白了个所以然……", "marks": "力荐"}
{"content": "读得很开心。发现本科时概率论的知识几乎没有忘！", "marks": "力荐"}
{"content": "确实很适合入门", "marks": "推荐"}
{"content": "非科班出身表示真的不适合自学，强行啃一遍。", "marks": "推荐"}
{"content": "深入浅出的西瓜书", "marks": "力荐"}
{"content": "果然不会写作的科学家不是好老师；绝知此事要躬行，要走心。", "marks": "力荐"}
{"content": "有幸在出版前读过draft，可以说是国内机器学习最好的教材，讲解十分详细，读起来非常有收获。参考资料可见此书的主页http://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/MLbook2016.htm", "marks": "力荐"}
{"content": "读完就算将将入门吧，不要想太多。理论比较多，要应用到实践还请继续看其他书和材料。", "marks": "推荐"}
{"content": "周老师的书写的浅显易懂，涉及到内容很广，是机器学习入门学习的好书。", "marks": "力荐"}
{"content": "有些句子感觉读起来很别扭啊。。。。比如：\n\nP67. “再缩放的思想虽简单，但实际操作却并不平凡，主要因为\"训练集是真实\n样本总体的无偏采样\"这个假设往往并不成立”\nP67 “这在通常条件下是 NP 难问题”\n感觉部分像翻译的，莫非有学生写的？（纯基于特征的猜测。。。）\n后续再补充。。。", "marks": "还行"}
{"content": "拿来当入门书仿佛太难了…", "marks": "推荐"}
{"content": "老周终于出书了，作为机器学习一线大牛，大作值得一看。喜欢。", "marks": "力荐"}
{"content": "浅显易懂", "marks": "力荐"}
{"content": "迄今为止看到的最好的一本中文机器学习教材；覆盖非常全面，还介绍了很多书没介绍的一些变式；论证严谨，后面的参考文献非常实用。\n缺少结合具体事件的例子论述，以数学描述为主，非常适合有一定学术基础的人入门机器学习。", "marks": "力荐"}
{"content": "自古南大出牛人", "marks": "力荐"}
{"content": "为了准备面试也是一个星期预习完，，", "marks": "力荐"}
{"content": "机器学习重要的算法差不多都囊括了，通过一个西瓜主题贯穿全书，只可惜看的有些匆忙，很多数学公式推导没有自己去求证，二刷好好细品。", "marks": "力荐"}
{"content": "读不明白，什么时候再看一遍应该会好点", "marks": "力荐"}
{"content": "学院派风格明显。", "marks": "很差"}
{"content": "作为一本自学书来说它是不合格的，因为知识密度很大，许多公式都没有具体解释直接座位结论放上去，看得云里雾里。但作为字典应该是个不错的选择。", "marks": "还行"}
{"content": "在国内搞data mining和machine learning必读。可以当教材，也可以当参考书。但是搞data mining也不存在一本书打天下的情况，还是要适当搭配其它书才是。如果能自己亲手将书中的算法实现一遍，更是极好的。", "marks": "力荐"}
{"content": "公式推导有些难", "marks": "还行"}
{"content": "适合成为“我的第一本机器学习书”，作者是国内该领域最知名的教授之一。\n偏重于基础概念的介绍，公式的推导。\n举例和封面的西瓜很清新。", "marks": "推荐"}
{"content": "习题比较少", "marks": "力荐"}
{"content": "大致翻了下，目前只详细看了第8章集成学习，感觉还不错，不由得拿李航的书来比较。（只谈谈我目前看到过的几点，仅供参考）\n①内容方面，李的书要少于周的书，周写的内容更多一些。\n②由于只看了第八章，两者关于adaboost的公式讲解都差不多，但是李航的书有例题，一步步的计算。周的书没有例子，但是有一些在相同数据集上不同参数的比较图。\n③周的书有个好处就是，行文中穿插了各个算法的来龙去脉，有点历史的感觉。\n④参考文献两本书都有，这点就不比较了。\n⑤最后一点，周的书比李航的书要厚许多，也是彩印，内容当然也要涵盖很多，但是不能说周的书是包含了李航的书，我的建议是两本都可以看看，都是不错的读物。", "marks": "推荐"}
{"content": "内容晦涩，非想象中易读，略显啰嗦", "marks": "还行"}
{"content": "西瓜书名不虚传，算得上深入浅出了。不过数学部分有一些地方还是没有很清楚，不过不排除是自己数学已经忘光了。看附录可以重新复习线代和微积分了，哈哈哈哈。", "marks": "力荐"}
{"content": "建议像国外教材那样，先结合小例子说明直观思想，再给公式。这样公式给的水到渠成。", "marks": "推荐"}
{"content": "如果不深究里面的细节和公式，还是很适合当入门读物的，有些算法的描述和公式的推导过于简洁，只有参考外部资料才能理解。", "marks": "推荐"}
{"content": "比较全面，但是还是写的有点拗口，不够生动。", "marks": "推荐"}
{"content": "感觉涵盖的面还可以 入门教程也不需要有太详细的数学过程", "marks": "推荐"}
{"content": "通俗易懂，适合初学者。部分公式不简洁，符合学习那一部分感觉没有《人工智能--复杂问题求解的结构和策略》写的易懂。总体还是来说还是挺好的，国内教科书也算经典吧。", "marks": "力荐"}
{"content": "优点：涉及机器学习的各个方向\n缺点：讲的不详细", "marks": "还行"}
{"content": "入门经典, 比 a probabilistic approach 好多了", "marks": "力荐"}
{"content": "阅读的第一本中文机器学习教材，粗略地翻完了，对于喜欢机器学习应用工程方面的我来说 十分对胃口。", "marks": "力荐"}
{"content": "在拼学历的行当，唯有不断学习与实战才有赢的概率", "marks": "推荐"}
{"content": "一贯的翻译的太烂 我又懒得看原版...", "marks": "还行"}
{"content": "入门书籍", "marks": "还行"}
{"content": "还没看完，不过不错，让我完成了入门", "marks": "力荐"}
{"content": "工欲善其事，必先利其器。学习python已有二年余载，然而这本书还是相当有营养。还要整理一下笔记~", "marks": "推荐"}
{"content": "例子的设计和排版再加强一点就更好了～", "marks": "推荐"}
{"content": "差不多用三天过了一遍，几乎每条都遇到过，需要时间的积累才能都遇全，有收获", "marks": "力荐"}
{"content": "很赞，很多Python的高级用法我也是读了这本书才知道的", "marks": "力荐"}
{"content": "比用啥查啥更进一步，适合实战。还没看完先标一个", "marks": "力荐"}
{"content": "比较赞，有时候看别人的代码只是知其然，一些地方可以让你做到知其所以然。\n自己水平还不是很够，有些东西没有用到过所以看见也没什么感受。所以这是一本推荐常来读一下的书~", "marks": "力荐"}
{"content": "好书，不过3，4，5章没能完全消化，需要以后再看", "marks": "推荐"}
{"content": "翻译得也不错", "marks": "力荐"}
{"content": "相比Effective Java，质量差了不少", "marks": "还行"}
{"content": "收获很多啊", "marks": "力荐"}
{"content": "OOP 的部分和元类的钩子比较好", "marks": "还行"}
{"content": "非常好的进阶书，以场景为背景讲述知识点，更加容易接受", "marks": "力荐"}
{"content": "目前能力只能看懂前两章，还是很有收获的！尤其是unicode与utf8编码的转换那块，简直是解决了前些日子遇到的一个大坑！后面的几章：类的部分目前没有明确的工程需求，并发那块计算机基础知识太渣。前路漫漫呀~\n另外我也真是得开看看python3了", "marks": "推荐"}
{"content": "还好，每次读这种书都有原来可以这么玩，到这种感受也只有在踩过坑的时候才能理解。看到的一些技巧在没踩过坑的时候根本想不起来。", "marks": "推荐"}
{"content": "分8章 59个主题讲述了python的使用技巧，作为一个重度使用Python两年的用户，从其中也能学到不少东西，而且书中内容都是实际工作中能经常使用到的内容，很值得一读", "marks": "力荐"}
{"content": "国内安心写书的人好少，写的书也觉得作者缺少写作水平~", "marks": "推荐"}
{"content": "适合有一定python基础的人读，200多页的书，涉及python的方方面面，读完之后收获很多~", "marks": "推荐"}
{"content": "1/4建议并不认同，1/4建议有更好的解决方案，1/4并没啥软用（凑篇幅的嫌疑），1/4建议很赞", "marks": "力荐"}
{"content": "还行，对于有基础的人来说相当于不错的进阶书籍。里面的一些奇技淫巧还是比较赞。", "marks": "力荐"}
{"content": "为什么不把代码写全？ 出版社太没有诚意，太垃圾的出版社。。。", "marks": "很差"}
{"content": "不错的一本小书，最近python写得多花了两天看了一下，对提升代码质量和工作质量还挺有帮助的。", "marks": "推荐"}
{"content": "我看过了我看过了我看过了！", "marks": "力荐"}
{"content": "很好的一本进阶书籍，对于python工作者来说可以提高平时的开发效率。", "marks": "力荐"}
{"content": "非常有意思的书，oop和元编程值得好好看看", "marks": "力荐"}
{"content": "Python进阶启蒙书", "marks": "推荐"}
{"content": "python的进阶书，讲的东西有深度但挺好懂的，虽然看完了一遍了，不过偶尔我还是会翻相关知识点", "marks": "力荐"}
{"content": "在把简单道理复杂化，让正常人类无法理解方面，本书相当成功", "marks": "较差"}
{"content": "虽然刚入手时乍一看觉得繁琐不知所云，但慢慢耐着性子读完之后，对常用数据结构有了更深一层的理解，常见的算法也能入门。对于我这种刚刚学会用python的外行来说，比起市面上满是别的语言实现的算法书，这本非常好用", "marks": "力荐"}
{"content": "完美还原了中国老式教材的混乱，晦涩，讲解生硬，详略不清，抓不住重点，简单问题复杂化·······\n", "marks": "很差"}
{"content": "还行吧，把重要的基础算法和数据结构都过了一遍。但是略过的内容也不少，文字描述晦涩难懂，还好有示例代码，但是代码又存在部分谬误（至少有三处错误，两处明显可更优化的写法）。", "marks": "还行"}
{"content": "不错。只是绪论部分会把很多人都吓跑吧", "marks": "推荐"}
{"content": "  在把简单道理复杂化，让正常人类无法理解方面，本书相当成功；\n   完美还原了中国老式教材的混乱，晦涩，讲解生硬，详略不清，抓不住重点，简单问题复杂化·······\n", "marks": "很差"}
{"content": "代码不写全是什么鬼啊\n", "marks": "力荐"}
{"content": "和数据结构与算法分析一起看的，算是数构的启蒙书，但是当初被python面对对象的高级用法整的酸爽", "marks": "还行"}
{"content": "裘宗燕教授继编译原理后的又一良心力作", "marks": "力荐"}
{"content": "虽然讲的挺好...但是就不能把代码给贴全了吗..", "marks": "较差"}
{"content": "这么垃圾的书还有8.1分？？", "marks": "很差"}
{"content": "非常实用，符合国人的思维和学习习惯。正在读～", "marks": "力荐"}
{"content": "python代码不能写全吗？垃圾的机械工业出版社，垃圾的编辑，垃圾的出版社", "marks": "很差"}
{"content": "写的不算特别简单明了，文字太多 。感觉一般。", "marks": "还行"}
{"content": "个人觉得写的不错，虽然一开始 字号行距厚度令人望而生畏，但是细看下来，作者写的很用心，很规范。而且对于python来说讲数据结构的汉语书仅此一本", "marks": "推荐"}
{"content": "从线性表，到字符串，栈和列队，二叉树，图，每一章的逻辑性都比较好，基本都是抛出问题-分析问题-解决问题的模式，对于读者理解每一种数据结构有相当大的帮助，或许绪论部分有些无聊，但是绪论这种东西，把后面的内容看完之后再来回顾，绝对会发现更多的东西。总的来说非常适合将Python作为第一门编程语言的人来学习数据结构和算法的。", "marks": "力荐"}
{"content": "内容还是相当不错的 认真看书做题编码能学到很多  \n相对来说还是有难度的 python基础一定要好 需要耐心去做练习", "marks": "力荐"}
{"content": "还行吧，看起来太费劲，程序一段一段的，讲的又太专业，完全可以写的稍微随意一点，这样理解起来也容易。\n\n还有一个问题就是，虽然是py写出来的，但是能明显感觉这些算法都是有很强的c的特色，也就是说很多python独有的特点并没有很好的利用，也没说明原因。当然了，这只是个人浅见，不知对错。\n\n总之，书是好书，好好读一定有收获。\n但是这种距离感，也确实考验人的耐力和毅力。", "marks": "还行"}
{"content": "知识点讲解时语言不够透彻，感觉作者技术还行但语文基础太差。。看得真心累。不推荐。", "marks": "很差"}
{"content": "晦涩难懂，佶屈聱牙，逻辑混乱，尽是废话，不知道作者凭什么当的清华教授", "marks": "很差"}
{"content": "自己是要在java一路不回头？！！我只想好好学习😂。更加细致了开头关于分布式\n2017.8更 没读完 项目结束啦", "marks": "推荐"}
{"content": "感觉解读思路非常不错，值得一读", "marks": "推荐"}
{"content": "十分混乱的一本书…单步解释了源码…所以，然后呢？", "marks": "较差"}
{"content": "入门基础", "marks": "推荐"}
{"content": "讲解得还是不错的,跟着思路看了HandlerMapping HandlerAdapter的源码", "marks": "推荐"}
{"content": "很赞，前几章讲基础的也特别棒。", "marks": "力荐"}
{"content": "思路清晰，结构安排合理，前13章必看，其他组件如果平时用不到了解个大概就可以了。", "marks": "推荐"}
{"content": "写的不错，对于SpringMVC的有了更深的了解", "marks": "力荐"}
{"content": "挺不错的一本书，值得一读，不过感觉讲的比较浅，好像是博客整合而成是的，组件的分析思路不错，不过mvc框架设计和实现本身就不难，有兴趣的话可以自己造个轮子。", "marks": "推荐"}
{"content": "一本讲Spring MVC的书，从第八章才开始Spring MVC，前几章还讲的是CS，BS，各种网络协议，还有DNS配置，这些东西要写都能写本书啊，一笔带过除了占页数想不到还有其他什么用处。", "marks": "较差"}
{"content": "粗制滥造，东拼西凑。看目录就知道，不论重要性，通通一两页，面面俱到面面稀松。", "marks": "很差"}
{"content": "第一次看源码分析的书，思路和我预想的差不多，但是自己基础不牢，觉得要回去先补补spring和servlet.然后可以再看第二遍的书", "marks": "推荐"}
{"content": "从spring3.6源码撸起，注意，本书只讲了mvc部分的源码，像beanfactory，aop等内容没有。不过mvc的这一部分说的比较透，非常适合初学者进阶阅读。", "marks": "推荐"}
{"content": "这本书很好", "marks": "推荐"}
{"content": "还是叫做python进阶更好，而且这书抢钱啊，这么贵", "marks": "还行"}
{"content": "Violent Python中文版，都是介绍python能做什么什么的，还不如直接去看代码呢", "marks": "还行"}
{"content": "挺有趣的，可以系统的学习一下大致网络安全问题的分类，但是主要是用linux系统的，所以……", "marks": "推荐"}
{"content": "有点儿看不懂啊", "marks": "较差"}
{"content": "之前大概看了看，以后再接着读吧。", "marks": "推荐"}
{"content": "中文版排版略差，校对很不细心……\n中文版定价79？谁给你们的信心？！", "marks": "较差"}
{"content": "介绍一些python黑客工具，还要一小段历史典故", "marks": "还行"}
{"content": "有点虚...", "marks": "还行"}
{"content": "像一个个blog教程的拼凑…", "marks": "较差"}
{"content": "很好的入门读物", "marks": "推荐"}
{"content": "科普了几个常用库", "marks": "推荐"}
{"content": "全靠库系列，一般般", "marks": "还行"}
{"content": "和python黑帽子有点相似，看了下电子版便放弃了纸质版的念头，介绍了几个库的用法和一些攻击思路，有些还不太实用。", "marks": "还行"}
{"content": "豆瓣评分很低，这本书对于中国的python有革命性的引导作用，爬虫对于python的功能来说是九牛一毛，", "marks": "力荐"}
{"content": "全书最精彩的地方就是序言！", "marks": "还行"}
{"content": "略坑。", "marks": "还行"}
{"content": "着实不推荐，工具书一类", "marks": "还行"}
{"content": "目录里面看起来很高端， 实际上内容很垃圾。    这本书总结一下就是用python实现自动化漏洞利用，  但是这本书的问题是：1.  它里面的漏洞都极其老旧，很多三四十年前的漏洞 想学习漏洞挖掘的话这本书没什么帮助，内容只会涉及已有漏洞的利用。   2. 里面的python代码水平一般般， 如果你为了学习python，那么找本其他python入门书会更合适一点。", "marks": "很差"}
{"content": "对于原理方面的东西基本没有讲，对于很多做法完全理解不了，于是又转去看攻击原理", "marks": "还行"}
{"content": "感觉买坑了...以为是砖头书。。。", "marks": "还行"}
{"content": "不错，写的很清晰，就像老师在你面前娓娓道来一样。而且给出了很全面得代码，适合自己动手练习。", "marks": "力荐"}
{"content": "在书店翻了一下，很薄的一本，虽然用了LaTeX排版，但是代码的字体看起来十分吃力。内容也很简略，没有作者说的那么神。国内已经有了一本很优秀的数据结构教材，恐怕很难被超越。", "marks": "还行"}
{"content": "首先 你需要有Bug会带来很多不好的影响 的意识，在工作中/生活中你才会对看到的现象提出问题", "marks": "推荐"}
{"content": "介绍了很多计算机的bug导致的失败或死亡的案例。对火星探索的那几段稀饭", "marks": "还行"}
{"content": "当故事书看，有点意思", "marks": "还行"}
{"content": "罗罗嗦嗦，扯了很多无关话题，而且最后一章结束的莫名其妙", "marks": "还行"}
{"content": "挺好的入门书籍。。。。", "marks": "推荐"}
{"content": "最好还是弄个PDF", "marks": "还行"}
{"content": "基本上大多数都是抄的机器学习实战的这本书的内容，改都懒得改一下，有些源代码下载了，还运行不了，我也懒得给你找bug，破书。", "marks": "很差"}
{"content": "我感觉这本书一点都不好", "marks": "较差"}
{"content": "就是抄袭，网页各处截，大部分抄机《器学习实战》，野鸡作者的书不要看不要买...", "marks": "很差"}
{"content": "具体问题具体看，以本书的入门及工程人员了解机器学习的定位来说，确实是很好的书籍了。", "marks": "力荐"}
{"content": "一翻书就看到一堆问题。5.1.6那章节，关于NP问题和图灵机，整个章节描述真的是胡说八道，要么是错的，要么没讲到重点，各种概念混淆。作者本身对计算复杂性理论连基本的入门都没达到，要么自己去补一补计算理论，要么让给其他人编写，放假在图书馆借了这么一本烂书，无语。", "marks": "很差"}
{"content": "实在太粗浅了，但凡有一点背景的人就完全完全不建议读，两三篇博客就能说清楚的内容能洋洋洒洒写一本书！还好原版不要钱。而且特别喜欢用一些乐队啊电影啊运动员啊举例子不了解的连一点intuition都没有，为啥就不能举点大家都知道的香蕉苹果大鸭梨的例子呢？！", "marks": "较差"}
{"content": "鉴于python水平和算法难度，改成'写给高中生的数据挖掘实践指南'比较合适", "marks": "还行"}
{"content": "浅显易懂，深入浅出。", "marks": "推荐"}
{"content": "非常通俗易懂，看完立即就能写出程序，就像很久以前看Head First Design Pattern一样的感觉。", "marks": "力荐"}
{"content": "习惯用字典代替矩阵", "marks": "还行"}
{"content": "快速了解", "marks": "还行"}
{"content": "图书馆借的，无用。", "marks": "很差"}
{"content": "说得很清楚。入门完全不错。", "marks": "力荐"}
{"content": "书很有趣 然而学渣并不适合这门课😂😂😂", "marks": "推荐"}
{"content": "这本书理论比较简单，书中错误较少，动手锻炼较多，如果每个代码都自己写出来，收获不少。总结：适合入门。", "marks": "推荐"}
{"content": "数据挖掘或是机器学习方面的入门书，如果想自己动手实现一个推荐系统的话，那么可以试试这本书，跟着里面的代码动手实现，感觉真的很棒。不涉及太深入的理论，对于大部分内容都是点到为止，当然是可以实现成可执行代码的程度。适合入门。\n\n典型的老外的写书风格，如果适应这种风格的话，可以试一试。，", "marks": "力荐"}
{"content": "语言很有亲和力，不论有没有数据挖掘或者写代码的经历都很适合读，不过毕竟是入门读物，涵盖的面很有限。", "marks": "力荐"}
{"content": "入门书 翻翻挺快的 有headfirst风格  适合没有经验的码农读", "marks": "推荐"}
{"content": "一本小众的书吧，不过对于初学者来说足够用了，这本书不是讲数据挖掘的理论，而是通过生活中的例子讲解了是数据挖掘，讲解了数据挖掘中常见的公式，而且通过python编程给出了源代码。公式的讲解不是从数学角度推理，演算，讲解的，而是从实用角度出发，通过例子，通过要解决的问题，一步步引出公式，使得公式非常容易接受和理解", "marks": "推荐"}
{"content": "风格类似head first，例题把概念解释得很清楚；排版再讲究一点作为入门书就圆满了。", "marks": "力荐"}
{"content": "睡前读物，非常适合入门！很好很不错，公式讲解详细，初中生都能看懂，读过后对于数据挖掘的基本概念和基本术语有很好的了解。", "marks": "推荐"}
{"content": "这本书值得打8分9分，内容浅显易懂，给算法不怎么好的前端人员一个非常不错的入门指导。读后意犹未尽，如果再深入一点相信会更好。", "marks": "推荐"}
{"content": "简单易懂，循序渐进。", "marks": "推荐"}
{"content": "内容简单，但是零基础的也看得懂。", "marks": "推荐"}
{"content": "一般。", "marks": "还行"}
{"content": "心好累，早知道有这本书就不用被迫看用Java实现的算法书了。", "marks": "推荐"}
{"content": "作为基础，常见数据结构和算法的入门很不错。数据结构少了AVL和红黑树的代码，算法主要集中于排序算法。", "marks": "推荐"}
{"content": "有些章节好，有些章节差，挑着看，当复习基础知识挺好。", "marks": "较差"}
{"content": "太简单了，不推荐学习过数据结构和算法的人在此处浪费时间。", "marks": "还行"}
{"content": "涉及了数组、队列、栈、链表、集合、散列表、二叉树、图这些基本的数据结构。。讲解得很清晰，对于前端开发非科班生学习数据结构比较有帮助。对科班生想学习JavaScript也应该是有帮助的。", "marks": "力荐"}
{"content": "如果能够更深入一些就好了", "marks": "推荐"}
{"content": "讲了基础的数据结构，适合数据结构和算法小白看看。存在一些错误，还是建议边看边敲，对照着《算法导论》和Sedgewick 的《算法》看", "marks": "推荐"}
{"content": "我默认这种名称都是高级内容了，但其实很初级。讲到中间还在讲数组。不过针对JavaScript而言，本身也没有高级特性，它的数据结构和算法也只能是转换一种形式而已。 ", "marks": "还行"}
{"content": "随便看看吧", "marks": "还行"}
{"content": "算是入门级的内容吧, 前面大部分都看得很愉快, 到最后面才感觉有点难度", "marks": "推荐"}
{"content": "简单易懂，数据结构入门必读", "marks": "推荐"}
{"content": "书里是基本数据结构的js实现，适合学js的小伙伴补数据结构的时候看", "marks": "力荐"}
{"content": "我的算法入门", "marks": "推荐"}
{"content": "读到最后一页才发现作者竟然是一位女性", "marks": "推荐"}
{"content": "没读过书，读这些书头真大", "marks": "推荐"}
{"content": "买阮一峰的es6送的一本书，计算机出生，对数据结构的基础是考过计算机三级和考研的数据结构，觉得书还是挺基础的，花了两个多星期的时间。", "marks": "力荐"}
{"content": "第一版小错误很多，对着勘误表，不影响阅读。适合我这种没接触过数据结构与算法的人学习，作者思路清晰，入门读者理解。", "marks": "推荐"}
{"content": "这本书其实挺不错的，能够快速掌握一些很基本的东西，写的也很清晰。比那本动物书的js算法要好。", "marks": "推荐"}
{"content": "说非常不错会不会暴露我的小白属性咩", "marks": "力荐"}
{"content": "两天读了一半，对初学者极其友好的一本书～", "marks": "力荐"}
{"content": "很多问题的引入都非常自然，从要处理什么问题出发", "marks": "推荐"}
{"content": "写的深入浅出，有必要的推导，直观的解释而且还不啰嗦。", "marks": "推荐"}
{"content": "图书馆无意找到的书，感觉写的挺好的\n", "marks": "力荐"}
{"content": "目前看到的一本讲最优化讲得最好的书，有理论有推导，还有例子。也不啰嗦，这点在老外的书中少见。已读完整数规划部分，理财必学。", "marks": "力荐"}
{"content": "几乎不需要太多专业知识就能读懂，涉及很广，适合入门。这本书是我认真阅读的逆向工程的第一本书~", "marks": "推荐"}
{"content": "搞软件安全的可以看看，介绍的好多工具听都没听过。。", "marks": "推荐"}
{"content": "通俗易懂，适合入门", "marks": "力荐"}
{"content": "小点心~", "marks": "力荐"}
{"content": "不深入，但面面俱到", "marks": "力荐"}
{"content": "要深度没深度，要广度没广度，这一行真的想干好必须读点大部头。", "marks": "较差"}
{"content": "一点趣都没有", "marks": "很差"}
{"content": "自己只能看懂部分代码，汇编一脸懵逼😔p122", "marks": "推荐"}
{"content": "咳咳咳，我把我所有没看懂的东西都归结于操作系统原因，，，，，这个书对win7不友好，，，，一点也不，大家可以跟我一样想法喔", "marks": "推荐"}
{"content": "这翻译……", "marks": "较差"}
{"content": "原版没问题，翻译极烂！推荐原版", "marks": "很差"}
{"content": "该提到的都提到了。。。", "marks": "推荐"}
{"content": "这翻译太糟糕了, 很多句子读着费劲。术语译法也不标准, 甚至前后都不一致。", "marks": "较差"}
{"content": "讲得比较全面，但是都不深。\n要是原来没有接触过并发程序设计可能会有点吃力吧。", "marks": "推荐"}
{"content": "狗屎一样的翻译", "marks": "较差"}
{"content": "一本面试复习大纲，过一遍还是挺有用的", "marks": "还行"}
{"content": "这本书太可怕了，很多地方题都没有，尽然在分析如何选择ABCD四项，漏洞百出！！！", "marks": "很差"}
{"content": "其实我想打负分。", "marks": "很差"}
{"content": "到处都是错误，简直误人子弟", "marks": "很差"}
{"content": "到处都是错。。有些题感觉太偏面试基本不会问到", "marks": "较差"}
{"content": "这本书明显的错误很多。", "marks": "较差"}
{"content": "到处都是错，甚至不是一本认真校对过的书，无语", "marks": "还行"}
{"content": "书里的面试题没啥价值。但是看书使我更容易深入思考，挖掘出了很多模糊的知识点。书的提纲还是不错的，列出了面试需要具备的技能。", "marks": "还行"}
{"content": "新手突击用", "marks": "还行"}
{"content": "比较简单系统地整理了一些面试题，也有一些确实比较常见，适合新手或者基础比较差的读者全面了解一下大概知识，深度不够，而且有很多错误。", "marks": "还行"}
{"content": "下了pdf,就顺手翻了翻.都是浅显的知识,例子也很陈旧,毕竟到第四版了,跟不上时代了...", "marks": "较差"}
{"content": "可以做复习基础知识点用,题不多.", "marks": "推荐"}
{"content": "上面内容极多，然而都过去浅泛毫无实际意义，而且其中很多写代码例子给出的都是答案都是错的，据我本人亲手验证的已发现不少于5处，这本书对于应届生求职确实有一定的帮助，当更多的是一种误导，请求作者认真核对答案后再重新出版。", "marks": "较差"}
{"content": "很多题目的答案是错的，连试题解析也是有错的！大失所望！发邮件询问也没见回复。\n浪费钱，还害得差点记住错误的知识点。\n要不是自己有分析、动手实践题目，真是被坑死！", "marks": "很差"}
{"content": "没太仔细看，内容上偏应用，书后的 matlab 代码是精髓。", "marks": "推荐"}
{"content": "一本以热门应用话题引出内在概率知识的进阶版计算技术数学读本。开篇话题深入浅出比较亮眼，后续借各个课题将概率和随机过程理论夹带其中讲解，突出“应用”之意，但未免不连续之瑕。其中简明的信息熵推导，倒是小有意思。", "marks": "还行"}
{"content": "对docker背后的原理讲解关键点解说得不错，就是docker发展有点快，本书时效性较短", "marks": "推荐"}
{"content": "从底层原理讲到实践，到大规模使用时可以考虑采用的各种技术方案和架构，以及相互间的区别，同时具备广和精的好书，入门或上手都值得一读。", "marks": "力荐"}
{"content": "不错的入门书", "marks": "推荐"}
{"content": "介绍了很多内核实现细节", "marks": "力荐"}
{"content": "对初学者并不算友好，源码分析的部分也太粗糙，读不下去回头再看吧。", "marks": "还行"}
{"content": "看了一遍之后觉得熟读深入理解计算机系统真是太必要了 对于计算机网络和计算机系统都玩的很 6666 当然 表面的玩一玩 docker 还是门槛很低的", "marks": "推荐"}
{"content": "这本对网络和kubernetes的讲解都非常棒，五星", "marks": "力荐"}
{"content": "目前国内最深入的一本介绍Docker的书，部分内容超出我所需了解的程度，推荐给需要对Docker进行深入学习的同学。", "marks": "推荐"}
{"content": "三星半。偷懒专用。kubernetes潜力股。", "marks": "还行"}
{"content": "Good book to start with Docker.", "marks": "推荐"}
{"content": "讲的挺深的，不适合初学者", "marks": "推荐"}
{"content": "就实现“原理”而言，不如另一本docker源码分析详尽，此书多了一些应用经验，比如docker结合k18s，比如结合GRE组建跨数据中心容器网络等。这版确实老了点，貌似有新版，在swarm、编排上介绍并不多，也不深入。", "marks": "还行"}
{"content": "浙大SEL实验室确实是国内少有的理论和实践都很强的团队，书的内容也是很踏实用心的原创。。。已经远远超过我目前所需的知识，强烈推荐给各位DevOps。。。", "marks": "力荐"}
{"content": "内容很深，很赞", "marks": "推荐"}
{"content": "从理论到实践都有比较详细的描述，即使docker及其生态发展非常迅速，本书仍然有很好的参考价值。", "marks": "力荐"}
{"content": "目前docker方面写得最好的中文书籍了", "marks": "力荐"}
{"content": "原理和设计说的还挺容易懂的，例子也比较多，但总感觉有些地方缺少一点总结。。书的结构整体上还行，但落到每章就有点乱。。作为对容器有一定操作经验的，入门还不错的", "marks": "力荐"}
{"content": "不错，有点深，but Docker更新也蛮快，etcd部分看得最久，其余没怎么看。", "marks": "推荐"}
{"content": "Docker入门，前面不错，关于容器、网络、kubernetes都讲的不错。不过到后面有好多语言上的小错误。", "marks": "推荐"}
{"content": "从入门到熟练。", "marks": "推荐"}
{"content": "不错的一本介绍docker与kubernetes技术的书籍，就是第一版里面的版本及内通有些过时，但是系统结构的介绍了整个技术的框架", "marks": "推荐"}
{"content": "虽然，容器项目没有上线，但是还是得感谢一下，让我在虚拟化和弹性计算领域一开始就比别人眼界更开阔。", "marks": "推荐"}
{"content": "之前读过，记录。", "marks": "推荐"}
{"content": "写得非常好的一本书，可以说是了解容器的首选。", "marks": "力荐"}
{"content": "满分。对初学者有些难度，但是全是干货。", "marks": "力荐"}
{"content": "很容易看懂，而且不用死记硬背，并且提供了理解概率论的新方法。理工科还是多看国外的书吧。", "marks": "力荐"}
{"content": "1.概率是面积。2.协方差是椭圆。感觉这样的传授方法其实挺好。不过并未深入，也许高中学统计时候作辅导书，比国内的习题集要容易上手吧。", "marks": "推荐"}
{"content": "摊手，我觉得我还是应该去看正经教材", "marks": "还行"}
{"content": "拿来预习下学期的课应该绰绰有余了\n这学期学完概率论了，果然还是这本更深入，\n不过后面看的有点迷，反而看不懂了。\n教材跟这本书思维差异很大，一起看还真有压力", "marks": "推荐"}
{"content": "入门好书", "marks": "力荐"}
{"content": "很好的入门书", "marks": "力荐"}
{"content": "标题党，面向的并非是程序员。并且讲的并不深入浅出", "marks": "较差"}
{"content": "从上帝视角来理解概率问题，是一个有趣的方法。但与程序结合不如第一部紧密了，到后来抽象得有些看不下去……", "marks": "推荐"}
{"content": "太深", "marks": "较差"}
{"content": "作为非统计专业同学的基础课教程应该很不错。刚学完数理统计于是把这本书过了一遍，感觉整体难度可以，思想性中上，涉及到分析的内容时而严谨（多数需要作为进一步讨论的基础的内容）时而一笔带过（特别是多维变量、估计和检验的部分，有可能是我这部分比较弱所以感觉比较明显）。应该会当工具书留着。", "marks": "还行"}
{"content": "直观易懂。看这本书以前，还是要先学线性代数，可以看作者的线性代数书，又是一个坑哈哈。因为用图解释概率，现在看这本书学概率，真是比以前看那些教科书幸福多了！", "marks": "力荐"}
{"content": "辅助学习教材，图形化讲解，很多应用。学校教材为 《数理统计与数据分析》", "marks": "推荐"}
{"content": "我能说我是去年为了考研复习才买的这本吗，读来生动有趣有助于理解。不过并不能完全覆盖考研的内容，多维随机变量这部分讲得比较少。", "marks": "推荐"}
{"content": "入门好书，重新温故了一下当年没学好的概率统计", "marks": "力荐"}
{"content": "这本书说是面向无基础的人，的确如此。╮（╯＿╰）╭对于有高等数学基础的同学建议选择一本专业教材，对概念的解释比较清楚，这本书里讲的太乱", "marks": "较差"}
{"content": "有趣的概率论教材。", "marks": "推荐"}
{"content": "这年头真是什么阿猫阿狗都敢出书了，名字还取的这么不要脸，编程之法，呵呵哒。作者一个专科毕业生，毫无工业界经验，去pps实习都不能转正，还有脸出书。说一句纸上谈兵，眼高手低绝不为过。至于机器学习就更搞笑了，作者那完全就是停留在理论水平，而且还是数学比较渣的理论水平。有看过他写的支持向量机通俗导论的博文的，应该能发现里面一堆错误，各种冗长。奉劝初学者不要迷信这种伪大神，还是啃经典书籍吧。", "marks": "很差"}
{"content": "我从未见过如此厚颜无耻之人", "marks": "很差"}
{"content": "买回来放宿舍厕所了。", "marks": "很差"}
{"content": "叫“法”叫的太大了，垃圾书。", "marks": "很差"}
{"content": "对不起书名，如果不叫这个名字，老老实实叫面试经，可以打4分。", "marks": "较差"}
{"content": "我觉得我的智商没问题---那就是这本书的表达问题了.", "marks": "很差"}
{"content": "什么垃圾！能不能tm好好学学高中和大学基础课再来写书！！！ 祖师爷好像没赏您吃这碗饭，coding需要天分，趁早干点别的，真心的。这行真不是卖力气就行。", "marks": "很差"}
{"content": "呵呵", "marks": "很差"}
{"content": "东拼西凑的东西，也好意思拿出来", "marks": "很差"}
{"content": "东拼西奏，关键作者写代码能力还不行。", "marks": "很差"}
{"content": "基本是其他书籍的拼凑，关键是书名，假大空的感觉强烈", "marks": "很差"}
{"content": "为了爱与和平", "marks": "很差"}
{"content": "我只能说……这书更适合小白，但是要糊弄70%的校园网oj已经差不多够了。我自己是小白的时候也看过July的博客，买本书算是做个人情好了", "marks": "较差"}
{"content": "不是自己的东西，有几篇像直接照搬别人的文章", "marks": "较差"}
{"content": "连点程序都没有，净他妈扯淡", "marks": "很差"}
{"content": "我觉得如果没看过其他书的小白会被蒙住，但是如果认真推敲就会发现不忍直视得错误", "marks": "很差"}
{"content": "本身只是一本面试书，不要取这种假大空的书名。此外作者的文字能力真的很一般，一点也不通俗易懂", "marks": "较差"}
{"content": "自己打自己脸，之前说不会看还是看了，套路还是套路。", "marks": "还行"}
{"content": "只看过blog 查询起来其实蛮方便的 毕竟有时只是项目需求 不打算深入了解 但是客观的说 july对于算法的理解 非常的 怎么说 没入门呢 这如果真的如他说的努力 那只能说是祖师爷不赏饭吃了 学习算法 还是不要看这种书比较好 ", "marks": "较差"}
{"content": "浮躁", "marks": "很差"}
{"content": "这个题目起的太大了。结果书却非常浅。诸如很多，算法导论说，编程珠玑说，都是人家说。最后几个介绍海量数据处理的真是醉了。。要么不说要么说好行不行？说实在的，这本书百分之80是四处抄的吧？唯一不错的是课后习题还不错，虽然也是抄的，不过好歹比较全面。2星不谢了。", "marks": "较差"}
{"content": "呵呵哒", "marks": "很差"}
{"content": "我帮作者校对过书稿，结局是我不想读这本书～作者还是好好创业吧，给个友情星星", "marks": "较差"}
{"content": "连名字都不敢写出来，完全没有实际写代码经验的作者，看这书会折寿的啊", "marks": "很差"}
{"content": "我为差评续一秒", "marks": "很差"}
{"content": "《编程之法》这个名字起得太亮了，应该叫《忽悠之法——大专生教你如何迅速秒杀掉：99%的博士硕士》", "marks": "很差"}
{"content": "真的不能再吐糟了，为什么不早点来豆瓣看看评价。看了一半，至少发现七八个错误。很多关键的算法部分偏偏省略最关键的点，大段大段的抄论文原文，抄网上的解析，不会的网上搜不到的，直接就来一句：『那么请读者们思考一下，这是怎么得来的呢』，或者是不会的题，放在举一反三里，你特么好好看看到底是不是举一反三的！！！建议想通算法的，还是老老实实的啃算法书吧，面经什么的，看看面试金典，编程之美之类的都比这个强。", "marks": "很差"}
{"content": "渣！逻辑不清楚，很多东西没有讲清楚！！！！", "marks": "很差"}
{"content": "就这也好意思叫什么《编程之法》……", "marks": "很差"}
{"content": "书名言过其实，不如叫整理之法。不具备一定的CS功底，什么人都敢出书了", "marks": "很差"}
{"content": "专门去看了一下样章，结论就是这算是一种智商税读物吧……以及不少内容还有版权问题。", "marks": "较差"}
{"content": "不管怎样，希望不要人身攻击，可以就事论事，书里面有问题可以指出。", "marks": "还行"}
{"content": "看了个大概，灰常杂糅", "marks": "很差"}
{"content": "垃圾，讲不到点子上", "marks": "很差"}
{"content": "搬运工也出书？侵犯原创知识版权吧。", "marks": "很差"}
{"content": "太会忽悠了", "marks": "很差"}
{"content": "呵呵", "marks": "很差"}
{"content": "本科都没读过的人居然能写出这么牛逼的东西，膜拜", "marks": "很差"}
{"content": "呵呵哒呵呵哒", "marks": "很差"}
{"content": "打1星不代表2分，是0分……", "marks": "很差"}
{"content": "这本书确实不怎样，本来看了博客之后买的，回来连续看了两天，感觉讲的例题都很简单，而后面的举一反三有些难的确没有答案，只能对照着去百度。不推荐购买", "marks": "很差"}
{"content": "July的SVM一文不能不看？都是七拼八凑别人的，可拉倒吧！！！", "marks": "很差"}
{"content": "买了后悔死", "marks": "很差"}
{"content": "一星算多，白瞎我41", "marks": "很差"}
{"content": "我从未见过如此厚颜无耻之人", "marks": "很差"}
{"content": "东拼西凑，蜻蜓点水。盛名之下，其实难符。作者还是多用用心，踏踏实实的学点东西再来讲这个法那个法的吧。总之，买完之后非常非常后悔。", "marks": "很差"}
{"content": "有些讲解的不错", "marks": "推荐"}
{"content": "如果仅仅考虑工程应用而不是原理，我想其实这本书比大多数市面上的算法书其实更好", "marks": "推荐"}
{"content": "刷题！", "marks": "力荐"}
{"content": "太贵了", "marks": "较差"}
{"content": "刷题神书", "marks": "力荐"}
{"content": "题太多了……和剑指offer配合看较好，作为补充。", "marks": "还行"}
{"content": "还不错", "marks": "力荐"}
{"content": "看了左老师课程之后购买的。老师性情中人，讲解到位。不过算法还是需要自己多动手。刷题时经常拿这本书看看是很有益处的", "marks": "力荐"}
{"content": "动态规划是我见过讲的最好的，左神的视频也看过，算法讲的很容易理解", "marks": "力荐"}
{"content": "在读中，但是用java写的，我关于数据结构习惯思维还是c语言。总是看着看着想用c怎么实现呢？然后马上敲自己的狗头！这明明是java写的！只能在电脑上敲一遍代码来帮助理解（忧伤", "marks": "力荐"}
{"content": "已经读了一半了，写的真的不错， 如果能在代码的关键位置加些注释，那就更完美了， 给五星不犹豫", "marks": "力荐"}
{"content": "讲的很清楚", "marks": "力荐"}
{"content": "神书，好多面试题都能在这本书上找到原型", "marks": "力荐"}
{"content": "python的美啊，让人看了，觉得python真好。", "marks": "力荐"}
{"content": "入门之后，想提高语言技巧和知识的，可以好好读一下。通常我是不喜欢这种大篇幅的书的，不过作者是老师，文笔比较流畅，读起来也不累。作者本人阅历很深，功底很深。他旁征博引，引用文章信手拈来，大师也。", "marks": "力荐"}
{"content": "分门别类的讲解，目标是理解Python写出充分发挥Python优势和特点代码来！个人觉得很好，是一直是自己想要的一本书！兼顾Python3(3.4)和Python2(2.7)，重心是Python3。书的篇幅也不算小将近800面，可见虽然Python一直以易学易用著称，但要理解好Python其实Python并不是一门小语言。", "marks": "力荐"}
{"content": "很好的进阶书，覆盖了Python 3的所有新特性；对示例代码的讲解非常详细，每章末尾给出的参考文献也很棒。", "marks": "力荐"}
{"content": "比较高阶的python书籍", "marks": "推荐"}
{"content": "对于语言关键特性剖析到位，示例代码值得学习，Further Readings给出了更进一步的Reading Map。Great Book！", "marks": "力荐"}
{"content": "不是入门书，但是有一些基础之后再看可以学到许多tips", "marks": "力荐"}
{"content": "深度广度俱佳，举例与理论契合，补充材料丰富，文字通畅，读起来十分过瘾。唯一有点不喜欢的地方是 coroutine、GIL、asyncio 有很多小细节需要自己去抠，书里没法面面俱到。不过这三个主题本身就很鸡毛，能引人入门就很不错了～", "marks": "力荐"}
{"content": "看懂50%,　不过总算了解了type的多种含义。\n作者将ｐｙｔｈｏｎ那些华丽的黑膜法都介绍了一遍，不过我觉得they're for fun only. ", "marks": "力荐"}
{"content": "A masterpiece", "marks": "力荐"}
{"content": "作者是语言爱好者吧，开篇代码即能体会python之美。", "marks": "推荐"}
{"content": "几个月前，第一次看，当时的感觉是，作者在说什么？最近第二次读，才发现这本书的好。不适合初学者看。", "marks": "力荐"}
{"content": "大开眼界", "marks": "力荐"}
{"content": "可能是python进阶的最好书籍", "marks": "力荐"}
{"content": "make your python 666", "marks": "力荐"}
{"content": "内容很多，然而我并没有耐心仔细看", "marks": "推荐"}
{"content": "技术书籍被我当成cookbook了，哈哈。", "marks": "力荐"}
{"content": "Clear, Concise, and Effective", "marks": "力荐"}
{"content": "读完这本python基本就告别初级选手了", "marks": "力荐"}
{"content": "不错~", "marks": "力荐"}
{"content": "amazing", "marks": "力荐"}
{"content": "书写得深入浅出，值得阅读，体会和练习，Top Python books", "marks": "力荐"}
{"content": "好久没遇到读着很爽的技术类书籍了，这本就是。\n就像听一个老司机讲经历，你在边上情不自禁的喊666。", "marks": "力荐"}
{"content": "里面有些东东确实我不知道 🤗", "marks": "推荐"}
{"content": "Python领域最好的书了", "marks": "力荐"}
{"content": "python 高阶必备", "marks": "力荐"}
{"content": "这是一本神书", "marks": "力荐"}
{"content": "用一些例子详细讲述了python中一些语法的来龙去脉,非常值得一读.", "marks": "力荐"}
{"content": "先看着吧，希望能看完", "marks": "力荐"}
{"content": "看过最棒的python书", "marks": "力荐"}
{"content": "make your python 666", "marks": "力荐"}
{"content": "目前为止读过最好的 Python 中级书籍", "marks": "力荐"}
{"content": "神书, 读完后, 感觉 Python 真的美啊, 好多特性, 怎么以前自己就忽略了呢?", "marks": "力荐"}
{"content": "学习到了如果项目没有legacy，就直接上Python3", "marks": "力荐"}
{"content": "这本书其实不再是那么基础的东西了，对一些重要的库以及 Python 的语言特性深入阐述，总之很适合用来提高自己 Python 编写技能。这本书让我知道，Python 它并非想象中的那样简单，很值得啃一啃~", "marks": "推荐"}
{"content": "拖延症晚期", "marks": "推荐"}
{"content": "深入浅出", "marks": "力荐"}
{"content": "非常好!", "marks": "力荐"}
{"content": "读完此书, 感觉内力大增. Python进阶不可多得的一本好书. 力荐.", "marks": "力荐"}
{"content": "对Python进阶非常有用,用非常简单明了的方法把Python的特性讲解的非常清楚", "marks": "力荐"}
{"content": "深刻，详细，适合深入了解python特性", "marks": "力荐"}
{"content": "内容实在有深度、论述全面有广度，好书！深度、广度、实用性同时兼备，好书！", "marks": "力荐"}
{"content": "Python最佳进阶", "marks": "力荐"}
{"content": "深入浅出  非常不错！！", "marks": "力荐"}
{"content": "看过的质量最高的Python 书籍，pythonic ", "marks": "力荐"}
{"content": "惊艳", "marks": "力荐"}
{"content": "学Python唯一推荐看的书，然后就是官方文档和Tutorial", "marks": "力荐"}
{"content": "Python 进阶不二之选，讲的很清楚", "marks": "力荐"}
{"content": "介绍了各种pythonic的写法，看了之后发现自己以前根本就不会python……", "marks": "力荐"}
{"content": "0、不用那么多人来写序的，序就占了快十页纸；\n1、内容有点少，或许作者的意图就是让读者自己多思多想多动手，如果是这样那么花55块钱买这本书做什么；\n2、翻译不是学计算机的吧，能不能翻译的专业一些，这么薄薄一本书还用了好几个翻译，最后凑在一起，在敷衍读者么。\n感觉没作者前一本的质量了，呜呼。", "marks": "还行"}
{"content": "薄薄的一本书，一边读一边惊讶：我擦，python还能用来干这事", "marks": "力荐"}
{"content": "还行", "marks": "推荐"}
{"content": "菜鸟福音，改天试试arp放个毒", "marks": "还行"}
{"content": "可以了解下安全相关的python库", "marks": "推荐"}
{"content": "入门的好书", "marks": "力荐"}
{"content": "前几章可以说是计算机比较底层的代码编写，以前没接触过，还是蛮有意思的。 第7章剑走偏锋的用github作为木马模块的存放和加载场所，感觉以后可以在除木马外的其他地方用到。第8（PyHook库貌似没64版本）、第9（IE在win10下虽然有但是已经。。）、第10（系统提权感觉我不写木马的用不到）这几章没详细看、第11章代码注入有个例子还没试。 先mark一下。 最后吐槽一下文中的代码缩进。", "marks": "推荐"}
{"content": "各种想法不错，但是代码排版实在太差，所以给3星。", "marks": "还行"}
{"content": "尚可，供实习生阅读", "marks": "推荐"}
{"content": "内容浅显易懂，如果是刚入门的话，可以借鉴下思路。代码排版很差，本来就很薄的一本书，代码中还有大量的空行，给人一种凑页数，不认真的感觉。在我看来只是用了几个python的库而已，没什么长进，而且很多windows下的章节，对于企业安全来说用途不大。而且内容明显跟不上节奏，不推荐。", "marks": "还行"}
{"content": "排版乱，不很好操作", "marks": "还行"}
{"content": "还行，没那么差。对比了老的开发模型（Java + OO）和函数式模型（CQRS，我们一直使用但不知道叫什么的模型）。自嘲了 Java 黑了 Maven。最后给出了动静态语言的推荐和理由。主要还是用 Java 8 讲解的。当然，我自己还是更习惯从数据抽象，而不是对象抽象。", "marks": "还行"}
{"content": "英国办公室的大神，awayday时候听过他的session，很不错。", "marks": "还行"}
{"content": "前三章很受启发，后面几章很一般。", "marks": "推荐"}
{"content": "前几章还行，后面就有点泛泛而谈了。", "marks": "还行"}
{"content": "讲道理就是用来入门的", "marks": "推荐"}
{"content": "Java 8命令式到对象式到函数式，里面例子一目了然。关键是设计模式的进化论。", "marks": "力荐"}
{"content": "读了这本书，很有启发。", "marks": "力荐"}
{"content": "前面几章还不错，后面几章比较水。", "marks": "较差"}
{"content": "差了那么一口气。", "marks": "还行"}
{"content": "作者用groovy scala clojure java四种语言跟你讲什么是函数式，我觉得如果没有基础的话，更有可能让大家更难follow他", "marks": "推荐"}
{"content": "只说了一点函数编程术语，实现过程不讲，而是直接调用别的语言的实现，看了没啥收获。", "marks": "较差"}
{"content": "说得不透彻, 函数式编程的东西也说得不深入.", "marks": "还行"}
{"content": "对相关api有了新的了解，但其实那么多语言的范例并不是很必要，当然，因为我只熟java和Scala。", "marks": "推荐"}
{"content": "一直觉得讲函数式编程在于思想，而不在于用几种语言实现。书中更多的是用几种语言实现同一个特性，有点像语法对比。反而弱化了函数式思想的内容。", "marks": "还行"}
{"content": "函数式入门书，挺不错。你要是学了scala或者groovy，但是对函数式不太了解，看了这本书，会让你更加理解语言和其函数式特性。", "marks": "力荐"}
{"content": "函数式编程，弱化数据结构的设计，可以专注程序的逻辑。喜欢。。。", "marks": "推荐"}
{"content": "用了多种语言来介绍函数式编程特性，在不同语法之间来回切换，看到好累，还不如专门学一门纯粹些的函数式编程语言。而且感觉对于函数式编程的精妙之处表现得还不够。", "marks": "还行"}
{"content": "FP 入门读物", "marks": "还行"}
{"content": "在没啥FP实战经验的前提下看这本书，有点刻舟求剑的意味。话说Dietzler的Access定律说的真对。。。（第一本用kindle看完的书，mark下", "marks": "推荐"}
{"content": "作为前端，看这本书了解其他需要的函数式方案还是很不错的。但很多内容在js场景是不能用的，需要配合js版本的函数式书籍一起看", "marks": "推荐"}
{"content": "对比OO，过程式编程，讲述函式编程的思维。", "marks": "推荐"}
{"content": "感觉一般吧，内容浅显，概念一笔带过，不太深入", "marks": "推荐"}
{"content": "讲了一些基本的函数式编程概念在各个 JVM 语言上的实践，以实例来讲思维，一百多页的内容看到最后想总结的时候发现可能就一百多字的重点。", "marks": "推荐"}
{"content": "对函数式编程的思想讲解的挺深入浅出的", "marks": "推荐"}
{"content": "简单的入门书，很有启发，但东西不多", "marks": "推荐"}
{"content": "很棒的书，然而后面两章并没有看完。还算是很易懂的，例子也很多。", "marks": "推荐"}
{"content": "一本言简意赅的薄书，把一些基本原则讲了一下。", "marks": "推荐"}
{"content": "没看懂，，囧rz。。。", "marks": "较差"}
{"content": "对我这个学clojure有一段时间的人而言意义巨大。遇到的问题几乎都得到了一定的解答，不可多得的良品。", "marks": "力荐"}
{"content": "用三种语言讲了函数式编程，多少让人读着有些烦躁。 或许是我太急躁了。", "marks": "推荐"}
{"content": "读起来酣畅淋漓，不过阅读前需要事先对Groovy或Scala或Clojure有一定了解", "marks": "推荐"}
{"content": "很受启发！", "marks": "推荐"}
{"content": "看的英文原版，讲的挺到位的，比较基础。 关于函数式与命令式的思考方式。不过已经对scala有1年左右的学习经验，所以这本书并没有带来太多新的给我，讲的东西基本上都在学习scala的过程中通过各种博客，书籍掌握了", "marks": "推荐"}
{"content": "没太多体会，可能是还没有这方面的代码经验…", "marks": "还行"}
{"content": "非常值得推荐的一本书，通过jvm语言总结归纳出函数式的特点，对于学习scala、groovy都很有帮助", "marks": "力荐"}
{"content": "函数式编程之前只是听说，这本书主要就是介绍这种思想，对于实现每个都用了好几种编程语言来实现，可以很好的了解什么是函数式编程。粗读了两天，最大收获，了解了什么是函数式编程。", "marks": "推荐"}
{"content": "很浅显易懂，比如filter，map在不同语言的实现上的区别。\njava语言由于简单和设计上的问题，局限性还是过大了。", "marks": "推荐"}
{"content": "入门不错，介绍了FP的一些思想和概念。如果已经有了解过FP，花个半天也就能翻完了", "marks": "力荐"}
{"content": "看了之后收货很少.也许是因为之前写过不少Scala,Lisp的原因,换句话说,如果已经系统仔细地看过某个函数式语言的书,就用不着看这本书.", "marks": "较差"}
{"content": "水的一逼", "marks": "很差"}
{"content": "没买的还是表花钱买了，没有价值的入门书。关键定价还79，就只能给一个星了。", "marks": "很差"}
{"content": "毫无诚意的书，就是贴代码，基本的讲解都没有", "marks": "较差"}
{"content": "我只想说，居然没有用SpringMVC。。。SpringMVC可以简单好多。帮我理解CXF和SpringMVC。建议直接第三章开整。", "marks": "还行"}
{"content": "非常不错的一本介绍Java IoC和AOP的一本书，虽然书中配有大量代码，但也都算是实践性的，跟着做一遍的话对目前Java流行的Web框架会有更直观的理解。代码以上传Github", "marks": "推荐"}
{"content": "中间两章对理解 Spring 有很大的帮助，价值千金，适合想要进阶的初级开发者。其它部分太水了。", "marks": "还行"}
{"content": "请不要玷污“架构”这两个词", "marks": "很差"}
{"content": "代码挺全的", "marks": "推荐"}
{"content": "中间两章讲IOC和代理的很有帮助，对着代码敲一遍会有收获。整体太水，有几处错误。", "marks": "还行"}
{"content": "应该取名为：自己动手写框架", "marks": "推荐"}
{"content": "代码贴得太多，一样的代码还贴2遍，凑字数么?", "marks": "还行"}
{"content": "对准备研究框架的人来说，算是有不错的启发吧", "marks": "还行"}
{"content": "适合有有一定javaweb开发基础的人阅读。将web框架常用知识和框架脉络梳理了一遍。有收获有提升。遗憾在于对原理和技术细节的讲解不够深入详细。", "marks": "推荐"}
{"content": "写书最起码的态度就不行，全书贴代码，参考文献也不列。后两章更是不知所云。这大概是国内技术书籍作者的通病了。", "marks": "较差"}
{"content": "前两章讲非常基础的东西，中间两章讲框架实现，最后一章开始借用第三方包来封装去扩充自己的框架。全书狂贴代码有点充字数的嫌疑，还不如省去废话把中间两章讲的再细致一点。最后想说的是你连个demo都不给，自己在开源中国上的demo基于的smart是更加齐全的。你让我怎么玩？", "marks": "较差"}
{"content": "相当不错的一本书", "marks": "力荐"}
{"content": "Java Web框架涉及相关原理解析，容易上手和落地的架构入门书籍", "marks": "推荐"}
{"content": "代码太多了，讲解感觉不深入。", "marks": "还行"}
{"content": "读过。", "marks": "还行"}
{"content": "一本java自定义架构设计的入门书籍，有利于提高对java常用基本架构原理的理解，适合稍微有些java基础，但是有不太熟悉j2ee开发的同学。总体而言，还比较有趣。", "marks": "推荐"}
{"content": "入门书籍，写的很一般", "marks": "还行"}
{"content": "不是一般的垃圾", "marks": "很差"}
{"content": "挺好的，看完之后对spring框架有了更深的理解。浅显易懂，后面对AOP的讲解有点难。", "marks": "力荐"}
{"content": "第一眼看也是觉得代码太多，前面两章基本没看，直接从第三章开始看，看完还是有收获的，讲明一些设计的原因。价格确实是坑了点，不过刚好是活动买的。买贵了的话，就用知识无价安慰下自己吧。", "marks": "还行"}
{"content": "一直很好奇spring是怎么实现的,也很想自己写一个框架出来,才选择读的这本书.就像大多数人评价的那样.确实,代码太多.300多页的书,卖79块,确实是太贵了.一般技术书100页10块左右订价还算合理.贵就贵呗,确实,技术含量不高.我书了前3章,已经发现了,挺多的错误.写书这么不认真,真不知道,说啥好.", "marks": "很差"}
{"content": "感觉很好，新人值得一看。", "marks": "推荐"}
{"content": "对于理解Java web框架的原理确实有很大的帮助，缺点也很明显，基本全书就是贴代码，而且远远值不起79块，下个电子版看看是个不错的选择。", "marks": "还行"}
{"content": "一本blog整理收录的书籍，没有多深入，也不成体系，想起什么就写什么，jsonp、cxf、文件上传、shiro验证。。。但是看完之后，觉得很有所得。\n这本书最大的意义在于，帮助我理解了Spring。\n多少次看Spring源码都感觉无从下手，很多基础和概念，也不知道是如何实现的。这本书的框架，感觉是在“模仿”spring框架，正好让我理解了spring的原理和实现方法。Beanfactory、标签扫描，看完这本书，我觉得可以去看spring源码了。\n书中的一些想法和实现方式，确实值得去借鉴。有写框架的冲动。\n而且书中的操作步骤很详细，应该是整理blog的原因，连操作IDE的具体步骤都有，不知是不是在凑字数，不过正是我喜欢的风格。虽然有部分错误，和编排顺序的问题，不过还是值得一看的。", "marks": "推荐"}
{"content": "适合有一定好javaweb基础的人，作为框架入门书籍，涉及spring框架中各种实现的技术，能很好的拓展知识", "marks": "力荐"}
{"content": "数据结构是和算法息息相关的，这本书还是非常不错的。各种细节讲的比较到位。", "marks": "推荐"}
{"content": "实现数据结构的一本好书，比较基础实用", "marks": "推荐"}
{"content": "没有什么实质性内容，什么东西都讲，偏离主题，根本就是在凑字骗钱。不值这个价格。看完我都想骂人了。看到后面余弦的书评我只能呵呵。", "marks": "很差"}
{"content": "风逝。", "marks": "还行"}
{"content": "IOT这几年也火起来了，学习一些相关知识很有必要，国内这个领域也就这一本书。", "marks": "推荐"}
{"content": "还是不错的", "marks": "力荐"}
{"content": "明显的凑字数，毫无诚意。", "marks": "很差"}
{"content": "很好的书，应该好好推广的。不过我估计要很长时间才能看完，先假装勾一下读过吧。", "marks": "推荐"}
{"content": "没什么收获", "marks": "较差"}
{"content": "从几何意义角度解读线性代数中各种基本概念。 有些角度确实比较特别，帮助入门者形象化理解抽象的线性代数。比如图形化三阶行列式的计算。", "marks": "推荐"}
{"content": "因为对线性代数了解多了才发觉到了书中所讲的几何意义，假若当年线性代数老师能多让大家了解一下这些，很多人就不会挂在上面了", "marks": "推荐"}
{"content": "特别好的一本书，看过以后才觉以前并没有真正的理解什么是线性代数。准备读完了再看看“线性代数应该这样学”", "marks": "力荐"}
{"content": "很好看，竟然没多少人标记读过，可惜了。一看就懂的线性代数书，网上还有电子版", "marks": "力荐"}
{"content": "奈何大学学习数学的时候还没有这本书。不然辅助教材来看真是事半功倍啊。", "marks": "力荐"}
{"content": "形象生动，图形化辅助理解，重新梳理了一遍知识结构。", "marks": "力荐"}
{"content": "我桌子上之前总放着两本书：PRML和Convex Optimization (Boyd)。这本书是第三本。", "marks": "力荐"}
{"content": "这种学线代角度很好，唯一不足的是知识点顺序不合理", "marks": "力荐"}
{"content": "再加半颗，给作者画那么多图的辛苦💦", "marks": "还行"}
{"content": "国内关于线性代数的书，这本基本上是最好的了吧", "marks": "力荐"}
{"content": "很直观\n", "marks": "力荐"}
{"content": "一言难尽 日后再写书评", "marks": "力荐"}
{"content": "篇幅不大，没有很细枝末节的技术理论讲解。最有价值的是用实例和分析来对测试，软件，开发，管理进行分析和如何处理其中谬误。值得开发、测试、管理人员反复研读。", "marks": "推荐"}
{"content": "对于测试工作的一知半解，会严重影响和测试人员的交流，此书有读一读的必要。", "marks": "力荐"}
{"content": "放在很多年前，这本书讲的内容还是非常有意义的，哪怕到现在很多故事一样上演着，但是软件测试已经不像以前那样不为人所理解了。有句话说得好，屁股决定脑袋，所以无论是过去还是现在，哪怕是将来，对于软件测试的偏见和误区都不会少。", "marks": "推荐"}
{"content": "各章之间易读程度差异巨大，就我自己的水平来说，张江写的那几章（比较科普）最对胃口，部分有醍醐灌顶之感。", "marks": "力荐"}
{"content": "对人工智能的介绍，对人工智能更深层的本质的探索，对于集智的介绍，对于智能技术的一些介绍，作为科普入门，还是可以一读，友情推荐，强烈推荐。", "marks": "力荐"}
{"content": "抽象，就是求得恆定啊？！", "marks": "还行"}
{"content": "推荐。", "marks": "力荐"}
{"content": "趁着AlphaGo应个景", "marks": "推荐"}
{"content": "大体不错，但是其中若干章有点跑偏，譬如罗列公式却不给出参数的意义。。。这种写法其实就没打算让读者看懂。", "marks": "还行"}
{"content": "考温总想找到更多灵魂中燃烧着不可言说之火的人-----《复杂》", "marks": "力荐"}
{"content": "本书从人工智能的三大学派开始讲起，涉及深度学习和自然语言处理，大数据和机器学习，群集智能和自组织系统等概念。最大的感触就是，未来的人工智能将无限逼近于人类大脑，通过对生物神经学，行为学的研究，使机器人凸显自下而上的涌现行为，产生自主学习能力；复杂系统内优胜劣汰的自然法则会使机器具备更新迭代属性。人工智能的发展是一场持久战，我们需要足够的时间，来为未来开启人工智能时代。", "marks": "力荐"}
{"content": "面面俱到但是各处内容都不多（因为一多就进入无趣的技术讨论环节了）的综述性读物；不能怪作者，因为人工智能这个领域目前就是这样纠结而鸡肋啊...", "marks": "推荐"}
{"content": "作者之一是个美眉，我认识", "marks": "力荐"}
{"content": "感觉本科的时候要是教材能有科普的水平，没准还能读下去...感觉深度网络是本世纪以来最重要的科技进展，深入了解一下还是有必要的。", "marks": "推荐"}
{"content": "对我等门外汉进行科普已经绰绰有余，还提供了不少进阶阅读的信息", "marks": "推荐"}
{"content": "张江", "marks": "推荐"}
{"content": "很不错的一本书。值得推荐！", "marks": "推荐"}
{"content": "科普，就是不够深入。部分章节有些散。", "marks": "推荐"}
{"content": "扎实、明晰却并不通俗易懂，很多追求精准的学术表述完全可以换为意象简明、引人遐想的修辞。张江几篇文章很好。", "marks": "推荐"}
{"content": "虽然已经是科普读物，但是要看懂某些章节的内容，还是需要有一定的科学素养，尤其是数学基础和机器学习基础。 很多章节都没有看的太明白。第13章的瓦克星计划，几乎看不懂，里面涉及到太多的天体物理、大气物理、大气辐射学、气象学的东西。 ", "marks": "力荐"}
{"content": "张江写的第 1、2 、4 、8 、11 章很值得一读！！！", "marks": "力荐"}
{"content": "人工智能面面观，介绍性读本", "marks": "推荐"}
{"content": "国内少有的人工智能通俗读物，既介绍了原理，又把兴趣点和故事讲得很清楚。", "marks": "力荐"}
{"content": "利用坐地铁的时间翻了翻，感觉不算科普书，很多都不懂。本想给二颗星，但书中好几处拿金庸武侠做类比，遂给一颗星，再也不翻了。", "marks": "很差"}
{"content": "作为半个外行入门还可以", "marks": "推荐"}
{"content": "我不懂= =", "marks": "还行"}
{"content": "人工智能路漫漫", "marks": "推荐"}
{"content": "前五章的基本关键概念可以看一下，后面的不用看了。", "marks": "推荐"}
{"content": "花了半个月看完，补充了一下缺失的知识断层。科普性的书，但至少从概念层面知道是怎么回事，写的不错，尤其对于以后获取的大数据的处理有所帮助", "marks": "推荐"}
{"content": "除了张江之外的几位其实都不太会写科普……内容还是不错的，就是有些领域不感兴趣罢了", "marks": "推荐"}
{"content": "虽然只有仅有的几章看懂了", "marks": "推荐"}
{"content": "很不错。", "marks": "力荐"}
{"content": "比较一般。还不如读读《信息简史》", "marks": "较差"}
{"content": "对AI历史、学派、原理有了初步了解。", "marks": "推荐"}
{"content": "要想彻底超越图灵计算的限制 ，我们必须放弃程序的实在性 。也就是说程序每时每刻都要变化", "marks": "推荐"}
{"content": "可能是很多人写的，不是很系统。特别最后一章几乎都是术语公式的堆砌。前面讲行为学派，还有人工人工智能这部分比较有意思", "marks": "推荐"}
{"content": "的确是漫谈", "marks": "推荐"}
{"content": "跟人工智能相关的几个方面，章节有偏科普也有偏学术的，比较好的是给了参考资料可以深入。", "marks": "推荐"}
{"content": "对于人工智能的入门，漫谈来讲又显得太难懂", "marks": "还行"}
{"content": "张江的文章不错，简单富有内涵，其他的偏学术，需要理论功底", "marks": "推荐"}
{"content": "关于人工智能文章的集结，方方面面都有涉及，可以帮助你形成一个关于人工智能历史、现状和未来发展方向的大轮廓。因为文章来自不同的作者，所以风格上不是太统一，造成书体系性不强。书中部分内容太过技术，细节太多仅适合有一定专业背景读者，而对于另一些内容又太过简略，缺乏深入解读，有意犹未尽之感。关于《哥德尔、艾舍尔、巴赫：集异璧之大成》那篇解读文章比较精彩，由此想到不如每一章节就解读一本关于人工智能的经典出版物，围绕这些作品展开勾画出人工智能发展全貌。", "marks": "还行"}
{"content": "多人编著的缺点，结构有些混乱，章节之间联系不大，前几章还好，后面就越看越不像科普了", "marks": "还行"}
{"content": "有的章节还是很有意思的，张江写的那几篇都很浅显易懂。印象特别深的是注意流和群集智能，这两个是目前很缺乏理论但是又“凑巧”能看到很大潜力的方向，仿佛从中能看懂这个世界。其他话题比如图灵机，self loop，深度学习等都是老生常谈了，看过无数相关的书，马马虎虎吧讲的。", "marks": "推荐"}
{"content": "不错的科普书，更有趣的是“集智俱乐部”作为自发的科研组织所焕发出的创造力。 ", "marks": "推荐"}
{"content": "本想当本工具书读，发现视野感觉很宏大，需慢慢理解。", "marks": "力荐"}
{"content": "作为科普书，其实是有一些难度的，不过人工智能这个主题本来也艰深，仍然值得一读。", "marks": "推荐"}
{"content": "夹带很多张江的私货，翻翻就好，不适宜作为入门书。", "marks": "还行"}
{"content": "很不错的书，书名虽然是人工智能，但其实除了一般所说的AI还有一些复杂系统和偏物理的东西，都是非常有趣的主题，很多值得继续深入了解和学习（参考文献列的还蛮全）。只是说每篇文章的质量参差不齐，有些更像是一篇没花太多时间的博文，想到哪写到哪，很多公式列出来但解释不够，从科普角度上来讲并不深入浅出，神经网络那块写的蛮乱的。另外全书的整体感挺差，当作文集倒也还说得过去。", "marks": "推荐"}
{"content": "要想彻底超越图灵计算的限制，我们必须放弃程序的实在性。也就是说程序每时每刻都要变化。一个写出就不再变化的固死的程序不可能超越图灵计算的限制，然而如果一个程序每时每刻都变化得不是它自己了，那么这个程序就能够超越图灵计算。", "marks": "还行"}
{"content": "原来以前看到过的香港迪士尼的人公走道的设计，就是来源于集群智慧。就看怎么去定义智能与意识了，其实如果不那么对应，相信机器很多的东西，都算得上智能与意识了，只是还不是很对应人类自己本身的那种智慧。", "marks": "力荐"}
{"content": "较为抽象，很多东西不是从技术的角度去看，而是去从世界的角度去解析，这还是不错的。但是太为抽象了。", "marks": "推荐"}
{"content": "对我这种刚入门的门外汉来说，看着满书的公式图表专业术语，真得表示无能理解啊。。\n想哭。。。\n只对一点印象深刻，“注意力是稀缺资源，互联网整体其实就是靠人的注意力而存在着，虚拟世界的程序正是靠人的注意力才能获得滋养得到生存。", "marks": "还行"}
{"content": "棒！真是体谅小白，能体会到作者们推广科普的热情", "marks": "推荐"}
{"content": "科普人工智能，科学充满了魅力", "marks": "力荐"}
{"content": "20171029：集智俱乐部的第一本书。多人漫谈，内容杂博。更感兴趣的是---彩云天气案例。", "marks": "还行"}
{"content": "非常好的科普书，看了受益匪浅", "marks": "推荐"}
{"content": "自己写的书，当然要力挺了。", "marks": "力荐"}
{"content": "是人工智能比较好的科普书了。", "marks": "力荐"}
{"content": "草草读完，就张江写的几篇有点意思", "marks": "还行"}
{"content": "人工智能大致分为符号学派（传统），连接学派（神经网络→机器学习→深度学习）和行为学派（进化计算，人工生命）。", "marks": "推荐"}
{"content": "读了一半实在读不下去了", "marks": "还行"}
{"content": "4星半，很好的一本关于人工智能的入门读物，不过缺点也很明显，有些作者笔力不足，只是单纯的把公式列出来，并没有能把一些学术性的概念简单的阐述出来。", "marks": "推荐"}
{"content": "2015年冬，26岁读，四星半。科普类，适合浏览、入门或参考。全面充实的科普书，干货很多，详细介绍了人工智能和复杂系统的发展历史、研究现状，并且对感兴趣的读者推荐了进一步阅读的书目和文献（这一点很赞）。每一章都是相关专业的博士生或者青年科学家所写，有时候思维有点跳跃，读者最好具备一定的理科基础知识（大学水平）、同时勤于思考，否则可能会读不下去。", "marks": "力荐"}
{"content": "人类，与机器。统一，还是利用？", "marks": "力荐"}
{"content": "有几章看的我鸡皮疙瘩都起来了，可怕可怕。", "marks": "力荐"}
{"content": "一本看的云里雾里，似懂非懂的书。书中出现了大量的数学公式及本人从未见过的定律及概念。看过本书后开始了解人工智能的发展历程，所以又购买了《哥德尔、艾舍尔、巴赫书：集异璧之大成》。此书让我开始思索人生意义。为什么宇宙会存在，宇宙是什么！为什么到目前只能发现地球有人类，为什么人类能统治地球！人工智能会战胜人类吗，人类有防御德策略吗！为什么数字公式能模拟细胞的分裂，生命的演化真的能用数学模拟吗！人为什么存在三维世界中，是真实的还是虚幻的！为什么我们会思考，我们的意识是否被另一个未知的文明操纵。人活着的意义是什么，为什么活着……", "marks": "推荐"}
{"content": "大多数文章都像综述，干货是干货，但有些太干瘪了。", "marks": "还行"}
{"content": "人工智能是复杂性科学，从大自然万物的模式规律中，我们可以借鉴的方向有很多，但归根到底都离不开数学和哲学。了解的越多就越发认识到自己的无知之处，也更加的敬畏自然。路漫漫其修远兮。。。", "marks": "力荐"}
{"content": "机制俱乐部的第一本书", "marks": "力荐"}
{"content": "哥德尔", "marks": "推荐"}
{"content": "集智俱乐部", "marks": "力荐"}
{"content": "这句话有2个“这”字，2个“句”字，2个“话”字，2个“有”字，7个“2”字，11个“个”字，11个“字”字，2个“7”字，3个“11”字，2个“3”字。", "marks": "力荐"}
{"content": "艰深晦涩，水平不够，科普级别的还是不懂", "marks": "较差"}
{"content": "一本不觉明历的书，如果能通俗点就好了。大量的思考，超出了我对计算机学科的认知范畴。然而，何止是人工智能，计算机本身的诞生何止是简单的电路描述，更是人存在的思辨。", "marks": "推荐"}
{"content": "感觉现在看手机哪儿都是坑，都是人机交互。", "marks": "力荐"}
{"content": "把深奥的理论用浅显的话娓娓道来，最适合我这种智商的了……", "marks": "推荐"}
{"content": "前面七章还好 后面读起来费劲 就是自己水平不够", "marks": "很差"}
{"content": "这可以说是一本人工智能的入门读物，涵盖了人工智能的发展历程，经典理论，以及如语音识别、NLP、深度学习这一类的前沿应用方向。分为多个彼此独立的短篇，很多篇章读起来浅显易懂，是入门很好的材料，当然，对于一些涉及到具体算法的部分，对于技术类同学来看，还是比较晦涩的。\n\n从目前人工智能发展程度来看，可能还没有真正满足图灵测试的基础要求，还处于初步阶段，人对“智能”的理解，还是比较肤浅和主观的，另外，在赫伯特西蒙的观点来看，一个“智能”的方向，是帮助人在海量信息面前，尽可能减少注意力的消耗。在智能硬件的角度，需要深思的是，如何能够将产生的数据形成闭环，更好训练算法，实现本身更加智能。", "marks": "推荐"}
{"content": "本书总体逻辑以时间为线，介绍人工智能发展历史、基础逻辑、最新研究成果和实例分析。部分内容科普效果还不错，但有些部分作为高一学生确实看不懂。能够解决许多关于AI的困惑，也对这门学科有了框架性的整体认识。整理整理，回来写份思维导图。", "marks": "推荐"}
{"content": "参差不齐，当做科普博文读吧", "marks": "推荐"}
{"content": "还不错。不同的人写出自己对人工智能的认识，从不同维度去了解人工智能。但不适合作为一般的科普读物来读，学文科的人可能会没耐心读下去。", "marks": "推荐"}
{"content": "科普书，但技术的东西触得深了一点，有一些结构示意图、流程图、技术说明等。适着多理解多一点点挺好的，也不用强求～", "marks": "力荐"}
{"content": "还不错的科普文，适合本文科生读，但是要早点再版，阿尔法狗算符号学派还是深度学习？", "marks": "推荐"}
{"content": "朋友再三推荐，看了两章果断买了。有趣的入门书，看得很过瘾！准备把书里推荐的其他论文也看一遍。", "marks": "力荐"}
{"content": "算是比较广但一点也不深入的科普书……对那个Tierra程序印象深刻。(epub版 https://pan.baidu.com/share/init?shareid=431075139&uk=1167121026  907v)", "marks": "推荐"}
{"content": "还是很有意思的", "marks": "推荐"}
{"content": "稍微简单了些", "marks": "还行"}
{"content": "持续学习中", "marks": "力荐"}
{"content": "走马观花 几乎毫无用处 啥也没学到的看完了 就这样还看了一年。。太拖延了。。", "marks": "还行"}
{"content": "没时间细看，但粗略翻过感觉还是讲得很清楚。", "marks": "推荐"}
{"content": "内容宽泛:iOS和OS X都讲，涉及多种功能SDK。深度有限：大多数就是个概念加很简单的Deomo。", "marks": "还行"}
{"content": "太粗略简单了，通篇基本以文字形式告诉你该怎么做，简直了。。把它当成cocoa的中文入门文档就好了，效果还不如官方文档", "marks": "很差"}
{"content": "蛮详细的，涵盖信息丰富。", "marks": "力荐"}
{"content": "书本身不错。基本上索引设计的方方面面都有涉及。互联网时代，大家都在关注大数据，大数据的框架比比皆是，Hadoop，spark等等。越来越少的人去关注单台数据库的性能问题，动不动都横向扩展之类的。这种环境下，我觉得反而应该去关注一些实际落地的技术，研究一下数据库原理。", "marks": "还行"}
{"content": "高屋建瓴（跳过了后半部分 join 优化和一些高级公式)", "marks": "力荐"}
{"content": "总体来说因为用不上所以收获并没有那么大……", "marks": "推荐"}
{"content": "了解三星索引，了解如何评价索引，了解如何设计三星索引，看完这本书的，或者掌握这本书中的内容的朋友，才是优秀的DBA", "marks": "力荐"}
{"content": "正合适我读。", "marks": "力荐"}
{"content": "一个小时翻了一遍；几乎没有收获，只是谈了一些索引创建的常规做法，其实一篇博客就可以讲的更清楚。\n里面各种规范化概念推演，然而并没什么用处。使用explain看一看已经能够解决一半以上的问题了。\n", "marks": "较差"}
{"content": "是块硬骨头，需要慢慢啃，很有含金量！", "marks": "力荐"}
{"content": "很好的关于索引介绍的书，提供了估计查询支行时间和方法，并解释了索引对于查询效率的影响方式，对实践和指导意义", "marks": "推荐"}
{"content": "整体上，比较有收获，明白了数据库是如果查询数据的，查询优化器是如何决定执行计划的，很不错。不过，整体拖沓，浓缩成100页，读起来更爽", "marks": "推荐"}
{"content": "内容10年前的，能与时俱进就好了；作为一个MySQL DBA，对一些Oracle、DB2相关内容不感兴趣~", "marks": "推荐"}
{"content": "花了2个月看完了，赞", "marks": "力荐"}
{"content": "可能语言略微有点僵硬，但的确是本好书", "marks": "推荐"}
{"content": "写得非常好", "marks": "力荐"}
{"content": "索引设计说起来简单，但DBA，开发人员能够了解清楚，深入的寥寥无几。\n这本书更为关键的是有一套量化的方法，读完之后的畅快，看了才懂，强烈推荐。\n另外，不要迷信什么nosql，能把存在了几十年的关系型数据库搞懂，索引是必不可少的重要一环。", "marks": "力荐"}
{"content": "内容有点过时了，特别是对硬件开销估算部分。章节内容组织有些混乱，歪果仁写书的脑回路还是有点难跟上。翻译也一般，读着有些别扭。\n还是有学到东西吧，理想查询评估三要素，扫描行 重排序 表行访问", "marks": "还行"}
{"content": "有点难", "marks": "推荐"}
{"content": "惊艳", "marks": "力荐"}
{"content": "书侧重于数据采集，与题名不符\n", "marks": "较差"}
{"content": "怀疑看了假书", "marks": "很差"}
{"content": "哈哈，居然是第一个写评价的读者。总体来说内容比较浅显，没有深入数学基础和算法细节，只是一本普通的入门读物。不过整本书的架构比较清晰，也是以Scikit-Learn为框架来讲述。在大体通读了Scikit的文档后再读这本书的效果比较好。文档的详实可以让我们作为工具书来查询，书籍的框架和整体性可以让我们对于机器学习有逻辑上的理解。全书介绍了监督，半监督的主流算法，并重点介绍了Scikit-Learn库以及模型的参数调整，性能评估和提升等问题。最后，如果是像我一样以前不怎么接触外文读物的读者来说，这本书对于上手外文书籍和文献是很有帮助的。", "marks": "推荐"}
{"content": "很好的入门书，浅显易懂，算比较容易读的英文书了。适合看了一堆理论书还对各种算法没有形象认识的入门者，理论看再多不落地也挺难理解的，这本通过sklearn教你如何实践，知道用什么包才能成为合格的调包侠呀～", "marks": "力荐"}
{"content": "真的是本入門的好書啊，非常全面", "marks": "力荐"}
{"content": "用sklearn做机器学习的流程，清楚明白。", "marks": "力荐"}
{"content": "sklearn的学习手册", "marks": "推荐"}
{"content": "很好的入门书。看完之后在补充看看pandas,两大工具就能熟稔于胸了。", "marks": "力荐"}
{"content": "一个有工科背景的作者写的书，比起某些大而全的描述，可能更有针对性。许正是原GE中国的副总裁，我们集团请他过来给集团总裁讲讲GE公司如何理解协同，感觉不错，作为案例作为咨询顾问，许先生都还是不错的，讲的是干货。", "marks": "推荐"}
{"content": "洞见未来社会演变趋势的好书，书中诸多正在一步步实现，不知未来的人工智能与物联网的融合，对人类而言是喜是悲。", "marks": "推荐"}
{"content": "还不错", "marks": "还行"}
{"content": "作者指出，“工业互联网转型方面，中国企业的第一个软肋是时间，即关键技术方面的技术积累。这需要相当长的时间积累和实践检验才能形成。”这一点说的还是相当中肯。", "marks": "还行"}
{"content": "这书还是不错的，把内容写的很详细，很具体，有故事，有例证。结合了很多我们国内的例子，把工业互联网的发展方向也有自己独到的见解，真的很不错。推荐大家看看。", "marks": "力荐"}
{"content": "看完了感觉还行，但是对于当前中国实际的技术基础来说有些内容只是方向而已", "marks": "还行"}
{"content": "书写的很好，详细具体，有理论有事例，不枯燥。对于工业互联网的发展变革有洞察力，对于新兴技术的看法有见地。", "marks": "推荐"}
{"content": "觉得有些想法读来后让我觉得自己的认识是不是太少了点的感觉啊，还是我们本身看到的东西都不一样？\n好吧，就是这个定价太没良心了。", "marks": "推荐"}
{"content": "对工业互联网有一个很好的阐述和指导性的东西，还是挺不错的。", "marks": "推荐"}
{"content": "[1]许正.工业互联网:互联网+时代的产业转型[M].北京：机械工业出版社,2015:123.", "marks": "推荐"}
{"content": "还行，其实是matplotlib包的说明书吧。翻译的也还行虽然有几处错误，但是大部分还行，可以很快看过去，推荐在实践中更好的方式是阅读文档。", "marks": "还行"}
{"content": "简单易学的python数据可视化入门，很多实用例子。", "marks": "力荐"}
{"content": "市面上这样的书很少，没得选只能看这本。内容不丰富，只能用来入门，可以不买，上网搜搜代码也可以。", "marks": "还行"}
{"content": "虽然网上都能搜索得到，但是当参考书还是不错的。可以配合《利用Python进行数据分析》，并对比ggplot。", "marks": "力荐"}
{"content": "较无趣", "marks": "还行"}
{"content": "讲得比较全面，但每一点都不够深入。提供的一些小例子还挺有用的，可以直接模仿着写类似的程序。在地图数据可视化那一块儿，还要装一些其它的插件，比较麻烦，没有上手敲。还有，感觉在图形美化方面讲得不够。建议作为Python可视化入门的书籍，更深入一点的可以直接查matplotlib官网文档。", "marks": "还行"}
{"content": "本书可以又名《上古时代：计算机群仙传》计算机的发展和曼哈顿工程、普林斯顿高等研究院、二战、航天工程紧密联系在一起，50年代，图灵和冯*诺依曼远遁，普林斯顿众仙散落人间，计算机教派全球开支散叶。", "marks": "力荐"}
{"content": "这也许是写得最好的计算机发展简史，那些在关键时刻发挥了主要作用的人物都描绘得栩栩如生", "marks": "力荐"}
{"content": "「数字宇宙」诞生的群英传。最具颠覆性（热核武器）和最具建设性（计算机）的人类发明出现在完全相同的时期，这并不是巧合，他们被同一群人所设计。而对DNA的阐释，又给了人工智能以启迪。是我们要利用计算机优化人类基因，还是计算机要优化我们的遗传密码和思维方式，从而更好地帮助它们进行复制？", "marks": "推荐"}
{"content": "一塌糊涂。。。", "marks": "较差"}
{"content": "计算机是战争的衍生物，它的诞生发展都和军事活动密切相关。即便经过了数代研究者努力，现有架构的计算机系统本质仍是低效，迎来人工智能爆发将会是计算机史革命的一页。", "marks": "还行"}
{"content": "最好的计算机历史书，计算机其实是对dna，生物，神经细胞的模拟！图灵和冯诺伊曼描写的栩栩如生。计算机使我们物质生活的更丰富，更幸福！", "marks": "力荐"}
{"content": "不要买连译者简介都没有的书", "marks": "还行"}
{"content": " 那是一个伟大的年代  是一个成就伟人的时代 ", "marks": "力荐"}
{"content": "过誉了", "marks": "较差"}
{"content": "看看", "marks": "还行"}
{"content": "从冯诺依曼的角度看计算机发展的一本历史书", "marks": "还行"}
{"content": "其实作者写作挺紊乱的，但值得当历史书一看。以及，不好意思，Jobs的地位等同于亨利福特，是某个阶段内普及化的重要人物，但回归技术根本，我依旧把火炬献给这些人 #好奇neurototal这个概念何时会实现", "marks": "还行"}
{"content": "主题很好，写的有点乱，翻译比较滥", "marks": "还行"}
{"content": "把数学与计算机的历史脉络写了出来", "marks": "推荐"}
{"content": "了解整个计算机发展的历史，我最爱的故事类型", "marks": "力荐"}
{"content": "很好的中文版入门资料，可惜目前自己并不从事这项工作。", "marks": "推荐"}
{"content": "没基础的我表示看不太懂，也许能增加动手环节就更好了", "marks": "还行"}
{"content": "相对来说，还算是比较有深度一点的关于openstack的书", "marks": "推荐"}
{"content": "读了那么多烂书终于读了一本好的了。", "marks": "力荐"}
{"content": "挺不错的入门书，主要的好处是不单讲概念和操作，还介绍了一部分实现代码，这对于开发工作非常有帮助。", "marks": "力荐"}
{"content": "算是能找的到的中文资料里比较好的一本介绍原理的书了。不过还是大而泛了一点，感觉注重最多的还是Nova，neutron现在似乎用的不多啊。不管怎么说，对于我这样的起步的人来说，还是算不错了。", "marks": "推荐"}
{"content": "偏原理多一些，做OpenStack开发的推荐看一下。", "marks": "还行"}
{"content": "Openstack入门必读", "marks": "推荐"}
{"content": "领路人", "marks": "推荐"}
{"content": "虽然是本老书，但是精炼简洁，点到为止……书籍第一要务是能引发读者的兴趣，这比正确与否都重要，本书作者做到了~", "marks": "推荐"}
{"content": "电路图部分有意思", "marks": "力荐"}
{"content": "用通俗易懂的语言把计算机的基本构成与工作原理梳理了一遍，适合零基础新手。", "marks": "推荐"}
{"content": "居然标记过想读，完全忘记了。没想到是03年的书，要在10年前读多好。作者预测以后是java  .net的天下，可他没想到动态语言的崛起，软件web化，不知下一个十年会是什么技术崛起。ai，大数据是否真的普遍化？可这2种对于一般人来说太难了，纵观软件技术发展是越来越简单化的", "marks": "推荐"}
{"content": "对于CPU讲解的部分很好。", "marks": "推荐"}
{"content": "自己过了一遍，发现给不懂技术的产品经理做技术入门很不错", "marks": "推荐"}
{"content": "通俗易懂，介绍了这个计算机行业系统知识，硬件软件，数据库", "marks": "推荐"}
{"content": "很浅显的一本书，适合计算机入门。对编程的各个方面有个初步的了解。", "marks": "较差"}
{"content": "很简单的入门书，贴心到非常，论详细程度和专业深度都不能与《网络是怎样连接的》相比，但涵盖的范围更广，算是科普了，不过个人认为，想靠这本理清计算机原理的说法还是太夸张了。初版时间太早，有些论断现在看来过时了，好在基本原理仍有价值，第六、九章尤其清楚。现在对图灵教育印象很好。", "marks": "推荐"}
{"content": "硬件的部分通过一张电路图讲解，挺清晰的～", "marks": "推荐"}
{"content": "非科班出身值得一看", "marks": "推荐"}
{"content": "嗯，还行吧", "marks": "还行"}
{"content": "过了一遍大学基础课，03年的书了，过去12年了，有的东西确实陈旧了。不过看看补补基础还不错", "marks": "推荐"}
{"content": "计算机", "marks": "还行"}
{"content": "计算机组成原理的普及读物，比《编码的奥秘》还简单些，让你能在几小时的阅读中了解一台微型计算机的组成和运行原理。教材往往会把初学者锚在细枝末节中。而科普的任务就是努力让读者保持一个观其大略的视角。由表及里，从科普到教材，是一个被常常被验证为可行的学习路径。", "marks": "还行"}
{"content": "2015.10.03", "marks": "推荐"}
{"content": "第2，3章才是亮点，毕竟新一代的IT者基本都没有这个环境，其他都是基础。", "marks": "还行"}
{"content": "讲得非常基础，包含了计算机组成原理，数据结构&算法，数据库基本原理，网络技术等等方面。", "marks": "还行"}
{"content": "一本很薄的适合外行人看的很简单的计算机科普书，日本人很会从小事做起。", "marks": "还行"}
{"content": "读的时候有点枯燥，读完觉得，这么枯燥的事情写的这么好懂也是不容易，至少能看懂。", "marks": "推荐"}
{"content": "适合我这种智障读的导论（", "marks": "还行"}
{"content": "并没有想象的那么好。前半部分的计算机讲解，并没有多么通俗易懂。后半部分关于编程语言的讲解，又显得太过浅显。", "marks": "较差"}
{"content": "挺简单的，不够深入。准备看作者的另外一本《程序是怎样跑起来的》", "marks": "推荐"}
{"content": "比较浅显，入门不错", "marks": "推荐"}
{"content": "对入门级的我来说相当科普、易读了", "marks": "力荐"}
{"content": "dk~因吹斯汀", "marks": "推荐"}
{"content": "太基础了，前面讲了些硬件，更多讲了软工的基础知识", "marks": "推荐"}
{"content": "前几章还可以，尤其第一章有点意思", "marks": "推荐"}
{"content": "我觉得有必要再看一本这方面的书。", "marks": "还行"}
{"content": "辣鸡，真辣鸡", "marks": "很差"}
{"content": "看完之后搞懂了看教材都没懂的几个小问题   我要是大一大二看到就好了", "marks": "力荐"}
{"content": "适合对硬件和软件有一定了解后读，梳理知识。对小白来说很难懂，对大神来说太简单。对于想深入学习的人来说太简略，对于只是想科普的人来说太复杂。年代久远的书，有些过时", "marks": "推荐"}
{"content": "适合高中的时候看....可惜已经老了。。", "marks": "还行"}
{"content": "不推荐，也就前面3章有点意思，从第四章开始，都是在扯淡。可以认为，本书内容与标题基本毫无关系。。。。。", "marks": "较差"}
{"content": "写的挺糟糕的,计算机的方方面面还是蛮复杂的,作者企图在一本薄薄的书里面把体系结构,操作系统,编程语言,运行环境等做一个说明,结果适得其反.\n什么也没有说明白.", "marks": "很差"}
{"content": "前面几章（2/3/4）还行，后面就没法看了。", "marks": "还行"}
{"content": "看书名以为是计算机组成原理这样的内容，但是随着阅读的深入，涉及了编程，数据库，网络，加密，文档协议，软件开发方面的内容，覆盖面还是蛮广的。读完还是很有收获的，推荐！！！", "marks": "力荐"}
{"content": "挺有意思", "marks": "推荐"}
{"content": "适合计算机入门的书籍，前面手动连接有CODE的滋味在里面", "marks": "推荐"}
{"content": "原来计算机也不过如此\n简单明了\n入门可看", "marks": "力荐"}
{"content": "是看过程序是怎样跑起来的，然后看的这个，整体上来说讲解很具体，也很简单，适合入门的人好好看看，和《编码》类似，但是应该不如那个介绍的详细，毕竟页数在这里", "marks": "还行"}
{"content": "科普读物 大一看看不错", "marks": "还行"}
{"content": "这书虽然是2003年出的，但是里面的内容真的控制很好，写的内容足够广泛，深入单点内容的力度又不深不浅，恰到好处。随便从自己感兴趣的一章读都行。花看一篇博客的时间就可以看上书里的一个知识点，比如 加密解密。作者能够把书的节奏控制如此好，自然能够引起读者对于计算机的兴趣。", "marks": "还行"}
{"content": "对我而言，仅仅是最后一章讲SE时值得读一读，但是也很浅显。我以为日本人讲道理画图表会很厉害，结果也是乱七八糟。看这样的书还不如去看技术论坛上网友的答疑讨论来得有效。", "marks": "较差"}
{"content": "不懂计算机的我 竟然能看懂不少 很简练的一本书", "marks": "推荐"}
{"content": "真正的基础入门书籍", "marks": "推荐"}
{"content": "非常好。", "marks": "力荐"}
{"content": "好书！不知道对于完全不懂计算机的人可读性如何，有一点基础的话读起来特别顺畅，把以前有些模糊的概念梳理了一遍。由于成书较早，有些内容已经有所变化，不过无伤大雅。", "marks": "力荐"}
{"content": "看不下去", "marks": "还行"}
{"content": "2017.11 前三章非常推荐，硬件和汇编现在刚入门的程序员都没玩过，电路图也非常棒，四章以后的，都是基础程序员的必备技能", "marks": "推荐"}
{"content": "有基础的就别读这本书了", "marks": "还行"}
{"content": "大家小书", "marks": "推荐"}
{"content": "怎么说呢，至少我个人感觉一般吧，可能是年代有点早了吧。", "marks": "推荐"}
{"content": "标题党的书，看完还是不知道计算机是怎样跑起来的。怎样跑起来这个问题看国人写的“穿越计算机的迷雾”这本就很好。不过这本书有些地方写的不错，举个简单的例子就把问题说明白了（算法和结构那里讲得确实简单易懂，赞），只是收益不多。", "marks": "还行"}
{"content": "图灵出版的书都可以。。。", "marks": "推荐"}
{"content": "03年的书，好多内容过时了", "marks": "较差"}
{"content": "从科班的角度来看也算是努力使得计算机的道理通俗易懂，但仍然未交代的更彻底", "marks": "还行"}
{"content": "简单的内容太简单，难得依然看不懂（＃－.－），这种书感觉还是看大部头比较划得来，作为科普书也不太好，如果有些基础，两三个小时足够看完了，最好去图书馆借吧", "marks": "还行"}
{"content": "为大部头打基础", "marks": "推荐"}
{"content": "通俗易懂，可以作为引导书籍。提高兴趣", "marks": "力荐"}
{"content": "还是挺值得一读的", "marks": "推荐"}
{"content": "科普，仅此而已。", "marks": "推荐"}
{"content": "科普书籍", "marks": "推荐"}
{"content": "内容比较分散,行文比较啰嗦", "marks": "推荐"}
{"content": "感觉不如另一本。", "marks": "还行"}
{"content": "讲的好生动清晰，查漏补缺非常赞", "marks": "推荐"}
{"content": "一直以来很好奇电脑内部数据是怎么传输和计算的，读了这本书对这方面稍微有了点了解。后面还涉及了一些编程思想和数据结构，稍微了解下。", "marks": "还行"}
{"content": "讲解了计算机的基本原理，易懂，值得闲暇之时回顾一下基本知识", "marks": "力荐"}
{"content": "对整个计算机软硬件进行了通俗概要的讲解，作为专业的程序员虽然大部分内容都了解，但还是对部分内容有豁然开朗的感觉，尤其算法，数据结构，数据加密原理，SE的工作范围等内容之前有疑问，读完就舒坦。程序员必读", "marks": "推荐"}
{"content": "挺好的 把每个方面都很浅的讲了一点，并没有很深入，正是这本书比较适合大家一起读的原因吧。还有一本 程序是怎么跑起来的 最近就去图书馆借来看", "marks": "推荐"}
{"content": "对于了解计算机领域非常有利。", "marks": "力荐"}
{"content": "炒鸡喜欢！", "marks": "力荐"}
{"content": "原书出版于2003年", "marks": "力荐"}
{"content": "比上一本简单，收获不大。", "marks": "还行"}
{"content": "好书，值得一读，我看了前4章，很快就可以看完了。其中组装微型计算机，手工汇编的部分非常好，对于一个非计算机专业的了解底层的知识是很有帮助的。当然了，计算机专业的可能对于这些已经有了非常深刻的理解，看这些就会觉得小儿科。对于非计算机专业的编程人员还是推荐的。2016-6-27。", "marks": "力荐"}
{"content": "硬件软件网络都点到为止，把这两年学的课程串了一遍吧。", "marks": "力荐"}
{"content": "正在试图读更多科技方面的书。日本人写的科普类书籍总有一种中二感，大概也算是民族特质吧︿(￣︶￣)︿", "marks": "推荐"}
{"content": "讲的很仔细，一些基本原理讲的很清楚", "marks": "力荐"}
{"content": "计算机概论的简化版，对于自己有计算机基础的准码农来说非常适合查漏补缺，又非常易读。但从周围人的反响来看，没有基础的人并不好理解。通过这本书，让我第一次接触图灵社区产生了好感，也让我可以有兴趣认真去读读计算机概论。", "marks": "力荐"}
{"content": "花了一天时间看完，整本书涉及面比较广，从硬件到软件，从软件架构到技术细节，从数据库操作到面向对象内容都涵盖全了。通读下来，小白可对计算机组成、软件模式、数据库、OOP等概念会有个整体认识，入门不错，比国内教材质量要高！", "marks": "推荐"}
{"content": "新人入门推荐", "marks": "力荐"}
{"content": "科普文，不确定非专业人员读了什么感受，这个得母上父上来评论，只是觉得还是趣味性有点缺乏", "marks": "还行"}
{"content": "适合查漏补缺", "marks": "推荐"}
{"content": "相对《程序是怎样跑起来的》不是那么的有趣吧，提到的知识点很多，很散。", "marks": "还行"}
{"content": "书中最有趣的部分就是跟着讲解画电路图的部分，形象生动地解释了电脑内部的组成部分和作用，很适合初学者。", "marks": "力荐"}
{"content": "作者我们聊聊人生，为什么一本算法书不好好写伪代码，居然用C++写？", "marks": "还行"}
{"content": "书中算法多有应用场景，比很多教科书上的“应用题”好些，可以作为基础算法之后的扩充。\n要吐槽的是代码难读，各种没有注释的单字母参数，各种没来由的函数。", "marks": "推荐"}
{"content": "大杂烩，看前几页以为是给大学生看，看后面以为是给研究生看，中间一坨C++和积分公式……最后明白了，估计是给博士吃饱没事看的", "marks": "还行"}
{"content": "#PDF# #mobi# 3.7 分。还挺好看的。", "marks": "推荐"}
{"content": "前面还是很不错的，破除了算法本身的神秘，但是后面的一些例子，很有些牵强，而且都没有什么乐趣可言，生硬的语言描述，外加大篇的代码。", "marks": "还行"}
{"content": "前三章系统介绍了各种算法的逻辑结构，其后章节都是针对具体问题构造算法。值得参考。", "marks": "还行"}
{"content": "还行", "marks": "推荐"}
{"content": "“破除算法的神秘”，“可能的优化”，“实用的算法”这三点印象深刻，值得一读。", "marks": "力荐"}
{"content": "讲了很多其他算法书上没讲的东西~", "marks": "力荐"}
{"content": "匆匆翻了一遍，算法挺全的，值得参考。", "marks": "推荐"}
{"content": "学习C++编程时练习用，看这书只能知其然而不知其所以然，所以我还是看《算法导论》了。", "marks": "力荐"}
{"content": "一般，有趣，但算法深度和细度不够", "marks": "还行"}
{"content": "论读到博弈游戏发现正是期末考没做出来的最后一题的解法的心理阴影T.T 小时候不好好学的奥数，长大总是要还的...", "marks": "推荐"}
{"content": "算是相当不错的一本书了。几个算法说的很清晰。有了不一样的认识。推荐。", "marks": "推荐"}
{"content": "能看懂真是不容易，对我太说太烧脑了", "marks": "推荐"}
{"content": "好啰嗦，理论讲太多，到了真正具体的问题和算法例子，又一笔带过", "marks": "较差"}
{"content": "作者很有编程感悟，从实践中感悟算法和数学的重要性，写得很对我胃口，但未必受本科大学生欢迎。对回头看的开发者，做项目的硕博士应该很适合，很有启发。", "marks": "推荐"}
{"content": "很枯燥并不有趣的一本书。", "marks": "较差"}
{"content": "涉及到大量人工智能算法，学习C++编程的不错选择", "marks": "推荐"}
{"content": "算法大列举。对于算法只能说是了解，可能算法书都是思路+公式+代码？", "marks": "还行"}
{"content": "支持作者的钻研态度", "marks": "力荐"}
{"content": "不适合没算法基础的人！我不知道什么是时间复杂度，看贪婪法的时候也不知道什么是分治法和动态规划法。直接抛出一堆的概念，这一定是假定读者是有算法基础的。没看出来乐趣在哪。", "marks": "很差"}
{"content": "很实用的一本书，可以作为算法学习后的实战参考。至于想通过它来学习算法，呵呵，它也不会告诉你为什么。", "marks": "推荐"}
{"content": "太基础了点。。。python基础、基础算法、statistic、dp 0/1背包 ML都点到了 ", "marks": "还行"}
{"content": "可以看作MIT 6.00.1课程的讲义，Python和编程入门的基础问题都提到了，实际上本书可能更像是科研人员的编程入门而不是程序员的入门，书中花费了大量时间讲解了统计学相关知识和图表的生成。编程问题点到为止，后面的章节还是有一定意义的，推荐泛读。@沈阳市图书馆", "marks": "推荐"}
{"content": "一本很不错的入门书籍，我挺喜欢的，读起来可以算是津津有味。", "marks": "推荐"}
{"content": "感觉跟SICP比起来比较没有那么探索计算机科学，而是比较把计算机作为工具的实践（蒙特卡洛）讲得比较细致", "marks": "推荐"}
{"content": "\"查看代码的时候，请记住我并没有完全理解它。否则程序不应该存在错误。\"", "marks": "还行"}
{"content": "值得一读！", "marks": "力荐"}
{"content": "即将开始阅读，目标串联一下关于计算机方面各研究方向的知识。9.13号开始阅读，10.中旬结束。\n10.22补充，阅读基本完成，但是没有完成过网上项目，感觉很快就会忘掉。。。谁能来解救我请豆油", "marks": "推荐"}
{"content": "知识密度刚刚好 引经据典堪比李贤平老师概率论答案的“青山遮不住 毕竟江流去”……", "marks": "力荐"}
{"content": "相比较SICP的玄幻，这本书更佳现实主义。", "marks": "推荐"}
{"content": "其实是Python入门", "marks": "还行"}
{"content": "MIT的书，是经典读物", "marks": "力荐"}
{"content": "python入门好书！学py的同时也能培养一些计算思维", "marks": "力荐"}
{"content": "译者能不能把该死的“都市传说”翻译成“坊间传闻”？！都市传说是什么鬼？！！", "marks": "还行"}
{"content": "短小精悍，python入门指导", "marks": "推荐"}
{"content": "科普计算机组成原理，然而这方面缺乏背景知识读的有点囫囵吞枣", "marks": "推荐"}
{"content": "也许书本身还可以，但是实在是太简单了……", "marks": "还行"}
{"content": "周日下午的时间，再次复习了程序的编译、装载和运行。这类书的阅读难度从易到难：《程序是怎样跑起来的》-->《程序员的自我修养》-->《链接器和装载器》。", "marks": "还行"}
{"content": "书籍内容不多，很多人说还不如去看计算机组成原理。但那本书内容太多，同时理解有难度，而这本就浅显易懂，但又把很多原理的东西都说出来了。关于程序的执行、高级语言、汇编语言、机器语言的关系、函数的调用机制作为加深是不错的，小品~~", "marks": "还行"}
{"content": "操作系统和高级程序语言使硬件抽象化。汇编语法是操作码和操作数。控制cpu,只需将编译器生成的本地代码加载到内存然后运行。软件控制硬件就是利用I/O端口中断DMA。运行环境=操作系统+计算机组成。理解寄存器，就理解程序的运行机制。程序把寄存器当对象。程序寄存器PC决定程序流程。\n", "marks": "力荐"}
{"content": "新手友好度五颗星！这本书并不适合已经看过人邮大部头著作的人回头看，它就是专门为新手而写，涉及各个概念且讲解的通俗易懂，当然浅，但这正是新手所需要的特质，后面补人邮大部头。", "marks": "力荐"}
{"content": "垃圾书，还不如找本一级考试的《计算机基础》课本翻一翻。", "marks": "还行"}
{"content": "开头比较水，中间从C语言到汇编那段有点干货", "marks": "力荐"}
{"content": "像我这样如果不是科班出身，又啃不动《计算机组成原理》这种大部头的话，阅读这种寓教于乐的版本是非常合适的", "marks": "推荐"}
{"content": "怎么说呢 日本人写的科普…说是写给电脑白痴看的…然而我还是看不懂…由此可以推出…什么…结论…呢？我连二进制的逻辑右移和算数右移无法好好领悟 活着还有什么用…", "marks": "还行"}
{"content": "为了买《图解密码技术》，凑数买了这本书，虽然基本都理解，但是却不是什么通俗读物，不能算入门读物挂着入门读物的名字，不知道为啥要搞个彩色版。三星凑合吧", "marks": "还行"}
{"content": "无论新学者还是复习者，本书都很接地气~补码和哈夫曼是我的补缺，CPU的逻辑结构可谓-书读百遍其义自现，C与汇编的对照是不错的学习方法！", "marks": "推荐"}
{"content": "汇编一段是精华 ", "marks": "力荐"}
{"content": "2015.09.26", "marks": "推荐"}
{"content": "复习计算机组成原理？", "marks": "还行"}
{"content": "介绍了计算机科学常识和软件运行的机理。", "marks": "力荐"}
{"content": "有趣的科普书", "marks": "力荐"}
{"content": "想入门组成原理还是去看 编码 吧", "marks": "还行"}
{"content": "比教科书好看易懂，深度刚好。", "marks": "力荐"}
{"content": "一般吧，有面向大众的诚意，像写博客的，适合学过汇编和c的人看", "marks": "推荐"}
{"content": "挺好，让我对计算机有了进一步的了解", "marks": "推荐"}
{"content": "嘛 挺有趣", "marks": "力荐"}
{"content": "很好的入门书", "marks": "力荐"}
{"content": "初中教材应该这样！", "marks": "推荐"}
{"content": "这本书应该翻译成为 电脑是怎么样跑起来的，不适合向家人特别是女友老妈普及计算机知识，现在都是高级语言程序了，学习底层知识的人，除非做底层开发，在工作上用的都不多了。", "marks": "还行"}
{"content": "计算机基础", "marks": "力荐"}
{"content": "一个简化版的 CSAPP，还不错", "marks": "推荐"}
{"content": "印刷错误好多……内容不错，搞清了一些小问题，但总体来说太浅了。", "marks": "推荐"}
{"content": "适合写程序的入门看。", "marks": "还行"}
{"content": "和 <Code> 一样值得推荐，计算机的本质本没有那么复杂，都被专家教授的一大堆外星语搞得没人想学，这本书用人类可以理解的语言配合示例简要的介绍了cpu，内存，硬盘，操作系统等基本概念，及他们是如何演变成现在这样的。将一个概念讲出来不难，但将一个概念给别人讲懂了才难。", "marks": "力荐"}
{"content": "通俗易懂，如果作者最后能够把启动程序到跑起来的整个过程再串起来讲一遍就更好了", "marks": "力荐"}
{"content": "我一直推崇日本的技术书，比如图解TCP/IP,可是这本书确实真的一般般，前面针对基础知识的讲解还算是可以的，但是后面就天马行空，根本抓不住主题了。", "marks": "还行"}
{"content": "书中有些小错误，特别是讲到第10章汇编，有些图片中的寄存器标错了。翻译有些地方比较拗口，比如“参阅”，我觉得应该翻译成“访问”。", "marks": "推荐"}
{"content": "太粗浅，当温故用吧。", "marks": "还行"}
{"content": "读了部分，挺没意思的，也许是太基础了也许是我不感兴趣吧。", "marks": "还行"}
{"content": "终于看完了，学到很多冷知识 -- 因为有些其实已经不适用了", "marks": "推荐"}
{"content": "书薄，简单，易懂，适合外行爱好者。", "marks": "还行"}
{"content": "看过，但是还是有必要再看这方面的书", "marks": "还行"}
{"content": "超级迷你版《CSAPP》。不过还是应该看CSAPP，这个一般般", "marks": "还行"}
{"content": "有许多重要的地方讲得不是很清楚，但确实是计算机书里面看着很轻松的", "marks": "推荐"}
{"content": "计算机组成原理和操作系统的简化版本,注意不是简单版本,适合随便翻翻", "marks": "还行"}
{"content": "开了个小差", "marks": "推荐"}
{"content": "通俗语言版本的编码，在硬件介绍的同时也兼顾了软件，阅读时间1下午足够，可以回顾很多细节，以及一些理解的不是特别透彻的地方", "marks": "推荐"}
{"content": "其实我还是没搞懂程序是怎样跑起来的。。。", "marks": "还行"}
{"content": "这是一本计算机程序原理的科普书籍，与《计算机组成原理》的部分内容关联，但讲得更为深入浅出。本书主要讲了CPU的结构、指令和执行原理，数据存储和处理方式（内存、磁盘、压缩等）；程序的软硬件运行环境，源代码如何编译、链接成本地代码，本地代码的内存分配、堆栈执行的原理；以及程序如何转换汇编指令，调用操作系统API，操作控制计算机硬件等。本书原理清晰，内容浅显易懂，适合初学者上手。", "marks": "推荐"}
{"content": "浮点数部分讲的比较清楚", "marks": "推荐"}
{"content": "内容太简单", "marks": "还行"}
{"content": "通俗易懂", "marks": "还行"}
{"content": "整本书很流畅，举例配图特别清晰，适合入门。", "marks": "推荐"}
{"content": "本书和另外一本一样，很基础。从计算机核心部件的基本组成和数据的表示，到程序和内存的本质，再到操作系统等基础知识，以及还包括了很具体的函数调用实现机制。总的来说，看完后对整个计算机软硬件都有了更深的理解。", "marks": "推荐"}
{"content": "看到压缩那里都能理解，后面汇编呀，操作系统开始理解起来就有点不懂了。基础性知识还是有点欠缺。", "marks": "还行"}
{"content": "读起来还真得有点基础，但作者已经尽力了，计算机这东西本来就是工程领域的创造，必须具备一定理论基础才能读懂。", "marks": "推荐"}
{"content": "讲得很系统，很通俗，很适合科普和入门，写得非常好。\n尤其适合学过一些计算机知识，然后想回头系统学习计算机程序的开始读物", "marks": "力荐"}
{"content": "内容浅显易懂。码代码的人还需了解底层啊。", "marks": "力荐"}
{"content": "计算机原理欠下的债，要还啊。  挺适合我的，受益匪浅。", "marks": "力荐"}
{"content": "确实通俗易懂。那几个专栏简直闲得蛋疼。", "marks": "力荐"}
{"content": "内容适合入门,但是比较分散,同时行文啰嗦,感觉这是我读到的基本日本书的通病", "marks": "推荐"}
{"content": "讲得比较浅，适合给小女生科普", "marks": "推荐"}
{"content": "入门时候遇到这本书就好了!", "marks": "推荐"}
{"content": "相对 简单易懂，但有些必要的东西没说明白，代码不怎么漂亮", "marks": "还行"}
{"content": "一本有趣有基础的书，内容不多，但足以引发兴趣。", "marks": "推荐"}
{"content": "大体心里有个谱！完全了解是不够的。", "marks": "推荐"}
{"content": "零基础小白表示看起来略费劲。。语言干巴巴的", "marks": "还行"}
{"content": "浅显易懂 适合轻松地阅读", "marks": "推荐"}
{"content": "从整体感受计算机，消除陌生感，走入编程的大坑", "marks": "推荐"}
{"content": "整体非常不错，简洁易懂。对于我们这种非计算机专业，然后又经常需要编程的人来说，比较合适，一两天就能了解底层的东西。汇编和CPU那部分讲的很好。", "marks": "力荐"}
{"content": "日本人真会写书。", "marks": "推荐"}
{"content": "从硬件底层讲解了程序是如何跑起来的，包括IC，汇编指令，C语言，编译器，内存，CPU。", "marks": "推荐"}
{"content": "很棒的入门书，比科班的教材有趣多了，但是看完了还是得去看教材。但再读教材就不是完全零基础了。算是帮助理解的课外读物吧。", "marks": "推荐"}
{"content": "程序原理入门书，浅显细致全面，日本风格技术书。", "marks": "力荐"}
{"content": "2015年9月读：这本书并不适合已经看过人邮大部头著作的人回头看，它就是专门为新手而写，涉及各个概念且讲解的通俗易懂，当然浅，但这正是新手所需要的特质，后面补人邮大部头。", "marks": "推荐"}
{"content": "很有意思的一本书，一看就懂。不像老师上课和那些“教课范本”那样枯燥。看完就想去学汇编了，感觉好有趣！", "marks": "力荐"}
{"content": "怎么样？是不是发现有一些问题无法简单地解释清楚呢？下面是笔者的答案和解析，供大家参考。", "marks": "力荐"}
{"content": "通俗 读完一遍就好", "marks": "力荐"}
{"content": "计算机组成原理的趣味解读版，语言通俗易懂，图解很到位，很适合初学者。", "marks": "力荐"}
{"content": "一本剖析程序如何运行科普书籍，从源代码、编译器、本地代码执行有一个完整和详细的解说。对初学者有很大的帮助。", "marks": "力荐"}
{"content": "通俗易懂，虽然深度很浅，但其本质目的达到了，确实是好书", "marks": "力荐"}
{"content": "书还不错，就是看的时候总想起大学计算机组成原理课，专业人员看的话挺好，非专业人员可能看不下去", "marks": "推荐"}
{"content": "这本书本身的内容，非常精妙！失败是在文案：这绝非入门书，甚至不能叫图解。最贴切的书名应该是《统计学习，从最小均方误差说开去》。私以为，入门机器学习途径有二，一是受深度学习感召，从感知器始，再来输入/单隐层/输出的标准神经网络结构，到多层感知器，再由自动编码、RNN和CNN渐入DNN家族，这种宏观视野有助于建立“模型-优化算法-准则”的机器学习大观。另一条是从统计入手，贝叶斯-似然估计-均方误差-线性判别-支持向量，推而广之到集成、度量学习、降维等，以代数与统计为主，从公式推演。本书是罕见的后一条路，起点不低，LS直接上核，给的第一个公式概括性极强，看出作者厚积薄发，但不适合初学！！！倒是已对整个ML领域走一圈回头读会醍醐灌顶。另外，一些术语（日语译法）和常用的不一致，但不影响理解。", "marks": "推荐"}
{"content": "大部分内容是公式，图解只是噱头，看了也没有什么帮助", "marks": "很差"}
{"content": "这书太坑了，相比日本人写的其他漫画入门书，比如漫画数据库、漫画线性代数，这本书太专业了，完全不像是让你入门的漫画书，公式太多，所谓的图解的“图”，难道就是大部分机器学习书都有的图么。。。", "marks": "较差"}
{"content": "比较失望，大部分都在讲解公式，有一些基本的统计和概率论内容，但是翻译的很不好。都不是用统计学通用名词，怪怪的", "marks": "较差"}
{"content": "#纸质书# 3.3 分。这主要是一本插画书…… 吧。", "marks": "还行"}
{"content": "有点意思，写的很精简，但是没听过课，去读又难理解", "marks": "还行"}
{"content": "尼玛都没图这也叫图解？公式贼多。建议看《机器学习实战》", "marks": "较差"}
{"content": "对于机器学习介绍得比较全面详细。翻译得有错误。另外里面公式偏多，对于门外汉来说有许多东西不能一下子看懂，所以我还得再找一些基础书籍看看才能继续看机器学习相关的内容了。", "marks": "还行"}
{"content": "极好，非常适合初学者。日本人，有点意思。", "marks": "力荐"}
{"content": "不推荐", "marks": "还行"}
{"content": "图的还可以，解的太专业。看过几页就完全看不懂了，让人恨不得埋头钻研数学，不愧是博士写给博士译，博士译给博士读的……", "marks": "还行"}
{"content": "适合建立概念", "marks": "推荐"}
{"content": "好难，好复杂。", "marks": "推荐"}
{"content": "需要一定的数学基础，这本图解也不简单呐", "marks": "还行"}
{"content": "这也叫图解。。。", "marks": "还行"}
{"content": "想当入门书的可要慎重哦", "marks": "较差"}
{"content": "很好的入门书，虽然趣味性少了点", "marks": "推荐"}
{"content": "“图解”就是随便画点不相干的漫画", "marks": "还行"}
{"content": "好入门，岛国的细致风格。", "marks": "推荐"}
{"content": "大量的公式堆砌，例子／背景／推导非常的少，和其他日本作者出的书的那种深入浅出差别很大，根本不适合什么轻松入门，让人失望", "marks": "较差"}
{"content": "不推荐，太差了，无论是入门，进阶还是当参考书都不合适。", "marks": "很差"}
{"content": "萌图。较多公式，但没有太多推导过程。适合轻松入门，不适合严肃学习", "marks": "还行"}
{"content": "什么图解！跟高数差不多一个难度！", "marks": "很差"}
{"content": "画几幅图，根本没用", "marks": "较差"}
{"content": "如果你对机器学习完全无基础的话，这本书不是一本好的入门书，因为它有很多的公式，并且没有给出证明，很难让人一下子接受。但如果你之前看过一些其它的书并且有一定矩阵的基础的话，你会发现这本书有着它自身的优点：有很多直观的解释，算法的优缺点理得很顺，整体的框架构造得很好，还有Matlab代码。如果想对Machine Learning有更深入的理解的话，肯定还要看其它的书籍，还要更多的实践。", "marks": "推荐"}
{"content": "图解类图书，很难兼顾内容的严谨详实和简单形象。我认为作者是用了心的，对于学过一些机器学习理论的人来看这本书还是会很有收获的。但确实不能用来入门。\n\n对了，还有贯穿全书那个蛙(ha?)太让人出戏。。。", "marks": "力荐"}
{"content": "比较晦涩难懂的一本“图解”类书籍，也有可能我是小白看不懂，没看完，放弃了去看西瓜书", "marks": "还行"}
{"content": "插图是来秀智商下限的吗。。。", "marks": "较差"}
{"content": "反正翻了几遍我是没看进去什么 推荐《机器学习实战》", "marks": "很差"}
{"content": "不说专业人士如何看本书内容  单单看封面 “轻松入门” 几个字足以误导众人", "marks": "较差"}
{"content": "七分。这本书并不是适合作为入门书籍，然而评论里清一色的ml投机分子试图以此为捷径入门，显然不可取。适合看过coursera cs229的人巩固提升或者用作demo 玩具算法演示或者增加一些直观的推导，公式虽多却都是入门级的矩阵和概率知识。想要深钻就去看论文，半吊子蓝翔app程序员线性代数都没学懂就来装逼喷？", "marks": "还行"}
{"content": "一本侧重实现代码的机器学习参考手册。冲着“图解”而来，不过诸多图鸡肋。内容果然“角度新颖“”与其他书籍有异”，不易读不宜懂，不适入门。代码能辅助理解，未曾动手练习。", "marks": "还行"}
{"content": "看过图解系列的其它计算机书籍，这本最差。图解面向的一般都是初学者，但书里用的语言专业性很强，语言也没有通俗易懂，插图根本对理解毫无帮助，不推荐购买", "marks": "很差"}
{"content": "这个图解的名字有点骗人了。公式很多，没有细究，大概能意会。但是好像并没有什么卵用。", "marks": "还行"}
{"content": "不得不说真心很一般，需要有一定基础，然而有一定基础的人怎么可能看这玩意。。。\n", "marks": "还行"}
{"content": "图解就是放一片萌图，但是复杂的地方放一堆公式", "marks": "还行"}
{"content": "从最基础的最小二乘、SVM等讲到部分前沿话题（作者果不其然把密度比推断等自己研究的问题也介绍了一下），图文并茂，内容精炼。无论小白还是有一定基础的读者都可以从中获得一些有用信息，本书就内容而言我是强烈推荐的。不过不知道是不是译者没怎么接触过国内术语，中译本中存在少量可能会影响到内容理解的翻译错误。另外本书毕竟还有科普的成分，所以个别表达也没有苛求严谨。", "marks": "推荐"}
{"content": "没有想象的那么好啊", "marks": "还行"}
{"content": "为了读懂里面的内容，回去借了本概率论与数理统计，不是看图说话的那种，需要用到大学的数学相关知识。\n看了前面的几章，感觉阅读不是很友好。", "marks": "还行"}
{"content": "一些复杂的内容没有被很好的解释", "marks": "推荐"}
{"content": "所谓的图解就是配了些完全不相关的插画，插画中表现出一种焦躁或者顿悟的感情，跟机器学习方面没有一毛钱关系。另外其他的插图也都是一般机器学习书籍中都有的，另外有很多公式，需要自己反复推演。代码专门用一个电脑状的图片框起来就算做是图解了？整体画风有点像小学数学课本，小明小红和老师。", "marks": "较差"}
{"content": "bullshit", "marks": "较差"}
{"content": "作者选择解析的源码不够全面，可能作者选择的是他最熟悉的吧，如果就当这本书算是源码解析方面的补漏还可以。", "marks": "还行"}
{"content": "虽然里面很多印刷错误以及校准错误，但是内容来说还是不错。断断续续看了一年。其实觉得这种类型的书还是分卷出比较好。这样各取所需就行了。这种写法都想一次性全部包括，但是不太可能啊。", "marks": "推荐"}
{"content": "搞不清作者到底想不想好好写这本书，挺厚的，但看完觉得除了大框架概念之外，没什么技术营养……疏漏就不说了", "marks": "还行"}
{"content": "去年看过一遍，根本找不到北，还觉得这本书太深奥了，今年看过深入理解android(1,2,3)后，又翻了翻这本书，突然感觉，一切都是那么好理解，而且知识覆盖率也相当大，但都不是特别深入", "marks": "推荐"}
{"content": "统计学习理论与统计学习理论的本质一起读，用了差不多10多天的时间，部分证明很多都跳过，但大概看过并不难理解。 书中的思路很清晰，而且很对称很完美，终于令我对学习理论有了新的理解，廓然一心的感觉，真心不错。", "marks": "力荐"}
{"content": "昨天购买的，作为自己新年的礼物，实现自己自强的武器。", "marks": "推荐"}
{"content": "讲趋势，技术点就说了 viewport", "marks": "还行"}
{"content": "本书最有价值的两个知识点：viewport 和移动端事件，其实我还是想说，写篇文章就够了", "marks": "推荐"}
{"content": "一些移动开发的基础知识，居然定价这么高，也就是赶上移动开发这个风口了。", "marks": "还行"}
{"content": "梳理基本概念，视口-viewport", "marks": "推荐"}
{"content": "翻译实在有点…看了之后更迷糊了", "marks": "还行"}
{"content": "移动 Web 开发必备", "marks": "力荐"}
{"content": "作者的研究移动web的方法很值得学习。但如最后所说不要把这本书当做真理。", "marks": "推荐"}
{"content": "对移动web的开发，测试讲的比较多，各种平台，浏览器的差异介绍，对开发健壮的移动web前端有帮助", "marks": "推荐"}
{"content": "真不咋滴", "marks": "很差"}
{"content": "失效的太多", "marks": "较差"}
{"content": "较详细的阐述了移动web开发的方方面面和注意事项", "marks": "还行"}
{"content": "整本书都在讲的是渔而非鱼，很薄的书，却承载了丰富的内容，相信我你值得拥有，移动的浪潮，不容错过", "marks": "推荐"}
{"content": "基础科普 还可以吧 其实有点老了", "marks": "还行"}
{"content": "作为移动开发背景和坑的知识普及书还是很不错的，关于viewport的研究很彻底，知识点也只谈最难找到资料的那部分，很值", "marks": "力荐"}
{"content": "对移动端前端开发的各方面都有介绍 但都不深入 写成一篇文章也可以的其实 ", "marks": "还行"}
{"content": "薄薄一本，真的不怎么样", "marks": "还行"}
{"content": "2016读的第一本书，ppk大神比较笼统而全面的的介绍了移动开发的一些基础知识和思路，可以当做基础书来看，但是感觉翻译的不咋地，有机会看看原版吧", "marks": "推荐"}
{"content": "翻译不佳，有些词不翻译还更好~", "marks": "还行"}
{"content": "并没有什么干货。。。", "marks": "还行"}
{"content": "对web开发者有价值的就viewpoint-视口和事件那些内容  ", "marks": "还行"}
{"content": "一直以来就没有搞清楚移动web与PCweb的区别，所以这样一本书还是不错的，但是作者力避讲述一些个性化的东西，但是最终却导致可讲的东西不多，读完整本书感觉没讲啥重要的东西。", "marks": "还行"}
{"content": "讲的很不错值得学习", "marks": "力荐"}
{"content": "看后....移动端浏览器真是五花八门", "marks": "还行"}
{"content": "一开始只是看到别人推荐才买来看看\n里面干货没发现 倒是了解了一些小知识", "marks": "推荐"}
{"content": "学校图书馆借来的书，给我梳理了很多基本概念。", "marks": "推荐"}
{"content": "为了黑客的荣耀！", "marks": "力荐"}
{"content": "参与了本书的审阅工作。其实在面对自由软件算是那个没有熬出来的人啊，每次都半途而废，现在的自由软件比我小时候要友好很多，各种可以参考的资料也更容易获得。这是时代对自由软件来说是一个好时代。", "marks": "推荐"}
{"content": "教主的传教手册", "marks": "力荐"}
{"content": "我们一起把这本书改得越来越好吧！黑客文化在美国已经好几十年了，但是感觉还那么新，一点也不陈旧。人们不断的回顾这段历史，也许因为未来人们会深刻地受到这段历史的影响。", "marks": "力荐"}
{"content": "二十世纪最后一位黑客", "marks": "力荐"}
{"content": "我从来不欣赏这种由第三方传记作者记录的叙事式体的传记，有卖弄风骚之嫌。同时，不可否认，通过该书，我也认识了RMS，在这样的文化体系下，他的出现并不奇怪，代表了一种自由精神。换个角度想，在六七十年代的美国，在计算机产业里，已经形成了伦理讨论、技术路线等至关重要的环节，不禁感叹现在国内IT业依然没有这种氛围，作为IT从业者，需要反思。", "marks": "推荐"}
{"content": "其实在大学读书的时候，就觉得微软的东西太闭塞，社区太封闭。如果只是拿微软的工具开发那是效率高的，但是对于求学中的学生，那些喜欢深究的，10年前宽带还不普及的那代人来说，是痛苦的！\n为RS的执着精神表示敬佩！文化之所以重要，就是能通过了解历史来提高兴趣，能通过批判性思维辨识当前的选择对未来的影响，能有支持一生的激励！无论是是技术社区还是住宅社区，都是个体成长的一部分，人生的一大部分！", "marks": "还行"}
{"content": "就像英军看着苏联占领柏林。", "marks": "还行"}
{"content": "2015/10/09 #Read\nHappy Hacking, 被斯托曼老爷子这么执着的黑客精神感动了！", "marks": "力荐"}
{"content": "自由软件理念的起源，一个偏执的信仰追求者。值得阅读。黑客历史的缅怀。", "marks": "推荐"}
{"content": "this free is that free", "marks": "推荐"}
{"content": "在阅读了《大教堂与集市》、《乔布斯传》以后再读这本书，更能理解计算机世界20世纪70年代到2000年前后发生的事情，也更能理解Richard Stallman, Linus Tovarlds, Steve Jobs 这些人让人无法理解的偏执追求背后的原因。只想说：若为自由故，一切皆可抛！", "marks": "推荐"}
{"content": "固执，自由！", "marks": "还行"}
{"content": "前半部分写的不错，后半部分写成社区新闻了，太无聊了，很怀疑作者是不是写累了糊弄我！", "marks": "较差"}
{"content": "一个理想主义者的奋斗历程", "marks": "力荐"}
{"content": "stallman本来是顶尖的程序员，但是他成为了一个伟大的自由软件运动发起者。另外，作为一本传记，这本书内容也太少了点。", "marks": "推荐"}
{"content": "这本书记载了那个我们知道的斯托曼", "marks": "推荐"}
{"content": "1.Stallman所一直争取的软件的自由，与思想自由的自由、言论自由的自由、结社自由的自由等，是同一样东西 2.Stallman本人是个彻头彻尾的自由主义者，他对自由的政治追求反映在他在软件行动中，他性格里对自由的固执也与自由软件运动相辅相成密不可分 3.Stallman所做的，本质上就是促进自由、平等、博爱这些普世价值在软件领域的散播", "marks": "力荐"}
{"content": "理查德斯托曼的任何一个成就都是可以载入史册的，但是让人佩服的不仅仅是他的专业成就，更是他的独立性吧。让人又爱又恨的性格。当然看着本书感触的更多是个人的渺小吧，所谓差距吧。", "marks": "力荐"}
{"content": "煎虾腐皮卷是印象最深刻的…", "marks": "还行"}
{"content": "开源不等于自由，在黑客文化中，优雅、简洁的创新是被高度崇尚的，就像在纯科学的领域。致敬自由软件之父：）", "marks": "力荐"}
{"content": "If Code is Free Why Not Me?  -- RMS", "marks": "力荐"}
{"content": "在我以前的印象里，斯托曼就和一个宗教领袖一样神秘且令人尊敬,经常看一些黑客书籍会听到他的名字。这本书也让斯托曼在我脑海中的印象渐渐的清晰起来，他其实也是一个有血有肉，脾气倔强，难以合作的怪老头。确实在21世纪的现代，当年的自由软件运动的原始教义被慢慢的弱化，但斯托曼依然在坚持，几十年来，这一点从没见过，我喜欢他这种固执，也尊敬他。而且作为自由软件之父也会被人永远铭记.--2015年7月26日于北京", "marks": "推荐"}
{"content": "这下对GPL有了更直观的了解", "marks": "推荐"}
{"content": "粉碎孤独", "marks": "力荐"}
{"content": "感觉把14章挪到开始更好", "marks": "力荐"}
{"content": "英文原版在哪里？？？", "marks": "力荐"}
{"content": "有点儿枯燥", "marks": "还行"}
{"content": "感觉这本书是在黑查理德，表示个人不喜欢查理德", "marks": "力荐"}
{"content": "很有人格魅力的一个人，思想虽然不被主流社会所接受，但是确实有很伟大的理想", "marks": "力荐"}
{"content": "一般", "marks": "还行"}
{"content": "理论指导实践", "marks": "力荐"}
{"content": "不涉及深度学习，都是比较传统的机器学习方法", "marks": "还行"}
{"content": "以带惩罚的线性回归为主，介绍了机器学习的基本流程，适合入门。", "marks": "还行"}
{"content": "没兴趣深读", "marks": "还行"}
{"content": "神奇的书。知识体系总结分析可视化……。", "marks": "推荐"}
{"content": "简单一翻，工具性目的阅读。", "marks": "还行"}
{"content": "不是数据分析的背景 以知识图谱为纲 内容庞杂 涵盖领域多 工具类有些偏门 属于过往研究体系的总结", "marks": "推荐"}
{"content": "现在看这种书基本看不下去也看不懂。我想了想自己能走的路主要剩下三种：1、社会工程学；2、从所有权角度控制IT公司的核心部分，这是社会工程学的极致形态；3、雇佣一个专业人士。", "marks": "还行"}
{"content": "好啊，牛啊，深啊", "marks": "力荐"}
{"content": "有所收获，读源码的方式值得学习。篇幅比较短，贴了比较多的代码，有些地方解释的不够。domain相关的几个lib的细节等到做过一些实际应用后再对照或许会有更好的理解", "marks": "推荐"}
{"content": "贴代码太多，图例和讲解太少，但好在基本讲清楚，后面对Streaming、SQL、GraphX、Mllib基本讲解也不错。（2015.6.2jd）", "marks": "还行"}
{"content": "代码贴太多，没看代码的我很快就过了一遍", "marks": "还行"}
{"content": "我的意见是很一般般！讲基本原理的部分没有讲太清楚，含含糊糊的，讲底层的时候全是大段的代码，让人云里雾里。", "marks": "还行"}
{"content": "支持的是1.0版本，有点老，配合官方文档一起食用", "marks": "还行"}
{"content": "我错了我再也不买国人写的书了", "marks": "较差"}
{"content": "有所收获，但是这本书的讲解确实太粗略了。我觉得如果三四百页都用来讲解spark-core差不多。简单地列出代码加上些许讲解，这能称为源码剖析？", "marks": "还行"}
{"content": "有几个问题：一，图太少，流程图类图这些几乎没有，描述很无力；二，贴代码不写明在哪个文件内，很难结合书和代码一起看；三，版本略久，和最新版代码差别较大", "marks": "较差"}
{"content": "介绍了一些有趣的东西，比如Clojure、Elixir、OpenCL、OpenGL、Spark和Storm。个人认为用Hadoop是个败笔，Spark那么好的框架不用，用Hadoop这种难用落后的框架", "marks": "推荐"}
{"content": "既然是讲并发模型，感觉不应该这么强语言相关。\n7个并发模型有3个选用的clojure，不熟悉的话只能草草略过。\nPS：就连CSP模型都选的clojure   orz", "marks": "推荐"}
{"content": "太多clojure的内容了，副标题的go也是骗人的", "marks": "还行"}
{"content": "语言还是讲的太多了点。感觉一些语法层面的解说完全没必要啊。", "marks": "较差"}
{"content": "今年读到超多好书，但这本书仍是俺2015年遇到的最最佳书之一。", "marks": "力荐"}
{"content": "#图灵# #PDF# 3.7 分。面广。不过感觉至少读 Clojure 的两章都需要了解语言特性，必须有辅助材料。不过“七周七”系列一直是这样的吧。", "marks": "推荐"}
{"content": "咦，很少见到哪本书中文译本的评分高于原版的", "marks": "推荐"}
{"content": "书名和目录就决定了五星的质量，书不厚，但讲了Akka/Erlang的Actor，Go的CSP等等", "marks": "力荐"}
{"content": "说实话除了前几章，没怎么看懂", "marks": "力荐"}
{"content": "暂时4星，只读了Java部分，在Clojure和Scala的部分由于不熟悉暂时打住，闲暇时学习Clojure后再来继续", "marks": "推荐"}
{"content": "五一在南山书城大概翻了下，actor那章讲的比那些scala的书好太多了", "marks": "推荐"}
{"content": "讲的比较泛，看看结论就好", "marks": "还行"}
{"content": "讲的东西挺多，但是深入看还得自己去找资料。而且将的并不是很浅显易懂。", "marks": "推荐"}
{"content": "quick and straight", "marks": "推荐"}
{"content": "挺不错的，简单扼要", "marks": "推荐"}
{"content": "虽然书很薄，但是对各个并发模型都讲解的很细致深入。不过最好还是有函数式编程的基础再看。", "marks": "推荐"}
{"content": "很好的科普书，可以对各种模型的优势弱势有一个common sense，对go语言使用的channel 和gorutinue的clojure实现也有介绍。（忽然想起有个基友在页游公司写服务器使用Erlang……", "marks": "推荐"}
{"content": "讲的不错，有大概了解", "marks": "推荐"}
{"content": "以前提到并发只知道多线程和锁，其他并发还有很多其他概念和技术，着实拓宽的技术面和见解，很多概念还不是非常清晰，后面还是要不停翻阅作为参考。", "marks": "推荐"}
{"content": "closure的语法真绕。。预发层面的东西太多了一点。actor、csp模型的本质的东西讲的不够深入。", "marks": "还行"}
{"content": "有三章是用Clojure来讲的，一章Elixir来讲的，好好的CSP不是用Go来讲更好吗？Actor用Scala的Akka讲不是更好. 如果想看线程和锁这一部分的话，那它讲的真的是最基础的一部分了．", "marks": "还行"}
{"content": "这本书思路很开阔，值得一看，当然要全部搞懂是不可能的。我觉得对于一个复杂的话题，这种多看看多想想是个很好的模式，钻牛角尖很容易帆船。", "marks": "还行"}
{"content": "感觉还不错，挺薄的一本书，看完挺长见识的。每个模型没有很深入，但基本点都说到了", "marks": "推荐"}
{"content": "修改评论，二刷本书，逐渐感受到了它的魅力", "marks": "推荐"}
{"content": "还不错，通过各种示例讲解了不少并发模型的基础概念", "marks": "还行"}
{"content": "没读完，书中实例讲解为主，原理性的东西欠缺。讲线程和锁那一章还不错。", "marks": "还行"}
{"content": "受限于个人语言基础，只先粗略度一遍。值得后续细读，尤其actor和CSP模型，现在没啥体会", "marks": "推荐"}
{"content": "讲了锁（很蛋疼）、函数式不变性在并发里的优势、Actor模型、channel、GPU、lambda架构等。linus说的对，不要高看并发，其实场景很有限", "marks": "推荐"}
{"content": "讲的比较泛，提纲挈领的作用，要用erlang做示例语言就好了", "marks": "推荐"}
{"content": "挺浅显的入门书吧，很简明易懂", "marks": "推荐"}
{"content": "介绍性质的，蛮浅显的，了解下是不错，熟悉这块的话1,2天就能看完", "marks": "推荐"}
{"content": "翻译得一般。", "marks": "还行"}
{"content": "前几章写得更好。Clojure讲的比较多，也许以后会用起来。", "marks": "还行"}
{"content": "从最基本的线程讲起，谈到了我们在处理并发问题需要面临的问题。深入浅出，值得推荐。", "marks": "推荐"}
{"content": "快速翻过", "marks": "还行"}
{"content": "信息量确实很大，但只适合浮光掠影的阅读。", "marks": "还行"}
{"content": "并发不止于线程与锁，还有：函数式编程、Clojure、actor、通信顺序进程、数据级并行和Lambda架构。", "marks": "推荐"}
{"content": "比较概要", "marks": "还行"}
{"content": "并发模型和函数式编程语法介绍参杂在一起挺乱的，快速认识常见并发模型如actor，但具体应用的业务场景就要看别的书了", "marks": "还行"}
{"content": "简单扼要的介绍了并发系统", "marks": "推荐"}
{"content": "有点意思，但是觉得怪怪的，不是特别接地气", "marks": "推荐"}
{"content": "对我这种Java er来说，第一二章还能看得清楚，从第三章函数式编程开始，整个人就感觉不大好了，看来还得加强自己的内功，：P", "marks": "推荐"}
{"content": "当在各种科技播客上纷纷听到推荐七周系列，并在2015年了解到自己的高中学长翻译了这本《七周七并发模型》后，毫不犹豫地第一时间在线预订。一共9章，两次读完，刚拿到书看了1～5章，在这个周末读完了剩下的章节。因为之前阅读的姿势不正确，总想细究示例代码，待看到第6章CSP时发现是Clojure而非热门的Go语言时，把书暂时放下了——之前章节介绍的Clojure语法忘了差不多。最近工作上和Go语言有关，重回CSP章节。因为已有“A Tour of Go”的基础，也容易对比两个语言在CSP上的特性。正如“推荐序”部分所说，语言虽重要，但只是表象，作者希望让更多的人了解业界已有的并发和并行工具。七周系列不是读者成为某7个领域的专家，而是拓宽他们的视野，且保有深度。阅读过程中感觉世界被点亮，感谢作者译者！", "marks": "力荐"}
{"content": "过于语言化。", "marks": "还行"}
{"content": "讲的比较简略，封面上写着大大的 Java 和 Go，其实大部分代码都是 Clojure 啦。", "marks": "推荐"}
{"content": "用clojure的实现细节很多。函数式编程和并发的关系不是很清楚，只是稍微提到了STM、原子操作、固定类型等。很多并发的实现和clojure语言的实现相关。CSP讲得不是很透彻，没有用golang还是用了clojure来讲，感觉有点怪。", "marks": "推荐"}
{"content": "辣鸡", "marks": "较差"}
{"content": "P53", "marks": "推荐"}
{"content": "不错的入门书", "marks": "推荐"}
{"content": "打开了新世界的大门！", "marks": "力荐"}
{"content": "感觉在讲几种并发模型在几种语言的应用，而不是原理，这类书大概就这样吧", "marks": "还行"}
{"content": "可能是自己功力不够，虽然是讲并发模型，但是语言层面看起来还是相当吃力，到后来动手运行例子也坚持不下去了。不过倒是开了眼界，虽然某些并发模型还没用到过，但是有一些印象也很好。", "marks": "还行"}
{"content": "前面部分讲的非常棒，后面的CSP Actor感觉不是很好。这本书更大的意义在于开拓了自己的眼界。", "marks": "推荐"}
{"content": "  泛读  了解下并发  感觉这本书可以写得更短一点", "marks": "推荐"}
{"content": "各种并发模型讲得很清楚 受益匪浅", "marks": "推荐"}
{"content": "orz，功力不够读不下去，挖坑待回来补完。", "marks": "推荐"}
{"content": "Quick scan", "marks": "力荐"}
{"content": "讲述了不同语言并发设计上的模式和优缺点对比，知识面之广令人佩服，无论熟悉不熟悉closure erlang elixer opencl等语言，都值得一看，思想是可以相互借鉴的", "marks": "推荐"}
{"content": "【2017.06.20】大二的时候看过，一知半解，现在复习一下。总体而言，也就是七个 demo 级别的样例。扩展思路可以，然而要想深入，还是得看具体实践。某种程度上，为了增加并发系统的性能，可以把思路从减少临界区范围扩展到从业务设计，模型选择上避免临界区。", "marks": "推荐"}
{"content": "整体还是不错的，java的部分基本面已经覆盖到了，更多的新意在clojure的函数式编程以及go和CSP模型，clojure底层还是依赖jvm，所以其中的原子变量，copyonwrite,future基本还是java中的概念，很好奇actor的实现，如何做到那么轻量级（甚至每个操作一个go）,又能做到并发，难道是共用一个全局的线程池？Erlang的actor模型是个亮点，非常简洁和有效，而且还支持分布式，牛逼！还有那个GPU太底层，一般的非算法场景也用不到，最后说到的hadoop和Storm就是老生长谈，但值得关注", "marks": "推荐"}
{"content": "2015年唯一一本没看懂的，C10K问题那里过来的，前路漫漫", "marks": "力荐"}
{"content": "看了前面两章java的，并发编程入门书籍", "marks": "还行"}
{"content": "不错的介绍分布式和开发框架的书籍啦", "marks": "力荐"}
{"content": "应该专注于模型本身去讲的，然而作者一直尝试解释每一门语言的语法特点，有点吃力不讨好的感觉，最后，代码片段中不断出现的《银河系漫游指南》的梗实在是太欢乐了。", "marks": "推荐"}
{"content": "偶有惊艳，闲时可以翻看。", "marks": "还行"}
{"content": "略过时", "marks": "推荐"}
{"content": "一天看完。。。语言知识太多。。。golang那个标题骗人。。。感觉最大的收获在模型的一些思想", "marks": "还行"}
{"content": "算是比较良心的配套答案了，非常详尽，还有出题思路。", "marks": "力荐"}
{"content": "与原书一起，相得益彰", "marks": "力荐"}
{"content": "适合用来参考，但也有一些错误，要参照CP5仔细分析", "marks": "推荐"}
{"content": "配套练习题，好好学习天天向上！", "marks": "力荐"}
{"content": "配套 不过感觉叙述有点啰嗦", "marks": "推荐"}
{"content": "很正经教游戏开发的书，只是以Unity作为传授工具，老手也能看看里面的一些游戏制作思路。作者不愧是老牌厂商的开发人员，讲的细节都是游戏开发着实要考虑的问题，看得出是实战经验。 (2017补充： 出修订版了，而且Unity5.x对应代码也可以下载到。)", "marks": "力荐"}
{"content": "10个小游戏的主要设计思路，对重点代码做了讲解。风格很细腻，又画图又做比喻，生怕读者听不懂。", "marks": "推荐"}
{"content": "实例的附件非常完整，完成度高，素材也做得挺好。从作者写作的风格看似对新手友好，其实非常不适于入门（日本程序员小哥说话写书都这么呀撒西吗）。。10个实例只从游戏思路和核心功能上做了解析，其他的只能靠自己去看给的附件；提供设计游戏的灵感大概是不错的吧。相比起来Geig那本Unity游戏开发入门经典好用太多。", "marks": "还行"}
{"content": "比起技术，此书更多的是说关于游戏设计方面的知识。从中可以看出日式游戏细腻风格 的由来", "marks": "推荐"}
{"content": "日本人写书还真不错，要是附录有个技术索引表就完美了", "marks": "力荐"}
{"content": "没有讲一个项目从0开始怎么做出来的。小技巧讲了一些。这书没啥大用", "marks": "较差"}
{"content": "目前看起来可以算u3d的入门神作了吧", "marks": "推荐"}
{"content": "这本书讲的是游戏核心的思路，需要一定的游戏编程经验。哪些说简单的，你们看完书不看源码，能靠自己敲下代码实现整个项目吗？是不是觉得第0章的小儿科以为后面10个案例也同样小儿科。", "marks": "推荐"}
{"content": "如果是初学者，这本书比市面上的很多u3d资料更靠谱。讲解思路清晰。", "marks": "力荐"}
{"content": "初学者请绕道。\n1. 本书关注点在于游戏思路，而不是手把手的教你写项目，不是 unity 的入门书籍，初学者请绕道。\n2. 感觉译者有点偷懒，资源都没有及时更新，u5 版本的第十章从 15 年 4 月起一直更新现在也没见踪影。\n3. 为了方便大家，我把日文原版资源（16年更新，适配 u5.3），需者自取（http://www006.upp.so-net.ne.jp/chewee/uni-mini-hon/download.htm）", "marks": "推荐"}
{"content": "不愧是日本人写的书，抛开矛盾不说，日本产品的质量世界领先，日本的游戏业更是世界领先。日本人的认真值得敬佩。", "marks": "力荐"}
{"content": "读过《社会工程 卷2》 ★★★ “跟电影一样，所谓续集大都是抱着圈钱目的搞的狗尾续貂，相比起第一本来，从这本薄薄的页数和妖娆的封面推荐词我就能感受到出版社满满的庸俗和恶意", "marks": "还行"}
{"content": "so so", "marks": "还行"}
{"content": "表情系统在哪里下载？", "marks": "力荐"}
{"content": "颜艺的自我修养", "marks": "推荐"}
{"content": "要懂技术，懂心理学，太理论实操不易", "marks": "推荐"}
{"content": "读着总有伪科学的感觉...", "marks": "推荐"}
{"content": "有一定的意义，但很多也要靠训练和天份。", "marks": "推荐"}
{"content": "作为一本渗透测试基础教程，还可以。各种工具的介绍，比自己搜索省点时间。", "marks": "推荐"}
{"content": "其实是3-3.5分。很多内容已经更新了。涉及工具比较多，每个都来不及细讲，但是可以有一个基本的理解，拿来打基础还可以。", "marks": "推荐"}
{"content": "不知道这书到底要怎么定位 就是一本kali内置工具的简易说明书嘛", "marks": "还行"}
{"content": "渗透入门，了解了解", "marks": "力荐"}
{"content": "工具不全", "marks": "还行"}
{"content": "像在看故事书。不要被标题骗了，和发布与部署关系不大。", "marks": "还行"}
{"content": "翻译不行", "marks": "较差"}
{"content": "终于看到中文版了", "marks": "力荐"}
{"content": "帮助你理解这个世界的复杂性", "marks": "力荐"}
{"content": "非常非常棒，进阶必备", "marks": "力荐"}
{"content": "从稳定性和容量等比较有价值的角度，提出了建议和方法。值得一读，中文翻译得勉强\n", "marks": "推荐"}
{"content": "很简单", "marks": "还行"}
{"content": "本来以为是讲发布过程的，没想到是讲系统稳定性的。不过写得还算到位。", "marks": "推荐"}
{"content": "原来豆瓣阅读上标记过了并不会同步过来。。。内容很好，话有点罗嗦（大概率译者的锅）。除开前面一小部分，其余部分翻译完全不知所云，看得非常累", "marks": "推荐"}
{"content": "讲了线上故障，服务化，容量规划等提升线上系统可用性的模式和反模式，只是翻译的太烂了。。。", "marks": "推荐"}
{"content": "译的晚了，而且译得一般。很多思想还是很值得借鉴的。架构师入门。", "marks": "还行"}
{"content": "系统发布投产开始，才是真正诞生的一天，而不是开发和设计开始。不断适应变化，但是变化本身都是有成本的，开发测试发布都是如此，所以敏捷其实反而是最强调质量的，只有自动化测试，持续集成和自动化部署，重构，全部整套的团队，技术，方法，工具充分，才有可能敏捷", "marks": "推荐"}
{"content": "这本书介绍了在设计软件过程中的一些不正确的反模式，然后解释什么才是比较不错的模式，包括集成点、架构分层、连接池、缓存、数据库等各个方面。作者结合自己的经历介绍了一些案例，看了之后还是有所感触，以前自己也遇到过作者提到的问题。在软件设计结束后发布时，作者又介绍了发布时常常遇到的一些诸如网络、集群、负载均衡、配置等问题，以及运营有关的问题。总的来说这本书还是写的比较浅显易懂的，讲的也全面，挺不错。", "marks": "力荐"}
{"content": "可能是书太老了，读的时候感觉看到目录就能大概知道具体可能要讲什么，所以个人感觉难符它的盛名， 不过对关注点的考虑倒是真的比较全面，要自己弄出这样一个完整的目录还是需要很多经验积累的。", "marks": "推荐"}
{"content": "对容量等分析，值得一读", "marks": "推荐"}
{"content": "本来应该是入门程序员必读书，介绍了线上系统可用性的各个方面，但是烂到极致的翻译把这本书变成了鸡肋。译者显然既不精通翻译，也不精通it，否则也不会把出现“如果一点点好，那么很多一定会更好”，或者“资源隔板”之类匪夷所思的词句了。", "marks": "还行"}
{"content": "翻译太烂。", "marks": "很差"}
{"content": "代码质量很高，可与算法导论对照着看。难度低于日本那本《挑战程序设计竞赛》", "marks": "力荐"}
{"content": "东拉西扯大杂烩泡菜风格。大学acm刷题可以买。不然同样的钱还是买《算法》那本划算。", "marks": "还行"}
{"content": "还需多读", "marks": "推荐"}
{"content": "写的很一般 不是因为算法课老师出期末试卷会从里头出题 还真的不会看这本书", "marks": "还行"}
{"content": "C++代码不错", "marks": "力荐"}
{"content": "简单易懂", "marks": "力荐"}
{"content": "现在电脑书真是书托太多了，这书充斥着90后的味道，VC6还号称win8可以运行也不脸红", "marks": "较差"}
{"content": "＃读万卷书行万里路＃\n很喜欢正文前的引言。\n“纸上得来终觉浅，觉知此事要躬行”。", "marks": "推荐"}
{"content": "作者邮箱居然只会自动回复。高冷干脆不留邮箱啊，浪费我写邮件的时间。这样的书本来就比较小众，会给作者写邮件的大概少之又少。懒得写了，一星不能再多。\n-------------------------------------------------------------------------------------------------------//\n更新：作者王先生专门回复了，再次感谢王先生。好书，好作者。为我的浅薄道歉。", "marks": "力荐"}
{"content": "虽然我自己也做过简单的编译器，可是看了作者的书感觉收获还是很大。作者是个用心在写书的人，真正想入门编译器，这本书可能比那些深奥难懂的编译原理更加适合吧。而且这是中国人自己写的书，确实读起来我觉得比读外国写的书更加具有亲和力。也更适合中国人的阅读习惯。（很少写这么多的书评，但是我觉得在现在大家都认为学编译原理就是只有那几本龙书，虎书，鲸书，结果一看就被弄迷糊了。那几本固然经典，天赋极佳的可以只看那几本书，可是我觉得对于大部分人，这种实战性的书籍更具意义吧。）", "marks": "力荐"}
{"content": "好书，适合想学写编译器的童鞋！", "marks": "力荐"}
{"content": "该书大大降低了学写编译器的门槛，不到5000行代码实现了一个完整编译器、链接器，非常适合编译器初学者。 ", "marks": "力荐"}
{"content": "龙书偏重理论，这本书偏重实践，很喜欢这本书", "marks": "力荐"}
{"content": "VS2010编译提示警告，可以通过编译，但不能正常执行。看起来作者并没有很好的测试过代码，不像是花了六年时间写的书（也许是让学生写的代码？）。此书的另一位作者在序中只字未提，呵呵。建议别买。", "marks": "较差"}
{"content": "很喜歡這本書, 完全就是我想要的學習方式。\r\n\r\n我看完于淵的 Orange's 一個作業系統的實現後, 完成一個小型 os, 目前打算照這本書來學習, 完成一個 compiler + linker。\r\n\r\n我習慣使用 linux, 目前已把第四章的程式 porting 到 linux。\r\n\r\n台灣出版的技術書籍已經遠遠落後中國了, 我現在幾乎都是讀簡體中文的技術書籍了。", "marks": "力荐"}
{"content": "市面上编译类书籍偏向于理论，实践类确实少，也许是工程好大！也许这本书会是编译器领域的 minix操作系统设计与实现！", "marks": "力荐"}
{"content": "上学期上的编译原理课，感觉学的很枯燥，理论很空洞。在图书馆也看了其它一些编译方面的书，没找到特别合适的编译器实验方面的书。这本书拿一个完整编译器来讲，称得上手把手来教写编译器，感觉很过瘾，也逐步理解编译原理讲的内容怎么应用了。", "marks": "力荐"}
{"content": "这本真的不推荐，虽然是强调动手二字，但简直是用代码凑页数，排版也很弱，代码完全可提供个github就行了。", "marks": "较差"}
{"content": "国内工程师写到这个水平应该算还不错的了，本来想给四星，看其花了不少功夫用介绍VisualStudio下的环境配置和用VS下开发常用概念来类比解释，降一星。", "marks": "还行"}
{"content": "你们的底层已突破天际", "marks": "推荐"}
{"content": "说实话，内容大部分和acitivi的官方文档一致。。。没什么干货。。书还死贵。。", "marks": "还行"}
{"content": "介绍activiti比较全面的一本书", "marks": "推荐"}
{"content": "重新学习activiti，重建对它的理解，可惜书里谈的还是比较浅，最后深入的章节篇幅太短，如果有深入内核的书出版就更好了。", "marks": "推荐"}
{"content": "图书馆借的，适合大致入门了解一下ACTIVITI的功能。", "marks": "还行"}
{"content": "如果要学习activiti，那么国内也就这本最权威了。\n不过咖啡兔似乎现在不怎么搞工作流了。", "marks": "还行"}
{"content": "其explorer可帮我从系统架构的角度思考，画出对开发来说更清晰的流程图", "marks": "推荐"}
{"content": "与其说是实战 不如说是翻译", "marks": "还行"}
{"content": "目前国内学activiti，这本已经是最好的选择了，代码很详细。大神级别更深入学的话还是看国外原版吧。", "marks": "力荐"}
{"content": "带我入门了，比起官方文档，看起来更快。不过现在已经发布6版本了，基于5.x的内容老了。", "marks": "推荐"}
{"content": "内容不够深入，尤其是bmpn2.0那章，而且本书没有关盘，源码也不知道在哪下，代码解释的到很仔细。收获不大。", "marks": "较差"}
{"content": "书中的很多语句不通，demo没办法跑起来，不知道怎么起了个名叫\"实战\",建议大家别买了，浪费时间。书已经扔垃圾桶了", "marks": "很差"}
{"content": "诚如书名，本书内容来自于作者一线实践总结，书中提到的很多问题和障碍正是我们平时工作中遇到的问题，所以作者很了解从业者的痛点，难能可贵的是还给出了最佳实践建议。值得一看。", "marks": "推荐"}
{"content": "不错  提出敏捷组织结构的管理方式 从不同模式的开发过程入手 提出敏捷的架构是基于迭代的 感觉自己文章比较引入螺旋式开发模型 一种基于迭代和增量的模型 书中也没提出有什么弊端 对于用户的分析进行了模块式的分析 很适合做到系统里去", "marks": "力荐"}
{"content": "2017年第四本书", "marks": "还行"}
{"content": "还可以，简单粗略的看了一遍", "marks": "还行"}
{"content": "表面看上去好简洁，实际理解不容易，甚至制造了理解障碍。不如看经典的入门书，比如《量子计算与量子信息》。", "marks": "还行"}
{"content": "阿里移动算法推荐比赛有那么一点儿用指南。。。", "marks": "还行"}
{"content": "差不多是ODPS 的第一首资料", "marks": "推荐"}
{"content": "深入浅出，浅显易懂", "marks": "力荐"}
{"content": "应该叫使用入门", "marks": "推荐"}
{"content": "粗略看了遍，内容很全，但部分内容有点过时，不知什么时候出新版本。SQL部分介绍得比较好，有案例和一些高级用法，后面可以深入了解。", "marks": "还行"}
{"content": "感觉内容组织非常混乱，看完一遍下来讲的是什么完全没印象；部分章节内容已经落伍，已经通过sql实现的功能为何还要讲如何用hadoop MR实现？每章讲一点就开始讲工具怎么安装，分析代码。应用场景太多，不是每个读者都需要，集中放在最后两三章内容就够了。真正odps自己的东西讲的太少。", "marks": "较差"}
{"content": "如果你只是想学会这么用odps，看这本就够用了。", "marks": "推荐"}
{"content": "感觉这本书已过时，过时是因为好几年前的书，很多新的内容都没收录，但里面讲述的内容都是可用的，对于阿里内部员工而言，内部文档更详细，更新也更及时。 ", "marks": "力荐"}
{"content": "不是很详细，可以阅读，看看以后哪些场景，自己可以利用odps平台去做。感慨一下，odps的功能，我们仅用到他的10%都不到。对于了解odps能应用到哪些场景，这本书，还是不错的。", "marks": "力荐"}
{"content": "基本上还算一本不错的入门，虽然细节方面谈的不多，底层也不够深入，但毕竟是少有的ODPS书籍，且覆盖面很全，例子也还行", "marks": "还行"}
{"content": "详细的实战入门；给出的案例场景都很不错。", "marks": "力荐"}
{"content": "之前一直在hadoop生态下工作，来阿里开始使用odps，也读了本书。最大的感触是，绝大多数的数据处理工作，原来都是可用sql完成的。比如mapjoin可cover大多数需要distributed cache的情况，distributed by sort by可让你轻松定义partition方式和reducer中排序方式，group by中自动应用了combiner（目测），再加上row_number()（窗口函数），UDF等元素，工作效率大幅提升。", "marks": "推荐"}
{"content": "快速的过了一遍英文版，一般。", "marks": "还行"}
{"content": "开卷有益。。。。吧\n4C方法还不错，不过整体来说干货不多。。", "marks": "还行"}
{"content": "实用，不啰嗦，恰到好处。特别适合已经有经验的架构师梳理思路。", "marks": "力荐"}
{"content": "冠之必读，有些过了，看完这本书，能对架构师的主要工作内容有个大致的了解就足够了。", "marks": "还行"}
{"content": "可能是因为书的前半部分过于说教 而这些说教也都是老生常谈，所以我个人认为这本书的价值主要集中在后半部分。C4工具还算新颖，可以在具体实践中应用。", "marks": "还行"}
{"content": "整体而言，实用的内容在后面，4C的解构方法和风险分析的模型是亮点……", "marks": "推荐"}
{"content": "很完整 值得多读几遍", "marks": "推荐"}
{"content": "太多太杂，但是没有一个深入。而且没有看到任何有价值的思想，偶尔看看当做是要考虑的点吧。", "marks": "较差"}
{"content": "非常精准剖析了当前工作困扰。", "marks": "力荐"}
{"content": "内容太水了，像一份提纲", "marks": "较差"}
{"content": "架构入门实践", "marks": "推荐"}
{"content": "匆匆扫了一遍，本书很薄，主要讲了什么是架构。我觉得互联网领域，可能更多的需要架构，因为用到的技术种类繁多。而说起架构，还是比较务虚的概念，不过我坚信架构师是需要从技术线上来的，并且了解多种技术，不然容易犯铁锤人的毛病，看哪里都是钉子。", "marks": "还行"}
{"content": "不够深入 更像是随笔集", "marks": "还行"}
{"content": "中规中矩，建立了一个大概的框架", "marks": "还行"}
{"content": "挺有启发性的。", "marks": "力荐"}
{"content": "没什么意思啊", "marks": "较差"}
{"content": "太散乱啦，最后的C4算是亮点，不推荐想系统学习架构方法论的程序员看。", "marks": "较差"}
{"content": "如果一个程序员期望转架构，那么本书列为必读也算合理。如果已有一些架构经验，按照书中的思路整理出自己的架构检查清单，也是非常有益的总结。", "marks": "推荐"}
{"content": "不错的一本书", "marks": "力荐"}
{"content": "有点虚，而且想表述的内容太多，显得非常零散。", "marks": "较差"}
{"content": "还可以，内容少了点", "marks": "推荐"}
{"content": "拼命攒经验", "marks": "推荐"}
{"content": "很好的解答了我一直在问的问题，什么是架构。", "marks": "推荐"}
{"content": "囫囵吞枣看完，内容稍有点空，也许是经验不够吧", "marks": "还行"}
{"content": "非常喜欢，关于轻软件架构我觉得适合当下的敏捷开发方式。", "marks": "力荐"}
{"content": "翻译很糟糕，读起来很困难", "marks": "还行"}
{"content": "不要把自己局限在写代码这件小事上。", "marks": "还行"}
{"content": "可以作为入门书籍，看看自己都缺什么，然后横向自己找更深入的书或者深入实践", "marks": "还行"}
{"content": "后面三分之一翻译感觉有点烂", "marks": "推荐"}
{"content": "感觉口水话较多，只有最后几章看起来有收获", "marks": "还行"}
{"content": "书里提到的概念比较好，虽然没有特别细致的实例，但理念很好。在刚开始接触架构的时候就读到这本书，可以阻挡我少走弯路。推荐", "marks": "力荐"}
{"content": "架构导论类", "marks": "推荐"}
{"content": "提了很多方法论", "marks": "推荐"}
{"content": "很好的工具书", "marks": "力荐"}
{"content": "这本是讲软件构架吗？不是！是一个可能已经有所成就并且感情丰富的构架师，以一种过来者的姿态告诉你什么是架构师，纯软文鸡汤。", "marks": "较差"}
{"content": "对于深入了解Scala的内部机制和高级用法非常有用。书中对隐式定义和类型类等的讲解非常清楚，例子也较适中，适合具有Scala基础的Scala爱好者。", "marks": "力荐"}
{"content": "翻译的实在。。。有种读不下去的感觉，不知道译者有没有自己通读过一遍。", "marks": "很差"}
{"content": "译者有没有上过学啊，翻译的比书中代码还难懂", "marks": "很差"}
{"content": "翻译的太拗口了........", "marks": "推荐"}
{"content": "国内也没几本书，拿来入入门", "marks": "推荐"}
{"content": "原书 4 星，翻译扣 1 星，排版扣 1 星。这是我见过最差的编程类书籍排版。作者在文中写了大量（译者：XXX），这其实是对原文翻译不够精准的表现。不说了，去找原文了。", "marks": "较差"}
{"content": "抛开翻译，只说本书内容，囫囵吐糟，千万别当作入门书，坑死，很多地方讲的非常模糊！然而进阶都这种书就更没有必要了！强烈不建议入手！", "marks": "较差"}
{"content": "不错的资料，但不是最佳选择。", "marks": "还行"}
{"content": "书还是可以的，问题是Scala太复杂，特别是隐式转换和类型系统2章太复杂跳着读的。", "marks": "推荐"}
{"content": "不想读了", "marks": "较差"}
{"content": "再看了一遍，内容很丰富，延展很多", "marks": "推荐"}
{"content": "对 Scala 的一些核心概念讲解的很透彻，没有基本概念的罗列，直入核心，有一定 Scala 基础的话理解起来会更顺畅！", "marks": "力荐"}
{"content": "不适合入门！初学者千万不要买；一上来没有讲基础的语法 让人看得云里雾里， 打击学习积极性！", "marks": "还行"}
{"content": "书的内容挺不错，主要介绍了一些高级话题，但不适合入门。类型系统那几章很有意思，写得也比较清楚。主要的问题：中文版书中的错误非常非常多，代码和文字中都有，部分是英文原版书中存在的，但大多数是翻译带来的，书的语言也不是很好，看着比较累。", "marks": "还行"}
{"content": "内容覆盖挺不错的。翻译略差。\n适合有基础的人员", "marks": "推荐"}
{"content": "一般吧~  基本上programming in scala 和 快学scala看完，再看点博客，这本书的内容基本上涵盖了。", "marks": "还行"}
{"content": "读了第二遍，有些还是没法理解，建议学一下基础的，再看这本", "marks": "推荐"}
{"content": "翻译的不错，但是docker本身的更新迭代太快了，如果你完全尝试书中的代码就会发现自己甚至连前几章的启动都启动不了。但是网上有docker手册的gitbook版本，推荐对照着翻看http://www.widuu.com/docker/index.html 还是非常好玩的。也推荐这本书http://yeasy.gitbooks.io/docker_practice/content/ 不过还是感慨这个技术发展得太快，可能看英文原版更好。", "marks": "力荐"}
{"content": "挺不错的入门书，翻译也不错。对于部署交付来说，docker 确实可以算上一种革新，不过这种革新的背后也带来更多需要解决的问题，比如，服务发现怎么做？网络端口资源怎么管理（统一手工用端口转发？）后端存储卷怎么管理？docker 镜像 registry 又怎么管理？不搞明白这些东西， docker 恐怕也只是玩具而已。当下流行的各种 cloud computing 平台结合 ansible/saltstack 这些 provision 工具，在中等规模下的使用效果恐怕并不比 docker 差。Anyway ，折腾这些恐怕都要在职谋位有公司赞助会比较好，门外汉简单科普应该就够了。至于深入下去，没有个 1-2 年的 linux 内核功底，恐怕很难 hold 住 docker 吧……", "marks": "推荐"}
{"content": "没事别瞎比折腾了，还是读点书，涨点知识吧~", "marks": "力荐"}
{"content": "#纸质书# 3.3 分。…… =-= 看了不少 container 的介绍才看懂了。", "marks": "还行"}
{"content": "中规中矩的入门书。这本书的例子要跑起来，最好还是使docker.cn的镜像，否则那屎一样的下载速度会恶心死你。", "marks": "还行"}
{"content": "入门级别，ps 自己没有按照文章中的例子敲代码", "marks": "推荐"}
{"content": "入门的书，只是好多时候大段文字看不懂。", "marks": "推荐"}
{"content": "简单了解最基本的docker用法。", "marks": "还行"}
{"content": "入门不错", "marks": "推荐"}
{"content": "第一本 恩。。。第一本 送人了", "marks": "推荐"}
{"content": "一个月前翻过，内容一般般。。。", "marks": "还行"}
{"content": "额。不会。", "marks": "还行"}
{"content": "还不错的入门书，确实适合做第一本，代码粘的有些略多，所以看着其实蛮快，对Docker有基本认识的人应该一两天就看完了，第五章和第六章很啰嗦，第七章开始就显示出本书的过时了。", "marks": "还行"}
{"content": "user manual", "marks": "还行"}
{"content": "好书，语言精炼", "marks": "力荐"}
{"content": "能读英文就不要买了，直接看官方文档，相关的技术文章也介绍了足够多得案例了。", "marks": "还行"}
{"content": "就当是看英文文档的中文版吧，至少翻译质量上有些保证。", "marks": "还行"}
{"content": "挺好啊，很实用的书。用过虚拟机就能看得懂。没用过虚拟机也可能看得懂", "marks": "力荐"}
{"content": "地铁读物", "marks": "还行"}
{"content": "很详尽的入门书！", "marks": "推荐"}
{"content": "看完该看第二本了，嗯。。。", "marks": "还行"}
{"content": "好浅", "marks": "还行"}
{"content": "比official doc容易。。。。。。", "marks": "还行"}
{"content": "确实如书名，第一本看这本就行了，有基础有扩展，不深究原理快随上手，还有使用场景的章节。", "marks": "力荐"}
{"content": "有比较详细的安装教程，但是没有任何涉及到原理的内容", "marks": "还行"}
{"content": "快速了解~不错", "marks": "还行"}
{"content": "docker入门书", "marks": "推荐"}
{"content": "内容上对初学者来说还行，不过感觉有很多地方冗余重复。", "marks": "推荐"}
{"content": "关于docker的经典入门书", "marks": "推荐"}
{"content": "迅速翻过，像一本step by step的手册。——一个5年前做过容器的人", "marks": "还行"}
{"content": "基础入门例子，还行", "marks": "还行"}
{"content": "作为入门书籍，应该算是比较全面的了。", "marks": "还行"}
{"content": "简洁，没有废话", "marks": "力荐"}
{"content": "带领着开启docker之门的入门书籍，讲了使用的方方面面，对于还处在docker大门之外的技术人，强烈推荐。书中有可以跟着操作的例子，可以活学活用。", "marks": "力荐"}
{"content": "docker入门，进入docker世界的第一本书，确实如此。", "marks": "推荐"}
{"content": "docker几大核心：容器，映像，仓库。理解起来并不难。这本书缺少了一些对容器网络部分的介绍。", "marks": "推荐"}
{"content": "果然是第一本docker书，我觉得用来入门还可以。", "marks": "推荐"}
{"content": "深入浅出，对容器的应用场景讲的比较清楚。不过对原理解释的比较少，不过仍然是值得读的书。", "marks": "推荐"}
{"content": "稍过时 2016年11月", "marks": "还行"}
{"content": "入门必备", "marks": "推荐"}
{"content": "内容不错，代码多了些，有点水，整体感要自己去理解", "marks": "推荐"}
{"content": "docker的宗旨是code once, run everywhere，解决开发环境完整复制到运行环境的问题，以后开发人员再也不能说“我的环境怎么没这个问题”", "marks": "还行"}
{"content": "docker真神奇 期待docker对互联网的改变 也许下一波浪潮就要来了", "marks": "推荐"}
{"content": "docker使用说明书", "marks": "还行"}
{"content": "翻了一般，docker算入门了", "marks": "还行"}
{"content": "作为docker操作入门手册非常不错，知识点都讲到了（按照linux环境讲解），只有操作没有原理，推荐对docker想了解的同学", "marks": "推荐"}
{"content": "书挺简单，一天翻完，当然没全部看懂。不过感觉入门挺好的，代码和图很详实。", "marks": "推荐"}
{"content": "偏用户手册类书籍", "marks": "还行"}
{"content": "快速翻阅的入门书", "marks": "还行"}
{"content": "- 之前看过一本书《集装箱改变世界》，集成化的集装箱的出现促使了美国海港运输的发展。同样的思路也在改变着世界，只是这次是另外一个世界。\n- 这本书其实和官方文档差别不大，甚至稍微有点过时，但是可操作性还是挺好的，我就是以这本为纲参照官方文档。", "marks": "推荐"}
{"content": "简单易懂，适合作为第一本书。另外错别字有一些。", "marks": "推荐"}
{"content": "比国人写的那本简直好多了", "marks": "力荐"}
{"content": "清晰易懂", "marks": "力荐"}
{"content": "期望不要太高，作为入门不错的~", "marks": "推荐"}
{"content": "真.刷书", "marks": "还行"}
{"content": "入门很好", "marks": "推荐"}
{"content": "Easy to read, good examples are organized to introduce basic docker feature and usages.", "marks": "推荐"}
{"content": "新手还是看官方文档吧，去年的书，一些内容已经过时了", "marks": "还行"}
{"content": "这种入门书都特别浅显，没什么意思", "marks": "还行"}
{"content": "还行吧，讲的不深", "marks": "推荐"}
{"content": "伴我入门Docker的好书。", "marks": "推荐"}
{"content": "相对全面的hello world介绍，花三个小时就能读完", "marks": "推荐"}
{"content": "大概了解docker是个什么东西了", "marks": "推荐"}
{"content": "docker仅此一本书就够了，简单易懂", "marks": "力荐"}
{"content": "从整体上阅读，开始了解规划自己的知识。第一本书也是一本入门书籍，快速了了解 docker 的基本使用方法，以及 docker 能用来干什么。剩下的就是好好吸收消化官方稳定上面的资料了。", "marks": "还行"}
{"content": "docker入门", "marks": "力荐"}
{"content": "非常适合入门 有一定经验的 看了收获并不会很大", "marks": "推荐"}
{"content": "读了前7章，大致了解了docker的原理、使用方法和场景。", "marks": "还行"}
{"content": "第一本docker书", "marks": "推荐"}
{"content": "第一本看这本就行了，有基础有扩展，不深究原理快随上手，还有使用场景的章节。简单翻过而已\n", "marks": "推荐"}
{"content": "总体来说，没有传说中那么好。作为入门级的使用手册还行，想了解还是应该看源码。", "marks": "还行"}
{"content": "简易直接搜索网络电子版，这本有点不值买。另外更新太快，没必要", "marks": "还行"}
{"content": "infrastructure as code", "marks": "还行"}
{"content": "入门不错", "marks": "力荐"}
{"content": "核心是软件生命周期思路的转变", "marks": "推荐"}
{"content": "一边看一边练习，docker比较强大，自己在学习过程中只做了解，不想从网上各种找不系统的资料，想通过书本系统的学习下这个工具的理论和实践。希望以后的工作或者学习中能够用得上，先做一个系统了解。", "marks": "推荐"}
{"content": "知道了Docker、Fig都是什么东西 入门书 简明有条理即可", "marks": "推荐"}
{"content": "就那样呗, 比看文档快, 但做事情的时候还是要 RTFM. 错别字略多, 学长不给力", "marks": "还行"}
{"content": "真是第一本书，图文简明教程.....和看手册自己折腾一遍差不多……", "marks": "还行"}
{"content": "涉及的知识面好广，有许多知识点不实际使用恐怕是无法消化的", "marks": "力荐"}
{"content": "入门书，对Docker工具的来源，概念、基本使用进行介绍，可以 step by step 地跟着学 docker ", "marks": "还行"}
{"content": "很好的入门书", "marks": "推荐"}
{"content": "对翻译的技术书籍实在是无感...能不能走点心？最关键的是，作为一本Docker入门书，最重要的是对容器、镜像、Registry这些组件的形象阐述，什么镜像增删改查，命令行啪啪啪，你跟我讲这些有毛用...我看官方Doc就够了，显然这本书没做到，翻两下弃", "marks": "还行"}
{"content": "入坑！", "marks": "力荐"}
{"content": "实用的工具书", "marks": "推荐"}
{"content": "翻译得不错，书本上讲的内容比较浅显易懂，举例非常详细，当做入门书很适合。", "marks": "推荐"}
{"content": "看的第一本docker类的书，主要是初步了解。内容还不错，大致清楚基本概念。", "marks": "还行"}
{"content": "有点老，不过带领读者入个门还是绰绰有余的，至于后面就得看官网的文档了。", "marks": "推荐"}
{"content": "应该是今年最速度解决的一本了～", "marks": "还行"}
{"content": "一般的书，入门的话，勉强可以", "marks": "还行"}
{"content": "简介类的书，浅显了一些，适合入门。不过基本没介绍原理，这点不太好。", "marks": "还行"}
{"content": "内容比较浅，适合刚接触Docker的同学学习。其实看官网的doc还比较全，不过基本概念和原理不掌握的话，不知道从何入手。", "marks": "还行"}
{"content": "给4星～ 同事暂存在这里的书就借此读了一遍。非常适合作为docker入门阅读，同时当中涉及到的开发案例以及在Ci上的案例虽然简单但是可以在这些基础上发散思考。", "marks": "推荐"}
{"content": "作为入门书,算是不错了,让初学者有了一个大致的框架,剩下的就是需要各种实践和阅读官方文档来填充细节. 可以把它看做官方文档的阉割版,它把入门最需要的内容带给你了", "marks": "推荐"}
{"content": "非常入门的一本书，但是几个例子，对于新手还算可以一看", "marks": "还行"}
{"content": "我的第一本docker书，带我入门。", "marks": "推荐"}
{"content": "入门值得一读", "marks": "还行"}
{"content": "作为入门书足够了，书中只有用法，没有对原理和技术细节的深入描述。", "marks": "推荐"}
{"content": "应该是第4次翻这本书了。。。", "marks": "推荐"}
{"content": "算不算是对doc文档的翻译。不过提供了github上的例程还是不错的。", "marks": "力荐"}
{"content": "不错的入门书籍", "marks": "力荐"}
{"content": "把琐碎的知识点有条理的串联起来，把技术的来龙去脉讲的很清楚，未来的方向也都给出来了，是一本不可多得的入门书。", "marks": "力荐"}
{"content": "写了读书笔记 http://mp.weixin.qq.com/s/6sYvwIv4VupSka5yyKSdfQ", "marks": "推荐"}
{"content": "使用docker的入门书，相当入门。", "marks": "还行"}
{"content": "推荐未接触过docker的初学者阅读的“docker上手指南”", "marks": "推荐"}
{"content": "docker的step by step手册，从部署到使用再到CI，比较全面的步骤说明。因为有以前虚拟化的基础，所以理解起来不费力。当然，前提是懂linux系统，网络协议，ruby/python等脚本语言。", "marks": "推荐"}
{"content": "内容很浅，适合初学者。每一章都手把手教你怎么运用docker，要看这本书建议先看清楚docker对安装环境的要求，确定能够有个docker环境进行学习", "marks": "还行"}
{"content": "docker入门不错", "marks": "推荐"}
{"content": "docker绝对是开发和运维的利器。", "marks": "力荐"}
{"content": "周末在家又尝试着撸了一遍，对docker的用法有了一些新的认识，就差动手了。集群管理和调度以及服务发现的docker化才是docker星辰大海。", "marks": "推荐"}
{"content": "基础应用形式的介绍 对原理讲的不多", "marks": "推荐"}
{"content": "很不错的入门书，操作一次基本上可以掌握docker的用法了", "marks": "力荐"}
{"content": "作为入门可以", "marks": "推荐"}
{"content": "十分棒的入门书，算是我的docker启蒙", "marks": "力荐"}
{"content": "入门书籍", "marks": "推荐"}
{"content": "只能说算得上是一本入门实践参考书。", "marks": "还行"}
{"content": "读后可以了解一部分原理，可以参考示例使用docker。\n但是整体来说都没说透。原理浅尝即止，示例将将够用。做原理理解不行，做手边字典也不行。唉！入门吧。书名翻译的很好。", "marks": "还行"}
{"content": "如果不是因为蔡汀的名字，这本书实在算不上是一本一般意义上的书，因为真正的好书都是基本一信核心观念的成体系的展开，这本书严格上来说只有第四章后半和第五章是核心观点，即在软件空间中的随机游走通过进化可以达到N^2到N^3的算法复杂度来解决例如BB问题。附录一是关于冯诺依曼的自复制机的ABC结构，与正文似乎没有关系。", "marks": "推荐"}
{"content": "昨晚写的算也不算是书评的文章：《图灵，蔡汀，达尔文：计算中的上帝》　http://www.jianshu.com/p/cc3a3f4edb1d", "marks": "还行"}
{"content": "新意，作者说的累积的随机进化时间是介于N²到N³的，这不是意味着时间分形么。。。另外那位赵海平同学也不用纠结嘛，你应该顺着蔡廷的路走下去，做生物和计算机科学结合的元生物学就好啦。", "marks": "力荐"}
{"content": "#PDF# 4.0 分。", "marks": "推荐"}
{"content": "怎么说呢，这本书不太配得上一代大师Chaitin的名气，他想用算法信息论来理论化进化论，但是他的模型太含糊了，而且没有哪怕一个实在的例子来详细分析。书里面大部分内容只能说是观点，提供一些启发的方向。", "marks": "较差"}
{"content": "上午开会前浏览了新收到的人民邮电出版社出版、图灵新知制作的新书《证明达尔文：进化和生物创造性的一个数学理论》，这本翻译小书一下子吸引住了我。作者认为，生命作为不断进化的软件，软件不断突变，还提到社会达尔文主义等创造性政治学的解释。书中特别介绍了美国桑塔费（圣菲）研究所的复杂性理论，我立刻想起了博士导师陈禹教授，他是第一个去圣菲研究所的中国人，十几个人的小飞机，到了机场旅客散去后竟然空无一人，独自拖着行李箱步行，各种经历直到9个小时以后才到旅馆。从此复杂性理论被介绍到中国……", "marks": "力荐"}
{"content": "讲了一些数理逻辑中常识性的东西，核心思想是DNA是程序，程序会自我进化，所以生命也会。核心章节是第四章，实际上是说可以构造一个自我进化的程序，不断改进计算忙海狸问题的效率。总之，太玩具了一些。只能说是一个有趣的想法。", "marks": "较差"}
{"content": "将DNA视作软件，以数学高观点研究生物进化，自称是开创性的元生物学。作者以哥德尔不完全性定理为起点，结合图灵停机问题，用忙海狸函数BB(N )度量生物创造性的量以及速率，总之非数学专业读者很难看明白。欠缺处在于过于笼统，只相当于一个大纲，语言亲切但不够紧凑", "marks": "还行"}
{"content": "生动有趣值得一看", "marks": "推荐"}
{"content": "其实只看第五章了解下这个 toy model 就够了，扯的神学政治学啥的无视好了", "marks": "推荐"}
{"content": "存在没有设计师的设计…其实有一多半没看懂。", "marks": "推荐"}
{"content": "食之无味，图灵的部分讲得也一般。", "marks": "较差"}
{"content": "还没看完但是这本书的想法真的是太棒了！nn", "marks": "力荐"}
{"content": "总之一句话:DNA是程序，程序会自我进化，所以生命也会。", "marks": "还行"}
{"content": "#图解系列#密码学科普读物，深入浅出....赞", "marks": "推荐"}
{"content": "安全链条中最薄弱的环节是人", "marks": "力荐"}
{"content": "竟然能凑合看懂个大概", "marks": "推荐"}
{"content": "不可多得的入门好书通俗易懂", "marks": "力荐"}
{"content": "还剩几章没看完，忍不住分享。给程序员做个科普太合适了，也够解决一些问题了。", "marks": "推荐"}
{"content": "几乎没有数学公式的情况下把密码学解释的相当到位，连续三天不看完放不下手，这种好书值得推荐。", "marks": "力荐"}
{"content": "看了个大概，正在读第二遍", "marks": "推荐"}
{"content": "没有电子书卖，狠狠买了本纸质的，用了一天就看完，非常棒的书籍，一直对https的ca证书不大了解，这下豁然开朗，爽！", "marks": "力荐"}
{"content": "解决了不少困惑，比如CFB CBC 这是什么鬼的问题", "marks": "推荐"}
{"content": "写得浅显易懂，画了很多图，看起来很快，真的是一图胜千言啊", "marks": "力荐"}
{"content": "防御必须天衣无缝，攻击只需突破一点。", "marks": "力荐"}
{"content": "比较通俗 简略了点 ", "marks": "还行"}
{"content": "#图解系列#看图解果然比文字好太多啦！非常棒的密码学科普读物。", "marks": "力荐"}
{"content": "非常好 简单明了 就是读完后觉得太简单了😂", "marks": "力荐"}
{"content": "密码学入门好书", "marks": "力荐"}
{"content": "密码学科普", "marks": "力荐"}
{"content": "300多页的书，我竟然能不自觉几天看完，如果能解决所有的勘误，本书会是一本经典的密码技术普及读物！", "marks": "推荐"}
{"content": "深入浅出讲解了多种实用的密码相关技术和优缺点！", "marks": "力荐"}
{"content": "大学里也学过加解密的课程，但是现在回忆起来脑海中只剩下个别名词！读完这本书，对各种密码的来龙去脉有了大致的了解。密码学家的六种工具——对称密码，公钥密码，单向散列函数，消息认证码，数字签名和伪随机数生成器。一个工具的出现都是为了解决前一个工具的问题！", "marks": "力荐"}
{"content": "结城浩真是非常有天赋的科普作家，是非常少见的写作能力超强的程序员。日本阮一峰真是名不虚传。。。", "marks": "力荐"}
{"content": "看过讲的最清楚的密码学的书", "marks": "力荐"}
{"content": "适合入门\n", "marks": "力荐"}
{"content": "通俗易懂", "marks": "力荐"}
{"content": "经典书籍，把基础知识串联起来来讲，如果当初密码学考试前看到这本书，也不至于到现在对这些知识一知半解", "marks": "力荐"}
{"content": "真是本好人,浅显易懂,引人入胜,书中某些流程图中的小错误能纠正过来就更好了.", "marks": "推荐"}
{"content": "tls的流程图画的挺好。内容上没比william stalling那本多多少。", "marks": "推荐"}
{"content": "非常通俗易懂，入门者多看两遍就可以了解大部分密码知识", "marks": "力荐"}
{"content": "看过日本图解的几本书，个个都是满分。虽然市场上日本的技术书比较少，但不可否认的是，本本精品！市场上介绍密码的书本就很少，这本书简单明了，看起来不那么枯燥，推荐！", "marks": "力荐"}
{"content": "很清晰概要的图解密码技术：对称密码、公钥密码、单向散列函数、消息认证码、数字签名和伪随机数生成器。对PGP和SSL/TLS的介绍也还不错，适合入门了解。一图胜千言。", "marks": "力荐"}
{"content": "感谢本书让我信安概论没挂科", "marks": "推荐"}
{"content": "超棒", "marks": "力荐"}
{"content": "通俗、易懂、流畅、思路清晰、深入浅出，电子版（扫描版）https://www.mlook.mobi/book/info/38126", "marks": "力荐"}
{"content": "没有太过深入的数学公式，对我这种只是浅尝辄止的人刚刚好。", "marks": "力荐"}
{"content": "作者画的那些图也真是费了心啊 真的很好读 教科书写成这样就好了！\n今年五星书不少", "marks": "力荐"}
{"content": "还行，比较简单，入门还是不错的", "marks": "推荐"}
{"content": "看完书后自行破解译者序中凯撒密码，原来是个推广！ :-( 明文：\"If you want to learn more about cryptography \nI recommend an online course instructed by professor dan boneh from stanford university just search cryptography at coursera.org\"", "marks": "力荐"}
{"content": "看了个大概", "marks": "推荐"}
{"content": "數學少女作者，各種眼熟名詞.....痛苦與快樂，學習中...", "marks": "推荐"}
{"content": "可以作为入门了解，构建密码技术的框架性认识。", "marks": "推荐"}
{"content": "选题有趣，深浅合宜，来龙去脉讲得很清楚。个人以为有些图解倒是没什么必要。", "marks": "力荐"}
{"content": "密码学科普读物的典范", "marks": "力荐"}
{"content": "简单明了却能直击重点，是本不错的入门书，可做科普用", "marks": "推荐"}
{"content": "循序渐进讲述了密码学家的六大工具箱：窃听-机密性（对称加密、公钥加密）、篡改-完整性（单向散列函数）、伪装-认证（消息认证码）、否认-不可否认性（数字签名）、伪随机函数生成器。通过图式方式对技术的具体实现过程讲解得很清楚。在学习密码学感到迷茫之时，本书大有裨益。", "marks": "力荐"}
{"content": "实例很通俗易懂", "marks": "力荐"}
{"content": "通熟易懂的入门书~", "marks": "力荐"}
{"content": "还可以的，每个人都该看看，这根本就是常识。", "marks": "推荐"}
{"content": "做为一本指导程序员对网络安全原理入门的技术书籍非常不错。大体加密解密过程讲的确实比较清楚，剔除了保证加密解密数学原理的复杂性。", "marks": "力荐"}
{"content": "科普科普", "marks": "推荐"}
{"content": "在做整个部门的密码学科普课程，偶然发现了这本书，泛泛的翻了一遍，感觉写的非常不错。深入浅出，易于理解，推荐非密码学专业而对密码技术感兴趣的童鞋可以读一下。", "marks": "力荐"}
{"content": "一晚上看完，简单易懂。回头一看发现作者是结成浩，哈哈。已入手实体书。", "marks": "力荐"}
{"content": "简单易懂，很不错的一本密码技术书，值得一阅。最近买的《深入浅出密码学》比较难懂就先看了这本，算是为深入研究密码学打打基础吧。", "marks": "力荐"}
{"content": "简单易懂的原因是本来写的就不深（对解密方面讲的不细致）。密码图解的话还是很容易明白的。内容难度层层递进，不会有跳跃思维的不适感，整体把握得好。但文字多有重复。读完可以解释了生活中遇到的一些现象很有成就感。", "marks": "力荐"}
{"content": "讲解密码学的基础理论知识，通俗易懂，入门的最佳书籍，没有之一。关于具体的代码应用可以看另外一本书，Java加密与解密的艺术：http://book.douban.com/subject/4709510/", "marks": "力荐"}
{"content": "大量的图解，将密码算法的流程描述的非常直观。且书中尽量避免使用一些高深枯燥的数学公式，基本只要初中数学基础就可以了。虽然讲的可能不是那么深入，但是可以比较全面的了解下密码学，对于入门或者是简单的想增长见识的话，是一本很好的书？", "marks": "推荐"}
{"content": "第14章https还是没讲清楚，其余章节都很不错。", "marks": "推荐"}
{"content": "比国内的密码学的炫技流 解释的强多了！！！", "marks": "力荐"}
{"content": "内容不是很深入，但对于日常写代码基本够用，也算是对以前项目中遇到的密码学知识进行梳理。", "marks": "力荐"}
{"content": "简单易懂，密码学系统入门，值得推荐。读完感受是密码学无止境，没有绝对安全，密码学只是不断提高门槛，最终的还是靠法律约束", "marks": "力荐"}
{"content": "同事把书寄存我家，没事随便翻翻看看，前面还挺有意思的起码也是似懂非懂还挺热闹，到RSA彻底晕菜。。", "marks": "推荐"}
{"content": "考网络工程师的时候有密码学的考题，当时都是靠死记硬背的，后来从图书馆借出这本书，半夜几个小时看完，超级流畅欢快", "marks": "力荐"}
{"content": "算是我的信安入门书之一，写得挺好的，拿来科普或者入门没问题", "marks": "推荐"}
{"content": "hin好看。", "marks": "力荐"}
{"content": "我的密码学入门书，对称与非对称那块看的还是有些迷糊，力荐好书！\n在之后看到有关加密的东西时就会想到这本入门书，感谢之前读过", "marks": "力荐"}
{"content": "简单易懂,诚意之作~", "marks": "力荐"}
{"content": "用最通俗的语言，讲解最复杂的密码！！！", "marks": "力荐"}
{"content": "快速看完，容易懂。至少对我这种只想科普了解一下的人是绝对够用的。图多的书看着就是爽啊…", "marks": "力荐"}
{"content": "还是挺好理解的", "marks": "力荐"}
{"content": "确实如介绍所说，比较容易懂，就是发现好几处排版低级错误", "marks": "推荐"}
{"content": "非常好的书，通俗易懂，而且有趣！", "marks": "力荐"}
{"content": "读完第一部分了 非常棒的书 很适合入门 的确 有很多东西重复了 图里的东西作者怕看不懂又讲一遍 但不影响阅读!很棒!", "marks": "力荐"}
{"content": "通俗易懂 密码学入门好书 排版上有点小瑕疵 总体不错", "marks": "力荐"}
{"content": "尽管略显简单，但是知识图谱组织的极其清晰，脉络分明，入门佳作，在复杂的密码算法都不离其中啊", "marks": "力荐"}
{"content": "深入浅出，高中水平基础就可以。密码学科普入门书", "marks": "推荐"}
{"content": "挺好的", "marks": "力荐"}
{"content": "使用通俗易懂的语言向入门者讲解密码技术，并且尽量避开其中涉及到的数学原理，值得推荐。", "marks": "力荐"}
{"content": "密码学通俗读物", "marks": "还行"}
{"content": "非常好的入门书籍！将密码技术的概念名词理顺了。", "marks": "力荐"}
{"content": "很不错的密码应用技术书籍，让我有了从0到1的突破。", "marks": "力荐"}
{"content": "通俗易懂的密码学入门书籍，不需要太多的数学基础即可看懂。非常适合作为密码学入门的科普书籍。\n书中内容囊括了密码领域工具箱的各个方面:对称密码算法，各种加密模式，非对称密码，PKI系统，随机数，以及一些基础的安全协议（e.g.  TLS）。", "marks": "推荐"}
{"content": "通俗易懂", "marks": "推荐"}
{"content": "導論書，或者說科普書都不為過。總之你要是真的想入門密碼學，那麼請你移步初等數論和應用密碼學。", "marks": "力荐"}
{"content": "没有图解决不了的问题😝", "marks": "力荐"}
{"content": "很容易理解", "marks": "力荐"}
{"content": "真是本入门好书", "marks": "力荐"}
{"content": "Ruby版SICP", "marks": "力荐"}
{"content": "非常精彩，这么薄的一本书，覆盖了图灵机、lambda演算、SKI 组合子等计算理论，并且提供了可供运行和测试的代码，还有啥不知足的呢？略微可惜的可能是因为篇幅或者作者故意限制，没有特别深入。", "marks": "力荐"}
{"content": "看了这本书，对学习计算理论导引有很大的帮助，这本书可以看做是计算理论导引的实战版本。", "marks": "力荐"}
{"content": "2016.1.18开始读。2017.7.9 理解了图灵机，就理解了算法（有限状态机）与数据结构（抽象的纸带）=图灵机，也就理解了编译原理的理论部分，线程编程本质就是事件驱动模型，也就是写一个有限状态机。程序看做数据作为其他程序的输入。\n", "marks": "力荐"}
{"content": "#图灵PDF# 4.3 分。有点像大三大四两门外教课的课本欸！可爱也可爱在 Ruby 实现，啰嗦也啰嗦在这儿。如果能够压缩成 150 来页的小品，就更可爱啦！还蛮有趣的~", "marks": "推荐"}
{"content": "必须是力荐，讲解通俗易懂，非常平易，可以让人轻松学习，里面的资料也比较丰富，我很喜欢。", "marks": "力荐"}
{"content": "难得的好书，简明有趣。", "marks": "力荐"}
{"content": "从有限状态机到图灵机，全书在引导读者剖析理论层面的计算机，lambda算法激动人心，就是Ruby语法有点琐碎。遗憾就是看的半懂。", "marks": "力荐"}
{"content": "循序渐进而又启发性很强的一本书", "marks": "力荐"}
{"content": "SICP", "marks": "推荐"}
{"content": "Ruby版编译原理", "marks": "推荐"}
{"content": "可以和 计算机理论导引 、图灵的秘密 一起看", "marks": "推荐"}
{"content": "非常棒的一本书", "marks": "力荐"}
{"content": "满足好奇心", "marks": "推荐"}
{"content": "抽象描述计算机物体和人之间关系。机器，语言，编程。以及结果的预判，可能与不可能。处理对象中方法，消息类，模块，数据，语法，语义。", "marks": "推荐"}
{"content": "这本书的读者对象是“没有正规学习过数学或者计算机科学的朋友”，然而根据我的目前的阅读经验来看，没有基础的人是完全不可能看得懂这本书的。因为这本书主要以实战为主，理论讲的超级烂的，内容编排也不够到位……看不懂的建议先补理论吧。", "marks": "推荐"}
{"content": "玄学 看不懂了", "marks": "推荐"}
{"content": "lambda写的FizzBuzz太惊艳了", "marks": "力荐"}
{"content": "在不到三百页的篇幅里，把自动机，图灵机，lambda过了一遍，而且还附了实现及测试代码。唯一不足的就是用工程的态度去讲解科学，会缺乏更细致的理解。看来还得先看看几本导论性质的计算理论的书，再来刷一遍，相信理解会深入一些。", "marks": "力荐"}
{"content": "2016年最有收获的一本技术书，从有限状态机到下推自动机，再到终极机器图灵机，能力一步步增强。中间介绍了一些图灵完备的系统，但是图灵机也有做不到的事情，也就是判断一个系统或者一段程序做了什么，最后通过介绍几个案例来弥补这些不可能做到的事情。", "marks": "力荐"}
{"content": "练习到了第六章，后面三章大概看了下。", "marks": "力荐"}
{"content": "前半部写编译器的那部分不是很喜欢，可能是因为在kindle上看的原因，代码的格式太奇怪了。后面讲lambda演算的时候开始放大招了啊，只用proc实现的map一串数字到字母的function，expand出源码的时候简直看呆。然后到SKI组合子，标签系统，通过证明它们与图灵机的对等性来证明它们是通用的，这部分也很棒。最后一部分通过停机问题介绍了不可计算性，当程序能引用自身的时候，是无法解决说谎者悖论的。整部书对计算理论的介绍很详细又很通俗，除了kindle上不好看代码以外很值得读。", "marks": "力荐"}
{"content": "1星不是说这本书写的不好, 是我看不懂", "marks": "很差"}
{"content": "前半部分不错，后半部分的形式语言讲的太浅了", "marks": "还行"}
{"content": "《计算的本质》以Ruby程序为工具讲解了计算机、程序、程序语言等基本的计算机科学问题，是一本非常好的计算机科学实践书籍。使用Ruby语言模拟了各种机器的计算能力、计算机语言的语义，深入浅出的讨论了计算的本质。\r\n书中详细探讨了各种类型机器的计算能力，机器按照计算能力分为有限自动机（FA），下推自动机（PDA），图灵机（TM），通用计算机；除图灵机与通用计算机等价外，计算能力逐渐增强。有限状态机增加外部存储的栈，扩大计算能力就是下推自动机；有限状态机增加无限长的纸带访问就是图灵机，图灵机的实质就是能够访问无限长纸带的有限状态机。\r\nDFA可以识别正则式，NPDA可以识别回文字符串，确定性图灵机(DTM)可以进行二进制递增运算。每种机器都有相当明显的能力限制，FA无法解决涉及无限制的计数问题，例如判", "marks": "力荐"}
{"content": "习惯了站在巨人的肩膀上, 偶尔也要往下看看", "marks": "力荐"}
{"content": "本书亮点在于用Ruby代码实现了各种计算模型，并粗略地涉及了形式语义、编译原理、抽象解释等方面的知识，可作为普通开发者的科普读物或科班学生学习计算理论的辅助书。唯一的缺点在于翻译比较生涩，阅读不够流畅。", "marks": "力荐"}
{"content": "用最小ruby语言子集编写程序解释自动机，图灵机等计算理论。", "marks": "力荐"}
{"content": "你竟然用ruby!!于是我没看下去", "marks": "还行"}
{"content": "书本身还是不错的，看得出作者的用心，但是定位就有点尴尬，因为理论部分的缺失所以没有办法学到很多真正有用的知识，如果算作科普书籍的话难度又有些大，没有基础很容易看的似懂非懂。归根到底是计算理论这部分知识太抽象太难了吧，不过如作者所说的用来“满足自己的好奇心”还是足够有趣的。", "marks": "推荐"}
{"content": "可惜是 ruby 描述的", "marks": "还行"}
{"content": "对编译原理和计算机组成原理的解释，思想新颖", "marks": "推荐"}
{"content": "建议直接看SICP，讲得不如那本也没有习题可以做", "marks": "推荐"}
{"content": "这半年读过的最漂亮的一本书，各种计算模型及某些通用计算模型的等价性、语义分析/语法分析以及最后一章的类型检查系统（给我感觉就是在写一个小的编译器或者解释器）、还有停机问题的具体介绍都非常精彩。最最重要的是，所有的论述都用上了 Ruby 代码，大部分例子理论上都是可以运行的！Ruby 的灵活性（比如代码即数据在某些语言中就不是很方便）给本书某些章节写实现时带来不少便利，第八章作者甚至一本正经胡说八道地用 evaluate function 写了个停机问题的函数，然后想尝试解决哥德巴赫猜想。\n\n笔记过几天附上。", "marks": "力荐"}
{"content": "计算理论~", "marks": "推荐"}
{"content": "可以跑的ruby代码，好兴奋呀！ https://github.com/tomstuart/computationbook", "marks": "力荐"}
{"content": "整体介绍大数据会遇到的各种技术，还算比较系统。", "marks": "推荐"}
{"content": "大数据技术系统介绍", "marks": "还行"}
{"content": "kali linux backtrack渗透测试实战", "marks": "力荐"}
{"content": "基本上是一本实用手册类型的图书，按照kali/BackTrack系统的菜单目录划分，对各个目录中的主要工具进行了简介，可以作为入门读物学习和验证使用。", "marks": "还行"}
{"content": "挺好的一本书，适合有一定网络基础的读者进一步实战。", "marks": "力荐"}
{"content": "这死妈玩意儿爆出癌症这么久怎么还没死？", "marks": "很差"}
{"content": "GFW的设计者 工作报告 院士级团队 态度不算认真 随便写写介绍下也洋洋洒洒一厚本 个别章节有可读性", "marks": "还行"}
{"content": "第一章写得挺好，第二章错误有点多啊😳", "marks": "还行"}
{"content": "并没觉得很好。短，讲的不全，真正的零基础er（如我，掩面）要查很多东西。后面从  写测试  开始看不懂。", "marks": "还行"}
{"content": "我感觉自己被调戏了。", "marks": "力荐"}
{"content": "感谢作者和译者，很好的手把手的一个新手编程体验书，消除编程物质恐惧感，在线看的liam huang翻译的版，不确定看的是第几版，有一些加分题没有做，第五十题黑手党外星人飞船做起来有点压力，准备转去codeacademy / think python和a byte of python在进行一些学习和practice，之前看了一个半月的C++第五版，转过来看Python以后只想说Python真是小天使般的好上手……", "marks": "推荐"}
{"content": "非常好的Python入门书，作者的写作风格我很喜欢。", "marks": "推荐"}
{"content": "很好的入门书。只是代码有挺多错误的，网上的原版就没有错，应该是编辑时出的问题。", "marks": "推荐"}
{"content": "入门首选", "marks": "推荐"}
{"content": "when you get stucked，you should get more information。按照习题模式来引导编程", "marks": "力荐"}
{"content": "花了一周的时间看完，在以前的基础上零零碎碎学了一些新的东西，还算是有所收获，但是前面讲的很基础很简单，到ex40之后突然难度增加不是很懂在讲些什么。", "marks": "力荐"}
{"content": "入门确实很好。但是第二周作业开始GUI了，这本没有讲到呢。换下一本。", "marks": "推荐"}
{"content": "最后一个游戏那里就做不下去了……差太远", "marks": "还行"}
{"content": "学习笔记： https://github.com/hairuo/LPTHW", "marks": "推荐"}
{"content": "在 learn python the hard way官网上有下载 也可以在线看 ^ ^ ", "marks": "推荐"}
{"content": "每天敲一两节练习，历时 41 天，敲练与记录心得同时完成，再花一天修订，刚刚是 42 天。我正按此书为蓝本写《笨方法学写作》，地址是　https://cnfeat.gitbooks.io/learnwritingthehardway/content/", "marks": "力荐"}
{"content": "太基础了.", "marks": "还行"}
{"content": "我已经有了一定的C#基础再来学PYTHON，在我看来这样对着敲代码而不从编程思维去解决问题的学习方式真的不适合我。", "marks": "较差"}
{"content": "相当基础的入门教程", "marks": "还行"}
{"content": "这才是真正的零基础入门书", "marks": "推荐"}
{"content": "跟着全做了遍，有了个大概", "marks": "推荐"}
{"content": "几乎快一年了，算是读完了，其实习题根本都没做几道，很多内容看到最后，前面的就忘的差不多了。程序猿的世界博大精深，就连一本入门书读起来都这么艰难。\n不过编程更重要的是练习，光看书是不行的，要自己多动手做东西。", "marks": "力荐"}
{"content": "其中的代码有几处错误，坑爹呀。", "marks": "推荐"}
{"content": "一个小时就能看完了…… 基础到不能在基础…… 还好木有买", "marks": "还行"}
{"content": "就是为入门准备的，靠自律几天就能搞定。", "marks": "推荐"}
{"content": "挺好的，把全书的52个习题全部实现了一遍，不知道是不是中文版的问题，后面的错误还蛮多的，散列和列表基本都错了，不过内容还是蛮好的。#书籍阅读计划", "marks": "推荐"}
{"content": "直接在http://learnpythonthehardway.org/book/ 这个链接上看就好啦，及时更新，花了比想象多的时间来看这本书，编程任务也没有完全完成，感觉在编程思维方面离作者差很远。本书的好处是留了很多学习空间给读者自行努力，其实学会那些解决问题的方法才是最重要的。不急于求成，耐心完成任务，能学会很多。就像<How to read a book>讲的，真正的好书不只是教会你知识，更能提升你的理解力。", "marks": "力荐"}
{"content": "还行，很有作者个人色彩，但是对一些概念的解释并不清晰", "marks": "还行"}
{"content": "作为入门书还是可以的。不过我好歹学过C和Matlab，看到作者教函数真值表的时候很无语……大概40章以后才有意思起来。", "marks": "还行"}
{"content": "作为一本“笨办法”教学书，硬伤还是太多了，知识中括号和大括号要分分清吧。。", "marks": "还行"}
{"content": "我的python入门书", "marks": "力荐"}
{"content": "入门还是不错的。书后附录的命令行速成更是好用。\n每一题都完成了。直到ex51，ex52老是出错，就算了。还是去学flask，也用不着书中的web.py了。", "marks": "力荐"}
{"content": "凑单买的，偶尔查个语法，Orz，又翻了翻", "marks": "还行"}
{"content": "纯概念教程", "marks": "推荐"}
{"content": "学编程的基本方法", "marks": "力荐"}
{"content": "比流畅的pythin简单多了，真的是入门书，但还是有很多不知道的。", "marks": "推荐"}
{"content": "死在了习题46……", "marks": "推荐"}
{"content": "基础", "marks": "还行"}
{"content": "不仅是Python的入门教程，更是教了一套学习编程的方法-->阅读文档&动手写", "marks": "力荐"}
{"content": "就这样吧", "marks": "推荐"}
{"content": "零基础Python2编程入门。吐槽比正文还有价值。", "marks": "推荐"}
{"content": "要是有深入版就好了", "marks": "推荐"}
{"content": "错别字还是挺多的，我觉得我需要深入一点学习了", "marks": "还行"}
{"content": "你会编程。他们不会。这真他妈的酷。", "marks": "推荐"}
{"content": "书不错，适合无基础入门，不够深入，讲的也不是很细。", "marks": "推荐"}
{"content": "挺好的，", "marks": "力荐"}
{"content": "入门好书.", "marks": "力荐"}
{"content": "适合新手入门，不过不少地方没讲清楚，知识点不全。有经验的同学直接在线看就可以了。盛名之下，看个热闹吧", "marks": "还行"}
{"content": "212页这段太牛b了", "marks": "还行"}
{"content": "抛开一切,敲起来。告诉你,编程的正确姿势。", "marks": "力荐"}
{"content": "入门不错 后面坑太大 先入个小坑吧", "marks": "推荐"}
{"content": "原以为它会很浅显入理，但看来并不是这样而是机械的操作和无聊的跟随，没有突出应有的编程思维优势", "marks": "较差"}
{"content": "挺适合零基础的我学习Python，感受下Python大法。", "marks": "推荐"}
{"content": "人生苦短", "marks": "推荐"}
{"content": "有一些基础的会觉得这本书太入门了，另外其实还是英文版好一点。", "marks": "推荐"}
{"content": "终于读完了，手写复制了大部分代码，对于高手来说可能不是什么好书，但是对于我这种菜鸟来说，还是收获不少的。", "marks": "力荐"}
{"content": "I hate it when a textbook tells me to ignore some important underlying mechanisms and just to follow instructions. However, this textbook encourages readers themselves to search for deeper and wider knowledge about Python, which is a good thing but somehow reflects the author's \"laziness\". It leaves many things unexplained!!!!", "marks": "还行"}
{"content": "比较好的入门书，可以引起兴趣，动手实践确实是最好的学习方法", "marks": "力荐"}
{"content": "不错的一本书。", "marks": "推荐"}
{"content": "断断续续刷完了。。。对于最后的搭建项目还是有点一知半解。。。看别人都说这是超级基础的入门书。。我对自己的智商有些忧虑了。。这本书最好是连续一段时间刷完。。毕竟是初学。断了之后再看可能就没感觉了。总之能有所了解。。其实可以看英文版的。。因为用的单词都很简单。", "marks": "推荐"}
{"content": "Learn Python the hard way", "marks": "力荐"}
{"content": "在看网页版（https://learnpythonthehardway.org/book/）。出python3的教程了。", "marks": "推荐"}
{"content": "喜欢这种书，直击客户的需求。", "marks": "推荐"}
{"content": "那游戏好无聊……", "marks": "推荐"}
{"content": "啰嗦", "marks": "还行"}
{"content": "前期通过简单习题让你熟悉语法，后期就不太好了。", "marks": "推荐"}
{"content": "python/R/Matlab 我的技能就在这个暑假get了", "marks": "推荐"}
{"content": "前面很通俗易懂，到后面十来个章节还挺难的，需要多次翻看练习", "marks": "推荐"}
{"content": "说是笨办法，其实讲的还挺浅显的，属于入门书籍。附赠的光盘实在不知所云：现在有几台笔记本带光驱的？", "marks": "还行"}
{"content": "比入门教程难，比高级教程简单，两边不讨好。最有启发的是作者对于编程这事的态度。", "marks": "还行"}
{"content": "作为初学者入门读物可以，行文打破正统编程教材的体例，对话式的内容编排。", "marks": "推荐"}
{"content": "非常友善，有助于树立信心。但有些地方讲的并不清楚详细。", "marks": "推荐"}
{"content": "没有一门语言能坚持学下去，连皮毛都没搞懂就不想搞了。而且，实际上，读这本书最困难的地方在于不会用我积了两年灰的Mac！", "marks": "还行"}
{"content": "不知道为啥知乎上很多大牛推荐这本书，我觉得很不适合初学者啊，只讲语法是没有用的，况且这语法还讲得不清不楚。还是廖雪峰的网站教程清晰明了，强烈推荐。", "marks": "还行"}
{"content": "类与模块的对比，多态继承与合成的对比，都有恍然大悟之感，值得再翻一次读书笔记，入门好书", "marks": "推荐"}
{"content": "找时间继续学", "marks": "力荐"}
{"content": "买了一本父与子和这本 互为对照查阅不懂得知识点 进步很快 这本书简单又有趣 入门级最佳教学书！", "marks": "推荐"}
{"content": "-真正的python零基础书。短小精悍，幽默风趣。推荐！\n-一个初级程序员需要知道的三种最基本的技能：读写代码，注意细节，分辨力。", "marks": "力荐"}
{"content": "3.5/5", "marks": "还行"}
{"content": "面向对象一节讲得不清楚，可以参考廖雪峰的教程。我更喜欢作者最后的自白，“编程20年，兴趣已无，语言不重要的，解决问题才是，如果为了赚钱，开家快餐店更直接。”", "marks": "推荐"}
{"content": "Review", "marks": "推荐"}
{"content": "很基础很基础，学了notepad和powershell写python。不过为什么不用集成写呢，也很方便啊。算是入门了吧，继续学习", "marks": "推荐"}
{"content": ":（ 没读完，没时间hard way了", "marks": "还行"}
{"content": "作者说如果不喜欢这本书的话他推荐think python 和 a byte of python , 我就三本一起读的 这本的教学方法非常独特 对小白算是极端友好了 ", "marks": "力荐"}
{"content": "入门", "marks": "还行"}
{"content": "垃圾到要死的书", "marks": "很差"}
{"content": "太基础，翻翻就没了", "marks": "还行"}
{"content": "还是不太适合没有编程基础的同学。", "marks": "力荐"}
{"content": "全书充满了笑点,基本看了一遍，实现到提交表单，session由于在最后游戏项目里就忽略了。", "marks": "推荐"}
{"content": "还是蛮简单的，如果当初好好跟着学就好了╮(￣▽￣)╭拖了一年半的书终于搞完了🤔最后两个实例没做😂还有面向对象编程，在情人节看太煎熬了🤔这就是我没有对象的原因啊", "marks": "推荐"}
{"content": "没用，太浅", "marks": "较差"}
{"content": "first python course", "marks": "推荐"}
{"content": "所谓笨办法并不是真的笨，浅显易懂并且直接要害。没有任何程序开发基础的人都可以看懂。解决了我多年一看见程序开发的书就害怕、啃不动的问题。这一次彻底解决多年来未曾弄懂的“面向对象”。对于非程序员、但要使用程序解决实际小问题的人非常有帮助。至少能看懂别人的代码，稍加修改为己所用。", "marks": "力荐"}
{"content": "往后还是需要一定的基础，主题思想是对的，鼓励自学、上网查知识、多练习。对新手应该有帮助", "marks": "力荐"}
{"content": "从面对对象这一章开始看得有点困难。个人觉得，作为入门书，这本还是很不错的。", "marks": "推荐"}
{"content": "书不错，学完，算是有个基本感觉了吧！", "marks": "推荐"}
{"content": "还行，算是基础的东西", "marks": "还行"}
{"content": "我觉得后面的越看越模糊，撸一遍估计不够。 ", "marks": "推荐"}
{"content": "这个译本有些问题，不过受制于英语水平啃不动原版，对照着看还是不错的。", "marks": "还行"}
{"content": "201605大概读完。本来想很强迫症地读完全部再来写评价，现在看何必呢？应该构建的是以自己为中心的学习体系和方法，而非以某一材料为中心。对于某一材料，实在撸不下去的地方就先放下好了，但是要always learning sth new。\n回过来说这本书，书的好处是短平快迅速上手，作者时不时逗你一下放松点继续搬砖；不足之处是有时语言鸡血风我不太喜欢，以及某些地方跳跃过大不踏实。综合来看完全从外围入门拿来作为参考书之一也好，特别是对代码有恐惧的人。", "marks": "还行"}
{"content": "编程这东西真是看完书对编程序并无任何帮助。。。不过还是挺好的", "marks": "推荐"}
{"content": "1个月的时间搞定了这本书，不得不说，这种方法学习编程不枯燥又有趣。\n", "marks": "推荐"}
{"content": "挺基础，说解易懂，翻译欠佳。", "marks": "推荐"}
{"content": "停在了第41节，做不下去了，不会做", "marks": "还行"}
{"content": "适合一点编辑基础都没有的人入门,可以学到一些写代码和读代码的技巧", "marks": "力荐"}
{"content": "前面讲的不错，最后几章看的云里雾里的", "marks": "还行"}
{"content": "确实是一本很好的Python入门书", "marks": "力荐"}
{"content": "都怪我在买书之前没有好好关注此书是不是适合我。。。这本书是完全面对没编过程序的人的。。。", "marks": "还行"}
{"content": "非常适合初学者，没有过多的概念和理论，读起来不枯燥，赞！", "marks": "力荐"}
{"content": "挺好", "marks": "推荐"}
{"content": "入门必备", "marks": "力荐"}
{"content": "我認真的把裡面的代碼都敲了一邊~", "marks": "推荐"}
{"content": "一般，不适合作为入门书", "marks": "还行"}
{"content": "入门不错哎", "marks": "推荐"}
{"content": "写得很好，很适合入门学习\n喜欢Zed的风格", "marks": "力荐"}
{"content": "内容简短，实际例子简单上手，入门级别书籍", "marks": "推荐"}
{"content": "不错、不过后面的有点进度过快", "marks": "推荐"}
{"content": "除了是用Python2写的代码，这本书真是本好书！", "marks": "推荐"}
{"content": "真心不错的基础入门教程", "marks": "推荐"}
{"content": "很简单的入门教程", "marks": "力荐"}
{"content": "Practice make perfect", "marks": "推荐"}
{"content": "变量参数（arv），OOP都没有将清楚。拿来上手很不错，但是千万别当参考书。作者假定你得自己去网上查，但是自己讲什么class却扯半天讲不透彻。", "marks": "较差"}
{"content": "只要会用就OK", "marks": "力荐"}
{"content": "Python入门书籍", "marks": "力荐"}
{"content": "怎么说呢其实还好吧 但是学完了以后你也不算会了Python 还有许多要学的\n", "marks": "还行"}
{"content": "这本书，真是基础的不能再基础了，买错了，不过很适合没有任何基础的人来看", "marks": "力荐"}
{"content": "附录的命令行快速入门不错（之前都不会用，新技能get），习题做到中间部分就看不大懂了，解释也不大清楚，感觉不太适合零基础（好像每本书对零基础的定义都不一样）果断转《父与子编程》，以后再回来看吧", "marks": "推荐"}
{"content": "笨笨的，确实是0基础入门", "marks": "推荐"}
{"content": "初学者最好别用这个", "marks": "很差"}
{"content": "内容不多，主要是大量重复的机械性练习。没有推荐啥乱七八糟的IDE，强制用命令行，这点比较好。", "marks": "推荐"}
{"content": "入门很不错", "marks": "力荐"}
{"content": "通过书内的一些小练习，熟悉python的基础语法和内部机制，python入门的不错之选\n", "marks": "推荐"}
{"content": "第一本Python书籍，内容比较简单，大一上看的，零基础的可当做第一本编程书，有基础的可不看。", "marks": "推荐"}
{"content": "总的来说不是很系统，但撸这些代码还是可以，可以激发你学习兴趣吧\n英语渣的我伤不起哦，最后八个习题草草看了一下。", "marks": "还行"}
{"content": "不适合完全零基础的人去读，我是先看了简明python教程有了基础之后再来看这本书的，书中很多地方讲得并不细，想要完全读懂还要自己查资料，不过用来入门和培养编程兴趣挺好的", "marks": "推荐"}
{"content": "前面的40题太简单，各种基础不怎么讲，让初学者自己去查，习题答案也没有（网上也没有），请问不会怎么办？做完怎么对答案？41题开始，直接各种函数，超长代码炸死你，难度一下子突增，这本书不适合入门！", "marks": "很差"}
{"content": "用来复习挺有用的，从零开始学到有难度", "marks": "推荐"}
{"content": "很抱歉，这本书其实是对初学者并不友好的，很多东西都没有讲明白，需要自己上网查，问题是我自己网上可以搜到很多东西，为什么要去看你这本书，而且很多地方作者讲的并不明白，不够细致，其实这本书对零基础并不友好。", "marks": "较差"}
{"content": "用来做入门还是不错的，但后面的ex感觉有点吃力。。。还需要配合其他python入门书练习", "marks": "推荐"}
{"content": "一定先搞懂 命令行", "marks": "力荐"}
{"content": "搞笑幽默。不过到最后为了搞笑而搞笑。", "marks": "还行"}
{"content": "不推荐，表面上看对小白很友好但其实到后期是跨度很大的，有Java基础的学起来都费劲，更别说对没有任何编程基础的人了。\n看完本书之后还得看别的书系统的学习，这本书只是让读者了解基本的python编程模式。", "marks": "还行"}
{"content": "建议入门第一本", "marks": "还行"}
{"content": "要是没基础就别看了", "marks": "还行"}
{"content": "很基础，入门必备", "marks": "推荐"}
{"content": "这本书不适合学习过其他编程语言的程序员，内容不深，蜻蜓点水，适合编程小白无痛入门Python，但是40章之后的高级话题对于小白来说会难以理解，可以忽略这些内容。想要真正用Python工作仅仅阅读这本书显然是不够的，建议小白阅读其他书籍深入理解Python。", "marks": "推荐"}
{"content": "完全的案例入门式，做完全书的案例，你的编程水平将得到巨大的提升，可惜我还是没坚持下来", "marks": "推荐"}
{"content": "带了一下午熊孩子，不仅要帮助学coding，还要注意撕x的哥哥和妹妹…身心交瘁orz", "marks": "推荐"}
{"content": "(16-33)书里花花绿绿的净是彩图，还有漫画，能抓住孩子，例程编出来却没多大意思", "marks": "还行"}
{"content": "对于小学初中初学编程的孩子来说，是一本不错的书。不过我作为一个成年人觉得一般。", "marks": "推荐"}
{"content": "初略一读，的确实用性很强，但是理论不足，适合那些有一定基础的人看。重要的一个TDD即test-driven的思想。关于这个思想有兴趣的可以看看这个。http://agiledata.org/essays/tdd.html", "marks": "推荐"}
{"content": "有点老，错误也比较多，看的时候结合勘误吧：http://www.ituring.com.cn/book/1481", "marks": "还行"}
{"content": "开学时想借鸟哥的看看，发现版本太老，于是看到这本。内容很浅显，足以适合入门。还是 The Linux Command Line 好。20151022", "marks": "较差"}
{"content": "语言朴实 感觉诚意满满 有用 入门好教程", "marks": "还行"}
{"content": "不错的入门书，稍微浅显了，但是作为入门书足够了，一些命令介绍的很详细，剩下的修行还需要自己根据自己的需要去查。", "marks": "推荐"}
{"content": "以前对linux只知道一点点命令，从没系统学习过，这本书很棒，成功带我入门，感谢阿铭，五颗星，建议小白或者女友来", "marks": "力荐"}
{"content": "很棒的linux入门读物，贵在实用，可以当工具书来查，多谢阿铭！", "marks": "推荐"}
{"content": "刚开始读，看完再打分。粗略看了下，入门级教程，但是实战性很强。鸟哥的Linux私房菜不错，但是太厚了，看下去很难，这本书很薄，适合Linux接触不深的人群。\n\n花了2周 读完了 也跟着书上配置了下环境 网站有免费版(http://www.apelearn.com/study_v2/chapter1.html)是一本领你入门的书籍，需要多敲多想，准备继续读下鸟哥的那两本圣经～", "marks": "推荐"}
{"content": "简单易懂、但写作风格却也严谨且组织结构清晰，能兼顾到这两方面的入门书真的不可多得。作者似乎很懂初学者的认知程度，每个知识点的讲解都恰到好处，不追求大而全，而是“读者能理解到哪讲到哪（课后题也会对知识点做适当的拓展延伸）”，很优秀的“入门书”，个人觉得是“IT入门书”的写作方式典范。至于网上大把人推荐刚入门Linux的人去看“鸟哥”的书，真的没法理解，有考虑过刚入门的人的“学习认知曲线”吗.... “鸟哥”的书确实大而全，但大而全往往几乎意味着——不！适！合！入！门！  这本刚刚好，推荐！", "marks": "力荐"}
{"content": "让小白和女友都能轻松学会的linux教程", "marks": "力荐"}
{"content": "看完能用，像操作手册", "marks": "还行"}
