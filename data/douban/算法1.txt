{"content": "有点老，错误也比较多，看的时候结合勘误吧：http://www.ituring.com.cn/book/1481", "marks": "还行"}
{"content": "开学时想借鸟哥的看看，发现版本太老，于是看到这本。内容很浅显，足以适合入门。还是 The Linux Command Line 好。20151022", "marks": "较差"}
{"content": "语言朴实 感觉诚意满满 有用 入门好教程", "marks": "还行"}
{"content": "不错的入门书，稍微浅显了，但是作为入门书足够了，一些命令介绍的很详细，剩下的修行还需要自己根据自己的需要去查。", "marks": "推荐"}
{"content": "以前对linux只知道一点点命令，从没系统学习过，这本书很棒，成功带我入门，感谢阿铭，五颗星，建议小白或者女友来", "marks": "力荐"}
{"content": "很棒的linux入门读物，贵在实用，可以当工具书来查，多谢阿铭！", "marks": "推荐"}
{"content": "刚开始读，看完再打分。粗略看了下，入门级教程，但是实战性很强。鸟哥的Linux私房菜不错，但是太厚了，看下去很难，这本书很薄，适合Linux接触不深的人群。\n\n花了2周 读完了 也跟着书上配置了下环境 网站有免费版(http://www.apelearn.com/study_v2/chapter1.html)是一本领你入门的书籍，需要多敲多想，准备继续读下鸟哥的那两本圣经～", "marks": "推荐"}
{"content": "简单易懂、但写作风格却也严谨且组织结构清晰，能兼顾到这两方面的入门书真的不可多得。作者似乎很懂初学者的认知程度，每个知识点的讲解都恰到好处，不追求大而全，而是“读者能理解到哪讲到哪（课后题也会对知识点做适当的拓展延伸）”，很优秀的“入门书”，个人觉得是“IT入门书”的写作方式典范。至于网上大把人推荐刚入门Linux的人去看“鸟哥”的书，真的没法理解，有考虑过刚入门的人的“学习认知曲线”吗.... “鸟哥”的书确实大而全，但大而全往往几乎意味着——不！适！合！入！门！  这本刚刚好，推荐！", "marks": "力荐"}
{"content": "让小白和女友都能轻松学会的linux教程", "marks": "力荐"}
{"content": "看完能用，像操作手册", "marks": "还行"}
{"content": "知识点讲解的比较细，而且对算法优缺点都有详述，并且有相关的数学推导。源码除图一章以外比较详细。", "marks": "力荐"}
{"content": "在北美 这本CPP算法书的评价是最高的 至少在大学CPP里 这里讲的内容够用 不然清华也不会翻译出版了 🤓", "marks": "推荐"}
{"content": "发现新领域了；在新领域里发现前人的智慧了。\n好啊，好！", "marks": "推荐"}
{"content": "左右Unity3D 人工智能的入门书籍是非常不错的，讲的浅又不失广度，入门10分。", "marks": "力荐"}
{"content": "人工智能是一直是我比较喜欢的一个方向,而近年来很多3A大作的AI更是让人惊叹.这本针对Unity来讲解AI开发的入门书,虽然谈不上精品，用来对游戏AI有个整体性了解还是不错的。书中对于常见的AI知识点,如状态机,集群行为,A*寻路,行为树等都有对应的讲解。并附有实际代码,但是这本书对A*和行为树等知识更多是讲解插件的使用,而没有对原理深究.另外清华出版社上的相应源码下载也只有源代码,没有工程文件和资源。有了这些基础可以去看一些更深的书了。--2015年1月19日于北京", "marks": "还行"}
{"content": "把几个插件自己使使就搬到了书里，原理讲的还行。", "marks": "还行"}
{"content": "长了知识", "marks": "还行"}
{"content": "step one", "marks": "还行"}
{"content": "介绍的分析工具比较多，第2章关于KGI/CSF/KPI的内容有助于搭建分析框架～", "marks": "还行"}
{"content": "有可取之处，但是内容只是对分析的方向有个提示，并没有详细的讲解", "marks": "推荐"}
{"content": "讲的比较浅显，所谓的图解也不是很有价值", "marks": "较差"}
{"content": "虽然对码农来说 内容交集占4成左右 但对KGI等概念的认识有助于设计和架构", "marks": "力荐"}
{"content": "互联网的基础读物，有干货", "marks": "还行"}
{"content": "入个门。求一本视角更宏观的", "marks": "推荐"}
{"content": "适用范围不限程序员，久坐伏案都需要注意身体。用单元测试、迭代、重构这样讲看着是亲切些。目前只做到每天过称，手环前前后后带了几个了，中午逛公园，不时暴走。魅力不够组织不动小伙伴。。看完装了f.lux，healthy prog app略丑。。我要去安利这书。。", "marks": "推荐"}
{"content": "读过之后还需在日常生活中坚持执行", "marks": "力荐"}
{"content": "不错的书，推荐给所有程序员。", "marks": "推荐"}
{"content": "意义不大。多运动， 不要久坐不动就是了", "marks": "较差"}
{"content": "不是程序员也可以读，更重要的是，照着做。", "marks": "力荐"}
{"content": "从大三开始一直背痛；我说以前瑜伽时，摇摆式怎么做不到呢；争取尽早通过 K-W 测试", "marks": "推荐"}
{"content": "就是管不住嘴。", "marks": "还行"}
{"content": "其实看总结好的书评即可", "marks": "推荐"}
{"content": "方法简单有效", "marks": "力荐"}
{"content": "就是抽时间锻炼和检查自身状况嘛，作者简直就像搞个大新闻...", "marks": "还行"}
{"content": "有切实可行的方案，只是更重要的是坚持。", "marks": "推荐"}
{"content": "“很多人无法通过“立位体前屈”测试。这个测试用来测定后背和腿后肌群的柔韧性。如果没有通过测试，并不是因为你的手臂太短或者腿太长，而是因为后背和腿后肌群的肌肉太紧了。”  ", "marks": "推荐"}
{"content": "行文很严谨，有许多参考资料的支撑，而不像很多健康方面的论调那样心灵鸡汤。", "marks": "推荐"}
{"content": "参考书目有价值 ", "marks": "推荐"}
{"content": "重要的是每日按照计划执行~~", "marks": "力荐"}
{"content": "浓浓的明科味，不过内容其实还行啊，和《囚徒健身》有重叠部分。总之就是，再不减肥要死了。。。", "marks": "还行"}
{"content": "把身体当做一个系统：食物，睡眠，运动来维持系统的正常运转。", "marks": "推荐"}
{"content": "老生常谈……", "marks": "较差"}
{"content": "不仅限于程序狗，贵在坚持。", "marks": "还行"}
{"content": "升高座位, 手腕不要磕在桌子上, 键盘托也没用. 保持半小时换一个姿势, 长期站立式办公也不好. 改善饮食, 计算卡路里. 大概就记住了这几条. 这本书还是比较适合那些死宅程序员", "marks": "推荐"}
{"content": "备用", "marks": "推荐"}
{"content": "伏案工作者健康指南", "marks": "推荐"}
{"content": "重要的还是实践。。。以后一层楼上下就尽量不乘电梯了吧", "marks": "还行"}
{"content": "不能长时间坐着，散步有助于头脑清醒，注意饮食远离咖啡因，都是老调重弹了。", "marks": "还行"}
{"content": "你以为看了这本书就会变得健康起来么？当然不是。还要配合行动呢～", "marks": "推荐"}
{"content": "很好的", "marks": "力荐"}
{"content": "很具有可操作性，动起来最重要", "marks": "力荐"}
{"content": "还蛮科学的。", "marks": "推荐"}
{"content": "结合程序员的职业处境量身定制的健康方案，读书笔记：http://fromwiz.com/share/s/3s8xMU1t1A3-24KyE72dCK-x2hwc3R1fak-c2ulxIM3Vyrs6", "marks": "推荐"}
{"content": "健康是自己的，如果你病了，公司还是照常运转一般，但是你的家人却要为你担心。", "marks": "推荐"}
{"content": "很全面，包括正确坐姿、站立办公、运动、预防手腕疼痛、均衡健康的饮食方案、预防背部疼痛、晒太阳与维生素D的关联、预防与缓解偏头痛等等，觉得长时间坐着不运动的办公室职员都应该读一下这本书～", "marks": "力荐"}
{"content": "看书中ios的界面有点过时，但是初衷和做法还是不错的。", "marks": "还行"}
{"content": "作为一个经常关注健康话题的人，这本书读完收获不大", "marks": "还行"}
{"content": "内容不错，但国内很难落地哦", "marks": "还行"}
{"content": "前面理论部分讲的还行，后面具体实践讲的太详细了，应仁而异。", "marks": "推荐"}
{"content": "还少了一条：少玩手机", "marks": "推荐"}
{"content": "健康很重要，期待有所帮助", "marks": "力荐"}
{"content": "每个软件公司应有的福利...", "marks": "推荐"}
{"content": "多了解了解医学，多了解了解本书所述的经验，那都是极好的～受益匪浅～", "marks": "推荐"}
{"content": "还可以吧，以后试试看", "marks": "还行"}
{"content": "再一次加强了自己锻炼身体的意识。", "marks": "推荐"}
{"content": "不如健身。", "marks": "还行"}
{"content": "2316.36 推荐给同行们看，常见的健康问题怎么预防之类的，我觉得更重要的是书中提出迭代的思想，其实我觉得看每章总结其实就够了，争当健康的IT狗", "marks": "推荐"}
{"content": "读起来容易，迈出健康第一步难", "marks": "推荐"}
{"content": "书里面的方法虽好，关键人还要坚持啊。想想看了这本书几个月了，还是一如既往的坚持着坏习惯。上个周末一个学长由于肌肉过于疲劳导致筋膜炎，吓得我赶紧掏出这本书又看了一遍。", "marks": "推荐"}
{"content": "just so so，整书主要建议混合搭配，不管是姿势、进食、运动，略有启发", "marks": "还行"}
{"content": "真心有点弱，没有多少实质，但还算比较有意思", "marks": "还行"}
{"content": "刚买，在看", "marks": "还行"}
{"content": "实际上，最常折磨人的疼痛是肩背疼痛、头痛、肠易激综合症、上肢综合症和情绪低落，这些无一不是不良生活习惯导致的，长时间呆在室内，没完没了的打字，从鼠标到键盘的重复性手腕运动，以及不合理的三餐摄入。\n本书适合程序员长期伏案工作的其他人群以及所有关心健康的人是阅读。", "marks": "推荐"}
{"content": "用严谨科学的语言轻松的传授办公室人员的健康以及改善策略。读本书有以下几个好处：学习健康方面知识、提高工作效率、学会为健康氪金、学会如何正确的做到工作锻炼两不误……总之、我的健康水平和工作效率是的确提高了。", "marks": "力荐"}
{"content": "很薄但是很实用的一本书，不仅适合程序员，还适合每个需要长时间坐办公室的人阅读～", "marks": "力荐"}
{"content": "    针对我们程序员的  还是不错的，看完之后还做一份  符合自己的简介的 缩减版", "marks": "推荐"}
{"content": "信息量太小，感觉全书也就几个观点", "marks": "还行"}
{"content": "还不错。", "marks": "推荐"}
{"content": "functional programming的标杆之作 。最赞的是，全部付有习题和解答，以及源代码（github上放着）", "marks": "力荐"}
{"content": "https://github.com/fpinscala/fpinscala", "marks": "推荐"}
{"content": "好书，清晰明了", "marks": "力荐"}
{"content": "看了前几章，暂停；scala还是偏复杂", "marks": "推荐"}
{"content": "不知道为啥不喜欢这本,任性..", "marks": "较差"}
{"content": "大开眼界！很棒的函数式编程入门书。我的笔记：http://facaiy.github.io/tech/2017/04/23/Functional-Programming-in-Scala.html", "marks": "力荐"}
{"content": "很赞，配套C站课程刷作业，喜欢这种老司机带你上路的方式，很好的入门指南", "marks": "力荐"}
{"content": "越看越不懂了", "marks": "推荐"}
{"content": "非常不错的函数式编程入门书籍，Scala 进阶书籍。再次证明了，Scala 并不是better java，而是一门全新语言。不过有些地方不太理解，准备找时间二刷此书。", "marks": "力荐"}
{"content": "作为programming in scala的进阶版正合适，逐一解决习题并对照Github上的答案绝对大有帮助", "marks": "力荐"}
{"content": "其实比较无聊", "marks": "还行"}
{"content": "两位作者都是数据科学家 但是技能上感觉像是算法组的某个数学高手突然得到了教授级别的Python功力那样 ... ；部分解释和代码有错 不过整体上还是很有诚意的一本书 示例都是作者认真挑选过的而且附上了不同实现比较的图表 完整的代码可以在github上找到", "marks": "力荐"}
{"content": "本书可以分成最后两章和其它……不过说来作者们的水平还是相当可以的", "marks": "推荐"}
{"content": "干货！", "marks": "力荐"}
{"content": "The last chapter alone is worth five stars", "marks": "力荐"}
{"content": "值得一看，python的性能本来就不高。但是还是要注意，能避免的劣化还是要避免。", "marks": "推荐"}
{"content": "难得将python高性能的好书", "marks": "力荐"}
{"content": "主题不错，都是别的书没有的，集群的主题更是，接近于实践级的而不是本入门教学类的书。", "marks": "还行"}
{"content": "#心灵鸡汤# 看一个男人的品味要看他的鞋子；看一个人的Python功底，要看他在项目中对类型验证的把控！", "marks": "推荐"}
{"content": "主要看了多进程那块，写的非常不错，重点突出，有翔实的例子，手动跑起来就能看到效果。 如果再加上官方文档一起阅读，能把知识了解的非常透彻。 ", "marks": "力荐"}
{"content": "才买的这本书，到手后翻开，比较后悔。基本上是一本概念释义的书...", "marks": "很差"}
{"content": "草草翻阅过...主要提了下所涉及的关键字，完全没有深讲。概念释义书...", "marks": "较差"}
{"content": "在知识广度方面无出其右了。这么多概念自己整理要费极大功夫。有人帮你系统梳理如此庞大的知识体系是件很爽的事情，堪比大保健。", "marks": "力荐"}
{"content": "内容还行。但是作者太能装逼，每章前面放首歌词到底是为那般。差评。", "marks": "还行"}
{"content": "内容非常丰富，可惜有点散", "marks": "力荐"}
{"content": "和上一本搜索的书质量差不多，很多概念讲的很透", "marks": "力荐"}
{"content": "没读完，更像是一本笔记。。。", "marks": "较差"}
{"content": "不要买任何中国人写的技术书，纯粹浪费时间", "marks": "很差"}
{"content": "书名和内容其实不太一致，其实不是在讲大数据，整体来说，作为分布式系统和分布式机器学习的一个survey还是很好的，能够结合现实的开源软件来落地讲解，这点不错。不过毛病是老爱搞太多的文绉绉的数学推导，没做到用容易理解的语言来重新描述，而且所讲内容不够深入。", "marks": "还行"}
{"content": "概念介绍类书籍，写得不错", "marks": "推荐"}
{"content": "不算很烂的书，但是此书仅仅是各种review, readme和paper的集合。很可惜大部分readme我已经看过了。于是减一星。ju360是个跟好的网站，很遗憾和谐了。\n", "marks": "推荐"}
{"content": "内容很丰富，不过最后几章的算法还是看不懂", "marks": "力荐"}
{"content": "不光生态系统讲的好，关键是有作者自己的思考以及对读者的指引，每章后面对的参考文献都是经典，尤其全书最后附录2的文献更是必读", "marks": "力荐"}
{"content": "花了整个周末的时间把书全部过了一遍，算是不错的导引类书籍了，尤其前面写的非常好（尤其是数据结构那章）。缺点在于深度不够...", "marks": "推荐"}
{"content": "又是一本啥都提一提的书,用来做串联或者索引还是蛮不错的.", "marks": "推荐"}
{"content": "内容多，用来按图索骥不错", "marks": "推荐"}
{"content": "分布式讲了很多。一本很好的工具书。", "marks": "还行"}
{"content": "数据结构部分讲得很细很全面，作者在分布式计算上有很多实践经验，后面图形算法和机器学习上比较概略。书在整体上偏重技术，如果后面能加二三个应用案例或许会更好。", "marks": "推荐"}
{"content": "2015.9.10读完\n好书, 类似于地图的作用, 整个过一遍后知道整个系统是怎么组成的, 在哪个地方该用哪个组件, 有哪些组件可供选择. 看完后感觉对系统整体性的理解更有把握了, 消除了之前那种做东西的割裂感. 如果需要深入某一部分, 也知道这一部分属于系统的哪个位置. 以后该书可以拿来当参考手册", "marks": "力荐"}
{"content": "概念居多，各种产品介绍居多，但是还是值得一看。", "marks": "推荐"}
{"content": "梳理目录分类很管用", "marks": "还行"}
{"content": "大杂烩，入个门。", "marks": "还行"}
{"content": "大数据涉及的各种技术及相关理论，很好", "marks": "力荐"}
{"content": "尚可", "marks": "推荐"}
{"content": "罗列了一堆框架和论文，但基本上都是点到为止，入门级的扫盲吧，翻翻还凑和。。。", "marks": "还行"}
{"content": "讲得很浅，各种罗列！有骨架，却没长肉", "marks": "还行"}
{"content": "大数据技术综述。", "marks": "推荐"}
{"content": "挺喜欢这种地图类的书的，摸清脉络，形成体系。不过去到实际的目的地，还得拿当地的小地图。", "marks": "推荐"}
{"content": "应该是目前在大数据领域广度最大的一本书，追求了广度，自然就要放弃深度，适合有一定基础的人阅读，进一步拓展自己的视野。", "marks": "力荐"}
{"content": "非常全面的一本书，读完感觉把脑海里的知识和架构体系重新梳理了一下。之所以四星是因为：虽然全面但是深浅不一，不适合作为工具书，且篇幅长，需要较多时间进行阅读。", "marks": "推荐"}
{"content": "宏观了解", "marks": "还行"}
{"content": "大数据领域概览，不深入。", "marks": "推荐"}
{"content": "论文的罗列，入门级的概念扫盲", "marks": "还行"}
{"content": "航海图", "marks": "力荐"}
{"content": "不错的介绍书，缺点是已经是四年前的了。有的东西写的不是很深入，点到为止。", "marks": "推荐"}
{"content": "基本知识点都涉及到了，奈何都比较浅，做为一个目录来做为知识点的索引，然后自己展开阅读吧。", "marks": "还行"}
{"content": "勉强读完，很多概念暂时理解不了，但是还是一本了解大数据知识的好书，以后还需要多次阅读。但是现在很多概念应该都更新了，需要作者来与时俱进了", "marks": "推荐"}
{"content": "前半部分介绍分布式系统的常见算法、结构等，全面了解不错；后半部分是大数据分析、机器学习等，没有看。", "marks": "推荐"}
{"content": "可以算是作者关于大数据的笔记，比较粗糙，对很多重要的算法比较初略的写出，要了解详细一点的都要自己再找网上的文章看看。胜在这本书比较全面，对大数据入门，或者想了解大数据还是一个不错的选择。", "marks": "推荐"}
{"content": "除了zk mr storm ，好多都不懂", "marks": "推荐"}
{"content": "内容太多，最近不喜欢这个风格", "marks": "推荐"}
{"content": "大数据笔记类书籍", "marks": "还行"}
{"content": "科普", "marks": "推荐"}
{"content": "横向扩展一些知识挺好的", "marks": "推荐"}
{"content": "大数据方面的百科全书，清晰的梳理了大数据相关的知识点，虽然深度没潜下去，但足以对各方面有更全面的认识，符合日知录的名字。14年的书在16年仍然有很好的参考价值。值得想了解或学习大数据方面的童鞋去读。稍后会把读书笔记和脑图上传。", "marks": "力荐"}
{"content": "大数据技术索引类图书", "marks": "推荐"}
{"content": "这本书读起来有些无聊，大概是因为都是干货吧，太干了...", "marks": "还行"}
{"content": "作为科普还行，基本都只是提了个概念。", "marks": "推荐"}
{"content": "index", "marks": "推荐"}
{"content": "不错，介绍了各种大数据的架构和算法", "marks": "推荐"}
{"content": "涉及内容如此及时，虽然我不能保证其技术描述是否完全正确，但确实每个互联网从业人员案头必备书籍，特别是当下的互联网。（完全不同于《大数据时代》这种科普书籍）", "marks": "力荐"}
{"content": "这本书或许很好，但是并不适合我", "marks": "还行"}
{"content": "深入浅出，内容很全面，几乎覆盖到大数据的方方面面。而且对于算法和概念的讲解很好理解，作为一名在校本科生，强烈推荐给哪些对于大数据分布式感兴趣，想要建立大致概念模型的同学。读起来也没有一些理论书籍那么枯燥。缺点就是有些知识点到即止，同时最好读完之后配合论文和官方文档或一些实战类的书籍，自己动手去操作，可能这样更加加深理解，增强记忆。", "marks": "力荐"}
{"content": "对流行的大数据技术分门别类的都介绍了下。不错的入门书籍。", "marks": "还行"}
{"content": "不错阿，百科全书式的技术笔记，讲解也很清楚。", "marks": "力荐"}
{"content": "很多经典论文翻译，作为泛读还行，要学东西就是想太多了。", "marks": "还行"}
{"content": "这本书是作者孕育三年的力作，并且从目录上看内容非常不错。同为技术书的作者，我深知作者为此而做的努力。尤其是为新兴技术著书，实属不易。我给这本书满星评价，不只是为这本书的内容，还是为作者的分享精神和贡献精神。", "marks": "力荐"}
{"content": "基本涉及当前大数据的方方面面，对拓展知识面，建立大数据的知识体系帮助很大。但正因为涉及面太广，细节多数是一带而过，在读完本书后，可以有针对性的通过其它途径对感兴趣的领域再深入研究", "marks": "推荐"}
{"content": "没有耐心读完\n总体来说是分布式领域论文的综合\n等有时间再拿出来读一读", "marks": "力荐"}
{"content": "挑着看的", "marks": "还行"}
{"content": "有广度有深度\n注：这里的架构不是系统架构", "marks": "力荐"}
{"content": "这种级别的技术书籍还真不是随便可以驾驭的 从工程上出发还是多介绍一些trick比较实用 大而全的体系hold不住", "marks": "较差"}
{"content": "比较差，没有太多真正的东西。不是我崇洋媚外，以后再也不想买国内写的书了。", "marks": "很差"}
{"content": "读完之后更新一下，本书讲的概念和基础知识较多，有一定深度和广度。但叙述方面还是太弱了，整体缺乏组织，总体来说更像是作者自己的学习笔记。。而且有些文字的描述重复冗长，有些描述要想很久才突然顿悟”原来作者想表达的是这个意思”（自认理解力还是不错的。。。）。并且不太喜欢作者在每章开头都放一段歌词的做法，太过于装逼。。。", "marks": "还行"}
{"content": "这本书适合大数据研究人员，入门级书，涉及的技术都还挺新，省去了很多读论文的时间，是一个很好的汇总。总之这个不是技术应用型的书。", "marks": "推荐"}
{"content": "内容很全面，而且通俗易懂。", "marks": "力荐"}
{"content": "花了个几月的时间看，应该说内容非常全面，作者一定是有大量实际经验，对于想致力于搜索领域发展的朋友应该很有帮助，不管是架构，算法都可以看到很多新东西，初学者要有相当好的基础需要下很多功夫才能领悟，要有很强的全局观，知识面要求也很广。", "marks": "力荐"}
{"content": "很全面，脉络清晰", "marks": "力荐"}
{"content": " 还行，有的讲的泛，有的讲的细。完整版联系374741295@qq.com。支付宝支付5元到374741295@qq.com这个账号即可。", "marks": "还行"}
{"content": "Great～", "marks": "力荐"}
{"content": "大概的简介，对入门引导还是有帮助的，感觉适合零基础。", "marks": "还行"}
{"content": "头重脚轻", "marks": "还行"}
{"content": "先说缺点。1.全书188页，本就不厚。这其中还包含有大量的软件界面截图。一开始讲kali安装和linux的基础知识就好多页。个人感觉，如果把截图和类似软件安装步骤这样的内容砍掉的话，全书可能也就一百页左右。我在当当买的售价是50元，性价比好像不是太高。2.讲扫描部分重点讲nmap，可没有把nmap所有参数都讲到，也能理解，毕竟不是专门说nmap的书。但nmap一些比较好玩的特性：绕过防火墙、欺骗ids这些，略过不提实在是遗憾。攻击部分重点讲metasploit，仍旧是浅尝辄止的说了说如何开启一个标准的扫描，配了几个截图，然后就木有然后了…说优点。门槛很低！虽然在前言部分作者说本书的目标读者是安全工程师、研究人员、信息安全专业学生，可实际上本书几乎不需要前置知识就可以读懂。", "marks": "还行"}
{"content": "其实并没有太多的“实战”，只是简单的介绍kali这个系统，和部分工具的简单使用，适合初学者，入门级门槛", "marks": "还行"}
{"content": "工具书", "marks": "推荐"}
{"content": "《构建之法》链接汇总（含对应序号）：http://www.cnblogs.com/xinz/p/4470424.html", "marks": "力荐"}
{"content": "难得有国情的软件工程书，不过无论哪种形式的软件工程书都不像是让人打得起精神来的东西...", "marks": "力荐"}
{"content": "在生活中能不能锻炼PM的能力呢？当然可以，比如装修房子、组织一个大型活动、带自己的孩子、帮邻居家带三天孩子，等等。", "marks": "力荐"}
{"content": "可能是最接地气和适合中国学生的软件工程课本。", "marks": "力荐"}
{"content": "先来看看", "marks": "推荐"}
{"content": "软件 = 程序 + 软件工程，这本书对于软件工程的方方面面：需求、设计、开发、测试、团队协作以及个人成长等都有所涉及且内容简洁、精炼可以很轻松的一口读完，不过读过了，还要亲自动手实践，这样才能够内化为你自己的知识，很值得多读几次的好书。", "marks": "力荐"}
{"content": "此类书中看过最好的一本", "marks": "力荐"}
{"content": "还挺有趣的，有种“专业书终于说人话了”的感觉。", "marks": "推荐"}
{"content": "涵盖知识面非常广的一本书，也许不那么细致，但是觉得理清了软件工程的方方面面，非常有借鉴和指导价值。对于为接触过正式软件项目和流程的人来说是一本得以认识软件工程的经典，对于已经在软件行业摸爬滚打过的人来说也是一部可以 用来检验自身和公司实践的佳作。本书时候工程师，设计师，产品甚至几乎所有和软件产品相关的人和对软件产品的流程感兴趣的人。", "marks": "力荐"}
{"content": "很多方法和理念很好，可操作性强", "marks": "推荐"}
{"content": "讲的很不错，配的例子生动有趣，也遍历了包括敏捷在内的现代软件开发模式。挺适合高校作为教材的，可惜了。", "marks": "力荐"}
{"content": "干货极多！强力推荐。。。所有干工程项目的都可以读一读", "marks": "力荐"}
{"content": "接地气，但是深度不是很够，不过这种表达比较适合读下去，可能是相对不空洞的讲述方式了吧", "marks": "推荐"}
{"content": "挺实用的一本书，学习现代软件工程很不错，但若想用其作为过程实践指导则还嫌内容不够具体化。通过人物故事的形式将知识点介绍出来，理论学习起来不枯燥，阅读性强。", "marks": "推荐"}
{"content": "野生程序员见到了正规军打法，但是因为没有实践，所以只是快速过了一遍，虽说如此但是收获依然不少", "marks": "推荐"}
{"content": "内容很多，对于未走出校园的我来说短时间内难以消化，有些地方不够详细，有点像上课用的讲稿了。不过前面几章做科普还是不错的，感觉自己软件工程白学了。", "marks": "推荐"}
{"content": "如果软工的课程用的是这本书的话，我当时一定会把它读完的，即便是在一家敏捷化程度较高的公司工作了几年，读到书中的第五章团队与流程，第12章用户体验，第16章创新，第17章职业道德时，仍然是有些许收获的，测试那张也很有趣。\n本书的内容通俗充实，贴近实际，而且讲述的道理都比较客观，没有走极端，如对于敏捷的看法。如果该书有下一版，我有如下的几点建议：\n1. 将MSF放在最后作为参考阅读，毕竟这个只是微软内部的实践，不见得是最佳实践；\n2. 加一些关于Lean的内容，可以挑37Signals, Zappos作为例子；\n3. 加入持续交付/部署的介绍\n本书如果要作为教材，配合实际的项目学生感受会更深刻些。\n最后，深深的觉得，软工这门课程，作为学校至少应该邀请一些经验丰富的开发人员去做些分享。", "marks": "力荐"}
{"content": "挺有趣的，说了不少大实话。因为是面向学生的书，所以比较宽泛，不太涉及具体技术。", "marks": "推荐"}
{"content": "非常不错的软件工程书，生动活泼，让人重温，除了开始上来就提到测试有点怪，别的都不错。", "marks": "推荐"}
{"content": "转行做软件开发人员了.", "marks": "力荐"}
{"content": "最后一章很有意思，其实是本纯教材；不建议有相关工作经验的同学购买。", "marks": "还行"}
{"content": "里面基本没讲任何编程技巧，和之前软件项目工程那本书有点像。讲的是团队配合，市场竞争思路", "marks": "推荐"}
{"content": "非常不错的入门教科书~", "marks": "力荐"}
{"content": "胡乱吞枣，有收获。", "marks": "推荐"}
{"content": "贴近现代实践的软件工程教材", "marks": "力荐"}
{"content": "看到了一些工作的真相，但写得太教材化了，不太喜欢", "marks": "推荐"}
{"content": "适合初学者", "marks": "还行"}
{"content": "仔细体会一下还没有得到的东西", "marks": "推荐"}
{"content": "今年终于看了本专业相关的。赞一个。", "marks": "力荐"}
{"content": "系统而有洞见，而且接地气，让读者由衷地乐意与作者共同工作，佩服邹欣老师", "marks": "力荐"}
{"content": "包含从设计、开发、测试、发布、绩效考核方方面面的内容，相当易读", "marks": "力荐"}
{"content": "讲软件工程、开发流程方面的好书，与时俱进。更偏向于教材，翻一遍还是不错的", "marks": "力荐"}
{"content": "按照叫教材来设计的，没有加入互联网行业的许多方法论，不够好。", "marks": "还行"}
{"content": "语言风格很不错", "marks": "力荐"}
{"content": "软工里，这个够接地气的了", "marks": "力荐"}
{"content": "说人话的软件工程，看得出作者有实际开发经验。学校的教材可以扔掉了", "marks": "推荐"}
{"content": "准备开始第二遍精读", "marks": "力荐"}
{"content": "基本术语都会有浅显的解释，入门好书，作者是位好老师。", "marks": "推荐"}
{"content": "看了几章，内容还不够深入，应该比较适合初学者，每一章最后都有很多参考资料。", "marks": "推荐"}
{"content": "软件工程开发流程。灰蒙蒙。。。用上东西。。。不多啊。。。坐等忘 scrum", "marks": "还行"}
{"content": "读完之后感觉软件工程牵涉太广了，而且不实践一下，可能一个月以后就忘光了。。。", "marks": "推荐"}
{"content": "诙谐、透、与时俱进。", "marks": "力荐"}
{"content": "软件工程入门书，简单介绍了从需求、分析、设计、开发、测试、到产品发布的流程，着重学习了需求分析和PM应当关注的点。写法简洁、举例风趣，看着不累。内容范围较广、不过并不深入，只是表面的了解，适合软件专业大学生或其他专业的行业从业者。", "marks": "还行"}
{"content": "基本的软件工程，有些实战的分享", "marks": "推荐"}
{"content": "非常值得一看，很全面，很多经验性知识", "marks": "力荐"}
{"content": "好书，通读了一遍，没有什么实践，但是仍然收益匪浅。感觉码代码的能力还不够，现在努力练习如何将算法快速实现，减少低级错误。多写写算法的习题，将语言这种低级能力化为本能之类的东西。我还会再回来看这本书的。", "marks": "力荐"}
{"content": "15/08/28 现在想想,作为初级程序员的我,并不适合读完之后对整体开发有了整体认识，我这种水货程序员感觉有用；其中5、8、9、10、12章  不是程序员的观看也很有帮助，要是学校有这种质量的书当教材，感觉学习效果会更好一点", "marks": "推荐"}
{"content": "了解下微软的软件工程过程。", "marks": "推荐"}
{"content": "用的材料新。部分讲解举例啰嗦。", "marks": "还行"}
{"content": "写的好好一点不像教材 很全面实用又通俗易懂 适合入门", "marks": "力荐"}
{"content": "当做教科书的原因，有些描述稍显拖沓，但各方面的内容都讲到了，帮我理清了一直没搞懂的软工概念", "marks": "推荐"}
{"content": "学《软件工程》，可以把课本扔了读这本，或者先读这本再读课本。", "marks": "力荐"}
{"content": "很不错的软件工程类书籍，可能学校里体会不深，实习工作了会很有帮助！", "marks": "力荐"}
{"content": "软件工程方法论，思维方式提升，开发过程的理解", "marks": "推荐"}
{"content": "算是非常接近实际开发的软件工程教材了", "marks": "推荐"}
{"content": "邹老师出品必属精品", "marks": "力荐"}
{"content": "课本风格，介绍的工具很多是微软那一套，但是总觉得不适合新手看，比较适合野路子出身的、经验丰富的程序员。", "marks": "推荐"}
{"content": "写的不错，属于少见的写的平实易懂的软件工程基础教材，值得在图书馆借回来认真一读", "marks": "推荐"}
{"content": "看了前六章还不错，后面没怎么看", "marks": "推荐"}
{"content": "通俗,接地气地将软件工程的基本流程进行描述", "marks": "推荐"}
{"content": "关注“软件工程师的成长”，“敏捷流程”，“人，绩效和职业道德”这几章，作者写的不错，但感觉谈的比较少", "marks": "推荐"}
{"content": "通过此书相对系统地学习软件工程，有干货，有趣味，内容丰富。", "marks": "力荐"}
{"content": "这是一本软件工程方面的好书，尽管作者有很强烈的传教意愿，但是书中的内容还是很有启发意义。", "marks": "推荐"}
{"content": "接地气，阅读也轻松，微软哥们还是给行业贡献不少", "marks": "力荐"}
{"content": "试读部分挺有意思的。", "marks": "推荐"}
{"content": "比起枯燥的《软件工程导论》教材读起来舒服不少。", "marks": "推荐"}
{"content": "软件工程中流程介绍，详细内容还需扩展来看。结合具体实践才知效果如何", "marks": "推荐"}
{"content": "算是比较好的软件工程的书了，比我当时学的一本强了很多。", "marks": "推荐"}
{"content": "很早就知道这边书，抽空了一天，好好看完，评价如下。\n\n1个人认为这本书比较适合教材教书使用，毕竟许多知识还是点到为止，最好有人指导看，当然指面对初级的工程师。\n2本书较为系统，由于有多年开发和团队管理经验，所以许多知识都有感觉，因此较为适合我平常当做工具翻一翻。\n3邹欣老师的书少了许多枯燥，多了些平易近人，看起来较为没有压力。\n\n由于本书案例是.net，计划自行改为php，把书本知识点变为PPT课件，内部培训使用。", "marks": "推荐"}
{"content": "国内难得一见的软件工程好书了，不容易", "marks": "推荐"}
{"content": "软件工程的教材，写的很生动，但还是难改软件工程类书的让人没兴趣。通篇看完了本书，软件开发的整个流程都涉及到了。对于学生来讲，可以一看，算是科普，对于工作的人来说，看了也白看，大点的公司工作流程就是这样的，小公司流程不规范，看了也没用。总结:刚毕业的学生，最好先去大公司，做好入门。", "marks": "还行"}
{"content": "好读书，不求甚解。一天一章看完了，对软件工程的了解就是这样了......", "marks": "还行"}
{"content": "总的来说，这是一本让我不断猜想“啥时候才能扯完蛋正经谈软件工程”的书，然后直到看完募然回首发现软件工程课已经讲完了…", "marks": "力荐"}
{"content": "易于阅读，并且可实践，但目前我还无法判断效果的好坏", "marks": "推荐"}
{"content": "读了差不多一半，感觉还是先读读算法之类的回报比较快。这本书不错，剩下的以后再读。", "marks": "推荐"}
{"content": "大概翻完，读起来轻松有趣，只是很多对我现在没什么意义。", "marks": "推荐"}
{"content": "软件工程入门很不错的指导书", "marks": "推荐"}
{"content": "一盘散沙，没有主线，泛泛而谈，也不知道为何评分这么高。差。", "marks": "较差"}
{"content": "重拾软件工程思想，要知行合一", "marks": "力荐"}
{"content": "还是比较偏理论吧", "marks": "推荐"}
{"content": "选择好书最有效的方法之一就是选对作者，像邹老师这样经验丰富的大师，一本书的价值已经顶我做几个项目了。书中引用了很多比喻，一针见血，把软件工程的本质讲述得清楚明白，力荐！", "marks": "力荐"}
{"content": "适合学生学习，然而对一些有根深蒂固诟病的企业来说没有办法改变", "marks": "推荐"}
{"content": "传统的软件工程思想，略过时", "marks": "还行"}
{"content": "全都是启示", "marks": "力荐"}
{"content": "可以拓展知识面", "marks": "力荐"}
{"content": "思路清晰，结构合理的一本好书", "marks": "力荐"}
{"content": "很不错的一本软件工程类的书，让人能从头读到尾的书，如果配合课堂教学就更好了~值得推荐", "marks": "推荐"}
{"content": "废话太多，建议的阅读方法是快速地全书过一遍，然后精读感兴趣的部分。", "marks": "还行"}
{"content": "比较基础，适合本科生阅读", "marks": "还行"}
{"content": "提高程序员眼界的一本书~~从软件生命周期的顺序来讲，通俗，而且有很多很实用的建议", "marks": "力荐"}
{"content": "一本不枯燥的软件工程书籍，工作后翻阅依旧会有收获", "marks": "推荐"}
{"content": "就是把原来的博客文章整在一起把软件项目的过程走了一遍，一些工具和方法还是比较好。\n感叹一下微软的水平就是高，项目里能够花的钱就是多，能够找到的人也是好，自己公司的项目还是根据实际情况来做，不能强求。", "marks": "推荐"}
{"content": "比学校里的软件工程课本好读到不知道哪里去了", "marks": "力荐"}
{"content": "这本书适合采用“通读”的方式进行阅读，作者较为完善的介绍了软件工程的整个流程，尤其是产品新人，通读之后将会软件开发的整个流程有更进一步的了解，包括需求分析、项目管理、软件开发、测试、发布等。其中还介绍了敏捷开发、绩效管理等方法，让产品新人对软件开发能有一定性的了解，还是值得一读", "marks": "推荐"}
{"content": "软件工程部分不枯燥，读着很有趣", "marks": "力荐"}
{"content": "我读过几乎所有软件工程教材。相比之下，邹老师这本《构建之法》不仅写得有血有肉，而且是我读过最好懂的软件工程书。一般的软工教材为了追求更广更久的接受度，在内容采纳上趋于保守，这也意味着落后实际2-5年。而这本书则十分贴近当下，是汇聚了邹老师多年实战经验的精华。尤其是书里的一些评论十分精彩，讲了很多软件工程教材没有讲清楚或不敢讲的事。这本书有很多干货，是一本让人读后有满足感的好书！ 强力推荐！\n", "marks": "力荐"}
{"content": "总觉得吧，没有评论说的那么神", "marks": "推荐"}
{"content": "很不错的学习软件工程的教材，力荐", "marks": "力荐"}
{"content": "姜jun分的书里的一部分，这本应该还在李hai东那里，算送出去了。自己没怎么看", "marks": "推荐"}
{"content": "挺好", "marks": "推荐"}
{"content": "就是不一样。", "marks": "力荐"}
{"content": "很好", "marks": "力荐"}
{"content": "如果你是一个新人，入门读物还是可以的。如果在程序猿的行业已经混了几年，那还是看点别的吧。有段时间，这本书就放在工作台旁边，先来无事就翻翻，真觉得没什么内容。豆瓣居然给评到8.6分之多。赶紧评价下。", "marks": "还行"}
{"content": "想要购买护肤品的找我。品种多多", "marks": "力荐"}
{"content": "构建之法，移山之道。用计算机的严谨和软件工程的逻辑去构思", "marks": "力荐"}
{"content": "不错哦！", "marks": "力荐"}
{"content": "想看", "marks": "力荐"}
{"content": "实力+品质出版", "marks": "力荐"}
{"content": "实用性非常强的一本书，作者之前是微软员工，所以介绍dx11和vs相关会多一些，但是他自己的GTengine是跨平台的，设计良好的，注重鲁棒性的图形引擎", "marks": "推荐"}
{"content": "书名太高大上了，实际是大牛们的一些小传，没有太多的借鉴意义，翻翻罢了。", "marks": "较差"}
{"content": "只是十几个科技人物的简介。。。。", "marks": "还行"}
{"content": "太水了，就是列举了一些人的故事....", "marks": "很差"}
{"content": "生物能带给计算机的东西远大于计算机能给生物的。。。做生物信息的孩子果断转行吧", "marks": "力荐"}
{"content": "书名很高大全，实际上只是14位科学家的传记集合，作为科普读物写的不好，充斥着太多的数学～物理～生物～化学专业术语。适合无聊的时候翻一翻，没准儿能看到未来世界的影子。", "marks": "较差"}
{"content": "水，十几个人的传记，boring", "marks": "较差"}
{"content": "水得很", "marks": "较差"}
{"content": "看看", "marks": "推荐"}
{"content": "寿司藏书。", "marks": "较差"}
{"content": "第一次接触这样的内容，生物计算机，自适应自学习算法，好像开启了一个窗户，窗外风景奇幻！然后幻想供应链也是也能成为一个有机体，而非现在机械般脆弱！", "marks": "力荐"}
{"content": "大家都评价说太水，可我觉得真像科学童话啊！极客版的「人类群星闪耀时」，看着更带感 #外行看热闹#", "marks": "推荐"}
{"content": "内容老了 很难说有新知  不过对我还是有启发的", "marks": "还行"}
{"content": "很棒的个人传记合集，讲述了每个人如何选择把计算这个universal skill应用于各个行业。", "marks": "推荐"}
{"content": "看到这本书就生气，里面没有啥实际的东西，观点也都是炒冷饭，装帧还非常劣质。", "marks": "较差"}
{"content": "数值计算方法、模拟物理方法、问题主导的专用计算单元，DNA折叠", "marks": "还行"}
{"content": "方才在图书馆里浏览了一下这本书，然后就上网看有没有pdf版。顺便看看豆瓣大神的点评，没想到，点评却。。。。个人觉得很符合我的口味，普适计算，编程，电路，生物等等，不过最后一个量子计算自己完全hold不住，以后慢慢消化。", "marks": "力荐"}
{"content": "外行人看热闹，最近看POI看多了，专找这类书看，不过有点对不住书的价格啊！", "marks": "还行"}
{"content": "简约而有启发性 省时省心 3、5、10、13章有心得", "marks": "力荐"}
{"content": "王群锋就是我啦。。。", "marks": "还行"}
{"content": "#图灵PDF# 其实 mark 这本书的唯一目的是显 low ……= = 然后里面的样例代码实现很一般啊~ > <", "marks": "还行"}
{"content": "一般，觉得数据结构的学习还是不要以js作为例子了，因为作为一个高级语言，很多数据结构实际上在语言层面已经实现了，很多例子都毫无意义。", "marks": "很差"}
{"content": "底层没讲，搞了一些简单的用法就出书了。不负责任，小学生入门比较合适。外加，代码实在不严谨，各种隐患问题。而且代码的错误特别多。。。", "marks": "较差"}
{"content": "虽然有些简单但还是很必要的", "marks": "推荐"}
{"content": "还不错吧", "marks": "推荐"}
{"content": "代码质量真心不高", "marks": "较差"}
{"content": "几个排序算法以后面试的时候可能用得着。手头已经有好几本数据结构有关的书，这本书不该买。", "marks": "还行"}
{"content": "不太严谨，概览", "marks": "较差"}
{"content": "代码质量不高，还有不少错误", "marks": "还行"}
{"content": "算法的简单科普,示例的错误太多", "marks": "较差"}
{"content": "不枉参与翻译。", "marks": "推荐"}
{"content": "错误有点多。。。。", "marks": "还行"}
{"content": "这也能叫算法书？", "marks": "很差"}
{"content": "概念浅显，不会用到，适合初学者", "marks": "推荐"}
{"content": "看这书评价不太好，不过对于我这种数据结构算法渣来说，够了~", "marks": "推荐"}
{"content": "做Leetcode时进行不下去，才想起来手里还有这本书。当初买的时候，JD上找了一圈也没有针对javascript算法和数据结构的书，只此一本，所以就入手了。现在挨章刷才发现，这都是些啥……", "marks": "较差"}
{"content": "教你如何封装Array系列。。。", "marks": "力荐"}
{"content": "代码质量差，内容简单", "marks": "很差"}
{"content": "跟着敲了一遍。感觉智商余额不足了。", "marks": "还行"}
{"content": "很适合前端学习，代码确实存在一些小问题，不过影响不大。书很薄，一天可以看好多遍的那种，自己都实现一遍的话，还是蛮有收获。", "marks": "推荐"}
{"content": "2016.15 js的算法书很少见，介绍了常用算法的js实现，出发点很不错，数据结构和算法也是大部分前端的短板，但是这本书感觉太敷衍了，代码也有很多错误，很多算法的底层也没介绍 稀里糊涂直接贴代码", "marks": "还行"}
{"content": "对于我这样前端工程师入门还是不错的，为接下来打好基础，但是书中许多代码有凑数的嫌疑，而且有些验证代码写错了...比如最后的动态规划背包问题，还好小问题不影响理解", "marks": "还行"}
{"content": "比较简单，不够深入", "marks": "还行"}
{"content": "一般", "marks": "还行"}
{"content": "讲的东西比较弱。书很薄，只有不到200页，代码占大部分。而且代码写的很弱。学过数据结构的很容易就能发现其中的BUG，不推荐", "marks": "较差"}
{"content": "书中代码好多错误。", "marks": "较差"}
{"content": "这本书的翻译是合格的。内容比较基础，给出的代码实现也是入门级的，有少部分例子有bug。不过js算法书比较罕见，这本书用来入门没问题。", "marks": "推荐"}
{"content": "然而读完并没什么收获。", "marks": "推荐"}
{"content": "要不是学过其他语言，会被里面的代码事例坑死，有语言基础的可以看，只学过JS的就算了吧", "marks": "还行"}
{"content": "JavaScript 作为一切皆对象的语言，一个用了 10 天就开发出来的语言，在数据结构上自然表现的很奇怪，例如连 Map 这么重要的数据结构都没有，还需要自己来实现。\n\n如果不是计算机科班生，又没有了解过数据结构及算法相关的内容，这本书是很合适的。\n\n如果已经了解了各种数据结构，想简单的看一下在 JavaScript 中能够以什么样的形式写出来，这本书也是合适的。", "marks": "力荐"}
{"content": "适合算法入门，但是里面好多错误啊！", "marks": "还行"}
{"content": "用JavaScript语言描述基本的数据结构与算法，既学习了JavaScript又复习了数据结构与算法的思想，不错", "marks": "推荐"}
{"content": "1.目前读过动物书中质量最差的一本，太多错误和不规范的写法，后来发现图灵社区达几页的勘误。2.不过算法描述都还是清晰的，可以自己去实现，虽然书上有些代码都是错的。3.总的来说是值得一读的，思想是关键，不过译者都只给自己3分，那～～", "marks": "推荐"}
{"content": "这个系列我买了好多，只有这本是看完的，但是老实说可能还要看第二遍，对于各种数据结构的介绍还是挺好理解的，就是没啥用。。。因为不涉及实际业务，就是讲原理吧 所以后面我看的有点困。", "marks": "推荐"}
{"content": "错误比较多\n内容比较基础\n课后习题答案不好找\n第一本用js描述还是可以的", "marks": "还行"}
{"content": "代码里到处是print，JavaScript里直接打印机打印了啊喂，不知道是作者还是译者搞的。图灵的书出现这种问题太不应该了。", "marks": "很差"}
{"content": "出了不少低级错误, 显然不是一本作者用心写的书籍，估计都没有校勘。通过这本书只能学习到简单的数据结构。错误实在太多, 改为一星。", "marks": "很差"}
{"content": "请作者写这些垃圾代码前自己跑一遍，没研究清楚，就不要拿出来误导别人。", "marks": "很差"}
{"content": "有人买了不想要吗...二手转给我吧 ，要正版的", "marks": "力荐"}
{"content": "比较适合前端初学者去看，封装了很多数组的方法，但是，数据结构方面的知识比较浅显，不过也容易看懂", "marks": "还行"}
{"content": "书真的很差，不过看来是原作者的问题\n1.不严谨，使用了很多不规范的写法\n2.写法繁琐，使用了很多没必要且繁琐的方法\n3.仅能做了解使用，无法学到可以实际使用的内容\n", "marks": "较差"}
{"content": "几个排序算法以后面试的时候可能用得着。手头已经有好几本数据结构有关的书，这本书不该买。#说无用其实有点担心辜负了臭臭兄的一片好意#", "marks": "还行"}
{"content": "错误很多，代码很粗糙", "marks": "较差"}
{"content": "讲的比较浅显，适合学习过数据结构与算法，想了解JavaScript实现的人阅读", "marks": "还行"}
{"content": "这本书其实改个名字更好——R语言的众多包指南。所以这本书中写了很多的包，但是如果你只是负责一个部分的R语言，那么其实这本书就是用来了解了解。当然作者的文章很多都在网上可以查到，本身就是从博客文章改编的内容。支持下这个做法。当然如果可以推荐你在图书馆里面看一遍，就不用自己买了。讲的还错但是偏浅，当然推荐的人很强大，Xieyihui，刘思吉贝吉塔都推荐了这本书，不过我觉得他们的推荐并不准确又夸张，这本书改个名字更好，虽然说到理想但是书的内容实在骨感。", "marks": "还行"}
{"content": "如书名所言，这本书就是本纯工具书，主要是不同R包的大段实例代码和描述，可以看做是R文档的实例丰富版本，对于快速上手某个包和整体了解哪些包比较拥有可能还有那么一点帮助。总的来说，本书性价比不高，启发性非常一般。", "marks": "还行"}
{"content": "书名起得大而无当，就是介绍了一些R包，参考价值不太大。", "marks": "较差"}
{"content": "没有细读，但是可以看得出来书很棒。", "marks": "推荐"}
{"content": "还不错咯", "marks": "推荐"}
{"content": "指导到位，很有参考价值，纸版价格稍贵", "marks": "推荐"}
{"content": "刚看到开头部分，主要是围绕着几个常用的R添加包进行讲解。在Kindle上面看的，第一感觉是代码罗列的过多，然而并没有进行足够的解释。\r\n\r\n很可能是作者默认大家可以理解各个代码的作用吧。不过如果真的是这样的话，其实没有必要非得把所有的输出都贴出来的。", "marks": "还行"}
{"content": "想买这本书的小伙伴先看一下目录，感觉一下，有哪些是自己学习或者工作需要用的，如果有看看，如果没有就不用看了，这本书本身就是包的使用，不需要花费大量时间去看，除非有你用的包，有些东西可能对于 我这种遗传学的熊孩子来说，可能一辈子也用不到，你说你去看那有啥用，但是有些能用到的，看下还是能很快上手的", "marks": "还行"}
{"content": "DFDFD", "marks": "推荐"}
{"content": "看了前五章，代码缩进糟糕得要哭了(¯O¯) 第二章的某个示例代码感觉有逻辑错误", "marks": "还行"}
{"content": "相当不错的书。", "marks": "推荐"}
{"content": "大半本书讲了设计模式， 在脑海中回忆了一遍提及的名词，不再细看代码。 然后是简单的并发，xml-rpc和rpyc， 本地库调用以及opengl。内容不多，但是依然提及的比较浅，都不如网上一些blog来的有深度", "marks": "还行"}
{"content": "关于并发的那几章还挺有价值的", "marks": "力荐"}
{"content": "gui和游戏编程的代码示例 对于我这种这网站的用处不大", "marks": "还行"}
{"content": "在写框架，回头参考一些设计模式，作者的确实战派，各种例子，相对来说，看例子比文字更轻松，示例代码地址https://www.qtrac.eu/pipbook-1.0.zip", "marks": "推荐"}
{"content": "略扯", "marks": "较差"}
{"content": "亮点不多，可参考之处不多。", "marks": "还行"}
{"content": "这书偏重实践，不像其他Python编程书那样纠结于Python的语法和哲学这些比较玄乎的东西。这本书的作者讲解了用Python去解决编程现实中的很多问题，比如设计模式，并发，网络，图形库等。", "marks": "力荐"}
{"content": "看前三章就够了", "marks": "推荐"}
{"content": "挺好的", "marks": "力荐"}
{"content": "太难", "marks": "还行"}
{"content": "看前3章即可，看看Python可以怎么利用设计模式，拓展一些思维。后面几张都是一些标准库的用法，价值不大。", "marks": "还行"}
{"content": "好书，精彩", "marks": "推荐"}
{"content": "偏实践，要有一定 Python 开发来看会比较好。", "marks": "推荐"}
{"content": "这本书的精华是前半部分介绍的用python实现设计模式。可以看的出作者对python语法非常精通，一个问题可以用几种不同的思想实现，学到了很多高级技巧。不过书籍的编排过于紧凑，代码down不下来。", "marks": "推荐"}
{"content": "设计模式部分值得一看！", "marks": "推荐"}
{"content": "一般般", "marks": "还行"}
{"content": "Python的经典，适合自学", "marks": "力荐"}
{"content": "书写得一般，之前做C++的时候看过这个作者写得《C++ GUI Programming with Qt4》。那本书质量确实不错，但是这本Python书一翻开就感觉作者是写C++的，代码里充满了C++的味道。“设计模式”这部分就是把C++的实现搬到python上，一点都不pytho", "marks": "还行"}
{"content": "书总结的还行，只是摘抄的内容太多，自己发挥的太少，并且没有那一项是分析的比较透的，看得出来作者入行也不是很深；不过，手机硬件设计涉及的实在是太多，又有哪个人能分析的那么透呢？", "marks": "还行"}
{"content": "这是我自己撰写的书，欢迎各位读者朋友批评指正。\n总体来说，这本书按照难度等级划分篇章，从入门篇，提高篇到高级篇，逐级深入。最后的案例分析篇，则是综合利用前面篇章的知识进行实际案例分析。\n稍微有些遗憾的地方是这本书对天线方面的知识介绍很少，一方面是由于我对天线领域不是特别精通，另一方面这本书已经非常厚了，价格也偏高（但相对于近600页的内容，价格应该算是便宜的了），天线的内容又不是三言两语可以说清楚的。因此我考虑再三，最终决定去掉天线的部分（这也是我给四星而没给五星推荐的原因）。如果有机会的话，我会单独出一本关于手机天线设计方面的书籍。", "marks": "推荐"}
{"content": "评价的人太少了，怕拉低分数，所以打了四星。优点和缺点都很突出，优点:比较系统，全面，作为入门书籍还是值得看一看的。缺点:觉得作者的逻辑还不是太清晰，有时候可能是为了增加可读性，加了一些不必要的废话，另外，觉得作者很爱贬低别的硬件工程师，经常认为别人学业不精，读起来觉得很别扭。", "marks": "推荐"}
{"content": "有幸拜读了这本大作，可以说作者的写作思路异常清晰，而且有实际案例作为佐证论述，相信如果不是从事手机行业多年的人员是根本写不出来的！另外，说明一下，本人也是手机行业从业人员，之前也有在市场与网络寻找过关于手机设计方面的书，但都没有找到，现在终于有了一本，而且将硬件板块的描述很详细，可见作者的造诣！很值得手机研发从业人员品读和学习！", "marks": "力荐"}
{"content": "第一部系统讲解手机硬件研发设计的著作", "marks": "力荐"}
{"content": "几乎没有什么卵用,太简单太泛泛了,更推荐官方doc和代码注释..", "marks": "还行"}
{"content": "概念性介绍非常全面细致，但示例过于简单，真写代码时还是得刨源码 :S", "marks": "推荐"}
{"content": "比较全面，Just enough to get started", "marks": "推荐"}
{"content": "just enough to Getting Started.", "marks": "推荐"}
{"content": "今晚刚看完，概念介绍的很细致，从安装部分等甚至都是手把手的教，并且对LLVM（包括Clang）等整个体系都有介绍，并且很有意思的加入了clang analyzer，非常适合有编译基础的LLVM初学者，但是靠这本书不能完成基于LLVM开发编译器的目的。", "marks": "推荐"}
{"content": "相对不错，适合初学者。缺点：不够深入，版本略旧：v3.4的版本----和当前v3.8版本还是有些差异", "marks": "推荐"}
{"content": "前面几篇都不错", "marks": "还行"}
{"content": "小短文。 团队建设，过程改进还不错。", "marks": "还行"}
{"content": "篇篇都很实在，都是真刀真枪总结出来的精华，虽然大部分都读过，再次读还是会有新的共鸣和收获。", "marks": "力荐"}
{"content": "全功能团队的建设  很棒  我有点喜欢上thoughtworks这家公司了 一个传播文化的公司  团队建设和项目管理真的需要所有coder 了解一下", "marks": "推荐"}
{"content": "是模仿国外的一本深入理解计算机系统的书写的，里面的习题比较详细，感觉作为参考挺不错的。", "marks": "推荐"}
{"content": "国内很好的教材，值得推荐！！", "marks": "力荐"}
{"content": "国外csapp的中文版本，讲的还是挺清楚的，可以两者结合着看。", "marks": "推荐"}
{"content": "難得一逼", "marks": "力荐"}
{"content": "很不错的一本书，相当于简化版的csapp。\n跨考计算机学计组时很多不懂的地方看了这本书一下就理解了。", "marks": "推荐"}
{"content": "程序应该说明应用范围的，比如排序算法能支持多少数据排序；并且程序质量很是一般；再就是重复、罗列代码。。。。。", "marks": "很差"}
{"content": "还没读完先上评价。绝对的好书，适合我这种看了敲了许多初级代码，迷迷糊糊的已入门者。", "marks": "力荐"}
{"content": "只是罗列了Android编程技术的各项概念性知识，讲解比较笼统，不适合初学者。", "marks": "还行"}
{"content": "适合刚刚入门的Android开发人员，有一定的基础但是没有一个系统的思想和开发方法流程的人去看，确实是一本非常好的图书", "marks": "力荐"}
{"content": "必须承认，这本书是android提高道路上一大推手，我才读到第七章，感觉每一章节都很好看，很多用过但是不知道的知识讲的不算细致，但是google一下几乎都能找到，算是我看到android书中维数不多的好书，非常推荐。", "marks": "力荐"}
{"content": "凑单书，写的不错，就是太入门了，当然把这些知识写简单需要雄厚的功力。我就看看windows下怎么搞", "marks": "推荐"}
{"content": "简单", "marks": "力荐"}
{"content": "于是，很感激快节奏的生活，因为它会逼着我去成长、去发现。", "marks": "推荐"}
{"content": "把除去 windows 的部分几乎看完了", "marks": "力荐"}
{"content": "清晰有力！作者必须功力深厚啊", "marks": "力荐"}
{"content": "入门书，至少不再对套接字恐惧", "marks": "推荐"}
{"content": "有的地方有些问题,阻塞非阻塞没讲。。。", "marks": "推荐"}
{"content": "大部分知识都知道 着重看了部分章节", "marks": "还行"}
{"content": "把 windows 的部分去掉感觉更好。。", "marks": "推荐"}
{"content": "前几章的Windows网络编程比较鸡肋，但后面专门的Windows编程里的异步模型讲的挺好的.整本书用最少的api来讲解网络编程常用的知识，各种并发模型，感觉特别好。最后的http服务器如果再复杂点就更好了。\n整部书难度跟 csapp 最后部分相当", "marks": "推荐"}
{"content": "读完apue才发现这本有多垃圾。。。不清不楚，逻辑混乱，当然,比高校老师那些垃圾书还是强几万倍的", "marks": "还行"}
{"content": "我觉得作为入门教材非常不错的书。", "marks": "力荐"}
{"content": "比较基础 & 浅显易懂", "marks": "推荐"}
{"content": "不错的入门书，读 Unix 网络编程有困难的话可以先读一下这本。", "marks": "推荐"}
{"content": "入门级，linux和windows方面的网络编程都讲到了，但不深入。", "marks": "还行"}
{"content": "入门书。", "marks": "推荐"}
{"content": " TCP/IP 编程入门好书", "marks": "力荐"}
{"content": "适合入门的好书。", "marks": "力荐"}
{"content": "纯C语言， 这本书很适合新手入门， 作者语言也非常生动。", "marks": "力荐"}
{"content": "形象生动，浅显易懂，非常好的网络编程入门书籍！", "marks": "力荐"}
{"content": "作为入门书还是很不错的，代码整体比较易懂（虽然代码中有点小问题，认真读过的朋友应该能找出并修正），下一步要继续深入《Unix网络编程》", "marks": "力荐"}
{"content": "值得推荐，写的很通俗，例程丰富，内容也充足，有配图，以后有机会会入手购买这本书", "marks": "力荐"}
{"content": "这本书从IT行业发展的视角证明了历史不断重演.  \n正如现在 90% C/C++渣程序员依然美好地相信C/C++就是上帝,\n过去就是汇编程序员鄙视高级语言使用者(当时Fortran, C)\n\n实用主义和面向人友好的技术(如鼠标, GUI)发展下来, \n而如今七牛云存储坚持CLI风格,文档不对人类友好, \n又拍云虽然技术实力相对弱, 文档和接口设计面向人设计,\n受众会更广. \n云服务不仅仅是面向程序员的，更应该面向更多行业的人.\n易用一直都是发展的方向.\n\n\n", "marks": "推荐"}
{"content": "知道了Unix、管道、Pascal的得名，word、Visual Basic的历史，Linus和Stallman的分歧，大家都从施乐「偷东西」，大家都看过As We May Think，最后大家都喜欢玩一字棋", "marks": "还行"}
{"content": "故事，就是老重复一些内容算什么意思。书是参加pycon2014的奖品", "marks": "推荐"}
{"content": "图形界面部分给了我新的想法（对图形界面的新看法），重新给个评价，写得太糟糕了，一股子无聊畅销书的味道，翻译也有问题。", "marks": "较差"}
{"content": "计算机学科中应该有一门叫软件史的课。", "marks": "推荐"}
{"content": "新聞記者寫科技史就是隔靴撓癢。", "marks": "还行"}
{"content": "回到历史中的一本书。有趣的是，这本2001年的书最后写到了 grid computing，那个没有最终占领市场的想法，后来的成功的是云计算。", "marks": "推荐"}
{"content": "翻下就好", "marks": "还行"}
{"content": "读的电子版，感想是能发明语言的人小时就天赋异人", "marks": "推荐"}
{"content": "软件史梗概", "marks": "还行"}
{"content": "还行", "marks": "还行"}
{"content": "java Gnu Not Unix", "marks": "推荐"}
{"content": "软件背后的故事就是思想和文化。“中断”是分时的产物，SQL经历过导航向关系的转变，JAVA是网络时代的语言，开源、栅格……理解编程是进化的产物，历史才能比教材生动~本书可以更精彩！", "marks": "推荐"}
{"content": "我们习以为常的技术其实经历了激动人心的发展过程。", "marks": "还行"}
{"content": "FORTRAN COBOL Unix和C BASIC Algol到Pascal再到C++ Word的故事 Macintosh Java Apache和开源运动，每个故事都很经典", "marks": "力荐"}
{"content": "if only it could cover the advances in the last decade. . .", "marks": "推荐"}
{"content": "乱，差。\n作者搜集了一堆关系不大的材料堆积在一起，本书就诞生了。各种杂乱无章的故事，几乎没有任何真知灼见。\n另外，读着读着就让人抓狂了。这作者也太不认真了，就算你不懂技术，你可以问懂的啊！怎么也总不能胡编乱造啊。从如山的错误里挑出两个例子：把SQL说成制作网页的语言，面向对象的概念更是驴唇不对马嘴。\n建议还是不要浪费时间阅读本书了，有空可以读读《编程人生》之类的，就算看维基百科也比这本书好。", "marks": "还行"}
{"content": "花了几个晚上读完。结论如下：大神也是人，但大神都有共同的特质。公司规模大了总会⋯⋯类似OS360的杯具还在继续。脚本语言介绍的太少。该书不如《编程人生》", "marks": "推荐"}
{"content": "囫囵吞枣般翻过。唯一印象深刻的就是Word之父 查尔斯西蒙尼的故事。", "marks": "推荐"}
{"content": "计算机历史，课外乐趣读物", "marks": "还行"}
{"content": "编程语言的近代史", "marks": "推荐"}
{"content": "内容还行，配一些相应的图就更好了，但感觉翻译的有点怪怪的", "marks": "推荐"}
{"content": "就那样吧，封面多好看，坚持了几章，还不错，算是了解了高级语言的发展。到后面实在的太枯燥了，还不如那些技术书籍有意思。", "marks": "还行"}
{"content": "不错的计算机语言史", "marks": "推荐"}
{"content": "不那么有趣", "marks": "还行"}
{"content": "一般，路边读物而已，有些故事还很有意思，有些思想很受教。\n计算机科学家的一个重要任务是建立机器与人的桥梁，从汇编到c到c++到java编程语言会变得越来越简单。", "marks": "还行"}
{"content": "我想看query, 这个讲的pr", "marks": "还行"}
{"content": "pagerank 的 4 种写法——矩阵论和随机过程的高级应用", "marks": "还行"}
{"content": "非常好的计算机视觉入门书，亮点在于没有直接使用 OpenCV ，而是先简单介绍算法原理，再利用 NumPy、matplotlib 等基本工具进行算法实现，对于已经学习了计算机视觉理论，但是不知道怎么把公式变成代码的人来说很有帮助。", "marks": "力荐"}
{"content": "主要讲述了常用计算机视觉算法的python实现，还不错。", "marks": "推荐"}
{"content": "学来拿python当工具 多例子少系统的知识 能有基本概念吧", "marks": "推荐"}
{"content": "这是一本很理论的书   大部分代码还处于看不懂状态  扯到数学就更不能看懂了  看完后对计算机视觉还是那么懵逼  希望以后有点基础了再回过头来看看吧", "marks": "还行"}
{"content": "常用图像处理库的使用，需要一定图像理论知识", "marks": "推荐"}
{"content": "适合赶大作业DDL，放在手边当索引用。", "marks": "还行"}
{"content": "嗯 用代码先跑起来看效果，其实后面的算法真不懂...\n\n说起来从1024上下了一堆图片在咖啡馆里面处理各种少儿不宜的图片有点怪怪的...", "marks": "推荐"}
{"content": "当手册翻翻不错的。", "marks": "推荐"}
{"content": "很不错的一本书，适合图像处理，计算机视觉相关的python入门", "marks": "力荐"}
{"content": "干货书！！非常好的计算机视觉入门。我应该早点读这本书的，看看去年写在SOP里的那些都是什么鬼东西啊，活该被拒啊😂", "marks": "力荐"}
{"content": "就是本 handbook", "marks": "较差"}
{"content": "有的时候很羡慕搞科研的人，面向demo编程，用Python还不如就用Matlab，反正最后都要用c++等重构………", "marks": "还行"}
{"content": "python图像处理可以用来作为入门，关于机器学习算法等，可以使用更专业的工具包", "marks": "推荐"}
{"content": "不要对这本书寄望太多，其实没什么实战内容。但是这本书相对全面地介绍了使用Python开发一个项目所需要的各个工具，可以作为项目经理的流程梳理，也可以作为开发人员对于工具的查缺补漏。", "marks": "还行"}
{"content": "这本书的定位很有问题......", "marks": "还行"}
{"content": "可快速了解运用python建站所需要的工具。", "marks": "还行"}
{"content": "是介绍python构建环境的，而不是将python具体编程的", "marks": "还行"}
{"content": "蜻蜓点水。 有点敏捷的味道， 介绍了不少工具，但是别指望用这个来学习太多工具的东西。 最后一章花了几页介绍virtual box的安装，连ubuntu的安装步骤都放出来了，骗稿费来的把？", "marks": "还行"}
{"content": "对团队里刚接触python的来说，还算有帮助", "marks": "还行"}
{"content": "软件工程类书 不过还是很有用的 virtualenv和Hg", "marks": "推荐"}
{"content": "大部分是工作流程的介绍，还有工具的介绍。挺贴近实际工作的。", "marks": "推荐"}
{"content": "干货太少。", "marks": "较差"}
{"content": "这并不是一本书，算是一些文档的集合。所以自己搜索书中关键字找点文章读一读就好了，考虑到时效性，现在用 Trello 和 Slack 代替书中的 ticket 系统和 Skype 更好些。", "marks": "还行"}
{"content": "准备给新人也写一系列类似的: )", "marks": "还行"}
{"content": "很一般", "marks": "很差"}
{"content": "全是干货，受益匪浅", "marks": "力荐"}
{"content": "略贵啊，不过很新，也很实战~", "marks": "还行"}
{"content": "python开发(杂项配置)实战", "marks": "推荐"}
{"content": "周五下午到的货，下了班吃饭睡觉，凌晨12点睡醒，拿起来开始翻，真的都是实战干货啊，哇哈哈，好高兴啊，学到了这么多知识，哈哈哈。。比如virtualenv的使用、文档的编写、测试、打包发布到PyPI、自动部署环境、GAE等等。。", "marks": "力荐"}
{"content": "这本书别买，坑", "marks": "很差"}
{"content": "一本只用读目录的书.....", "marks": "还行"}
{"content": "介绍了实际工作中的环境配置、流程、工具、测试", "marks": "推荐"}
{"content": "书名改成《python开发环境搭建与流程配置实战》就名副其实5星了。\n话说现在搭环境配置什么的这么纷繁复杂各种坑，有这种书也是挺实用的！rst，Mercury，codereview流程，单元测试都是这里学的我会说吗？\n感觉他是一本师傅领进门的指导书，具体代码几乎没有。取错了名字", "marks": "力荐"}
{"content": "2.5★…作者太水啦，拉拉杂杂讲这说那，大意不外就是说，未来是算法哒，骚年啊，你快快来当码农罢，不然找不到饭碗哪…人名前后不一，校对不够给力哈…", "marks": "较差"}
{"content": "趋势已经显见。未来不可预测。“这个世界看上去跟十年前一样，但实际上，已经截然不同了。”", "marks": "推荐"}
{"content": "这本书用来培养对算法的兴趣还是蛮好的", "marks": "推荐"}
{"content": "很有意思，没有同类书那么难读，很多新东西，虽然讲的是编程，但主要是故事和历史。书中描绘的一切令人对到来的算法世界很是开心。", "marks": "推荐"}
{"content": "新的时代", "marks": "力荐"}
{"content": "看得出来作者为了完成这本高质量的书做足了功课 刚看完《冯诺依曼传》就看这本 简直是看到了冯诺依曼的远见在今天的现实版本 上世纪20、30年代凯恩斯就预言将来人类会“技术性失业” 他只是提早了90年 算法已经完全占据了世界 甚至将来会主宰人类的命运 看了就该好好思考一下自己的命运了 算法可以创作大量的古典音乐 可以预估电影票房 可以预估流行歌曲的当红概念 可以用51%的概念每天大量交易让金融界天天赚钱 可以自动识别客户的六种人格然后选取工作人员去针对性完成销售和客服 当然更重要的是选取航天飞行员……有没有危机感呢 非常有", "marks": "力荐"}
{"content": "封神之路  以后人手一个算法  比谁快  ", "marks": "力荐"}
{"content": "一个晚上读完，非常精彩的故事。现在一切只是刚刚开始，未来属于算法和它们的创造者。另外，这本书的封面太丑了，如果能再版的话，建议换一换。", "marks": "力荐"}
{"content": "翻译太糟糕了", "marks": "还行"}
{"content": "算法正在悄悄地统治世界", "marks": "推荐"}
{"content": "算是对新时代青少年的科普吧，不过很多成年人也应该被科普一下。不读书不更新知识就会被时代抛弃。比如我国的大量小散...不过组织在国际金融市场上的表现似乎比国内小散的表现还差...", "marks": "力荐"}
{"content": "典型畅销书风格吧，让你看完对一个被描述的神乎其神的领域充满好奇，但是并没有告诉你他们具体是怎么做的。", "marks": "还行"}
{"content": "聪明的脑袋到处有用。", "marks": "还行"}
{"content": "2014年读的最后一本，内容不错。\n这本书坚定了我一个由来已久的想法：算法，也可以引申为AI。不断模仿，超越并取代人类，是21世纪不可阻挡的趋势。", "marks": "推荐"}
{"content": "完全以一个文科生对世界的好奇来读此书，断断续续读了好久，一度又忘记要去读它，直到下一次飞行又把它带上，读完，还是有很多联想的。有空再详叙", "marks": "力荐"}
{"content": "很快，人类会成为机器的奴隶，算法的奴隶。", "marks": "推荐"}
{"content": "算法影响世界 这是一定的 码农们跳出来 改变世界吧", "marks": "推荐"}
{"content": "算法应用简介，教练我想学编程。原来阿列尼科夫的老板也这么惨啊", "marks": "还行"}
{"content": "有点意思。20151213", "marks": "还行"}
{"content": "算法掌控一切", "marks": "推荐"}
{"content": "大爱本书结尾的一段话：数学和算法之所以令人爱不释手，在于它们改变世界的无线潜能，可惜多数人看不到这一面。一本漂亮的故事集，讲述有些混乱，但励志效果好", "marks": "推荐"}
{"content": "八卦新闻小报风格，没啥信息量", "marks": "较差"}
{"content": "码农鸡血书", "marks": "还行"}
{"content": "消遣读物一本，核心思想一句话“算法很重要并且正在变得越来越重要”，仔细想想颇有毕达哥拉斯“万物皆数”的意思。我个人之前一直非常抗拒这个思想但是仔细想想又似乎没有原因，所以还是读的不够多，想的不够深啊。不过扯远了，就这本书的深度而言，也就是消遣入门型的吧。", "marks": "推荐"}
{"content": "挺好玩的", "marks": "力荐"}
{"content": "科普类，举了若干算法改变生活的例子。还行吧。那个纽约到芝加哥18ms缩短到14ms的例子着实不错。", "marks": "推荐"}
{"content": "挺有意思的", "marks": "推荐"}
{"content": "科普，其实值四星，但是考虑到我期待还是挺高的，所以。。", "marks": "还行"}
{"content": "还可以吧比，比创客好看一点。", "marks": "推荐"}
{"content": "各种算法的应用改变世界的故事，华尔街，音乐，医疗，客服匹配，国际政治……到处都有算法。位领先4毫秒收到期货市场信息，单独修一条光线线路的故事好牛。", "marks": "还行"}
{"content": "谱曲的大叔萌爆了 ", "marks": "力荐"}
{"content": "与我共鸣最强的就是第六章关于医学的内容。这一领域要是发展起来，会从经济效益、社会效益、技术进步各个角度产生巨大变革，看病准确性增加，费用可预计可控，减少医患矛盾，便于制定医疗政策，可以想得着的医疗业难题都会得到解决或使问题大大减轻。", "marks": "推荐"}
{"content": "雞血文😁 如果藝術家只是善於發現并運用聯繫，藝術被算法取代也就能接受了。", "marks": "还行"}
{"content": "没什么太多意思，讲了几个计算机来改变行业面貌的故事，尤其是期货等宽客相关的领域。", "marks": "较差"}
{"content": "对于搞计算机的人来说，此书的故事太过平常和简单", "marks": "还行"}
{"content": "有关罪恶的华尔街的计算机奇闻逸事，听大佬们吹牛逼。邪恶的美帝真自由", "marks": "还行"}
{"content": "很一般，买的有点后悔", "marks": "还行"}
{"content": "类似野史的性质", "marks": "还行"}
{"content": "入门性的介绍文章，几乎没有算法介绍。本书比较适合文科背景人士了解算法是啥的科普书籍。", "marks": "还行"}
{"content": "主要介绍了算法在在代社会中会扮演的角度(这个过程和计算机在社会中角色变化过程很像). 1. 金融行业(从最初的协助,到现在的主导; ), 老牌交易员的经验和市场嗅觉逐渐被取代 2. 传统的创作行业(以音乐为代表); 直面音乐之所以好听的本质(识别其中的模式), 从自动评价到自己创作; 逐渐取代作家的\"灵感\" 3. 医疗领域 (更快,更好的利用现有数据来做快速决策) 4. 公共关系(人的分类), 将博弈论发扬光大 (目前还是解决不了非理性人的问题);  \n作者的文笔很好,看着很流畅.  ", "marks": "推荐"}
{"content": "再也不看这类心灵鸡汤了", "marks": "还行"}
{"content": "我觉得本书就是培养对算法的兴趣，适合非计算机且不懂算法的人看。", "marks": "还行"}
{"content": "华尔街算法的故事集,不要以为是算法/数据结构什么的", "marks": "推荐"}
{"content": "基本没有深度的案例堆砌，不建议购买，图书馆快速扫过就行了．思考很少，案例很多．只能说是一本标准的畅销书吧．名字起的非常snappy headline", "marks": "较差"}
{"content": "兼有简史和未来学描述的感觉，展望的部分观感优于同类的书目，多多少少有一些激动人心的感觉，不容易。", "marks": "推荐"}
{"content": "算法。智能。", "marks": "力荐"}
{"content": "介绍算法应用的科普书，向读者展现了一幅巨大的图景，不过具体算法上没什么干货，给外行人看的。", "marks": "还行"}
{"content": "写得还不错，数学好是基础啊", "marks": "还行"}
{"content": "程序员读起来如同史诗一般的书", "marks": "力荐"}
{"content": "不能在最好的年纪，做一个只会写代码的废柴，还要懂数学和算法。“未来属于算法和它们的创造者。”", "marks": "推荐"}
{"content": "直接跟我说算法正在深入你生活中的每一个角落，编程技能应该每个人都掌握不就行了吗其实。", "marks": "还行"}
{"content": "觉得数学没用，或者混合运算足够一生的可以看看这本书吧。有时候搞不清是能力不足导致了眼界不够，还是眼界不够导致了能力不足。", "marks": "推荐"}
{"content": "计算机专业可以不用看。非计算机可以当小说消遣看", "marks": "还行"}
{"content": "感觉有点像外行看热闹。", "marks": "还行"}
{"content": "听过，不买不看", "marks": "较差"}
{"content": "简单地罗列拼凑了一些人工智能在生活中的应用实例。可以当八卦看看，然而作者的叙事却并不流畅。", "marks": "还行"}
{"content": "看看", "marks": "推荐"}
{"content": "与算法无关", "marks": "较差"}
{"content": "一切皆ai呀，算法<-->意义（数学与物理），还是得先学会说话（programming）。。。", "marks": "力荐"}
{"content": "计算机和算法从无数平凡人的工作经验中获得某种灵感和模式，然后再毫不留情地剥夺他们的饭碗。 然而，还是要爱着这个千疮百孔的世界啊。", "marks": "推荐"}
{"content": "算是一本算法应用的科普，重点说了华尔街与科技创业公司对于计算人才的争夺。哪里钱多，人才就流向哪里。", "marks": "还行"}
{"content": "虽说没什么实质性的内容，不过这也不是本书的写作意图，很多案例还是挺发散思维的 讲到算法也能做出大师级的音乐和诗，还有分析国际政治可以比政治学家还准，算法能干很多人类自以为无法复制的创造力才能干的事，这是本书的特色，端正价值观～也许现在文理不分科是为文科生着想哈哈    有些人说机器怎么能代替人比得过人？其实人的智慧已经提前编入算法里了", "marks": "力荐"}
{"content": "这本书是对算法应用在各个行业的介绍", "marks": "推荐"}
{"content": "作为一本可以轻松阅读的休闲科普读物，信息量简直巨大", "marks": "力荐"}
{"content": "有时间可以看看的算法科普书，只是科普而已。", "marks": "推荐"}
{"content": "人类把越来越多的工作交给机器, 哈哈哈, 这不是套到自己头上的枷锁么. 华尔街利用了人类的贪婪, 硅谷利用了人类的懒惰? // 此文略感夸张. mattersight的股票...?!", "marks": "还行"}
{"content": "现实中算法的使用案例，算是科普读物了，故事不错，但还是感觉买亏了……", "marks": "还行"}
{"content": "太浅，不过IB的出身值得一看", "marks": "还行"}
{"content": "看看别人是怎么改变世界推动世界的，不要再说什么天朝人聪明之类的了，那点小聪明大算计的那种活得浑浑噩噩随波逐流的简直就是智力障碍硬伤体现！", "marks": "力荐"}
{"content": "故事性太强了，连科普性都不是很够。。。炒作过甚。。。", "marks": "还行"}
{"content": "跳读。", "marks": "较差"}
{"content": "2016年 第二季度书单", "marks": "还行"}
{"content": "算法会自己写算法的时候，就没人类啥事了呗", "marks": "还行"}
{"content": "故事会", "marks": "还行"}
{"content": "改变世界的手工艺人。", "marks": "推荐"}
{"content": "只讲了算法历史中重要的一些篇章，但只字未提关于这个算法本身的东西，如是什么样的思维过程，怎么逐步优化的这个算法。只能作为一本非技术类的通俗读物，随便看看。", "marks": "还行"}
{"content": "SDX，从宽客改变华尔街开始，高频交易已经改变传统的交易模式。当算法可以作曲迷惑专家，作诗冲击文学，我们接近被软件包围，为了4秒交易时间建设专线成就大生意，算法改变生活不期而至。给我的新鲜感一般，对传统领域了解互联网+冲击应该很大。", "marks": "还行"}
{"content": "里面有些内容还不错，不过整体感觉不是那么优秀", "marks": "还行"}
{"content": "9 Automate this: How Algorithms Came to Rule Our World by Christopher Steiner Audiobook 04/06/2015\n点评：作者本人就是大数据挖掘以及算法优化的死忠粉丝，因此这本书的中心主题也就是围绕着这个主题进行阐述，中心思想就是：大量的工作将会被算法替代。很多你现在所从事的工作，很有可能在不久的未来就会被计算机或者机器人取代，同时举出了很多有趣的例子比如计算机如何分析披头士音乐的秘密等等，作为一本科普读物来说还算不错，3星", "marks": "还行"}
{"content": "就是说算法啥都能干。。。。", "marks": "还行"}
{"content": "《算法帝国》一书阐释了算法的强大威力，互联网，自动化，无人汽车，机器人革命等，算法广泛应用，而本书主要关注金融领域华尔街的算法应用。书中介绍了算法的历史，莱布尼茨，布尔等数学家奠定了算法基础，使人类的逻辑思考，推理，计算等可以用二进制，布尔代数等机器运算实现。书中还介绍算法在特殊行业的应用:算法改变音乐，算法解析音乐，算法作曲，作诗，深刻影响音乐这个创艺领域; 算法应用于扑克，象棋等博弈领域，可实现情报分析，运动分析，电脑红娘; 算法入侵医疗领域，算法医疗，器官捐赠算法配对，算法诊断，算法配药等。总之算法掌控世界，算法将在人类生活中扮演越来越重要的角色，一些人类活动将移交到算法手中。", "marks": "还行"}
{"content": "high performance with stable algorithm is good productivity.", "marks": "还行"}
{"content": "这是本科普算法的历史书,最多给六分,不如听讲座,收获是二进制、算法的核心就是按照设定程序运行以期获得理想结果的一套指令。", "marks": "还行"}
{"content": "干货太少，以故事为主，作为算法科普也不太合格。", "marks": "还行"}
{"content": "写得还可以，里面的故事都不太熟悉，具有可读性", "marks": "推荐"}
{"content": "其实应该给3星评价的，可看完最后两章改了主意。前面讲的都是科技发展史一类的东西，作为科普类的介绍，给3星已经足矣。但最后两章作者的思考却颇有新意，值得深入思考。给4星评价", "marks": "推荐"}
{"content": "运行在机器内部的规则。", "marks": "推荐"}
{"content": "算法只有应用到具体的领域才能体现其价值。", "marks": "推荐"}
{"content": "算法和计算机将逐渐取代很多人力的工作，不改革就要被改革。", "marks": "还行"}
{"content": "算法的完美定义", "marks": "推荐"}
{"content": "这本书作为兴趣读物来说好贵，不过体现了智商高工科生是很值钱的，这一点。", "marks": "推荐"}
{"content": "类似于通识简介，了解了一些新的故事和观点，半路弃读", "marks": "推荐"}
{"content": "书写很好，介绍了算法在各个领域的应用，例子增添可读性。", "marks": "推荐"}
{"content": "了解了一些算法在金融领域的应用", "marks": "推荐"}
{"content": "介绍了算法在改变金融，科技等方面的一些历史。对于社会的发展，算法的作用也是不言而喻的。", "marks": "推荐"}
{"content": "其实读完还是很励志的……计算机在人类生活中的参与并不仅仅是加速了信息流动和共享，也渐渐开始智能决策的角色，连码农读完都有点震惊。中文翻译的感觉有些仓促。", "marks": "推荐"}
{"content": "太扯了", "marks": "还行"}
{"content": "很短，197页，看完会对算法有思考和热血澎湃感觉，趁年轻多干点", "marks": "推荐"}
{"content": "草草扫了一遍，机器评出的前四十榜单介绍音乐评判、自动作曲、音乐分析还有点意思，但流行音乐的流行还有很多social的因素；呼叫机器人医生，e-health能造福人类就好了；人的分类, 用机器分析人的性格之类的还是太冰冷了。尽管是西蒙斯的粉丝，但其它用于华尔街的算法只觉得太浪费资源了。 ", "marks": "还行"}
{"content": "虽然算法是很厉害，但作者的口气有点像写传奇小说。", "marks": "还行"}
{"content": "一本简单的故事书，跟算法无关", "marks": "很差"}
{"content": "充满了外国特色", "marks": "推荐"}
{"content": "作者别吹了当我们煞笔么", "marks": "很差"}
{"content": "消遣型历史掌故类读物。没什么干货，也谈不上多有营养，但好在作者文笔不错。", "marks": "还行"}
{"content": "看了这本书，感觉学习计算机技术真是未来必备的技能，算法真的改变了人类，不知道人工智能以后会发展成什么样？是不是像霍金，比尔盖茨和马斯克所说的，人类要敬畏人工智能，否则可能带来灾难性的后果。", "marks": "推荐"}
{"content": "算是科普吧，相关算法故事太多了，反而觉得不够深入。", "marks": "还行"}
{"content": "我觉得很多内容可能被夸大了，特别是在看到林书豪和爱情算法时，我决定不看下去了，我依旧相信自然的力量在数据和理性之上，算法确实让一些科技和预测异常强大，但对于我们人类，漫长的一生其实更加需要不确定性和随机性", "marks": "较差"}
{"content": "在当下人工智能开始发威的时代，算法帝国所提到的算法开始渗透到人们的方方面面，本书涉猎内容广泛，令人大开眼界，除了叙述逻辑以外，确实是部了解美国金融科技等发展的很不错的书 P.S.看到本书以著名房地产大亨的名义提到川普时不禁忍俊", "marks": "推荐"}
{"content": "上帝依据自己的形象创造了人类，人类依据自己的思维方式创造了算法。算法更加理性、快速和精确，现在或将来注定会取代大多数的人类活动。目前，我们唯一不能被取代，或许是源自动物祖先的那一点非理性。但是，谁又知道未来会如何呢？", "marks": "力荐"}
{"content": "第一章看的有点愣逼", "marks": "还行"}
{"content": "还不错的讲故事的书～", "marks": "推荐"}
{"content": "算法必然统治一切！", "marks": "力荐"}
{"content": "写给外行人的科普类书籍，但是在现在这个有点灰暗的的时刻读来还是令人振奋。", "marks": "推荐"}
{"content": "回顾算法历史和成就，展望算法未来", "marks": "力荐"}
{"content": "很好的算法科普书", "marks": "力荐"}
{"content": "应该算是算法改变投资，改变生活等的纪录片吧，挺激发学习的动力的，是不错的拓宽视野的书籍！", "marks": "还行"}
{"content": "在这信息时代，算法真的很容易丢失…所以给推荐孩子这本培养算法兴趣真的很不错。。。简单易懂还很有趣\n    ", "marks": "推荐"}
{"content": "这是一本程序员的励志书，值得整天忙于移动APP、交互式网站、游戏开发的码农看看，原来算法可以统治世界。这本书同样也会给专业或不专业的投机者启发，了解到原来自己的交易对手是算法，如果你的交易系统可以量化的话，不如用算法解放自己。", "marks": "推荐"}
{"content": "科普书籍，把算法的发展娓娓道来，看起来比较轻松。", "marks": "推荐"}
{"content": "这个年代不会点算法真是没得出人头地啊。", "marks": "推荐"}
{"content": "书中介绍了算法的历史，算法的强大以及在现代社会的广泛的创新性应用。告诫那些只是在做重复性低层次劳动的人要注意了，因为他们可能会被机器人替代。\n书中重点介绍了在华尔街中，大公司和优秀程序员如何利用算法来攫取财富，其中也有计算机硬件的功劳。当然只是利用算法来快速分析和利用数据，这要比散客和传统的分析员更快更合理，大公司之间也存在算法之间的竞争。作者在后面也表达了对这种行为的不赞成。因为他们只是在玩弄财富，会造成经济的不稳定，却没有产生实际价值。作者是鼓励优秀程序员去硅谷这样的地方利用算法去创业的，他曾强调：来自硅谷的最佳产品总是使大多数人受益。", "marks": "力荐"}
{"content": "第一张看的惊心动魄，后面就太泛泛而谈了", "marks": "还行"}
{"content": "不能算是算法领域的东西，应该是算法或者IT界的故事会", "marks": "还行"}
{"content": "当想到算法可以大幅度替代人类的思考时，没有什么想法比这个更迷人了。", "marks": "推荐"}
{"content": "今天，算法涉足的领域已经远远超出了其创造者的预期。特别是进入信息时代以后，算法的应用涵盖金融、医疗、法律、体育、娱乐、外交、文化、国家安全等诸多方面，显现出源于人类而又超乎人类的强大威力。本书是《纽约时报》畅销书作者的又一力作，通过一个又一个引人入胜的故事，向读者介绍了算法掌控世界的真实情况，揭示了“机器人革命”是如何悄悄地在我们身边发生的。 ", "marks": "力荐"}
{"content": "里面介绍了近四五年的内容很多。当前计算机已经对越来越多的传统行业产生了深远的影响。但是作为读过一些论文的我来讲，里面很多的应用似乎在学术界还没有达到那么高的水准。。。", "marks": "推荐"}
{"content": "努力编程，改变世界", "marks": "推荐"}
{"content": "并没有太多技术层面的内容\n可以当做码农的消遣书", "marks": "还行"}
{"content": "90分钟在图书馆翻完，挺有启发意义的，14年就有这样的远见。但更多的是一些纪录片式的叙述，没有细节的理论。畅销书。", "marks": "还行"}
{"content": "这本书是利用开无聊会议的时候看完的，前后花了差不多两周吧。看完觉得，没事的时候还是要多给自己充电，别以后被算法取代自己的工作了。", "marks": "推荐"}
{"content": "简洁的思路，清晰的脉络，很不错的启蒙读物。", "marks": "推荐"}
{"content": "莱布尼兹绝对想不到，自己的理想今日开始实现着了。", "marks": "力荐"}
{"content": "大学时代买的书，却在毕业之后才相见恨晚的读完。经历了毕业后择业的纠结和思考，毕业半年才重新看到算法代替人力的不可逆转的趋势。感谢这本书坚定了我的选择，希望自己能够后起直追，实现自己的价值。", "marks": "力荐"}
{"content": "读完后的感觉就是算法牛逼, 没什么实质性的干货", "marks": "较差"}
{"content": "从事美股工作多年，一直困扰我的是背后操作的原理，了解后暗箱，也去研究过技术分析，最终这本书给了我答案，算法交易太疯狂，几乎统治了市场，至于整个算法帝国，可以说工业革命是对劳动力的大清洗，算法革命将是对脑力劳动大清洗，混日子的老师，小诊所医生，政府办事人员等等都是冲击对象。而人类通过算法将实现基因的优异组合，对人类将是反向选择！", "marks": "力荐"}
{"content": "勉强吧 没有怎么讲算法  讲了一些算法的应用  有一点小收获", "marks": "还行"}
{"content": "前面还比较有趣，后面开始难的时候感觉有点“故作有趣”，实际上开始讲得不大清楚了。作者虽然力图解明每一条思路，却在有些地方显得啰嗦，有些地方又只是堆积名词，讲得不甚明白。", "marks": "还行"}
{"content": "代码质量比较差，当然，搞 ACM 的不在乎这些", "marks": "还行"}
{"content": "特别特别可爱的数据结构书。", "marks": "力荐"}
{"content": "三星半，代码和思路并没有很好地结合在一起。", "marks": "还行"}
{"content": "书托好多", "marks": "还行"}
{"content": "好萌啊，\n\n\n也仅此而已。", "marks": "推荐"}
{"content": "受不了这本书的语言风格。好好说话不行么", "marks": "很差"}
{"content": "算法真的很难学。", "marks": "还行"}
{"content": "入门级算法书，C语言实现，但不够系统。", "marks": "还行"}
{"content": "一般", "marks": "还行"}
{"content": "看到4.2 总共8章 滚回去看算法。1，不是严肃的教科书级别的，想清楚再买。2，c/c++试用", "marks": "还行"}
{"content": "睡了三小时之后在凌晨醒来再也睡不着，对抗漫长黑夜的最好办法就是把之前读了一半的算法书找出来从头读，然后一口气读完。作者把枯燥的内容用非常生动易懂的方式传达出来，促成了这本基本没有阅读门槛的算法书。", "marks": "力荐"}
{"content": "基础", "marks": "还行"}
{"content": "超多错误，莫名其妙，什么垃圾", "marks": "很差"}
{"content": "比想象中的简单，基础。", "marks": "还行"}
{"content": "不错的基础入门书。", "marks": "推荐"}
{"content": "匆匆一翻。- -应该还不错吧适合我们这种懒人。", "marks": "推荐"}
{"content": "通俗易懂", "marks": "力荐"}
{"content": "思路清晰，通俗易懂的算法入门读物。", "marks": "推荐"}
{"content": "复习 小哼挺萌 不过比较大众脸→→", "marks": "推荐"}
{"content": "不要太拽啊", "marks": "推荐"}
{"content": "能够让新手觉得“啊还能这样用！”并从中得到乐趣，应该算是一本入门算法书的成功了。", "marks": "推荐"}
{"content": "深入浅出，适合非科班出身的人", "marks": "推荐"}
{"content": "很容易理解，适合我这种懒人，算法科普书吧~看完突然有兴趣去刷个刘汝佳了~", "marks": "力荐"}
{"content": "体现出了算法之美，数学之美。在读书的时候看到这本书就好了。", "marks": "力荐"}
{"content": "大一时候读过，现在翻出来重读一遍，觉得没有比它更适合入门算法的书了，书中讲了算法的基础部分，算是数据结构和算法的连接，之后结合算法导论后面动态规划贪心算法的章节煎服疗效更佳～", "marks": "力荐"}
{"content": "算法最近本的入门书", "marks": "推荐"}
{"content": "我觉得要给五份，如果不了解这些编程底层的东西，写起代码不会得心应手！这本书简单易懂，基本都看的懂，推荐！！", "marks": "力荐"}
{"content": "前边讲的还不错，但是原理性的东西不多，相对比较简单。尤其是后边图那一块讲的感觉不是很好。对，插图能不能再弱智一点………………为毛不叫小啊小哈…………", "marks": "推荐"}
{"content": "还可以吧， 可以当做acm的入门书，我觉得还不错", "marks": "还行"}
{"content": "排序和遍历算法讲的不错。后边有点看不懂。。", "marks": "推荐"}
{"content": "简短的介绍基本算法~", "marks": "推荐"}
{"content": "有活力的算法~主要是介绍一些数据结构吧，比如堆栈、对列、几大排序算法、深度和广度优先搜索以及图的遍历等等。", "marks": "推荐"}
{"content": "对程序员沟通技巧+1", "marks": "力荐"}
{"content": "读的过程中想起来读《算法导论》时候的情景，有空要回去重温，算法真的感觉就精妙。这个书说的比较通俗，理论少了，只能让人知其然而不知所以然感觉。。对算法有兴趣的童鞋还是推荐去读厚厚的那本书。。还有看视频，推荐麻省的视频", "marks": "推荐"}
{"content": "好玩儿～～", "marks": "力荐"}
{"content": "生动形象浅显易懂，除了下标喜欢从1开始有点坑之外。", "marks": "力荐"}
{"content": "计算机专业的肯定是看不起这本书。但是对于初学者来说，看厚厚的算法书实在是太难了。这本书用来入门挺好的。", "marks": "推荐"}
{"content": "代码不够精致，书的架构也不够优秀。然而 萌萌哒+有诚意有想法+可科普推荐指数+我的一点点回忆，给personal的五星吧！^_^", "marks": "力荐"}
{"content": "第一本算法书，感觉有点意思。作者真是算法迷。对于一些算法思想还是很受用。", "marks": "推荐"}
{"content": "有趣", "marks": "推荐"}
{"content": "入门 图多 读起来有成就感", "marks": "推荐"}
{"content": "啊哈磊写的算法书，很有趣，通过漫画形式搞懂了一些常用的算法。", "marks": "力荐"}
{"content": "【未读完】讲到后面有点难懂", "marks": "力荐"}
{"content": "很好的算法入门书！", "marks": "推荐"}
{"content": "啊哈，然并卵。", "marks": "还行"}
{"content": "浅显易懂。可以归到入门系列，但感觉不太系统，有些乱。", "marks": "还行"}
{"content": "大概适合智商低的我。\n堆那部分写得不错。匈牙利算法那节也还行。割点割边两节也不错。\nPrim生成树那节，堆优化的代码还是挺惊艳的。。。虽然有想到过这种做法，但是感觉很麻烦，从来没这样写过。。。不过还是更喜欢《算法竞赛入门经典》中可以重复插入优先队列的那种写法。。。\n另外，感觉代码只要关键部分的几行就可以了，没必要所有章节都贴完整代码，有凑字的嫌疑。\n", "marks": "推荐"}
{"content": "先稍微翻了一遍，不错。", "marks": "推荐"}
{"content": "读书记录：详读并对照编写代码的章节有1、2、3、4、5、9，略读7，跳过6、8。用时近2月，学到后面已然忘记前面。\n\n读书感悟：要我真是科学家式的思考风格，按理来说详读后的章节应该不会这么快就忘却，自信记忆力是极好，可还是忘掉了大半前期所学的，只留有大概印象，这大致是暂未发现许多抽象概念的意义，理解得还不够深刻。\n相反，近期看契诃夫小说，对艺术形象很敏感，一读就懂，能联想到现实生活，这又是我的艺术家式的思考风格在作怪了。我就纳闷了，我说到底擅长的是那一块？还是全不，亦或全都？\n不管了，在没突破1000本书前，我是不会给自己设限的，在35岁前完成这个目标应该不会是太难，对，就这么办，自己给自己量化工作简直是种享受。再具体到每天读3h，嗯，就这么办。", "marks": "推荐"}
{"content": "深入浅出。很好的一本算法入门书", "marks": "还行"}
{"content": "确实简单易懂啊，说的很浅显，不过还不够系统，内容较少啦", "marks": "推荐"}
{"content": "挺好的一本算法入门书,值得推荐.", "marks": "力荐"}
{"content": "不错的书，一口气读完的。看得出来作者是有自己的细想和视角的。用简单的道理和代码覆盖了排序，图，树这些算法和数据结构中重要的基础知识，加上自己对这些这是的感悟，让人觉得与众不同", "marks": "力荐"}
{"content": "一本不错的算法科普", "marks": "推荐"}
{"content": "真的是做到了有趣 算是启蒙书吧", "marks": "力荐"}
{"content": "大概是能看懂吧 为数不多的我能看完的技术类的书。", "marks": "还行"}
{"content": "入门入门入门，看过教材自己再看一遍热身", "marks": "推荐"}
{"content": "就是内容太少了，然后有些代码感觉在凑版面，但是内容的确很有趣易懂", "marks": "推荐"}
{"content": "数据结构与算法入门强力推荐", "marks": "力荐"}
{"content": "还可以吧，适合零基础的学习。", "marks": "推荐"}
{"content": "通俗易懂", "marks": "力荐"}
{"content": "这本也一样！", "marks": "推荐"}
{"content": "有趣的算法书，只看了搜索的那部分感觉通俗易懂", "marks": "力荐"}
{"content": "入门级基础读物", "marks": "推荐"}
{"content": "算法入门很棒！", "marks": "力荐"}
{"content": "前面几章讲的很不错 通俗易懂  但是书中代码的质量和书的思想不是很切合", "marks": "推荐"}
{"content": "2016.14 插图配合算法，还是很浅显易懂的，学习这种写东西的方式，内容也不错，有些地方有错误，推荐初学者看一下吧", "marks": "推荐"}
{"content": "算法不再枯燥晦涩，等看完这个就有信心看算法导论了。", "marks": "力荐"}
{"content": "很轻松的算法书，讲的很多，但是由浅入深，没有基础应该也可以看懂，例子也都很有意思，也适合反复研读", "marks": "力荐"}
{"content": "早些时候看的算法书，写得很易懂，适合入门吧。", "marks": "力荐"}
{"content": "很有意思的一本书，很浅显易懂，作为算法的入门书籍还是很不错的！但是算法上也有一些错误，读者写代码的时候应该可以发现。\n也有解释一些简单的结构体，感觉学起结构体来也会简单一点了。", "marks": "推荐"}
{"content": "纯入门级的,我算法这么挫的人都觉得是入门级的..但确实简单易懂", "marks": "推荐"}
{"content": "不错不错通俗易懂", "marks": "力荐"}
{"content": "内容不是很多，但是讲得细致，生动而且容易理解，能够冷静下来好好学习啦~", "marks": "力荐"}
{"content": "对于入门级的程序员来说这本书有着很好的引导作用，如果在作者提出问题的时候认真思考，自己动手解决再与作者提供的方案作对比，会有更多收获呢", "marks": "还行"}
{"content": "感觉非常适合非计算机或者没有学过数据结构的人看，前面3章感觉讲得太简单", "marks": "还行"}
{"content": "基础算法，草草复习一遍", "marks": "还行"}
{"content": "的确很生动形象，后续还是得阅读CLRS这种大部头。", "marks": "推荐"}
{"content": "并没有感觉到有趣，如果只是两个小人在题目开始时表达一下疑惑的话。后面的思路也并没有说明白为何这样做", "marks": "较差"}
{"content": "作者用通俗的语言介绍了基础的算法，包括排序、搜索、图的相关知识，是一本入门的好书：D", "marks": "力荐"}
{"content": "学习dfs、bfs、Dijkstra算法还有其他算法的启蒙书籍", "marks": "力荐"}
{"content": "看了一些，还算有趣", "marks": "推荐"}
{"content": "萌萌哒。。入门可参考", "marks": "推荐"}
{"content": "如果要把这本书和《挑战程序设计》相比的话，我觉得差很多。", "marks": "还行"}
{"content": "简单易懂的算法书", "marks": "力荐"}
{"content": "看见几个朋友在看, 就好奇买了一本. 写的挺清楚, 不追究细节, 是一本不错的算法科普书籍. 其实, 希望看到的还是作者如何在工作中对实际问题建模, 进而使用恰当的算法求解. 有没有这样一本书呢？", "marks": "推荐"}
{"content": "算是开窍的一本书 ", "marks": "还行"}
{"content": "连入门都算不上。。", "marks": "还行"}
{"content": "挺简单的", "marks": "力荐"}
{"content": "主要是科普作用的，教的算法都比较基础，属于数据结构里的算法，比较有趣，但仍然没有让我爱上算法这个玩样儿", "marks": "推荐"}
{"content": "写的简单，可以轻松入门。有了大概之后再去看算法导论会事半功倍。", "marks": "力荐"}
{"content": "算法导论据说不错，买来发现大部分都看不懂了，好多数学符号都忘干净了T^T。这本很适合我，至少我能看懂了。对于数学不好又想掌握算法的程序员很受用。", "marks": "力荐"}
{"content": "代码质量较差，不适用于工程。索引从1开始相当坑爹。到处透着些作者独有的小聪明，剑走偏锋。宣传得比较好，然而书真的不怎么样！", "marks": "很差"}
{"content": "最喜欢这种复杂的东西简单化，~\\(≧▽≦)/~", "marks": "力荐"}
{"content": "错误不少。。。坑", "marks": "较差"}
{"content": "挺好，简单易懂", "marks": "推荐"}
{"content": "前半部分很好\n后面就有点不明觉厉难理解了", "marks": "推荐"}
{"content": "忙起来专业知识的学习，看了忘，忘了看，智商堪忧", "marks": "力荐"}
{"content": "能简单生动的讲解一些常用的算法，挺不错的，适合初中级程序员看看，学习学习，算法还是一个积累的过程啊", "marks": "力荐"}
{"content": "第一次看到目录就被吸引了。一大波数正在靠近~好搞笑。读进正文发现真的可以看懂。插图好可爱，和文字配合的恰到好处。快排里面的小哨兵的讲解真的太形象了。算法导论可放一边了。哈哈，这是一本你看看以后还想看的算法书。太牛了。", "marks": "力荐"}
{"content": "插画不错。", "marks": "还行"}
{"content": "这插图和讲解相当到位~~", "marks": "力荐"}
{"content": "真心好！！", "marks": "力荐"}
{"content": "很不错的一本书，挺有趣的。", "marks": "力荐"}
{"content": "挺有趣的一本书，很不错！！！", "marks": "力荐"}
{"content": "优点在于讲解明白幽默，非常容易懂，特别适合入门。但这也注定了本书成为不了一本好的数据结构专著，缺少ADT抽象导致代码的通用型不强，没有系统化。相当于作者带着你在数据结构的知识地图上走了一圈，但是没有进行深入说明。后期还是要靠自己主动学习，不过本书给你的思想启发还是非常受益的。", "marks": "推荐"}
{"content": "算法还可以这样写？ 帅呆了，试读了前2章，很有趣，在快乐的思考中学习，这书太好了，市场上少见 能这样清晰的思路，幽默的文笔写计算计领域的书", "marks": "力荐"}
{"content": "最佳入门书 ", "marks": "力荐"}
{"content": "算法入门推荐", "marks": "推荐"}
{"content": "整体通俗易懂，最后几个比较难的算法讲的不是很清楚，书中有部分代码有问题。不过作为算法数据结构入门是极好的。", "marks": "推荐"}
{"content": "有趣生动，闲暇读物，好书的标准之一很简单，作者做到了。", "marks": "推荐"}
{"content": "比较浅显易懂，适合入门", "marks": "推荐"}
{"content": "关于这本书的评论我倒是没看，先说说我个人的感受吧。个人背景：从事的工作时软件测试工程师，总是想着自己能在计算机语言上有所突破，于是在网络上搜索各种文档和视频资料，大部分讲解的不是入门级别的，让我很难接受，久而久之就对这个学习计算机语言的目标打击了，没信心了！某天朋友介绍，第一听到一个叫啊哈的，当时给我的文档标题挺吸引我的：小学生坐在马桶上都能看懂的编程入门书，十分好奇，既然小学生都能搞定，我就问题了，重新拾起信心。学习了一段时间，感触很多：这是一本充满智慧和趣味的算法入门书。没有枯燥的描述，没有难懂的公式，一切以实际应用为出发点，\n\n通过幽默的语言配以可爱的插图来讲解算法。基本的入门都会举一反三的理解。真心感谢啊哈，谢谢！", "marks": "力荐"}
{"content": "还不错，不过里面冒泡排序算法好像写错了", "marks": "推荐"}
{"content": "反传统的数据结构书，更吸引人，更容易让人记住。不错。推荐", "marks": "力荐"}
{"content": "给4克星。少的那一个是作者在结尾那几篇扣掉的。对于我这种差生看看还算是入了门。受益匪浅。从以前的怕写代码过度到了可以开始马虎做题的状态了。给我打破了障碍。阿里葛多咱姨骂死。不瞎我三十好几。准备再从头看做一个巩固练习了。", "marks": "推荐"}
{"content": "不错，通俗易懂", "marks": "推荐"}
{"content": "一本简单有趣的算法书", "marks": "推荐"}
{"content": "这是我看的最有趣的算法书了，本身对算法这个东西有点敬而远之的意思，当然工作相关的还是得去研究，这本书却能让人对算法激起学习的兴趣，而且能够让入门者不会一下子被吓到，好书", "marks": "推荐"}
{"content": "算法入门推荐", "marks": "力荐"}
{"content": "说实话，dijk最短路径我是看这本书才看懂的。幽默风趣不是重点，重点是前线易懂。计算机图书中不缺非常正确的书，就是缺这种简洁易懂的书。", "marks": "力荐"}
{"content": "算是比较容易理解的书", "marks": "推荐"}
{"content": "文风很有趣，通俗易懂，适合对算法不感冒的人", "marks": "力荐"}
{"content": "图片画的挺有意思，比较容易理解", "marks": "推荐"}
{"content": "简单易懂", "marks": "推荐"}
{"content": "偏理论的译本工具书，国外安全大牛所著，可get的点全藏在空泛的理论中，来甲方后颇有这种认识，日志数据的核心价值不仅是为了定位攻击，他更大的作用在于大数据建模，由攻击模型在实时性的日志系统中预防/预判攻击，这才是日志数据的功能所在。", "marks": "推荐"}
{"content": "介绍了不少平时被大家忽略的基础日志.技术的东西少点.比如没有rsyslog(某人的最爱) logstash(另一个人的最爱) 看完之后,才发现日志管理刨去技术,剩下60%还应该是设计规划,以及审计等非技术方面的事情.真心不应该重业务,轻基础.喜图表,忽流程.", "marks": "推荐"}
{"content": "最近在做一个日志分析可视化的项目，无意中在图书馆看到这本书，拿回来翻了一下，过的很快，走马关灯的翻了一遍，适合运维人员对服务器日志等数据有个框架性的理解，篇幅内容很广，不算很深入。", "marks": "还行"}
{"content": "安全分析、soc从业人员必读。", "marks": "力荐"}
{"content": "作为基础入门知识了解还行", "marks": "还行"}
{"content": "讲太多系统日志，实用的东西不多。", "marks": "还行"}
{"content": "列举基础介绍型", "marks": "还行"}
{"content": "真的只是本指南。感觉syslog和CEE标准要多关注下。", "marks": "还行"}
{"content": "从安全角度阐述日志管理与分析，非常多的实例，虽然不深入，但覆盖面广，对新手可扩充眼界，对老鸟会起到“对，说到点子上的”提醒作用", "marks": "力荐"}
{"content": "全面介绍了什么是安全日志分析，是一本很好的入门读物，具有很强的指导性。但是具体细节不够清楚，需要继续参考其他的资料。", "marks": "推荐"}
{"content": "没有想象中的那么强大", "marks": "还行"}
{"content": "介绍日志不详进，空泛。", "marks": "较差"}
{"content": "翻译的看不太懂。", "marks": "较差"}
{"content": "我怀疑是机器翻译的，生硬的很，词不达意！！！\n另外，原书的内容显得组织性不够，不够深入。", "marks": "较差"}
{"content": "用Python改编了作者的代码，算是对编译原理有了个初步的了解", "marks": "力荐"}
{"content": "把核心代码藏起来的方式实现语言", "marks": "还行"}
{"content": "循序渐进、通俗易懂", "marks": "力荐"}
{"content": "之前想都没敢想自己写一门语言，看完发现似乎也没想象中那么难，对话和漫画好评", "marks": "力荐"}
{"content": "好书，花了两天加一个通宵读完了，日本人写的技术书非常的深入浅出", "marks": "力荐"}
{"content": "还没有读完，自己用C++去实现这个脚本，希望能够对编译原理有一个入门。", "marks": "推荐"}
{"content": "是科普书，不是入门书。夹带大量私货，真想灵活实现直接用 Ruby 不就好了… 核心代码和重点知识的讲解非常不清晰", "marks": "还行"}
{"content": "看到一半放弃了，不合口味，为了写书而写书（作者自己也这样说）。大体讲两句，然后丢上一堆code给你，最烦这样的书了。既然是用java讲，为什么不把他当作一种design的project来讲呢？", "marks": "还行"}
{"content": "细节还是得找一本别的书看看", "marks": "推荐"}
{"content": "看了一半还是没看下去，对话的形式相当啰嗦，看起来费时，想表达的观点直接阐述即可还要让读者通过对话去猜。找到另外一本好书《编程语言实现模式》", "marks": "还行"}
{"content": "我喜欢这本书! 非常适合入门! 作者很懂得如何引导读者!", "marks": "力荐"}
{"content": "去年寒假看的，正好有时间跟着把整个流程做一遍。虽说是照猫画虎，不过多少也算是入了编译原理的门，而且现在看来，这种实践为主的学习方法其实更能调动起兴趣，因此很推荐初学者阅读。美中不足的是介绍性的知识太少而且不甚精确，甚至隐藏了一些核心内容，不过这些等学编译原理的时候再看也不迟了。", "marks": "推荐"}
{"content": "例子比较简单,比较适合入门.", "marks": "推荐"}
{"content": "麻雀虽小五脏俱全 自己用go照着写了一个编译器", "marks": "力荐"}
{"content": "非常适合作为入门的书籍，讲的浅显易懂。有趣的是该书还自带弹幕，233", "marks": "力荐"}
{"content": "曾经被编译原理这门课折磨得半死不活，没想到这本书让自认为没有学习计算机理论细胞的为，感受了一下制作语言和语言处理器的过程。不过用java实现的，还需要对java有一定的基础", "marks": "力荐"}
{"content": "麻雀虽小，五脏俱全", "marks": "力荐"}
{"content": "对于想入门编译原理的同学们来说，这是极好的一本书。难点放在附录讲解，让你以面向功能点的方式快速的完成一门简单语言的开发。", "marks": "推荐"}
{"content": "一知半解", "marks": "还行"}
{"content": "有数学致命残疾的人，可以假装读完了吗？", "marks": "推荐"}
{"content": "虽然书中基于攻防的两两排序非常科学，但是在实际的搜索或者推荐中并不好用，因为特征矩阵太稀疏。不过攻防的概念让我第一次能好好重新认识排序这个游戏。有一些数学门槛，对阅读者有一定数学要求。", "marks": "推荐"}
{"content": "浓烈的翻译风，这tm绝壁是程序员翻译的。", "marks": "还行"}
{"content": "“他们会设法复制一切，却无法复制我的思想，我让他们辛苦偷窃，却永远落后我一年半载。”", "marks": "力荐"}
{"content": "来，干了这缸鸡汤（", "marks": "还行"}
{"content": "很好的思路，晦涩的结构和表达", "marks": "还行"}
{"content": "和《黑客与画家》一样都是文章集锦。仅《大教堂与集市》一篇就值得五星推荐。但中英文混排的糟糕版式（包括不翻译人名、公司名、专有名词等奇怪的奥莱利式的出版坚持），真是给阅读增加了不少障碍。", "marks": "力荐"}
{"content": "开源的生态模式，源自人在资源过剩时分享带来的愉悦感，这样人们会在集市上共同努力，而不是在集中的指挥下搭建教堂。是一本好书。20150418", "marks": "推荐"}
{"content": "看完想 coding", "marks": "推荐"}
{"content": "现在才读这本书好惭愧。不过这书完全适用于科研（不仅是工业界工程）。比人月神话更适用于创业者读。", "marks": "推荐"}
{"content": "感觉把开源世界说的有些理想主义了。", "marks": "推荐"}
{"content": "有意思的句子很多，全面了解开源", "marks": "推荐"}
{"content": "摘要与心得：https://www.evernote.com/shard/s47/sh/81e9f747-4aa6-48f7-a1cd-ff89a5af7af5/6d08fcfcbcbd8f93", "marks": "还行"}
{"content": "ACLU vs America的胜诉奠定了当今网络世界的基本格局，这说明没有争取和斗争，是不太有可能平白获得权力的。", "marks": "推荐"}
{"content": "出的有点晚，但隔了十多年回头看还是很有意义。厘清了开源和hacker之间的关系，不是在技术上教人如何成为黑客，而是让人从思想上认知何为黑客，以及开源运动的精神。对开源与闭源的差异写的犹值一读。", "marks": "力荐"}
{"content": "我能消化的内容主要集中在大教堂与集市这部分，有非常多的关于软件设计方法论的论述，比如这个：好的软件作品，往往源自于开发者的个人需要。这个观点可以很好解释类似 Reeder、Instapaper 等优秀独立软件为什么会被开发出来。", "marks": "推荐"}
{"content": "关于Open-source, 看完才发现是原版是15年前的书， OMG...", "marks": "推荐"}
{"content": "很有意思但是比黑客和画家难懂多了。", "marks": "还行"}
{"content": "早年间软件开发领域的理念正在成为商业模式创新的源泉。", "marks": "力荐"}
{"content": "开源运动。", "marks": "推荐"}
{"content": "对开源软件集体行动的细致分析", "marks": "推荐"}
{"content": "关于开源的一切，什么开源项目会成功，遇到什么问题，如何克服。2015.2.6JD", "marks": "力荐"}
{"content": "翻译很烂，喜欢第四章", "marks": "力荐"}
{"content": "被人推荐用来研究社会协同，于是真正有用的就是第二章。书中的专有名词对我来说有点多，再加译者也是程序员出身，读起来非常吃力。", "marks": "推荐"}
{"content": "能够将文化描述的如此让人可理解，作者做了很多积累。第二章和第五章收获最大", "marks": "力荐"}
{"content": "开篇宏大，展开一个新时代。后续跨界，试图从心理学，经济学的角度再进一步，拼凑之中多有纰漏", "marks": "还行"}
{"content": "这两天在自习室阅读此书，想到的全是开源运动在社会学、心理学和经济学等方面的可行性分析。", "marks": "推荐"}
{"content": "学计算机都应该看看，之前在linux网站上看的网页版，终于迎来了中文实体书！", "marks": "力荐"}
{"content": "不明觉厉~", "marks": "推荐"}
{"content": "kindle上看完不久，详细还是写到书评区。", "marks": "力荐"}
{"content": "没想到丑陋自私的人类竟然能做出开源这么一种奇妙的机制。。可以用来做编程启蒙书。。。当年学写flash的人要是能先看这书就好了。。。", "marks": "力荐"}
{"content": "前面的细节描述部分帮助更大。", "marks": "推荐"}
{"content": "操作系统革命\n其实是一本很薄的书，内容却能延伸出很多很多，也同时能让人思考很多。", "marks": "力荐"}
{"content": "这是今年读到的最好的一本书，5颗星还不足以表达我对这本书的喜爱！", "marks": "力荐"}
{"content": "改变世界的一本书，大概算是计算机科学界的开源宣言。本书适合于迷茫期的小牛，以及对开源有着深度思考的大牛。我是半吊子的外行人，没有技术可言，开源思想倒还是懂一些的，受限于一些生僻名词以及我看的版本的糟糕翻译，用了2小时左右，感觉没有大的获益。", "marks": "推荐"}
{"content": "作者写得用心。同意书中几乎全部观点", "marks": "力荐"}
{"content": "介绍了软件开发的两种方式，大教堂：集中而封闭；集市：分散而开放。作者以fetchmail为例子介绍了集市模式的成功，也介绍了集市模式如何发展、如何管理，指出传统大教堂模式的弱点。这是十多年前的书籍，当前世界早已有大量的开源软件。", "marks": "推荐"}
{"content": "看的网络上流传的翻译版本，《大教堂与集市》翻译的比较好，《开垦心智层》和《魔法锅》貌似是台湾人翻译的，感觉读不通顺，比较难理解。不知道这本实体书的翻译如何，如果可以的话是值得收藏的。理论和思想性比较高！", "marks": "推荐"}
{"content": "讲开源，半懂半不懂。从宏观上来看，开源不属于政府，和商业有交集但不依附商业，她是属于社会的力量。", "marks": "推荐"}
{"content": "近20年前的关于开源软件的书籍，如今书中的很多预言都已实现。", "marks": "推荐"}
{"content": "如何成为一名黑客", "marks": "推荐"}
{"content": "开源圣经，大部分人的本性是趋向奉献赢取赞美的，无论他的灵魂多么的自由", "marks": "力荐"}
{"content": "呃。好吧。", "marks": "还行"}
{"content": "一般吧，书小贵，编辑太弱，内容需要有计算机背景的人阅读，否则丈二和尚摸不着头脑，虽然是科普类，但专业性依然很强。", "marks": "还行"}
{"content": "非IT人员读起来没那么有趣了", "marks": "还行"}
{"content": "视角有意思，可以加深对开源的运作以及发展的理解", "marks": "推荐"}
{"content": "一个精妙而富于启发的比喻就足够了。", "marks": "推荐"}
{"content": "赞！对于开源和开源开发模式又有了新的理解", "marks": "力荐"}
{"content": "2015.1.8在kindle上读完 感觉不是很好 不符合对这本书的期待 是因为受轮子哥影响？ 还是因为学生时期和工作时期心态的变化？", "marks": "较差"}
{"content": "及其好。内容太过于紧凑，不完全懂。可以再读。", "marks": "力荐"}
{"content": "扫读", "marks": "推荐"}
{"content": "我印象中很早就听说过这本书，我估计以前即使看过也未必能理解。即使现在在工业界工作逾十年，对书中的观点也有所保留。当然心中充满对这些高手的敬佩之情。能把技术或技能性的东西上升到哲学层次，并让思想独立于技术之外的黑客，已是大师级别。这本书增加了我对open source的理解，国外的计算机文化发展比国内要深入许多。", "marks": "推荐"}
{"content": "仔细分析一个圈子文化的社会学基础 区别了 free 和 open resource的区别 还以自己为例子证明了集市模式的有效性（可以当做步骤指南）缺点就是这本书真心定价略高 买书基本没眨过眼 这次眨了。。。 ", "marks": "力荐"}
{"content": "rms~", "marks": "力荐"}
{"content": "大教堂代表着严格的工程管理，集市则代表着散漫的社区文化，但就是在这样的环境下，往往集市能够发挥大教堂所不能达到的功效。《人月神话》告诉了我们大型项目工程管理的艰巨性，但开源与社区文化却向我们展示了开源Linux的辉煌。所以，当你由于不前时，坚决的拥抱社区吧，这里有难以计数的黑客专家们。", "marks": "推荐"}
{"content": "颠覆了传统的思维观念，让人觉得世界居然可以这样运行。", "marks": "力荐"}
{"content": "开源运动的独立宣言，黑客的圣经。第一章黑客圈简史，讲述黑客如何从早期的电子技术开始发展；第二章大教堂与集市，从概念上抽象出大教堂与集市这两种不同的开发理念，从而得出两种不同模式的特点，正式开源所引出的集市模式造就了Linux的成功；第三章开垦心智层，从意识形态上讲述黑客文化的产生，即礼物文化，并与动物行为学和反公地模型相互比较；第四章魔法锅，讲述开源如何以少胜多，软件行业是服务行业，而非制造业，以及所采用的并不是工厂模式，及程序员是资产而非支出成本，以DOOM游戏为例，分析了何时闭源何时开源的5个要素；第五章黑客的反击，以Netspace的Mozilla浏览器对抗微软IE浏览器，避免微软掌握Web标准一家独大为背景，开启了开源运动的浪潮，同时Linux的高速发展，占领了服务器OS份额。。", "marks": "力荐"}
{"content": "很薄定价很高，总有道理，得再看看，有些东西属于社会环境，没那个环境，就学不来，更没法想到这儿。", "marks": "推荐"}
{"content": "这本书写得有些年头了，译过来却很晚。人们总爱用一些如大教堂和集市一般的隐喻来指出如“开源和闭源”“集权和自由”等等的某两种截然不同的发展方式，这本书梳理了黑客和开源的历史，用诸多实例来阐明作者心目中更亲近的方式——开源。但其实，不管怎样的种子总会在适合的土壤里成长的。", "marks": "还行"}
{"content": "2015/1/15 也就第二章《大教堂与集市》和附录A如何成为一名黑客比较精彩吧，翻译不是太地道，有些地方读起来不是太爽，东西不多，定价59对销售影响应该也不小~", "marks": "还行"}
{"content": "开源精神论述。", "marks": "推荐"}
{"content": "书名是经典", "marks": "推荐"}
{"content": "很有意思，黑客圈确实和学术圈（尤其搞大实验的高能物理圈）有种种相似之处。不过文章里对开源圈集中了最好的5%程序员、那么“大教堂”模式下大多数资质一般的雇员究竟要怎么办还是没细说嘛... ", "marks": "推荐"}
{"content": "看不下去，不知道是不是翻译的原因", "marks": "较差"}
{"content": "经典之作，很多论点有系统论的感觉", "marks": "力荐"}
{"content": "快20年前的文章了，现在读来都已经成为再正常不过的事情了", "marks": "推荐"}
{"content": "当时是在某期《it公论》提到过这本，很喜欢大教堂与集市这两对比来描述自由软件精神。对linux的发展也会有些了解，但是…读起来感觉有点怪不太顺…", "marks": "推荐"}
{"content": "情怀", "marks": "力荐"}
{"content": "做企划的思路参考... “昆虫才讲究技能专一”哈哈哈神嘲讽老头太萌了", "marks": "推荐"}
{"content": "关于自由软件的非常不错的书，对黑客行为作了深度分析", "marks": "推荐"}
{"content": "非常不错的一本书，集市式的软件交付方式颠覆了人们的认识，“黑天鹅”现象也促使人们在这个领域不断的探索，而且Linux的发展也越来越好。在移动互联网时代，Linux完全占领了优势，Windows已经完全没落了。", "marks": "力荐"}
{"content": "非技术人员表示：这本书里讲的大部分是思想上的东西，涉及技术方面的只有几段话，很好理解。分析了开源与闭源的适用范围(分别适合服务与产品)，黑客们为什么会参与到开源中(讲了马斯洛的那个需求层次理论，经济学上的公地悲剧与搭便车效应，提出礼物比交换好)。总的来说，值得一看", "marks": "推荐"}
{"content": "黑客的定义，“集市”开发的案例及要点，如何去构建社区等。关于什么类型的软件适合开源/集市开发总结的很有道理。这本书写的比较早，到现在这两种模式依然是共存的。即便是在商业公司内部，有一些通用的，基础设施软件的开发业可以遵循开源的开发方式(内部开源)。", "marks": "推荐"}
{"content": "了解黑客文化", "marks": "还行"}
{"content": "作者就一 Linux 脑残粉啊。开头的这句话 “要尊重能力，要珍视和捍卫自由，特别是：昆虫才讲究技能专一” 挺有意思", "marks": "推荐"}
{"content": "开源确实改变了行业，改变了人们的生活；但是作者阐述的开源太理想，并且对于Redmond的偏见过重，放在今日，会感觉这本书就是一个刚学了一点皮毛的愤青缩写。本书被拜为“开源”圣经，但是开源绝没有作者说的那么牛掰，这是人性决定的。感谢那些愿意开放自己的知识的人和组织，他们促进了人类文明的进步。", "marks": "推荐"}
{"content": "黑客文化和开源思想的全面介绍，不过部分名词、语句读起来不通，有些吃力，可能是翻译的问题，值得一读", "marks": "推荐"}
{"content": "开源运动的独立宣言", "marks": "力荐"}
{"content": "时过境迁，过去的论点也不知道还适不适合现在。但，读读还是很有趣的", "marks": "还行"}
{"content": "更好地理解去中心化", "marks": "推荐"}
{"content": "Raymond老大真是知识广博，有趣又获益匪浅。", "marks": "力荐"}
{"content": "最后一章“黑客的反击”激动人心", "marks": "力荐"}
{"content": "有些说法打脸了哈，事实上开源也并非万能药，至于自己当初一心奉开源为神也够幼稚的。", "marks": "还行"}
{"content": "很薄的一本书，相当于作者在开源项目进展中的一些故事分享、总结思考。。", "marks": "推荐"}
{"content": "在软件工作的全部经验中，Brooks 定律占据着统治地位。分布式合作开发模式，却颠覆 / 超越 Brooks 定律。", "marks": "力荐"}
{"content": "如果因为隔行如隔山的读不懂而给两星，可能有失客观。标题控未能抵制书名诱惑，整本梦游状态读下来，着实哭笑不得。", "marks": "还行"}
{"content": "#如果你有正确的态度，有趣的事情自然会找到你", "marks": "推荐"}
{"content": "早年读的，都忘了", "marks": "推荐"}
{"content": "翻译加上一些专业术语，读起来很吃力，所以没有每章都读完。不过这本书很有启发性，看完想coding.", "marks": "还行"}
{"content": "给了我很多新的想法，不仅仅是了解了开源，对我在生活的很多方面都有新启迪。", "marks": "推荐"}
{"content": "他的那本Unix哲学耐看，这本就算了吧", "marks": "推荐"}
{"content": "对礼物经济学和道德声誉在社会动力中的运作方式非常好奇，并一度研究，容易理解，但在实际使用过程中却一直没能在自己的产品中体现。", "marks": "推荐"}
{"content": "讲开源运动和黑客文化的，明天看完。\n读完啦，四五章写得一般，另外翻译挺烂的，有些不该翻译的术语硬要翻译。下一本看《人月神话》哦耶", "marks": "推荐"}
{"content": "Linus定律", "marks": "力荐"}
{"content": "你若渐渐对此书有所领会，恭喜！你将在99%的组织成为另类，下一步是寻个光纤入户的湖畔山洞别墅，亲身践习，送出礼物。", "marks": "推荐"}
{"content": "翻译不太好，读起来比较晦涩", "marks": "还行"}
{"content": "黑客（Hacker）文化的部落史和人类学，对开源软件社区的许多思考设计财产权演化理论，进化心理学等等。强烈推荐！", "marks": "力荐"}
{"content": "从多看上买的电子版，刷新我电子图书的单笔消费记录了。20元。\n\n个人感觉有些收益，了解了过去自己未知的领域。", "marks": "还行"}
{"content": "还是又找中文又刷了一遍。\n硬件方面，树莓派和Arduino的成功无疑都证明了集市模式无与伦比的优势。", "marks": "力荐"}
{"content": "2015.10.01", "marks": "推荐"}
{"content": "也是限免时间读的，读了其中《大教堂与集市》这一章节。", "marks": "力荐"}
{"content": "开源鼓吹者", "marks": "力荐"}
{"content": "大教堂与集市开发模式总结的好。感觉不少篇幅是凑起来的。", "marks": "推荐"}
{"content": "真正的牛人就是那些可以统帅别人，却又让别人感觉不到被统帅的人，似乎就像洗脑一样……果然人性有很多弱点可以用来做善事", "marks": "力荐"}
{"content": "没有看完。了解到一些Linux开发的内幕，有些收获，但不是太激动人心。", "marks": "推荐"}
{"content": "软件成为服务而不是工业产品，而开源是适应这一变化最好的模式", "marks": "推荐"}
{"content": "语出惊人需要真诚，不满足任何一项，就别这样做。", "marks": "推荐"}
{"content": "原来开源运动也有如此深厚的文化、经济内涵。", "marks": "力荐"}
{"content": "开源文化的圣经", "marks": "力荐"}
{"content": "开源并不是目的，而是工具。", "marks": "力荐"}
{"content": "因为在换工作，断断续续看了两周，对遥远的开源世界和黑客有了一些了解，作者真能喷", "marks": "推荐"}
{"content": "果然是圣经；", "marks": "力荐"}
{"content": "黑客解释黑客", "marks": "力荐"}
{"content": "开源软件与人性光辉", "marks": "推荐"}
{"content": "跟真理的成立需要前提条件一样，突然觉得no silver bullet也是需要加一个前提条件的。站在大教堂，觉得集市就像是另外一个次元的世界。", "marks": "力荐"}
{"content": "开源\n把维护丢给社区\n", "marks": "还行"}
{"content": "主要就是开源运动的开发模式，动机，利益分配。每个部分算是很完整了，而且也确实在十多年前就正确正确预测了很多事，比如安卓之于linux，基础项目开源化。虽然有些理想，但确实在认知上带来很多新看法。", "marks": "推荐"}
{"content": "正好前几天看了 just for fun那本书，对于开源构建软件这部分事情有了进一步了解。有一点意思。", "marks": "推荐"}
{"content": "思想性强，很多闪光点需要慢慢消化。《大教堂与集市》可以和《人人时代》对照看，核心是理解市场交易成本和组织成本取代关系。", "marks": "力荐"}
{"content": "\"If you're attracted to hacking because you don't have a life, that's okay too — at least you won't have trouble concentrating. Maybe you'll get a life later on.\" 笑死！", "marks": "力荐"}
{"content": "开源背后的动力学研究，以及对各种软件商业模式的分析。另外，P142那段挺热血的。对这个文化圈感兴趣的人非常适合读的书。", "marks": "力荐"}
{"content": "内容很好，翻译欠缺一些，读了这本书你会希望某国政府早点拿Linux当自己的【国产】操作系统，因为在Linux内核下采用国家级大教堂模式跟集市模式对抗，必死无疑，我们可以坐等某党自掘坟墓。。。", "marks": "力荐"}
{"content": "尽管写得比较早，部分内容略过时，不过这书重在介绍思想。有些内容读起来很别扭。", "marks": "推荐"}
{"content": "没有什么意思。\n关键词:快读迭代,带bug发布", "marks": "较差"}
{"content": "作为一个软件工程师，这是一本唤起大家激情的革命之书！作为一个科技企业，这是一本教导企业的转型之书！", "marks": "力荐"}
{"content": "非常好的一本书。作者从软件工程中的两种组织生产方式出发，深刻揭示了来源和闭源的经济及文化背景，后结合黑客和黑客文化，真知灼见，内容充实。", "marks": "力荐"}
{"content": "本身是好书，但翻译并不算给力，还有就是错别字略多", "marks": "还行"}
{"content": "虽然内容稍显过时，但是恰巧用事实验证了作者的理论。不可全信但不可不读", "marks": "推荐"}
{"content": "以前读了英文版，拿到中文版后，才发现只读了英文版的一章。说实话，有些地方翻译的真心一般。", "marks": "力荐"}
{"content": "talk is cheap,show me the code", "marks": "力荐"}
{"content": "拥抱开源。", "marks": "推荐"}
{"content": "黑客恒久远 开源永流传 python then html", "marks": "还行"}
{"content": "全是术语", "marks": "推荐"}
{"content": "去中心化的同行评审peer-review，结合自发的兴趣和意愿，让集市花开叶茂。", "marks": "力荐"}
{"content": "以前自己写的那些玩意只能叫小程序。。。距离软件还好远啊。。。。", "marks": "推荐"}
{"content": "全篇其实讲的就是开源大法好，顺便帮黑客正名", "marks": "推荐"}
{"content": "关于开源世界的一些理念，书本身五星，翻译太烂了", "marks": "还行"}
{"content": "作者对微软满怀恶意啊哈哈", "marks": "推荐"}
{"content": "力荐", "marks": "力荐"}
{"content": "有stallman就一定会有raymond，一个以极端的方式树立一种信仰，一个以温和的态度把开源这件事儿娓娓道来。已经说的很透彻了，把我迷惑的地方也说清楚了，除了文笔僵硬又带着天马行空的赘语和翻译的生硬以外。不过开源这件事始终有一些极端，就像你不能阻止把书送人，但你要在书店只看书不买书，老板心理也不好受，毕竟图书馆是福利事业。这种事不可强求，涉及宗教、政治、文化，愿意接受的值得肯定，不愿意接受的不可强求。当然只有5%的部分是靠卖软件生存，所以你也不能逼迫波音公布图纸、可口可乐公布配方。", "marks": "推荐"}
{"content": "阐述了开源的真谛和黑客精神。黑客是建设，骇客搞破坏，语言机智幽默，对开源理解深刻，一本好书，值得一读", "marks": "力荐"}
{"content": "软件开发中的开源模式。", "marks": "推荐"}
{"content": "黑客的世界我不懂", "marks": "还行"}
{"content": "关注开源领域必看的经典～翻译虽不算优秀，不过可读即是够用～", "marks": "推荐"}
{"content": "回顾黑客文化形成的历史，深层次剖析黑客文化的内涵和意义，解析黑客文化、自由软件、开源文化的演化和发展，并对黑客和开源的未来进行了展望。大师的真知灼见可谓历久弥新啊，离出版已经10多年了，书中的很多思想却依然适用于当下。\n读完本书，对黑客文化和开源文化有了更多、更深的理解，同时也激励了自己去更多地接触开源乃至拥抱开源。\n对于任何想了解黑客文化和开源文化的人，强力推荐本书！！", "marks": "力荐"}
{"content": "探讨了软件合作开发的模式，不过我觉得过于夸大了开源的力量", "marks": "还行"}
{"content": "黑客文化的教科书", "marks": "力荐"}
{"content": "了解了一下开源运动的历史，知道了一些开源软件开发的流程和准则，而且还了解了一下黑客的世界，知道了一些自己熟悉的软件和程序语言的故事。", "marks": "推荐"}
{"content": "在开源成为既成事实的今天，回过头来读一读开源文化诞生的历程，别有一种感受。集市模式倡导的有序的自由维持着软件业和互联网的蓬勃生机，在一定程度上避免了寡头竞争带来的风声鹤唳。", "marks": "推荐"}
{"content": "开源世界的发展早在ARPNET时代就开始了，LINUX和EMACS是最成功的案例。两种软件开发的模式：大教堂式和集市式各有适用场景。\n开源的经济学解释跟公共地悲剧相反：放羊吃草利己害他，开源利己利他。", "marks": "还行"}
{"content": "被誉为开源四书五经之《大学》。", "marks": "力荐"}
{"content": "快乐，幽默和玩兴是真正的资本。", "marks": "力荐"}
{"content": "经济学规律解释开源文化,深度.", "marks": "力荐"}
{"content": "超赞！", "marks": "力荐"}
{"content": "其实这本书买了有一段时间了,直到前阶段看完了斯托曼的传记,里面提到了Eric Raymond。也就是这本书的作者，我才想起这本书。介绍黑客文化的书籍我也算是看了很多本了,但这本与众不同，其它书都是以叙事为主，对黑客文化的本质,以及行业的分析都很少涉及，本书,尝试着从各个方面让读者去了解黑客文化的，起源,发展,未来,以及各方面的东西。虽然本书写于2000年左右，但很多内容对现在的软件行业依然有参考意义。推荐每一个对黑客文化感兴趣的朋友来读一读。--2015年8月4日于北京 ", "marks": "推荐"}
{"content": "了解了来源的历史是扑朔迷离，是胆战心惊，是可喜可贺", "marks": "推荐"}
{"content": "对一事实的义论文吧，不错。", "marks": "推荐"}
{"content": "没见过这么SB的书。\n\n有一点，Linus之前是要求Linux免费拒绝收费的，结果后来发现很多人要买Linux的光盘，5美元也好，也就改用了GPL协议。", "marks": "很差"}
{"content": "文笔不怎么样 时间章节跳来跳去 干嘛非要动不动扯马化腾呢  ", "marks": "还行"}
{"content": "「未看完」写的太敷衍无趣了。", "marks": "很差"}
{"content": "嗯嗯，不停的扯极客极客，是个出名的人都是极客。", "marks": "较差"}
{"content": "废话太多，排版文笔结构等只能给0星，2星是因为写的是林纳斯.托瓦兹。", "marks": "较差"}
{"content": "也就看看。写Linux之父Linus的，还可以读一下Linus的自传《Just for Fun》", "marks": "还行"}
{"content": "确实有诸多不足，很接中国地气？！\n可以去看看Linus自传《Just for fun》\n可能会更全面认识。\n建议英文原版。", "marks": "还行"}
{"content": "虽然大多数技巧一直在用，但还是学到了一些新知识。本书作者也维护了一个网站vimcasts.org，上面的材料也很值得一看。第二版已经出版了，是基于VIM7.4的，可以在vimcasts上看到新版与这版的差异。VIM8.0已经发布，又有很多新功能和性能提升。推荐每个vimer阅读！", "marks": "力荐"}
{"content": "据说学习VIM是个顿悟的过程，这本书让我顿悟到更高的一个层次", "marks": "力荐"}
{"content": "VIM 使用技巧着实不用，同一种功能有多种解决方案。可惜校对不自信，第一章没几页就有印刷错误。", "marks": "力荐"}
{"content": "好多神奇的命令，以至于你不得不一遍开着电脑一遍试着输入。每天只能看一点，然后第二天接着看。必须不断动手才能体会。", "marks": "力荐"}
{"content": "「其實你挺好的，就是顏值低了點」😁\nVim 的很多設計理念超級棒，比如：提供一組詞彙任由操作者組合、針對不同粒度提供不同操作⋯⋯就是 UI 醜了點，記憶負擔太重😒", "marks": "推荐"}
{"content": "Practical indeed，不论你如何精通VIM，也可以学到新东西。何况，我还差只会走而已。", "marks": "力荐"}
{"content": "熟练才能产生效率", "marks": "力荐"}
{"content": "必须给5星。虽然很早就在用vim学习了一些快捷键，但基本都是用于查看服务器日志。看完这本书才知道，它原来有这么多和其他所有的编辑器都不一样的快捷操作。", "marks": "力荐"}
{"content": "非常赞，感觉还是要买一本收藏，翻翻", "marks": "力荐"}
{"content": "vim实操的书，方法很实用。我只看了前面一半，后面一半的用法太高级了，暂时用不上。", "marks": "推荐"}
{"content": "Emacs学不会用户最终的妥协。大部分技巧确实称得上实用，原作名也大概属实，可惜大部分技巧还是属于授人以鱼的程度。Anyway，从此就是一名VIM党了", "marks": "推荐"}
{"content": "一本不错的书籍。要继续经常用，不断的翻阅该书才行，把常用的技巧都用上。", "marks": "力荐"}
{"content": "各种实用技巧，vim哲学的极致。", "marks": "力荐"}
{"content": "涨见识了！", "marks": "力荐"}
{"content": "涉及的技巧都是贴近vim原生的操作, 非常实用. 读完此书直接把我打回vim初级用户的水准, ", "marks": "力荐"}
{"content": "* 超级棒，条目清晰，看了以后感觉自己好似根本不懂 vim，讲了很多思想，感觉对 vim 又理解地多了一点。\n* 值得以后再看一遍，常看常新。", "marks": "力荐"}
{"content": "对vim与插件的拓展之间的界限更加清晰，扫清了很多疑惑", "marks": "力荐"}
{"content": "看完发现，我从VIM入门级变成了门外汉级。。", "marks": "力荐"}
{"content": "去年刚出版的，我说怎么没见过呢，两天啃掉", "marks": "力荐"}
{"content": "这本书应该快速通读，对每个技巧有所记忆后，在工作中有意识地进行实践。总之，非常好！", "marks": "力荐"}
{"content": "非常好的一本书，从中学到了很多以前有过疑问但是不知道如何操作的技巧。", "marks": "力荐"}
{"content": "vim入门力荐", "marks": "力荐"}
{"content": "妈妈问我为啥跪着读这本书", "marks": "力荐"}
{"content": "昨晚拿到的書，印刷很爛！看完了前10頁，以前還覺得自己對vim已經了如指掌，好吧，自己好羞澀，根本不是這個樣子的.\n---\n記錄于2014年8月9號\n-------------------\n又搞了份原版的英文pdf，算作工具书长存在于电脑桌面上！", "marks": "力荐"}
{"content": "正所谓实践出真知，本书的实践性极强，每一条技巧都非常有用，强烈推荐！", "marks": "力荐"}
{"content": "内功大增！", "marks": "力荐"}
{"content": "【未读完】学了很久 vim 却一直没能用上。", "marks": "力荐"}
{"content": "vim入门宝典，这本足矣。", "marks": "推荐"}
{"content": "学到很多，对Vim的理解上升了一个层次", "marks": "力荐"}
{"content": "太太琐碎了，记了些常用的", "marks": "推荐"}
{"content": "愛上vim的入門書", "marks": "力荐"}
{"content": "难得的好书", "marks": "力荐"}
{"content": "非常实用的一本书，对很多vim的概念又加深了理解，读完之后就放在案头做参考书了。", "marks": "力荐"}
{"content": "让最常用的部分从中显露了出来。", "marks": "推荐"}
{"content": "先把作者的 vimcasts.org 视频全看了一遍，又看了这本书。好爽", "marks": "力荐"}
{"content": "写得真的很棒，非常值得再读一遍。", "marks": "力荐"}
{"content": "第四部分、第五部分先跳过。第一次看的时候觉得很多都很难根本看不下去，再过半年现在看，大部分都是可以消化的，就想锻炼强度逐步提升，学习也是一样，减少跳跃，稳步提高。", "marks": "推荐"}
{"content": "赞！", "marks": "力荐"}
{"content": "终于读完了，内容大赞，对vim的认知又上升了一个台阶", "marks": "力荐"}
{"content": "原版英文太贵，中文翻译有点突兀。内容不错，看完之后感觉要重学一遍了", "marks": "推荐"}
{"content": "想给10星，看完后提升了不止一个境界。快速通读本书后了解其哲学思想，之后要不时地拿出来翻一翻，每次都会有意想不到的收获。", "marks": "力荐"}
{"content": "学一个东西就应该从设计哲学上去学，重新认识了vim，本书写得非常好，vim的一套自成体系的操作希望更多人可以学习和使用。", "marks": "力荐"}
{"content": "很难想象我现在的主要编辑器已经变成VIM了= =。习惯性的敲完一段话就<Esc>:w。\n这本书确实是对VIM除了.vimrc之外常用知识的系统介绍，能提高太多工作效率了。不过还是要常读常新。\n第一遍先记住了一些常用操作，练上一个月之后再来看看关于文件与标签页方面的知识", "marks": "力荐"}
{"content": "看完了，真过瘾，各种技巧。我得开发速度可以进一步提升了。哈。", "marks": "力荐"}
{"content": "好多年没有买专业书了。", "marks": "力荐"}
{"content": "看了前几页，你会发现你现在会那点功能还不够入门。", "marks": "推荐"}
{"content": "书评、总结待补上", "marks": "力荐"}
{"content": "好吧  只能说学完 装逼程度上升了", "marks": "力荐"}
{"content": "vim学习推荐", "marks": "力荐"}
{"content": "自认为vim用了很多年，才发现原来还是一片空白。", "marks": "推荐"}
{"content": "书名叫做\"Practical Vim\"，因此就得不断的practice才能最终达到以思考的速度来编辑文本", "marks": "推荐"}
{"content": "用思维的速度编辑文本！", "marks": "力荐"}
{"content": "vim必读书", "marks": "力荐"}
{"content": "非常好的书，但是就如作者所言：本书没有打算提供循序渐进的阅读体验，所以书中的技巧并不是按难度渐进的。该书不是一本Vim入门书，而是一本在入门之后能极大地提升vim使用技巧的书。", "marks": "力荐"}
{"content": "不错的书，没看完，够用", "marks": "力荐"}
{"content": "再看一次，依然认为介绍的编辑技巧很用，最终要它还讲了很多心法，如dry等。书是好书，但Kindle版很渣，什么代码排版看到晕，还有中文翻译一般", "marks": "力荐"}
{"content": "学习vim的好书.", "marks": "力荐"}
{"content": "作者是写技术书籍的天才，译者也很棒。这样的译文版技术书真是可遇不可求。", "marks": "力荐"}
{"content": "经过本书系统专业的学习，你会了解VIM的每一条指令的意思，之后才会意识到VIM是多么强大。", "marks": "力荐"}
{"content": "vim是一个很晦涩的编辑器，但这本书用简单的语言，生动的例子展示出了它的强大。是很好的学习vim资料。\n大概翻了一遍，这样什么都记不住。。。随后使用时还要时不时回去查阅这本书，感觉学会很多。", "marks": "力荐"}
{"content": "进百度以后第一本技术书。", "marks": "力荐"}
{"content": "用Vim的人必看呀，如果把技巧都掌握了，写代码一定带劲！", "marks": "力荐"}
{"content": "入门可以一读", "marks": "推荐"}
{"content": "原来我看书是从头到尾，现在对付这种书，是从头到不了尾的，所以我学会了先从目录入手，找到感兴趣(被吸引注意)的，看那些章节的开头部分，知道他讲什么，解决什么问题，把感兴趣的看完，估计也算快速地把50%的吃点，剩下的也看起来没有那么难啃了", "marks": "推荐"}
{"content": "工具书。", "marks": "力荐"}
{"content": "非常之好，强烈推荐，简单易学收效快。。。", "marks": "力荐"}
{"content": "学习vim很好的一本书，这边书需要买回来长时间持有翻阅，因为学习vim不是半个月能搞定的，里边语言通俗易懂，内容丰富，每次读都可以读一点，逐渐学习消化。", "marks": "力荐"}
{"content": "读了好多遍，还一直翻一翻，都有收获。", "marks": "力荐"}
{"content": "Vim 进阶教程 读了一部分", "marks": "力荐"}
{"content": "好奇", "marks": "推荐"}
{"content": "终极技巧在于不断的思考与实践", "marks": "力荐"}
{"content": "看完之后基本可以用vim操作了", "marks": "推荐"}
{"content": "读过的最好的vim/emacs类图书", "marks": "力荐"}
{"content": "开启了另一扇门", "marks": "力荐"}
{"content": "发现的印刷错误 出版社竟然回复了……", "marks": "力荐"}
{"content": "发现新大陆。", "marks": "力荐"}
{"content": "除了键位映射的改变，编码逼格的提高，专心使用Vim后还让我开始追求代码clean，最重要的是改变了我打字\"一指禅\"的毛病。", "marks": "力荐"}
{"content": "Vim 实用技巧", "marks": "力荐"}
{"content": "vim进阶必备~", "marks": "推荐"}
{"content": "对vim技巧的总结，对自己vim知识的补充", "marks": "推荐"}
{"content": "总体不错 重点不够突出", "marks": "推荐"}
{"content": "我觉得翻译版的排版比原版更好一些，对于vim入门者很有帮助。", "marks": "力荐"}
{"content": "非常好,推荐任何一个想学习VIM的人看", "marks": "力荐"}
{"content": "非常实用，看完可以说VIM功力大增。", "marks": "力荐"}
{"content": "华丽又实用的技巧。这是资深用户才能总结出的使用技巧啊。", "marks": "力荐"}
{"content": "vim不止改善了我的coding，还提升了我的专注力。书给五星，一个Windows癌也很开心地读完了。", "marks": "力荐"}
{"content": "看了几遍，学了点皮毛，好", "marks": "力荐"}
{"content": "学vim开始刚开始看博客还行，深入研究还得看书啊", "marks": "力荐"}
{"content": "在下的第一本译作，前后校正勘误达7次，多亏了图灵严格的翻译出版流程和好友们的帮忙，笔译质量有了一定程度的保证。另外，此书双色打印，配图很萌，价格良心。喜欢或初学HTTP协议的朋友们可以买一本。最后，若是在阅读过程中发现任何疏漏可随时联系到我（方式不限），我会负责到底。", "marks": "力荐"}
{"content": "感觉并没有那么神。。。好多概念仅仅一带而过，如鲠在喉。", "marks": "还行"}
{"content": "太爱“图解”系列书了，买了一套。有的书让你看了有“一览众山小”的感觉，讲HTTP的如《HTTP权威指南》，有时山太高，很多人就不爬，比如设计网站的人不少不怎么懂HTTP，有的书是给了你一个上山的梯子，比如这本。", "marks": "推荐"}
{"content": "言简意深，我的风格", "marks": "力荐"}
{"content": "出乎意料，这本写的还不错啊。基本涵盖了HTTP的主要知识，还有SPDY，WebDAV，Websocket等内容的介绍，挺适合入门的。", "marks": "推荐"}
{"content": "不止可以了解HTTP协议，最有趣的是可以在书的后半部分看到HTTP协议如何基于无状态的简单协议，解决新的交互方式带来的技术挑战。\n\n最后还简单介绍了一点基础的Web安全，通俗易懂，作为一条产品狗看上去毫无压力。\n\n整本书半图半文的编排读起来也非常轻松。作为一个产品经理，基本是没太有可能读《TCP/IP 详解》或者读 RFC，读了也没啥用，但这本书却深浅得当的展示了 HTTP 协议的框架。\n\n顺便说一下，凭借这本书的知识，如果心理素质够好的话，基本可以跟一个做网关的架构师谈笑上三个回合不露馅。", "marks": "推荐"}
{"content": "basic but hidden", "marks": "还行"}
{"content": "通俗易懂，O'Reilly那本动物书实在是啃不动，以后真有必要再啃吧", "marks": "推荐"}
{"content": "通俗易懂，不过都是点到为止，HTTPS的内容也有些过时", "marks": "推荐"}
{"content": "简单清晰的http介绍书，讲得通俗易懂，而且涵盖的知识点很全，该有的都有了。假期看完一本书好充实～", "marks": "推荐"}
{"content": "为什么编程入门门槛比较高？就是因为计算机和人的思维是相反的――抽象结构化对与计算机是简单而对于人来说是困难或者是不适应的。", "marks": "力荐"}
{"content": "深入浅出的讲解了HTTP协议及其实现原理，主要内容包括HTTP协议、报文格式、报文头结构、HTTPS原理、HTTP新增强的功能、HTTP的攻击等。这本书非常直观易懂，是一本Web前端开发不可多得的工具书。", "marks": "推荐"}
{"content": "通俗易懂，科普不错", "marks": "推荐"}
{"content": "确实生动有趣，讲的浅显易懂，翻译的也不错。内容上虽浅显，却较全面。", "marks": "推荐"}
{"content": "后面两张感觉就是在凑字数", "marks": "还行"}
{"content": "我觉得我还要继续加强学习", "marks": "推荐"}
{"content": "科普。图书馆站着看完。", "marks": "推荐"}
{"content": "通俗易懂", "marks": "推荐"}
{"content": "飞机上随便翻了翻", "marks": "力荐"}
{"content": "工作需要。后面的就看不太懂了。记不住的感觉。", "marks": "推荐"}
{"content": "不错的入门书籍", "marks": "还行"}
{"content": "好书，图文并茂，浅显易懂。", "marks": "推荐"}
{"content": "入门经典,2016.3.7 开始第二遍", "marks": "力荐"}
{"content": "顺手读了", "marks": "推荐"}
{"content": "arm\n一般吧。不如图解 TCP/IP。", "marks": "还行"}
{"content": "TN915.04.20151221-1", "marks": "推荐"}
{"content": "良心读物，易懂。如果后面web安全我能懂我就打满分了。", "marks": "推荐"}
{"content": "通俗易懂，讲解了最基础的东西", "marks": "推荐"}
{"content": "比较简单。", "marks": "还行"}
{"content": "介绍的比较简单，非常适合对web http协议有个概览。具体开发中用到哪块可以再深究。", "marks": "力荐"}
{"content": "当科普读完了，大体了解了一下 HTTP 协议，不过问我到底是怎么一回事的话，还是只能摊手，恐怕查 RFC 2616 会好一点。至于书中的配图拟人化、萌一点会更有助于销量。", "marks": "推荐"}
{"content": "互联网重要协议常识了解。", "marks": "推荐"}
{"content": "懒人专属技术", "marks": "推荐"}
{"content": "通俗易懂、点到即止~~~就是不够深入，看完跟没看似的~~~", "marks": "推荐"}
{"content": "简单却不失严谨,适合入门,尤其是讲https的部分很精彩,前后端都可读一读.", "marks": "力荐"}
{"content": "这比课堂上枯燥的要求背诵协议通俗有趣的多了。      网络的设计是为了通信，通信必须遵循一定的规则。讲清楚这些设计的规则之后，理解便轻松很多。可惜，课堂上没有人会跟我们讲这些，只是照本宣科，真的好遗憾以前没有看到这本神作。", "marks": "力荐"}
{"content": "https之后的几章讲解得太浅了吧；http协议也够奇葩的，同样的no-cache在request和response中的解释还有差别！", "marks": "推荐"}
{"content": "看一遍能记住大概的知识点，不管是应付考试还是工作都很有效。", "marks": "力荐"}
{"content": "图文并茂，简单易懂，很适合入门", "marks": "推荐"}
{"content": "感觉是科普读物，讲得满通俗易懂的", "marks": "推荐"}
{"content": "在我看来，这种图解的书，讲的才是最少必要知识，任何一个程序员都不能不理解。", "marks": "力荐"}
{"content": "内容非常清晰，刷新了对一些HTTP术语的认知。剩下的进阶就该去看 http权威指南。", "marks": "推荐"}
{"content": "一直想等着买电子版，不过最终还是没忍住，买了纸版，在地铁上看完了，感觉收获很多，之前很多不太明白的地方一下子清楚了，很多联系不起来的东西也联系起来了..  有时间还得多读几遍", "marks": "力荐"}
{"content": "HTTP Pocket Reference is way better", "marks": "还行"}
{"content": "虽然不是特别好，但已经很不错了...", "marks": "推荐"}
{"content": "字大，内容少。印刷不错，好处是随便翻翻就看完了。", "marks": "还行"}
{"content": "入门必备", "marks": "力荐"}
{"content": "强烈推荐作为第一本 HTTP 的书，图例很有用。", "marks": "力荐"}
{"content": "过年当消遣看的。写的挺好的，学网络最喜欢看图了 = = 让我想起原来小学期讲Web安全让我听得如痴如醉记了一大本笔记的那个老师啊 T T 后面看得比较潦草，以后有需要再看。", "marks": "推荐"}
{"content": "真是一本很好的入门工具书，20块钱花的值！省的我到处Google了。", "marks": "力荐"}
{"content": "HTTP 协议是 Web Developer的技术基础", "marks": "推荐"}
{"content": "关于 HTTP，浅显易懂的入门书", "marks": "推荐"}
{"content": "比权威指南内容要浅，但是易懂，有收获。", "marks": "推荐"}
{"content": "通俗易懂，不过不太深入", "marks": "推荐"}
{"content": "通俗易懂，但还不够深入。", "marks": "推荐"}
{"content": "http://wddoer.pythonanywhere.com/idea/2/", "marks": "推荐"}
{"content": "还行！", "marks": "推荐"}
{"content": "对于快速review基础知识还是挺不错的", "marks": "推荐"}
{"content": "复习一遍网络知识", "marks": "推荐"}
{"content": "HTTP＋加密＋认证＋完整性保护＝HTTPS。 “不仅基于表单认证的登录信息及认证过程都无标准化的方法，服务器端应如何保存用户提交的密码等登录信息等也没有标准化。……但是我们也经常看到直接保存明文密码的做法，而这样的做法具有导致密码泄露的风险。”", "marks": "还行"}
{"content": "不错，挺适合入门", "marks": "推荐"}
{"content": "讲解全，但是太浅，不太适合高级工程师", "marks": "还行"}
{"content": "只做了概念性的讲述，没有什么深入的东西，有点失望", "marks": "还行"}
{"content": "通俗易懂，就是浅，而且贵！", "marks": "推荐"}
{"content": "入门经典，通俗易懂", "marks": "力荐"}
{"content": "一天可看完，想要入门http协议推荐看这本书。", "marks": "力荐"}
{"content": "较全面，所以导致不会深入讲解细节，可用于建立HTTP相关的基本知识架构。", "marks": "还行"}
{"content": "一本小书，几个小时可以翻完。差不多是《HTTP权威指南》的缩减科普版，适合入门学习。篇幅最多的是讲 HTTP 头部；讲响应码和 HTTPS 的部分很有特色。但是遗憾的是 HTTP2 只提了一下，CORS 也没用涉及", "marks": "力荐"}
{"content": "扫盲快速读物", "marks": "推荐"}
{"content": "内容非常浅显。http头部占了很多内容，适合作为一个手册。读起来还是蛮轻松的。 那些图画好呆萌啊！", "marks": "还行"}
{"content": "终于明白了很多概念！日本人写这个真心擅长！", "marks": "力荐"}
{"content": " ", "marks": "还行"}
{"content": "适合计算机小白", "marks": "还行"}
{"content": "入门系列，动画Q，快速看完。还讲了点SPDY Ajax  WebSocket ... ", "marks": "推荐"}
{"content": "有趣的入门书", "marks": "还行"}
{"content": "最最最最最入门级的书了", "marks": "推荐"}
{"content": "感觉读完之后就只是对请求头，响应头有了些了解和认识而已。。", "marks": "还行"}
{"content": "非常推荐，如果你没有勇气读 松鼠 读这本超有爱", "marks": "力荐"}
{"content": "还不错，写得挺清晰，覆盖面也比较全，适合当科普读物，特别适合我这种半吊子", "marks": "推荐"}
{"content": "讲的不错，就是太基础了，要是配合C实现一个WEB server会更好～", "marks": "推荐"}
{"content": "补课", "marks": "推荐"}
{"content": "HTTP的入门读物，还可以作为工具书，后面还有网络安全相关的内容。不错", "marks": "推荐"}
{"content": "配图好萌啊", "marks": "推荐"}
{"content": "图多好理解啊，快速入门好选择。", "marks": "力荐"}
{"content": "适合大学生入门吧.. 比《计算机网络》少了不少细节", "marks": "推荐"}
{"content": "还不错", "marks": "推荐"}
{"content": "还是这种画多的书好看😆 \n看完了对http协议有了框架上的认识，大概知道http是怎么一回事。四星。", "marks": "推荐"}
{"content": "很好的入门书，快速入门了很多以前不懂的概念", "marks": "力荐"}
{"content": "一开始以为是一本漫画书，看了之后才发现讲的是纯技术，55555", "marks": "推荐"}
{"content": "很纯粹清晰", "marks": "推荐"}
{"content": "介绍得蛮全面的，一般用到的都讲了，还介绍了SPDY，WebSocket跟HTTP2.0之类的。翻译也很不错", "marks": "推荐"}
{"content": "没接触过 HTTP 的可以读下，可以解决日常网络方面开发的一些常规问题。", "marks": "力荐"}
{"content": "浅显易懂，基本上涵盖了http 的相关知识", "marks": "推荐"}
{"content": "讲的很简单，适合新手", "marks": "还行"}
{"content": "适合入门看。基本涵盖了HTTP的主要知识，还介绍了SPDY，WebDAV，Websocket等新技术，还有其他一些Web安全的内容。通俗易懂，点到为止。", "marks": "推荐"}
{"content": "基础知识很不错，HTTPS那张挺有意思", "marks": "推荐"}
{"content": "易懂", "marks": "推荐"}
{"content": "同事的书，匆匆度过，确实也有收获，但匆匆读来，毕竟收获不大。", "marks": "推荐"}
{"content": "内容清晰，结构完整", "marks": "推荐"}
{"content": "短小精悍，麻雀虽小五脏俱全。很棒的HTTP协议入门书，可以快速让人对Web领域的很多概念有个清晰的了解。", "marks": "力荐"}
{"content": "感觉是不是买晚了？就是太入门了。", "marks": "还行"}
{"content": "通过这本书，可以对 HTTP 有全局的大概了解，有兴趣继续学习", "marks": "力荐"}
{"content": "没什么详细的东西，光有图了", "marks": "较差"}
{"content": "看完了，忘得差不多了", "marks": "推荐"}
{"content": "易读 小日本的技术书真心不错", "marks": "力荐"}
{"content": "给产品讲技术讲的很好的一本书", "marks": "力荐"}
{"content": "图解系列值得拥有，了解HTTP 一本就够", "marks": "力荐"}
{"content": "很简单易懂的http入门书 适合系统入门", "marks": "力荐"}
{"content": "不错，很全面的一本书", "marks": "推荐"}
{"content": "翻译＂很＂别扭。 ", "marks": "还行"}
{"content": "太浅了，内容太少", "marks": "还行"}
{"content": "之前实习上下班路上断断续续看完了 又重读了一遍 补上了笔记 \n", "marks": "力荐"}
{"content": "后面几章没读，暂时告一段落，很不错。", "marks": "推荐"}
{"content": "清晰明了, 浅显易懂", "marks": "推荐"}
{"content": "两天几个小时内看完，像看故事书一样流畅，弥补了很多知识点的空缺，一些有兴趣深入的地方可能还需要自己查些资料作为补充。", "marks": "推荐"}
{"content": "172张图又萌又实用，浅显易懂，非常适合入门。可做为松鼠书的前奏！", "marks": "推荐"}
{"content": "比权威指南更直白易懂，很快翻完，重点在http的安全", "marks": "推荐"}
{"content": "知识介绍得很全面，很好的入门书。", "marks": "力荐"}
{"content": "比那本HTTP权威指南好看一点 不那么枯燥", "marks": "推荐"}
{"content": "用来扫盲足够了", "marks": "推荐"}
{"content": "力荐", "marks": "力荐"}
{"content": "适合刚毕业的童鞋看，讲的不深入但是基本上知识点都过了一遍，还是很有帮助的！不足的地方在于解释http首部字段的章节，说的都是什么鬼，画的图也不够直观，还是靠百度看扩展资料了解的。", "marks": "推荐"}
{"content": "图给的着实多。。不过很多地方没展开讲明白呢。//暑假读物", "marks": "推荐"}
{"content": "用了一天的时间，刚刚看完，超棒。全程脑补伊娃和她母星的通讯协议哈哈哈。", "marks": "力荐"}
{"content": "非常适合新人，深入还得看权威指南。", "marks": "推荐"}
{"content": "轻松快乐的学习 HTTP 基础知识。", "marks": "推荐"}
{"content": "HTTP方面比较好的一本书，虽然内容有些简单，但比起动不动上千页的大部头书。是一本非常不错的HTTP入门书籍。", "marks": "推荐"}
{"content": "还行，通俗易懂，只是对我帮助不大。", "marks": "推荐"}
{"content": "推薦給高階的產品經理和入門級的測試/前後端工程師（很多人工作了幾年不打好基礎的話照樣被劃入入門級）。算是比較不枯燥比較新的協議書了，新手觀看時請攜帶好Chrome（本書涉及的內容不需要Wireshark），確定每一個重要的概念你都能在瀏覽器里對應到。最後面涉及Web攻防的，非測試非安全領域的可選擇性跳過。", "marks": "推荐"}
{"content": "有个大致印象 内容很容易过目就忘", "marks": "还行"}
{"content": "表述清新，适合入门", "marks": "推荐"}
{"content": "通俗易懂，挺适合初学者入门，知识点基本上都是点到为止", "marks": "推荐"}
{"content": "简单工具书，还可以", "marks": "还行"}
{"content": "简单易懂，适合非计算机科班的同学学习。", "marks": "推荐"}
{"content": "适合初学者入门", "marks": "还行"}
{"content": "浅显", "marks": "推荐"}
{"content": "还不错，花了几个小时读完了。概念的解释都还算清晰易懂", "marks": "推荐"}
{"content": "还不错。", "marks": "推荐"}
{"content": "适合刚入门的Web开发者, 多年工作经验的Web开发者, 爱看书的开发者. ", "marks": "推荐"}
{"content": "2天看过的http入门小书，很薄，但是把http诞生的背景以及结构内容都说得很仔细，配图更加生动，赞~", "marks": "力荐"}
{"content": "还行了解一些细节", "marks": "推荐"}
{"content": "一图胜千言，这本书很不错", "marks": "推荐"}
{"content": "当年也是学过通信网的，现在为了弄懂爬虫的细节又往回捡", "marks": "推荐"}
{"content": "有趣。有内容。", "marks": "力荐"}
{"content": "2016-12", "marks": "力荐"}
{"content": "坑爹啊，都是水军，不适合初学看！", "marks": "很差"}
{"content": "很多图片，讲解也很平易近人，不过在语言叙述和逻辑组织上比《HTTP 权威指南》欠缺很多", "marks": "推荐"}
{"content": "内容组织结构有点乱，不过知识点覆盖挺广，适合入门", "marks": "还行"}
{"content": "这是个玩弄概念的时代，软件定义一切", "marks": "还行"}
{"content": "作者是在设备商工作的，从设备商的角度介绍了很多现代SDN之前的先驱技术，以及SDN如何借助现有技术来解决一些问题，其实讲openflow的篇幅不大。毕竟不可能一夜之间全用SDN，SDN一定是演进，和现有技术共存的。感觉是一本写给网络圈里人读的书，如果没有在运营商和设备商工作过，估计会像我一样看得云里雾里的，很多术语现查。英文原版也看了一点，作者的行文风格本身就很绕，中文翻译则忠实的还原了原文的风格。加上前述的背景原因，整本书看下来，都怀疑自己是读懂了其30%的内容。。。", "marks": "还行"}
{"content": "整本书都在介绍“what”，缺乏“how”。太多名称堆砌，有国内伪架构师的味道。", "marks": "很差"}
{"content": "内容有点空 翻译的有点不太懂", "marks": "还行"}
{"content": "前面的讨论很精彩，值得一读。后面介绍一些实作环境，列出大概。连json和protocol buffer都扯两节，疑似灌水啊。", "marks": "还行"}
{"content": "普及概念，入门首选。", "marks": "推荐"}
{"content": "不认识的同事写的，认识的同事做的编校，不过中文版还是有一些错误。", "marks": "推荐"}
{"content": "这本书是讲解SDN最经典的专著，全面的介绍了SDN的定义、协议、标准及其应用，加深了对网络功能虚拟化、网络可编程性、数据中心网络服务编排等理念，以及SDN控制器、OpenFlow、OpenDaylight等技术认识。书的前面8章介绍了SDN控制器/框架、网络虚拟化等原理，从第9章到最后就是SDN的具体实现和应用。\r\nSDN非常火热，可广泛应用于网络架构的各方面，但必须看到其主要推动力还是数据中心虚拟化所引起的网络终端管理浪潮。目前对SDN的看法分歧很多，有人高度看好SDN，认为它可以带来网络翻天覆地的变化；有人一般看好SDN，认为仅仅是一种局部优化的网络技术；也有人完全不看好SDN，认为它是网络界的一场技术炒作，一场盛宴以后什么都没有。书的封面是鸭子，正说明了SDN的境遇，鸭子游动时大部分动作", "marks": "力荐"}
{"content": "这本书是介绍SDN的经典之作，作为一本外国图书，本书的翻译是相当的好，译者相当厉害，而且里面撰写推荐语的也都是厉害的人物，这是我见过的最值得一读的书之一。看看译者是谁就能体会得到。", "marks": "力荐"}
{"content": "这种水平的翻译，简直是在随意败坏自己的名声。。。", "marks": "较差"}
{"content": "翻译的次了，垃圾中的战斗机…… ", "marks": "很差"}
{"content": "妈的智障，乱七八糟的不明觉厉，更恶心的是学校还要拿这个考试", "marks": "很差"}
{"content": "适合我这样的初学者，就是序言里把烘焙写成烘“培”啦～", "marks": "力荐"}
{"content": "Linux入门？？", "marks": "还行"}
{"content": "广告", "marks": "力荐"}
{"content": "现在树莓派的版本已经和书中学习时所使用的版本有一定的不同，但总体上的思路方法是不变的。为了学校的项目和出于兴趣学了一下，但并没有读完。从自己已经看的部分来说，觉得还是能作为树莓派开始阶段入门看看的，书中前半部分是树莓派入门的一些知识，后面包含了几个不同类型的通过树莓派实现的小项目，还算有意思。", "marks": "推荐"}
{"content": "Linux入门作品", "marks": "还行"}
{"content": "讲的很到位的一本书，可能出的有点晚了，知道的人不是很多", "marks": "推荐"}
{"content": "觉得对初学者帮助还是挺多。但涂抹有点过头，以为很搞笑，其实呵呵。讲的东西比较全面，知识点也比较多，也结合笔者多年实战经验，还是值得推荐！", "marks": "推荐"}
{"content": "看到很多评论说这本书写得太浅，看书名就知道，人家定位在趣味读物，何必那么较真。", "marks": "还行"}
{"content": "就是约瑟夫环那个还可以其他的都是高中小学数学。不深入。。。。。。", "marks": "还行"}
{"content": "骗钱的", "marks": "很差"}
{"content": "门槛低 浅显  适合非专业的入门  内容都是编程的基本组成部分", "marks": "还行"}
{"content": "不错的一本书，很浅显易懂，真的是很浅显。。。", "marks": "推荐"}
{"content": "是一本很好的数学科普书籍，简明又不失精要之意", "marks": "力荐"}
{"content": "其实这里面的东西比奥数什么的实用多了，而且涉及到的也就是一些相对简单的数学知识。", "marks": "还行"}
{"content": "其实断断续续看了好久 coding中总会有思维盲区的时候  偶尔一个小章节就解了你的惑  可以 ", "marks": "推荐"}
{"content": "很入门的读物，可以帮你重拾编码的勇气，作者在一些数学思维的可视化上做得比较好，值得学习。", "marks": "还行"}
{"content": "入门知识 一点启发都没", "marks": "很差"}
{"content": "可以做为具体数学的导读读物", "marks": "还行"}
{"content": "中小学生读物，确实”简单易懂，门槛很低“。有看这个的时间，中小学生可以去看看十万个为什么，数学和计算机专业的学生可以去看看具体数学和算法导论，不浪费时间。", "marks": "较差"}
{"content": "论我过年在家是有多么的无聊......不知道什么时候买的，为了刷掉kindle里的书断断续续边聊天打岔边搞定了.....", "marks": "很差"}
{"content": "递归部分很好", "marks": "推荐"}
{"content": "太浅", "marks": "还行"}
{"content": "太费脑细胞，程序员都是有一些数学基础的，很多基础知识我觉得就没必要写了。而且还发现几个错误。", "marks": "较差"}
{"content": "浅显易懂 还是有收获的", "marks": "还行"}
{"content": "没什么内容的一本书", "marks": "很差"}
{"content": "粗略看了一遍，内容不够深入。", "marks": "较差"}
{"content": "数学绝对是自然科学之本", "marks": "力荐"}
{"content": "讲的很简单，适合想学编程或者初学编程的人。\n", "marks": "还行"}
{"content": "完全是高中课本的知识，内容还是比较浅显的，虽然高中毕业已经六年了，但是看起来还是毫无压力。书中所实现的算法也是比较的简单。高中生无聊的时候可以看看，说不定可以培养自己对编程的兴趣。", "marks": "还行"}
{"content": "全是一些小学，初中知识，连高中知识都没有，作为程序员入门书籍都太简单了", "marks": "较差"}
{"content": "过于简单，不适合coder看。", "marks": "还行"}
{"content": "适合初中生", "marks": "很差"}
{"content": "基础理论知识，但更偏向实践。\n读一遍，可以补漏。", "marks": "还行"}
{"content": "后半部分实在太水了！", "marks": "较差"}
{"content": "感觉并不趣味啊。。。", "marks": "推荐"}
{"content": "当专业书用讲的太浅，当课余读物又太枯燥。这年头怎么什么人都来调侃程序猿。", "marks": "还行"}
{"content": "印象中这本书好像是给中学生看的。", "marks": "很差"}
{"content": "太浅。", "marks": "较差"}
{"content": "不推荐，远不如回去翻一下自己当年的教科书", "marks": "较差"}
{"content": "现在看来小学时的数学竞赛还是很难的，老师不能怪我没获奖。里面有一些知识点到现在才了解，作者解释得很清楚，还不乏幽默。大部分内容可以直接跳过，适合高中生和低年级本科生阅读。", "marks": "推荐"}
{"content": "单位图书馆刚进了这本书，今天借来随便翻了几页，没有继续看下去的打算；实在太过浅显，书名“修炼”简直大言不惭，国内作者写的技术书籍真心没法看。毫不夸张地说，《具体数学》、《编程珠玑》、《算法导论》这些书随便找出5页的内容都比这整本书来得更有启发性，程序员看这本书纯属浪费时间。", "marks": "较差"}
{"content": "内容浅显，还不如看wiki百科。", "marks": "很差"}
{"content": "可以做为具体数学的导读读物", "marks": "还行"}
{"content": "也是地铁上看的，拓展思维，还行", "marks": "还行"}
{"content": "唯一有印象的是，学会了一个魔术🤔", "marks": "较差"}
{"content": "哎，这种好书读一本就少一本啊。。", "marks": "力荐"}
{"content": "好书，就是用的Android版本旧了点", "marks": "推荐"}
{"content": "很棒的 Android 初级资料，不同于仅仅摘录官方文档的同类书，这本会有一些利弊分析和前因后果。", "marks": "力荐"}
{"content": "Android入门经典书籍，不二之选吧", "marks": "推荐"}
{"content": "确实很不错，我把书上的例子都敲了一遍，也算入门了吧。。。", "marks": "推荐"}
{"content": "好懂的地方怎么说都好懂，不好懂的地方，讲得太具体会显得更疑惑", "marks": "推荐"}
{"content": "挺好的android入门书,很多东西讲的深入浅出", "marks": "推荐"}
{"content": "看得差不多了，不错的入门读物。许多代码值得以后再次消化。", "marks": "力荐"}
{"content": "有样例有技巧，更接近项目的CookBook。", "marks": "推荐"}
{"content": "入门书", "marks": "推荐"}
{"content": "翻译质量还行，作者给的例子都比较严谨，看完蛮有感觉的。", "marks": "推荐"}
{"content": "蜻蜓点水般翻完了，讲真不喜欢代码+讲解的写作风格(沉迷Manning加粗+代码旁的注解不可自拔)，只讲到Android 5.0", "marks": "推荐"}
{"content": "一刷完毕", "marks": "推荐"}
{"content": "2015.08", "marks": "力荐"}
{"content": "看了一半。此书采用事例驱动的方式编写，适合有一定编程经验的人阅读，并可让开始学习Android编程的人获得更感性的认识。", "marks": "推荐"}
{"content": "编程 Android", "marks": "力荐"}
{"content": "讲解清晰易懂，写得不错，详细且实用，学完可以入门。", "marks": "力荐"}
{"content": "翻了前面一边的内容，感觉是很好的Android入门开发教程，几个APP例子贯彻整本书", "marks": "推荐"}
{"content": "在读，比《第一行代码》更多一些原理上的解释。被“无论应用多么简单，我们都将使用fragment进行开发”的观点颠覆了。", "marks": "力荐"}
{"content": "非常非常好的一本书，力荐给初级开发者。", "marks": "力荐"}
{"content": "知识面比较全面，推荐。读完之后意识到以前写的程序有很多地方可以优化。比如，判断网络状态时要区分新旧版本，启动定时任务时最好使用系统自带的alarmmanager，处理耗时任务一般用intentservice，而不是asynctask。心里要时常想到设备配置更改后如何处理，比如使用asynctask加载数据时遇到屏幕旋转的情况就会丢失数据，而使用asynctaskloader就可以很好地解决了这个问题。创建fragment的最佳实践是使用静态的方法而不是使用构造器等。", "marks": "力荐"}
{"content": "android入门最好的之一吧 行文行云流水 不像国内只是生搬硬套", "marks": "力荐"}
{"content": "整本书设计得实用，属于tutorial类", "marks": "力荐"}
{"content": "相当棒的一本书", "marks": "力荐"}
{"content": "这本书讲得很好。读完《第一行代码》，再读《编程权威指南》，稍微入门了。\n优点是：理论结合实践，有手把手教着做项目的感觉，还有挑战练习可以做。\n缺点：其实不太算缺点。唉。里面有一个项目好几章涉及到flickr网站，但是这个网站得翻墙才能调用api。。fuck the GFW!!", "marks": "力荐"}
{"content": "适合有工作经验的人读！知识点讲挺透彻，特别是涉及到低版本的兼容性方面，不足之处就是目前来看教材有些老了，而且好多知识点没有涉及到比如单元测试等等。", "marks": "推荐"}
{"content": "知道了很多很多以前不知道的，书里面用了好多设计模式，看一遍，敲一遍还不够，要好好再看看 ，很好的书", "marks": "力荐"}
{"content": "刚开始看英文原版 觉得很好 比国内的某些书强多了", "marks": "力荐"}
{"content": "这个。。。纠正一下译名应该是《Android编程入门指南》", "marks": "推荐"}
{"content": "于我而言，这本书承载是对命运的不甘以及对生活的无奈。无论以后我将走向何处，成为怎样的一个人，它都将记录着我当时的选择。嗯，选择，是的。", "marks": "推荐"}
{"content": "讲得还是很详细 内容涉及也挺多的 但是 要是我是一个从来没接触过android的 一上来就上Fragment还有考虑兼容性问题 我想还是会挺难啃的 可能我还是不习惯看翻译的书 也可能因为是电子版 我真是够了 以后再仔细撸吧 先这样 要干的事情实在是太多了", "marks": "推荐"}
{"content": "最好的android入门，没有之一了", "marks": "力荐"}
{"content": "不错的入门书，完全没有实战基础（包括别的语言）的一行一行敲下来，收获还是不少的。但是，书中例子仍用eclipse编写，而且没有介绍gradle等新的东西，也许下一版本会有吧", "marks": "推荐"}
{"content": "绝对的好书 每一次添加特性都会标出修改的代码 完全不会看不明白", "marks": "力荐"}
{"content": "草草看过，为了入门", "marks": "还行"}
{"content": "比较注重实战，全书以实例为基础讲解各种知识点，但是不够全面。", "marks": "还行"}
{"content": "课程是连贯的，想偷懒都不行啊→_→", "marks": "力荐"}
{"content": "非常不错，适合对安卓开发有一点基础的人，零基础的人不要拿这本书入门，还是有一点的难度的。", "marks": "力荐"}
{"content": "有缺点，但是也足够五星了", "marks": "力荐"}
{"content": "很久之前看的一本书，剩了最后两章今天心血来潮补掉了，算是收个底，相比市面上各种标题党的android入门，这本还是比较良心的，中间几章对一些容易忽略的细节有层层深入的探讨，对于有经验的开发者可能干货不多，第一次入门如果是这本书会有一个很不错的基础。", "marks": "推荐"}
{"content": "图灵系列的质量还是可以保证的，推荐。", "marks": "推荐"}
{"content": "很棒!", "marks": "力荐"}
{"content": "还可以，讲了Android应用开发中不少的知识点都有涉及，但不深入", "marks": "还行"}
{"content": "为了毕设", "marks": "力荐"}
{"content": "本书基本上把Android的各个基础知识点都介绍了，而且以项目的方式介绍，通俗易懂。", "marks": "力荐"}
{"content": "很不错。看了第二版的英文版。可以算入门了。但还是需要平时多码代码。", "marks": "力荐"}
{"content": "对理论缺乏说明，很多不明所以", "marks": "还行"}
{"content": "书是好书就是字太小了看着累呀😂可惜看的时候已经开始复习考研就挑着看的😳待我考完第二天就立刻捡起来继续看😂😂😂", "marks": "推荐"}
{"content": "感觉更贴近实际开发，适合有一定经验的人看，比起其他书有种耳目一新的感觉，各种解释都很详细。.书中的图也高大上", "marks": "力荐"}
{"content": "不说比国内的一些书好多少，就直说这些简单的入门的内容，讲的都能让你知其然，知其所以然。", "marks": "力荐"}
{"content": "这本书讲解方法非常好，建议有些Android基础或Java编程经验的人，应该能很好的理解作者的意图和设计思想。这边书最大的特点是 不宏大有重点，项目导向，知识扩展靠主动。整本书的代码很规范，思路清晰，对你项目指导应该也会有帮助的。当然如果想了解具体的用法，参考官网介绍，国内的可以看《疯狂java》大全百科类的书。", "marks": "力荐"}
{"content": "很棒的书", "marks": "力荐"}
{"content": "入门好书", "marks": "推荐"}
{"content": "讲Fragment比较多，读了一点点", "marks": "推荐"}
{"content": "非常好的一本Android入门书，通过若干项目来介绍Android系统的各个知识点，能够跟随书目清晰地看到项目成长的过程，阅读体验良好，既能学到Android开发的方方面面，又能学到移动端开发的工程思想，不可多得的好书，推荐有java基础的同学阅读。", "marks": "力荐"}
{"content": "我只能说这书是非常适合各个程度的开发者阅读的，不管你到了哪个层面都能有收获", "marks": "推荐"}
{"content": "Android入门书，讲的不是很深入，容易理解", "marks": "推荐"}
{"content": "通过完整的实例讲解了Android的基础知识，很实用的一本基础入门书，其中的all fragment思想可以借鉴", "marks": "力荐"}
{"content": "挺不错的入门", "marks": "力荐"}
{"content": "适合入门之后在看这本书，对Android有了初步了解之后在看这本书事半功倍", "marks": "力荐"}
{"content": "少给一星，是因为翻译老外书籍的语义逻辑不连贯的通病。看到后面会很吃力。而本书本身适合初学者+1等级的读者阅读，不适合作为参考书，和入门书。了解熟悉android一些核心技术后再来利用项目巩固和拓展深入学习的读者甚佳。", "marks": "推荐"}
{"content": "Android", "marks": "力荐"}
{"content": "还好吧，但可能与我学习风格不同。读到3/4看不下去了。", "marks": "推荐"}
{"content": "之前读了<xxx疯狂讲义>这本垃圾书，陷入了细节的汪洋大海，走了不少弯路，以后买书前一定要先看看靠谱的评论！", "marks": "力荐"}
{"content": "很喜欢这种写书风格，简单明了", "marks": "力荐"}
{"content": "经典&实用的书籍", "marks": "力荐"}
{"content": "质量很不错，推荐多次阅读", "marks": "力荐"}
{"content": "出色的Android入门教程 从实践出发讲解串联各点 由简入繁", "marks": "力荐"}
{"content": "对于软件开发初学者来说，这本书很具有实用性。", "marks": "力荐"}
{"content": "第二版用的Android stduio很适合之前刚开始越的人", "marks": "力荐"}
{"content": "注重实战，通过具体的小项目来学习知识点这种方式让人有看下去的动力，看完感觉不错，比那个什么疯狂XXX翻译文档好不少，就是有些地方讲解有点不够全面要想很久才能懂，还有碍于谷歌等外国网站被墙的情况，书后面一些关于网络和需要用到谷歌服务的章节的例子都无法得到较好的实现，影响了对知识点的理解，这些方面可能需要另找一本书啃啃。 总的来说，这算得上是一本好的Android入门书籍。", "marks": "推荐"}
{"content": "思路清晰，佳作", "marks": "推荐"}
{"content": "只能说非常一般，不知道推荐给新手的人是什么心态。先不说本书强烈推崇的“always use fragment”理念对不对，也不说里面代码里各种过期的方法，只说很多用到的方法或者知识不讲解就算了，都不标个重点，让人读得莫名其妙，想查都不知道怎么查。新手还是推荐《第一行代码》，确实适合入门，这两本书内容差不太多，算是互相补充。", "marks": "还行"}
{"content": "入门学习确实好，知识面挺全的", "marks": "力荐"}
{"content": "很不错的一本书，很适合入门，内容也比较丰富", "marks": "力荐"}
{"content": "很一般", "marks": "还行"}
{"content": "烂书一本，简单罗列一些概念、数学公式和R命令，什么也不说。大段大段的代码重复粘贴凑字数，比如第10章文本分类案例，前面已经分步贴了一遍代码，后面把整个代码又贴了一次，而且，代码写的惨不忍睹。这样的书，居然这么多打五星的，总分居然有7分！", "marks": "较差"}
{"content": "渣渣", "marks": "较差"}
{"content": "非常适合只会推公式和写MATLAB的科研狗们上手做项目，连学Python的书也省了，赞", "marks": "推荐"}
{"content": "讲解了用R和Python进行机器学习，统计分析的基础知识，也有案例参照，用来入门学习比较好", "marks": "推荐"}
{"content": "题材广泛，不适合纯入门。先看这本了解一下概念，以后再回来详细实践。", "marks": "还行"}
{"content": "作为入门的书，不错", "marks": "力荐"}
{"content": "清晰易读，对于提高实践能力有帮助。", "marks": "推荐"}
{"content": "从文档示例里抄一点代码解释都不解释,总之,越厚的书越垃圾果然没错...", "marks": "较差"}
{"content": "在图书馆借的，前面是python 与R入门，\n\n后面是公式＋代码，夹杂一点机器视觉，\n\n看代码比公式麻烦，\n\n适合有理论但不知怎么上手的人\n\n\n\n", "marks": "很差"}
{"content": "机器学习入门书之一", "marks": "推荐"}
{"content": "在学校实验室跟老师做关于大气预测的项目需要用到机器学习的技术，由于我是一名本科生，在理论明显不足，老师为了让我快速上手编写项目代码，推荐《机器学习实践指南》这本书，解决了项目中的实际问题。也是《机器学习实践指南》这本书对我对机器学习产生了兴趣（这书非常注重实践，相当合适我的口味）。", "marks": "力荐"}
{"content": "浅尝辄止", "marks": "还行"}
{"content": "烂翻译减一星。仗着一些ML经验和阅读理解能力硬是脑补了回来", "marks": "推荐"}
{"content": "不错的机器学习入门书籍。介绍全面~", "marks": "推荐"}
{"content": "一堆的贝叶斯，高斯，马尔可夫，伯努利，类聚，回归，多树，图，真心看不懂，不能这么自虐。", "marks": "还行"}
{"content": "翻译的太差了，数学方法太多，最好不要拿他当入门。", "marks": "还行"}
{"content": "翻译实在太烂，不知道译者翻译完自己有没有读一读，好多都读不通，估计来自于某个翻译软件。", "marks": "较差"}
{"content": "一年多了........", "marks": "推荐"}
{"content": "挺好的", "marks": "推荐"}
{"content": "很有意思的Python入门书", "marks": "力荐"}
{"content": "我看过的最好的一本编程入门书 不到300页就已经可以写出好多程序了！强烈推荐给新人。。", "marks": "力荐"}
{"content": "里面的框架版本有点旧了", "marks": "还行"}
{"content": "翻译是拿机器直接翻译的吧。", "marks": "推荐"}
{"content": "感觉这书不怎么样啊，第一章那个hunt the wumm。。。游戏是个死循环啊？！！！感觉书本内容偏介绍。比较肤浅。", "marks": "较差"}
{"content": "这本书越读越有趣！非常适合对python一知半解的入门人员。认认真真阅读书里的每一章。本书的知识覆盖度挺好，知识细节也处理得非常不错。跟着书一边练习一边思考，可以在极短时间内有快速进步！太感谢这本书了", "marks": "力荐"}
{"content": "入门精品，配合vamei的python系列更好读，博客园地址http://www.cnblogs.com/vamei", "marks": "推荐"}
{"content": "谨慎怀疑这本书是用PPT做的；比预想的好", "marks": "还行"}
{"content": "通俗易懂，入门的书就应该写成这样。", "marks": "推荐"}
{"content": "0基础入门，从概率讲起……", "marks": "较差"}
{"content": "读完唯一价值就是知道了：一本垃圾书！有人给四星瞎了吗？", "marks": "很差"}
{"content": "言简意赅，教科书的典范。", "marks": "力荐"}
{"content": "数据易读性还是比较强，类似PPT的改写称为的书籍，让我也有写书的冲动。书籍从数据挖掘概念、到统计知识、到算法的过程比较清晰，好懂。只是实践案例少了点，工作直接指导意义弱一些。", "marks": "推荐"}
{"content": "确实略简单，但是也只能是大概对各种算法有初步的了解。", "marks": "推荐"}
{"content": "石家庄图书大厦新华书店", "marks": "推荐"}
{"content": "全书都是使用结构图的形式展现，但并没有达到清晰明了的效果，反而很多地方感觉是为了作图而作图，讲的略显混乱。", "marks": "还行"}
{"content": "科普挺好玩的。闲着无聊翻翻。但只能作为有一定基础的同学温习作用。", "marks": "还行"}
{"content": "这书最终还是囫囵吞枣看了，可以看出作者很努力地在严谨和易懂之间做权衡，但是我还是建议作者在介绍每个经典算法之前给出更易懂的实际使用案例和一些概念比喻。我想，作者会不会是太执着在图例上，而忽视了语言上的简化呢？（尤其在本书的后半段）", "marks": "推荐"}
{"content": "一本入门书，惊喜的是看懂了利用贝叶斯的推导分析实际问题", "marks": "还行"}
{"content": "图文结合很棒，不过图的样式槽了点", "marks": "推荐"}
{"content": "适合数据挖掘入门，图非常多，作者讲的也很生动形象，语言朴实，正如书名所言，这是“大嘴巴漫谈”，灰常不错。用于学习数据挖掘基础非常好的一本书。", "marks": "力荐"}
{"content": "内容比较实在，但是做图水平很一般，配色和样式都很丑，没有丝毫艺术水平。", "marks": "推荐"}
{"content": "勉勉强强。。我只能算粗略翻了一下，一些东西没有看懂", "marks": "推荐"}
{"content": "研究生阅读 基本的算法都有涵盖到", "marks": "力荐"}
{"content": "内容排版粗制滥造", "marks": "很差"}
{"content": "在图书馆看到的，一般吧，虽然有图片，但怎么说呢？和PPT差不多吧，语言还是挺晦涩的...无论是科普读物还是入门，觉得都是很不适合。", "marks": "很差"}
{"content": "没想到整本书图片占主导，其实图片表达好了其实可以更好的展示信息，但是图片里面的信息混乱没有条理，配上的文字感觉完全是作者自说自话，万般无趣....", "marks": "很差"}
{"content": "很好的一本书，通俗易懂，图文并茂，对于想学习大数据分析的人来说，是值得首选的一本工具书。", "marks": "力荐"}
{"content": "简单介绍数据挖掘基础思想和常用方法。", "marks": "力荐"}
{"content": "一本中规中矩的书，作者比较偏爱的是排版、色彩、字体这种层面的知识，对每个方面的相关领域都有一定的扩展，例如建筑层面的结构、色彩原理等，但是其实作用没有那么大。感觉作者把一个系列文章的内容给扩展扩展就成了一本书，翻翻还好，无惊艳之处。\n", "marks": "还行"}
{"content": "嗯。。读不下去。。", "marks": "较差"}
{"content": "黑客与设计", "marks": "还行"}
{"content": "图灵电子版", "marks": "力荐"}
{"content": "快速浏览了一边，最先在做的东西有帮助。用到的时候可以回来在细看。", "marks": "推荐"}
{"content": "关于设计的原理性著作，梳理了设计的原则，构图、配色、排版的原理。视觉设计的基础是用户体验设计，而用户体验是从建立用户画像和用例开始的，这点对产品经理尤为重要。", "marks": "推荐"}
{"content": "只能说还行吧，被书名忽悠了。太泛泛，没有特别之处。", "marks": "较差"}
{"content": "设计入门书，如今很多设计师只是设计当做技能，把黄金分割等作为工具，然而其原理和来源却不太较真", "marks": "推荐"}
{"content": "用逆向工程的思维谈设计，立意很好。", "marks": "推荐"}
{"content": "一般吧", "marks": "还行"}
{"content": "很一般的一般界面设计书,名字倒是取的这么亮...", "marks": "还行"}
{"content": "杂而不专 可以了解看看", "marks": "还行"}
{"content": "字体，排版，色彩，需要深入学习和不断观摩思索。可以入手一本漫漫读，本次大略翻过。colorbrewer可以用来做地图感知色度序列的创建。", "marks": "推荐"}
{"content": "“形而下”的告诉你如何设计。看完此书，对 SEO 有点感兴趣。", "marks": "推荐"}
{"content": "跟hacker一毛钱关系都没有，中规中矩的设计入门书，只有破除黄金比例的章节略有点意思。", "marks": "较差"}
{"content": "不知道与黑客有什么联系。挺多内容都是可以从其他地方获取的。", "marks": "还行"}
{"content": "泛读一下就可以了。队友专业设计师来说，业余的看看也许会多了解一些。", "marks": "还行"}
{"content": "讲排版和英文文字较多。", "marks": "推荐"}
{"content": "还OK.", "marks": "还行"}
{"content": "不错看，颜色的构成和黄金比例讲得很好，这两个知识点也最适合用极客方法阐释", "marks": "推荐"}
{"content": "好书，有干货。", "marks": "力荐"}
{"content": "黑客内容不多，黑客精神不限于hacker，书里设计的比较多～～英文字体的发展比较有意思，十六进制的色彩还是很难记住的，只能去找颜色用数字找规律太难了..", "marks": "推荐"}
{"content": "粗略看看，作为一个程序猿对设计实在没什么感觉", "marks": "推荐"}
{"content": "专业之外的观点新鲜独到。", "marks": "推荐"}
{"content": "介绍了设计的关键点。", "marks": "还行"}
{"content": "這是本好書，不要錯過。", "marks": "力荐"}
{"content": "关于色彩与字体了解到了很多, 这本书触到了设计的本质, 挺不错的.\n", "marks": "推荐"}
{"content": "虽然说的都很浅显，不过还是很不错，不过用在字体和排版的篇幅太多了吧，虽然作者学过印刷相关专业", "marks": "推荐"}
{"content": "作者有些观点非常新鲜，最重要的是提醒我们，在我们这个远离纸笔的时代，设计成了一种新的沟通手段。从这个角度来考虑，确实需要加强这块的学习。", "marks": "还行"}
{"content": "一般吧", "marks": "还行"}
{"content": "里面很多设计的理念其实并看不太懂，对我来说显得牵强，但是让我接触了一下设计的理念。也是有帮助的。", "marks": "推荐"}
{"content": "有些地方翻译的不是很好，有些晦涩难懂 但觉得还是一本好书，还没看完呢\n", "marks": "推荐"}
{"content": "非常非常好，现在才看到这本书对我而言是一种损失", "marks": "力荐"}
{"content": "web时代的设计案例，字体排版等章节对汉字字体的设计参考价值比较小。但是有几点我是赞同的，设计要有层次感，要与用户体验一致。另外，我认为，设计是为向用户更好地理解和使用产品。", "marks": "还行"}
{"content": "说得太详细反而显得有点啰嗦", "marks": "还行"}
{"content": "其实是写给黑客的设计入门书", "marks": "还行"}
{"content": "简直是沙漠中的沛雨甘霖…继Mac OS X Internals之后终于又有了一本详尽讨论mach层和BSD层、启动过程、kext等apple私有架构/机制/技术的书，讨论了很多文档粗略或故意不写文档但又经常遇见长久以来一知半解又耳熟能详的东西，读起来太亲切了……", "marks": "力荐"}
{"content": "前面部分还不错，内核部分就那么回事了。没讲清楚用hybrid架构比单纯用freebsd的优势在哪里。", "marks": "还行"}
{"content": "很厚的一本书，但感觉不够深入，很多章节只是罗列了知识点根本没串起来。", "marks": "还行"}
{"content": "看了这个书，我觉得还是去扫一遍操作系统跟算法导论吧", "marks": "推荐"}
{"content": "囫囵吞枣的读了一遍，并不好读，想深入理解，还得重新再读。", "marks": "推荐"}
{"content": "原书内容略微有点浅感觉读不饱，前半本感觉有点脱离主题，翻译的太烂了，很多错误。", "marks": "还行"}
{"content": "这本书目标读者是在校学生，作者非常了解学生，内容也很实用。书中讲到算法和数学的重要性，还有职业发展的一些建议，很有道理。", "marks": "推荐"}
{"content": "学校图书馆微信能查到以前的借阅历史了，标记一些之前看过的。//居然这本也没有太多印象了。。。", "marks": "推荐"}
{"content": "字小书厚、罗里吧嗦、信息量少。果弃。", "marks": "很差"}
{"content": "目标读者是在校大学生，非常实用\n", "marks": "推荐"}
{"content": "很受启发，尤其对于现在的我而言", "marks": "还行"}
{"content": "为啥没早点读这本书", "marks": "推荐"}
{"content": "很好的一本谈学习的书，不仅仅适用于IT学子，适用于大部分迷茫中的大学生。\n这本书从一个教师的角度讲学习，解决了我很多学习上的困惑。", "marks": "推荐"}
{"content": "很棒的一本书，甚至于可能会改变我的一生。\n计算机及相关专业必读。", "marks": "力荐"}
{"content": "还不错", "marks": "力荐"}
{"content": "对软件开发中常见的情景进行了很好的抽象，归类。 虽然有些地方说得不够透彻，有些地方的说服力不够，还有些地方甚至误导严重（比如利用消息集成限界上下文时，通过事件发生时间来解决顺序问题的方案，如果消费端部署在多个节点，这个方案就是有问题的，或者很不完备，而这在目前互联网应用中是非常普遍的情况）。 但本书对如何应用DDD，如何站在更高的层次进行设计，如何权衡设计，进行了清晰的说明，并提出了切实可行的建议和原则。 一直在想老外为什么这么善于抽象、创造新名词，进而建立一套体系/思想/方法", "marks": "力荐"}
{"content": "翻译的跟shi一样.", "marks": "推荐"}
{"content": "浙江省图书馆", "marks": "还行"}
{"content": "有些事情很难实现，会不会太纸上谈兵？", "marks": "推荐"}
{"content": "Google翻译的吧。抖机灵的牛仔对话简直莫名其妙。我们现在用的，大都是贫血模型。还停留在能用就行的阶段，哪有什么设计。", "marks": "推荐"}
{"content": "真的不怎么样，没有人会按照这个按部就班的实施领域驱动设计吧，也许是我期望太高了。", "marks": "较差"}
{"content": "2015-08-24  专注业务架构而不是语言之争。", "marks": "推荐"}
{"content": "名为Implementing，感觉离落地太远，也可能自己境界不够，关于架构的讨论比较好看。", "marks": "还行"}
{"content": "DDD的绝对力作，教你如何让DDD落地！", "marks": "力荐"}
{"content": "读后感：前3章可以略过（免于纸上谈兵），从第4章开始读。最有价值的方面是其中讲到了很多设计与技术实现细节，在实际项目中大都遇到过。关于书中讲到“事件驱动架构（异步-消息机制）”，理论大于实际，忽略了一个比较严重的问题，就是分布式事务管理。就个人目前的项目经验与理解，MQ消息机制更适合作为不同应用间的集成技术。", "marks": "推荐"}
{"content": "从DDD的基本概念开始，逐步细化到具体示例。并简单描述如何结合六边形、REST、SOA、CQRS和Event-Driven等架构风格。其中“设计长时处理过程的方法”总结得很到位。", "marks": "推荐"}
{"content": "DDD讲得还是不错的。找机会试着练练手。", "marks": "力荐"}
{"content": "实现中有些已经过时  主要了解思想", "marks": "推荐"}
{"content": "粗读了第一遍，了解了很多新概念", "marks": "力荐"}
{"content": "比上一本更容易落地", "marks": "力荐"}
{"content": "理论上还是很高屋建瓴的，将平时开发设计时领会到的观点和理论总结整理出来并整理成系统知识。感觉不管是业务开发还是系统架构的从业人员，都应该学习了解，用更系统化的工具帮助我们设计、建模。", "marks": "力荐"}
{"content": "虽然还是不太明白领域驱动设计，但是对一些零散的概念已有了一定的认识，希望通过重读、实践、阅读其他书籍能够帮我体会其中的奥秘。", "marks": "推荐"}
{"content": "实现领域模型里边最核心的两个概念—聚合和上下文", "marks": "力荐"}
{"content": "一本DDD的实现示例，有很多的代码可以参考，很多抽象的问题都举了具体和现实的例子，很有指导意义", "marks": "力荐"}
{"content": "DDD实战。所在团队实践跟此差别过大吧，感觉不是很好。", "marks": "还行"}
{"content": "对比他另外一本 领域驱动设计 这本书内容更为翔实，对于偏程序员的同学更实用一些", "marks": "力荐"}
{"content": "翻译的实在很蛋疼，没读完", "marks": "推荐"}
{"content": "看了DDD, 再看这本IDDD, 结合示例代码理解,很多概念更明确了.    如果没有WEB开发经验, 这书可能会读起来难理解些.  ", "marks": "推荐"}
{"content": "内容都是糊在一起的，条理不够清楚", "marks": "还行"}
{"content": "受益匪浅", "marks": "力荐"}
{"content": "又把这本书重新读了一遍。一年后经过实践，培训，再读这本书，虽然还有些不明白的地方，但DDD的概念已经逐渐清晰。特别是这次把书中的源代码下下来一起阅读，能完整受到到作者的设计意图，比书中只贴出一个代码片段要好很多。DDD分为战术和战略设计两部分。战术设计比较具体，也好把握。战略设计就相对抽象，对设计和架构的要求就高一些。不管怎么说，实战为王，多参与项目的领域建模，才能真正让DDD在项目中落地。", "marks": "推荐"}
{"content": "读了两遍，还要多回顾一下", "marks": "力荐"}
{"content": "后续再读几遍。这本书一直未能消化彻底", "marks": "力荐"}
{"content": "看完后最大的收获是教会我思考怎么去做抽象。干货非常多的一本书，设计层面和实际编码层面都非常详细。", "marks": "力荐"}
{"content": "对OO的领悟分为三个阶段：\n一、开始使用面向对象\n二、开始使用设计模式\n三、开始使用领域设计", "marks": "力荐"}
{"content": "太完美了，领域驱动和事件驱动的完美结合，很好的解决了有界上下文之间数据通讯的问题。", "marks": "力荐"}
{"content": "理论性较强，需要在项目中多多锤炼。", "marks": "推荐"}
{"content": "覆盖面还是可以，提出一套切实可行的设计（比设计模式中的设计更抽象）方法论，但比起基于UML的那套面向对象方法论并没有太多亮点，对于企业和互联网后端开发都适合，在这个云端的时代稍微话题显得有点过时，不过还是值得一看的", "marks": "推荐"}
{"content": "增加了一小部分的理解", "marks": "推荐"}
{"content": "技术公司的老板们也应该读一读，如果读不懂，建议把公司关了，因为这是迟早的结果。", "marks": "推荐"}
{"content": "挺好的一本书，你关注的要点都要，多读几遍", "marks": "力荐"}
{"content": "指导意义有，想读下去好难", "marks": "推荐"}
{"content": "阅后感觉对DDD各方面理论理解得更加明确了，但是例子确实不够详细，有些地方翻译的比较晦涩", "marks": "力荐"}
{"content": "非常好！", "marks": "力荐"}
{"content": "看了一些，说得太好了。以前也看了领域驱动设计：软件核心复杂性应对之道，可惜还是不知道怎么下手，看了一些项目示例，可能封装得太深了，没理清头绪，又找了其他面向对象设计的书看了也很朦胧。看了这本感觉豁然开朗。", "marks": "力荐"}
{"content": "还行。从基本的前端讲起，然后到Backbone框架，模板引擎，路由，到后端Node，Express，数据库MongoDB都有涉及。走了遍全栈，让你觉得JS很强大。不过还是挺基础的书。", "marks": "推荐"}
{"content": "哈，居然是豆瓣上第一个读过此书的人（咳咳，其实这书还没出版，我拿的还是样书），感谢吴海星老师和w3ctech，这周断断续续读完了，介绍的内容比较新，算是现代前端开发的范，从传统的几个库到这两年流行的backbone.js和node.js，书里是入门介绍+代码案例的组合，适合有一定基础的开发者进阶看看，了解一下这两年的新技术带来的新的开发方法和思想。", "marks": "推荐"}
{"content": "翻了翻，基本算是最佳实践加简介？", "marks": "还行"}
{"content": "涉猎范围太广了，很多东西还没接触到，不适合初学者", "marks": "推荐"}
{"content": "内容范围很广，从前端到后台，还有mongodb，js能用到的领域几乎都涉及到了，所以有基础的人看会更好。书里js应用的每种技术有独立的章节，最后还有实战栗子，但是每种技术并不会介绍太多和太深，所以不是全书，但可以对js的应用有一个总的了解。", "marks": "推荐"}
{"content": "迅速上手利器，好用。英文名却叫“Python for kids”，掩面读完。", "marks": "推荐"}
{"content": "其实看着挺好玩的，简单、有趣。等把手上的3本都读完再横向比较下。", "marks": "力荐"}
{"content": "有用，已看到第五章了，感觉不难呢", "marks": "推荐"}
{"content": "我觉得挺好的   ", "marks": "推荐"}
{"content": "要实际操作", "marks": "力荐"}
{"content": "作为一本初学Python的入门书来说，马马虎虎。适合编程经验非常少的初学者看。简单看完只有一个感受：当初第一门语言学Python该多好……", "marks": "推荐"}
{"content": "挺有意思，零基础学习，非常适合我。照着写了个弹球游戏，很开心。不过Python for Kids？什么样的kids能看懂啊。。。", "marks": "推荐"}
{"content": "要是先学python 编程兴趣也会多一些的吧", "marks": "推荐"}
{"content": "啊啊啊，掩面而泣", "marks": "力荐"}
{"content": "2016.12.28.孩子，我们一起“玩”电脑吧。", "marks": "推荐"}
{"content": "适合青少年的入门书", "marks": "推荐"}
{"content": "跟着写代码还是很舒服", "marks": "推荐"}
{"content": "借了2个多月的书 今天赶紧去还 在续借下  才看到三分之一还不到。。。。", "marks": "推荐"}
{"content": "后面两个游戏(paddleball, 火柴人)的例子很好", "marks": "力荐"}
{"content": "2017004 第三部分难了点⊙▽⊙", "marks": "推荐"}
{"content": "好书。有趣。", "marks": "推荐"}
{"content": "在读", "marks": "力荐"}
{"content": "希望以后，某个风雨交加的夜晚，闲来无事，我教孩子写Python，多美好", "marks": "还行"}
{"content": "书写得不及格，毫无特点", "marks": "较差"}
{"content": "兴趣入门还行，想学好还是老老实实都官方文档吧", "marks": "推荐"}
{"content": "比较适合高中 大一或者更小孩子的入门书吧  为了让孩子理解有些东西说得  你懂得。。。用游戏启发兴趣也不错  不过我最后几章扫一眼就过去了    总之适合完全没有编程基础的人看吧", "marks": "推荐"}
{"content": "入门级很不错， 还能编小游戏玩", "marks": "力荐"}
{"content": "真的是对小孩子写的一本书，内容浅显，覆盖面小。", "marks": "还行"}
{"content": "学校图书馆看到的，好玩实用，不管什么for不for kids，有些编程基础的话一个晚上就能看完，合上书就想往简历上加个python", "marks": "力荐"}
{"content": "适合零基础", "marks": "推荐"}
{"content": "Python3比Python2要难，不适合未成年人阅读，家长们慎买", "marks": "很差"}
{"content": "非常好的入门级学习资料，提升对编程的兴趣", "marks": "力荐"}
{"content": "火柴人游戏还没做。其他都看完了。很好。", "marks": "推荐"}
{"content": "非常入门", "marks": "力荐"}
{"content": "浅显易懂，最后做了两个小游戏，但对于学习语言来说，知识点还是太少了，可以做趣味阅读和兴趣入门", "marks": "推荐"}
{"content": "抄袭", "marks": "很差"}
{"content": "leetcode汉化版？抄袭？差评！", "marks": "很差"}
{"content": "抄袭可耻！", "marks": "很差"}
{"content": "COMMAND + V", "marks": "很差"}
{"content": "这种抄袭别人题库的书籍，果断送它一星。“不要脸揭秘”", "marks": "很差"}
{"content": "不是所有题目都解释的足够和清楚", "marks": "力荐"}
{"content": "涉及抄袭 LeetCode。详情见：https://www.v2ex.com/t/110719", "marks": "很差"}
{"content": "翻译别人题库的作品，还有脸出版……", "marks": "很差"}
{"content": "涉嫌抄袭leetcode", "marks": "很差"}
{"content": "抄袭", "marks": "很差"}
{"content": "能评零分吗？", "marks": "很差"}
{"content": "抄袭", "marks": "很差"}
{"content": "抄袭的leetcode，无耻", "marks": "很差"}
{"content": "赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode赤裸裸的抄袭leetcode", "marks": "很差"}
{"content": "抄袭可耻", "marks": "很差"}
{"content": "抄袭！！", "marks": "很差"}
{"content": "抄袭可耻", "marks": "很差"}
{"content": "这本书上的题基本上都是 LeetCode上的，涉及版权问题。网上没有pdf，买了一本，题目解答讲解一般，仅当参考。", "marks": "还行"}
{"content": "全部抄襲自leetcode", "marks": "很差"}
{"content": "为了盈利，抄袭 Leetcode 题库", "marks": "很差"}
{"content": "题目基本都来自leetcode.com, 但无任何来源说明，属于剽窃行为！", "marks": "较差"}
{"content": "国人之耻，抄袭", "marks": "很差"}
{"content": "最低为什么只有一星……", "marks": "很差"}
{"content": "不要脸抄袭", "marks": "很差"}
{"content": "值得一看", "marks": "推荐"}
{"content": "“leetcode 精挑细选的题库”，从哪选来的？leetcode的题库是L和A自己想出来的吗？如果不是L和A就不是版权人。不是版权人OP在叫什么？ \n\n书中是仅有题目还是有解题分析？leetcode有解题分析吗？我看了书，书中的内容leetcode根本没有。那抄袭一说就更不成立。 \n\n也许OP想作著作权中的汇编作品论述，但是leetcode上只是简单列举所有题目，而书中进行了另外的编集。连汇编都不一样。 \n\n如果L和A真的在法律上有十分把握，又何必需要人来说来作道德上的抹黑？这么多人在这里打一分，有多少人真的看过书，都只是跟风抹黑而已。", "marks": "力荐"}
{"content": "抄襲。", "marks": "很差"}
{"content": "抄袭leetcode", "marks": "很差"}
{"content": "完全剽窃leetcode.com的题库，真不要脸", "marks": "很差"}
{"content": "http://www.v2ex.com/t/110719 私自剽窃出版leetcode.com题库 ", "marks": "很差"}
{"content": "详见：https://www.v2ex.com/t/110719", "marks": "很差"}
{"content": "抄袭", "marks": "很差"}
{"content": "请问一句陈博士，作为知名面试官，您这么搞擦边球，真的大丈夫？", "marks": "很差"}
{"content": "抄袭leetcode 可耻可恶", "marks": "很差"}
{"content": "绝对是用 JS 学习算法的入门必读啊. 最常用的算法和数据结构都讲了, 很透彻.", "marks": "力荐"}
{"content": "熟悉一个语言最好的方法就是直接用嗯。 动态规划看起来很高端～～", "marks": "还行"}
{"content": "立意不错，但作者吊儿郎当的态度令本书质量大打折扣。这是一本需要对照勘误表来阅读的书，书中随处可见单词拼写错误和代码编写错误，有的配图也出现标记错误。不过仍然值得一读，随着web的兴起和壮大，JavaScript必将得到更加广泛和深入的应用。", "marks": "还行"}
{"content": "2星给翻译的，原版节奏拖拉，读起来还行，翻译不知道是否体现了机器翻译的水平，无法阅读。感受一下“不是你不一定受它们愚弄，而是你已经不能受它们愚弄”", "marks": "较差"}
{"content": "每次拿起这本书，看着看着就生气，这书的节奏我是真的跟不上，呵呵。。。", "marks": "很差"}
{"content": "内容结构不错，有几个词翻译的不是很好", "marks": "推荐"}
{"content": "从体系的高度讲解汇编，很好的一本书", "marks": "力荐"}
{"content": "强烈表达对翻译的不满！翻译梁晓晖！翻译给一星，原著不错！", "marks": "很差"}
{"content": "没有通用寄存器的详细介绍，没有堆栈帧的详细介绍，写的过于宽泛和简单。", "marks": "还行"}
{"content": "首先这本书的定位很明确，应付机试，而且也能很好的完成任务，上面的代码程序都是很经典的，推荐阅读。但是如果把他当作算法入门，那么顶多也就3星吧", "marks": "力荐"}
{"content": "应付机试简单题的必备选择", "marks": "还行"}
{"content": "考研机试必备。对没搞过ACM的帮助很大。尤其是对我这类跨考的屌丝帮助非常大！", "marks": "力荐"}
{"content": "看过这个你就相当于听说过安利了", "marks": "很差"}
{"content": "虽然这本书没有达到预期中的精彩，但比特币在思想方面的价值真的震撼到了我，以前总是把目光停留在科学技术对未来思想和社会影响的幻想上，但却忽视了一种更为现实的思想和技术正在改变我们的世界。里面好多理论都能拿来做小说素材啊！", "marks": "推荐"}
{"content": "缺乏营养", "marks": "较差"}
{"content": "全文组织松散，冗余不堪，甚至不能称之为“书”。", "marks": "较差"}
{"content": "作为普知的话还行，不过货币理论方面一般般。另外，行与行间隔那么大干嘛！", "marks": "还行"}
{"content": "还是不够深入浅出", "marks": "还行"}
{"content": "算是能总体大致了解虚拟货币的世界~真想弄清楚一些东西还是得靠技术~投资需理性~", "marks": "推荐"}
{"content": "epub版。能开拓视野，学到新知的书~~其中作为比特币基础的密码学知识写得通俗易懂，还看到了对于哈希值的简明讲解，读之前完全没料到的~~可作为【素材资料】~~", "marks": "推荐"}
{"content": "因为这是国内第一本全面客观介绍比特币的书，给5颗星，作者中有两位做过深入交流，虽然对比特币还不太了解，有待深入，但因为相信他们而相信比特币的未来。", "marks": "力荐"}
{"content": "深入浅出，结构有趣。再搭配中本聪最早的那篇论文阅读就可以算入门了", "marks": "推荐"}
{"content": "感觉很拼凑~~", "marks": "较差"}
{"content": "#豆瓣阅读# 倾向太尼玛严重了，就是本布道书啊（关键部分都讲不清楚、后面又扯得前途美妙可是连一撇还没有呢）！这书里说的言之凿凿，很多人认为比特币是哈耶克的“货币非国家化”的实现，才不是什么左翼呢！左翼有这么屌么？哼~", "marks": "还行"}
{"content": "原来还可以在比特币协议上扩展，比如存在性证明（把数据文档的 SHA-256 信息摘要嵌入比特币区块来证明其存在性），比如零知识有条件付款，使没有互相信任的双方进行安全交易，「Bitcoin may be the TCP/IP of money」", "marks": "推荐"}
{"content": "『去中心化有助于实现货币民主，保护私有财产，使交易高效、便捷，避免双重支付……已经足够有价值了。』", "marks": "力荐"}
{"content": "《失控》的货币实践，这是一个新生的实物，属于他的生态圈还没完全成熟，在创始人中本聪的设定下，他生而带有互联网基因，去中心化，通过节点传播，依靠的是群氓的力量，但这一切究竟是哈耶克的“货币的非国家化”还是由极客们策动的一场“庞氏骗局”，拭目以待，我们活在浪潮之巅，中国人的笔触很好，只是“达摩克勒斯之剑”这个词语用的稍微有点滥。", "marks": "推荐"}
{"content": "如果木有长铗的宏大叙事救场 其他人那么水的语言只值两星 挺好的玩意差点让他们毁了", "marks": "还行"}
{"content": "虽然作者主观倾向略强，但真正道出了比特币的实质创新点并不是简单创造了一中货币，而是建立了一套基于密码学的无需信任无需担保去中心化可扩展的互联网资产交换基础协议。\n利益相关：持有两位数的比特币", "marks": "推荐"}
{"content": "A good introduction to the bitcoin and the big idea behind it. Further study and research needed for me to understand the maths part...", "marks": "推荐"}
{"content": "当你把知识从网络上采集下来时，它已经过时了。", "marks": "还行"}
{"content": "呵呵", "marks": "较差"}
{"content": "极端自由主义者和技术乌托邦主义者能不能成事不知道，但出自他们的这本书的粗制滥造是显而易见的，太多东拼西凑，前后重复或是矛盾之处。不如逛论坛。", "marks": "很差"}
{"content": "想入门的可以读一下", "marks": "推荐"}
{"content": "内容不翔实，入门读读还好", "marks": "还行"}
{"content": "Bitcoin比我之前了解的还要有趣，Bitcoin这种记账体系，意义不仅在于货币本身，它代表的这种分布式密码学的协议对于一个无中介、零知识、集体记忆的乌托邦也有很大启发。实际上，在契约方面，我更愿意相信冷冰冰的算法，而不是信用或者担保。能亲身参与这种社会实验，无论结果如何，过程总是美好的。", "marks": "推荐"}
{"content": "一本好书，虽然里面有关经济学的部分（比如通缩的理解）有错误。比特币系统找不到既往的任何东西可以做合适的类比，是范式转移和思想的富矿。", "marks": "力荐"}
{"content": "有点儿意思", "marks": "还行"}
{"content": "科普一番 比特币是个很了不起的想法", "marks": "还行"}
{"content": "计算即权力；货币即信息。", "marks": "推荐"}
{"content": "一气呵成看完 ；世界上最可怕的是思想的力量", "marks": "力荐"}
{"content": "看完了一本书，可见我在机场等了多久\n", "marks": "推荐"}
{"content": "看完这本书，对比特币多少有了一些了解。", "marks": "推荐"}
{"content": "整本书非常不错，解答了我对比特币的很多疑惑。 \n不过交易和block的原理讲的不算太清晰，如果单看这一本书是理解不了的。 配几幅图效果更好点。 另外对于政府封禁和通货紧缩的问题，还不够透彻。", "marks": "推荐"}
{"content": "前几章还不错，后面两三章，提到人名和学术（比如说 zero-knowledge proof）理论，没有原文或出处说明，看的很累。", "marks": "还行"}
{"content": "看完觉得比特币真牛", "marks": "推荐"}
{"content": "买了500的比特币……挣了40卖了……就再也接不回来了= =。", "marks": "推荐"}
{"content": "简单明了，有些安利吹嘘的口气，但作为普及读物还是不错的", "marks": "推荐"}
{"content": "感觉描述的还是比较详细的，作者对于比特币还是非常有信心的，也列举大量的例证来证明比特币相较传统货币的优势，但是个人对于比特币还是处于观望阶段，比特币是否能完全代替传统货币只能日后检验！", "marks": "推荐"}
{"content": "很详尽的比特币了解入门书，好读易懂，虽然后半段涉及编程协议密码之类的举例对外行来说每个字都认识可是不懂啥意思ˊ_>ˋ 在mt.gox被黑了快5亿市值的比特币宣布破产之后读这本书还挺讽刺的，不过我愿意相信它会带来更新更好的思维方式：平等普惠的去中心化思想是值得求索的！", "marks": "推荐"}
{"content": "一般般吧。缺乏深度", "marks": "还行"}
{"content": "内容介绍的比较全 从比特币的发展历史 操作方式 生态环境 辩证认识 未来预测等几个方面进行了介绍 并且举例了一些和比特币差不多类型的山寨币。读完这本书 我突然发现 只要有机会接触新兴事物 我也可以照这个套路写一本书了。总而言之 缺少人文关怀 这也是我之所以喜欢老罗的原因吧~科技和人文 成熟与幼稚 两手都要抓 两手都要硬。", "marks": "较差"}
{"content": "基础知识详解", "marks": "推荐"}
{"content": "比特币", "marks": "推荐"}
{"content": "书一般吧。很一般。科普性的吧，可以挑几个章节看看", "marks": "还行"}
{"content": "1.行间距太大，反人类；2.叙事结构松散，连贯性较差，行文风格不统一；3.很好的入门性质读物，有一定计算机基础的话会在一定程度上削弱理解难度；4.比特币本身牵涉的知识面就很广，有阅读门槛；5.谨慎看好比特币未来。", "marks": "推荐"}
{"content": "想了解比特币，很值得去读的书。", "marks": "力荐"}
{"content": "货币天生是信息……但有种废话的感觉，老实说，没通过本书理解比特币到底是什么？", "marks": "还行"}
{"content": "非常好的书，绝非一般应景之作。虽然我对比特币持负面态度，看完这本书之后仍然不打算改变看法，但觉得比特币之后的许多金融、数学、IT问题，甚至哲学、社会问题的确非常值得研究。", "marks": "力荐"}
{"content": "比特币网络当然是革命性、不世出的杰作，但此书写得一般。", "marks": "还行"}
{"content": "对于从零开始了解比特币生态 以及比特币背后层层递进的知识群落有非常大的帮助 与此同时 此书以好奇之心贯穿始终并没有把比特币粗浅的理解为一种新型虚拟货币 而将其理解为一种深层次变革的起点和原型", "marks": "推荐"}
{"content": "对于比特币思想价值解释的不错", "marks": "推荐"}
{"content": "安于无知是最大的敌人", "marks": "力荐"}
{"content": "写的蛮好，技术方面举例浅显易懂，组织结构也不错，金融和社会知识也很好", "marks": "力荐"}
{"content": "只能是还行，前面把基础的知识都介绍到了。到了后面就像是东拼西凑的烂尾房。", "marks": "还行"}
{"content": "非常入门，各种新闻站里面的故事。可能也是因为比特币出来的时间也就短短几年，可写的故事很少的缘故吧。", "marks": "还行"}
{"content": "起始于粗糙，发轫于不羁，还有太多不确定性供我们探讨与想象。", "marks": "力荐"}
{"content": "经济学常识错误不少，2星给书，1星给长铗。", "marks": "还行"}
{"content": "我是比特黑", "marks": "还行"}
{"content": "可以一看，话说我也是10年就知道了，可是没有抓住机会。。。因为当时电脑是集成显卡。。。", "marks": "还行"}
{"content": "买买买！！", "marks": "力荐"}
{"content": "确实很geek", "marks": "还行"}
{"content": "这也算书？看在它让我懂了一点点比特币的内容，给它两颗星。可是这些知识网上都能搜到。文章是几个人写的，有重复很零散", "marks": "较差"}
{"content": "新知，后面比较难理解。关键词：去中心化，算力投票，51攻击，路径依赖。", "marks": "推荐"}
{"content": "比特币，是互联网的产物，它的繁荣，是互联网经济发展的结果。开放，平等，协作，自由。完全是市场经济的绝配货币。回首纸币，历史奇短，我们接受纸币，一是惯性，人们都在用，没出大问题，二是政府强制，三是支付便利。政府掌管钞票的多少，未来的历史将是货币通货膨胀的过程，无疑政府将是最大受益者", "marks": "推荐"}
{"content": "挺有意思的一个东西，原理上来说其实有很多可以借鉴的，是一个很好的实验。", "marks": "还行"}
{"content": "序写的倒是不错", "marks": "力荐"}
{"content": "看完这本书的时候Mt.gox破产了", "marks": "还行"}
{"content": "互联网时代确实可以集体创作，但是这就使得全书更像一个论文集，缺乏整体清晰的组织。", "marks": "还行"}
{"content": "前几章介绍还可以，后面内容冗余重复太多。建议还是看维基百科条目。", "marks": "还行"}
{"content": "Blockchain", "marks": "力荐"}
{"content": "比特币的前世今生", "marks": "力荐"}
{"content": "不错的比特币普及型读物，对比特币体系和生态会有一个宏观的了解。", "marks": "力荐"}
{"content": "外行看下热闹，密码学基本看不懂", "marks": "推荐"}
{"content": "写的不够好，好几个地方重复出现。作者功力一般，不过值得一看。", "marks": "还行"}
{"content": "比较客观的介绍了比特币的产生、原理、优势和面临的问题，对比特币加密的原理进行了比较深入的介绍，而不是流于表面，基于比特币还介绍了货币理论、中央银行体系、未来的虚拟货币的前景等知识，很好的金融、计算机交叉科普类书籍。", "marks": "推荐"}
{"content": "拭目以待几年后。", "marks": "推荐"}
{"content": "科普 赞 扫盲了 却发现当时作者的一些盲点 不过三年过去了 应该成长很多了", "marks": "还行"}
{"content": "应该早看的，为啥下载了不看呢，为啥看个开头又放下了呢……这书是算科普吧，有些话还是没说明白", "marks": "推荐"}
{"content": "一般般。里面东拉西扯很多其他东西。不外乎安全性、小规模、挖矿原理、如何兑换、支付、货币去中心化等等。", "marks": "还行"}
{"content": "较全面介绍了这种去中心化的基于数学密码学的货币及其经济体系，向提出货币非国家化的伟大的哈耶克致敬！", "marks": "推荐"}
{"content": "了解什么是比特币", "marks": "还行"}
{"content": "关于比特币原理和系统的介绍好不错，但是比特币金融部分的内容完全是为了唱多而唱多，逻辑混乱", "marks": "还行"}
{"content": "讲了比特币的基础知识，整个生态，社群最常讨论和关注的问题...还比较通俗易懂，比较适合作为入门书籍，能对比特币能有个整体的认识。稍有缺憾的是对于比特币作为货币，它的价值和前景以及why讲的比较浅，感觉不太有养分~", "marks": "还行"}
{"content": "了解太少，无法评价。", "marks": "推荐"}
{"content": "纯粹的涨知识", "marks": "力荐"}
{"content": "货币去中心化学说，奥地利学派，通缩货币。---于唐山飞机&高铁上。\n", "marks": "推荐"}
{"content": "看到三分之一果断弃。只适合技术宅娱乐消遣看着玩而已~", "marks": "较差"}
{"content": "安利Bitcoin～ 大型科普贴", "marks": "还行"}
{"content": "看前面几篇足矣。", "marks": "还行"}
{"content": "还不如跟一个从业者聊俩小时有收获。", "marks": "较差"}
{"content": "没讲清原理。但是有部分有趣的内容，提到了如零知识证明的内容。", "marks": "还行"}
{"content": "介绍比特币的普及读物，还算客观。然而在现在的环境下比特币也只能是一场泡沫，并没有什么卵用。", "marks": "还行"}
{"content": "讲得挺明白", "marks": "推荐"}
{"content": "“新型虚拟货币可以用这么几个核心概念来定义：去中心化，不受其开发者或其他人完全控制；总量恒定；流通领域不受限制，只取决于使用者的意愿。”比特币可以说是打造了货币自治的乌托邦，唤起了货币非国家化的信念，并提供了真实的实验。世界发生着巨变，就我个人而言感受最深的是信息却如此的闭塞。", "marks": "力荐"}
{"content": "读完，对比特币和其他山寨币有了更深入的了解，在技术上比特币其实是一种加密协议，以P2P的形式去中心化存储加交易记录，但更多的是其在经济学上的印象。作者假设的斯诺登出现在2023年的场景，让人印象深刻，不难发现，这些去中心化的虚拟货币在未来将改变人类的生活", "marks": "还行"}
{"content": "只讲了RSA，没有ECC..不像是教材，内容杂。不过毕竟bitcoin系统涉及到的东西多。为数不多的中文bitcoin资料。", "marks": "还行"}
{"content": "作者肚子里边还是有蛮多干货的，基于比特币（区块链）的应用看得很有意思。斯诺登的那个想象的故事很有创意 。", "marks": "推荐"}
{"content": "本书有点布道的嫌疑，对比特币的介绍所占篇幅较少，更多的是主观价值的输出，实在可惜。", "marks": "较差"}
{"content": "这就是一个博客的合集，完全看不出来为了成书做了什么结构上的安排和统筹工作。", "marks": "还行"}
{"content": "比特币热潮渐淡，区块链来势凶猛。回头再看这本写自2013年的书，仍然颇多启发。数字货币对传统金融领域目前来看依然影响甚微，涉及到主权、利益、监管其合法性和公众接受度依然遥不可及。不过分布式记账的区块链技术对智能合约和软件定义世界在经济领域的应用已经可以看到些许曙光，作为一名公钥算法领域的老人从中心化的PKI/CA领域到区块链应用，颇感兴奋。", "marks": "推荐"}
{"content": "真是天才的思想！\n能让人绝对信任的只有数学了吧。", "marks": "推荐"}
{"content": "比特币，一个有趣的游戏", "marks": "力荐"}
{"content": "比特币科普文，其实很多东西可以深入进去，作者水平问题吧，感觉就像随便翻译国外的文献然后自己来个综述，丝毫不接地气。", "marks": "还行"}
{"content": "对密码学感上了兴趣。", "marks": "推荐"}
{"content": "后面关于零币、彩色币、零知识支付等，由于知识所限看不太懂，但不妨碍比特币的理论对我的冲击，它不仅仅是一种货币，是一套信任体系。再一次让我看到失控那本书的影子......", "marks": "力荐"}
{"content": "谁能给我解释下斯诺登那部分，不太理解", "marks": "推荐"}
{"content": "知道比特币是因为前两年有人跟我说，某个工科男基友在玩比特币，然后小赚了一笔。后来发现一直喜欢的一个科幻作者长铗也十分热衷比特币。对互联网、计算机、金融等知识的匮乏，导致我云里雾里地看完了这本书。但是生在这个时代，让我很乐于去观望这些新事物。我们已经经历了太多让生活大大改变的变革，同样也许货币也会，那么就来吧。", "marks": "推荐"}
{"content": "拼凑，毫无新意", "marks": "很差"}
{"content": "有点啰嗦 相对易读", "marks": "还行"}
{"content": "作者虽然设想了比特币现实存在和可能存在的BUG，而且也认为绝大多数BUG是可以解决的，但是想象跟未来往往不会重合", "marks": "推荐"}
{"content": "网文合集。", "marks": "还行"}
{"content": "新kindle开工，背光有点儿耗电啊。书后半部是货币发展史，减一星。", "marks": "还行"}
{"content": "讲得比较浅显易懂，但问题是似乎是个比特币吹……", "marks": "推荐"}
{"content": "在序中说20000刀能达到经济规模的1%，后面又变成了2000刀，不严谨还是忽悠？正文中对Bitcoin的理论解释有点泛泛，或者说需要一定计算机理论基础才明白，有些内容只是点了一下。限于篇幅，对山寨币也介绍不是很多。随着Bitcoin的协议更新，这本书是不是也得更新了？比如二代币或者说最近炒的侧链的应用？总之，我没看明白啦，就当是科普咯，要反驳BTC，也得看一看来挑刺儿啦=。=", "marks": "推荐"}
{"content": "曾经红火一时的比特币，最近出现了危机，美国最大的比特币交易网站倒闭并关闭，值得我们反思，新的货币的发行需要适当的时机，这是一种大势所趋。然而在投机的市场中，理智，公平，不会太容易，规范，规则更重要。", "marks": "还行"}
{"content": "入门科普好物 有些部分文科生表示看不懂 但不妨碍对这本书的好感 ", "marks": "推荐"}
{"content": "百科全书式入门书，好了一波先驱者。", "marks": "推荐"}
{"content": "很科普的一本关于比特币的书。", "marks": "还行"}
{"content": "非常不错的科普", "marks": "推荐"}
{"content": "算力即权力，货币即信息，全球第一本关于比特币的书籍", "marks": "力荐"}
{"content": "这样看来比特币应该活不久吧。对幕后大神好奇得一塌糊涂。", "marks": "还行"}
{"content": "体现了贵国什么火写什么的风格", "marks": "很差"}
{"content": "看完之后会对比特币的初衷，价值有一定了解，但是至于认不认同，每个人有自己的答案。", "marks": "还行"}
{"content": "科普", "marks": "推荐"}
{"content": "很难得的能让我在充满杂乱信息的网络中得到一个关于比特币相对全面和客观的了解，虽然自己不太可能回去投资比特币，但却对比特币的一些基于密码学的原理充满了极大的兴趣。", "marks": "推荐"}
{"content": "看了这本书，大致清楚了比特币是个什么东西。", "marks": "推荐"}
{"content": "挺开源的内容，没必要买书", "marks": "还行"}
{"content": "很差，有空写书评", "marks": "很差"}
{"content": "原本对本书没抱太高期望，没想到内容很全面很有深度，不是一般的口水书。比特币的世界比我想象的更具颠覆性，推荐阅读。", "marks": "力荐"}
{"content": "唯有站在世界的前沿，你才能", "marks": "推荐"}
{"content": "自我扫盲。全书多人供稿，章节逻辑不清；几乎没有经济方面内容，大部分讲技术，哈希算法、通信、加密什么的，看完依旧满眼黑；安利成分很足，可是并不太可信。总结：比特币系统相当于一个公开匿名电子账簿，由全球云承载，全网同步，对算力投入有特定奖励机制，存在51%攻击风险。PS：BTC的通缩属性怎么办？持有BTC就尼玛能抢劫所有人，真是轻松愉快哈。", "marks": "还行"}
{"content": "入门书，其中的技术理论看不懂。。如果能多一点对金融体系货币体系更深入更全面的东西更好了。", "marks": "还行"}
{"content": "这么高的分不懂为什么。blockchain的认识不足，更谈不上深度。顶多算篇知识普及营销文。", "marks": "很差"}
{"content": "还算值得推荐作为入门材料。虽然很多重复内容，但中国出版业大概也就这水平吧，各种网文抄一遍——之所以给3星，是因为太“安利”了。", "marks": "还行"}
{"content": "一本入门科普的书籍", "marks": "还行"}
{"content": "前面普及基础知识，内容稍显重复，后面涉及到计算机和密码学知识，又过于专业，定位有些飘忽。但是，作为一本三年前的书来说，还是相对系统化的。比特币不仅是技术的突破，更是思想的颠覆", "marks": "还行"}
{"content": "不错，需要读原始论文和代码。潜力巨大。", "marks": "推荐"}
{"content": "去中心化 分布式账本 货币非国家化 算力投票 挖矿 通缩 51%攻击 零知识证明 \r“比特币是民粹主义时代一种基于信仰的金融资产。”就在我断断续续看这本书的四五个月间，比特币在中国交易被叫停，而他却头也不回地涨。思付诸于行，行胜于言", "marks": "推荐"}
{"content": "各种不明觉厉。。", "marks": "推荐"}
{"content": "从头翻看了一遍，好吧，有些地方没有看明白。但是加上知乎比特币的介绍，已经对比特币有了一个粗略大框的了解，~", "marks": "还行"}
{"content": "没什么好看，几乎就是网上新闻搜集起来的...", "marks": "较差"}
{"content": "前瞻", "marks": "力荐"}
{"content": "作为一个介绍性质的科技读物，已经写得很不错了，深入浅出，清晰全面。", "marks": "推荐"}
{"content": "打开新世界，大门无处不在", "marks": "力荐"}
{"content": "讲的还是挺浅的，结构松散逻辑性不强，一些例子尚可，要想准确了解比特币的基本知识一篇paper足矣。", "marks": "还行"}
{"content": "数学部分收益很多 公钥和私钥 启发很大", "marks": "力荐"}
{"content": "虽然书籍内容有点零散，但还是相对较为全面地介绍了比特币，也许你我就站在人类历史改变的门口！！", "marks": "还行"}
{"content": "去中心化的服务模式", "marks": "还行"}
{"content": "详细的介绍了有关比特币的信息，以及多么看好比特币的未来。但感觉本书没什么干货，网上搜几段视频也能了解到。 ", "marks": "还行"}
{"content": "对比特币原理部分解释的很清楚，但是对其安全、风险、价值及未来的讨论说理还是有点片面单薄。不过、毕竟是正在发展的新事物。", "marks": "还行"}
{"content": "值得一读，对比特币有了个初步的了解，下一步得想办法投一点了。", "marks": "力荐"}
{"content": "讲解较浅，技术细节少而粗略", "marks": "还行"}
{"content": "有些书读一遍读不懂，需要反复读，这叫名著。而读完这本书的序言，就已经知道了书里80%的内容。后面的章节无非就是颠来倒去的说相似的内容。", "marks": "较差"}
{"content": "我发现我已经不太能看懂中文描述的密码学专业内容了……比如零知识证明神马的", "marks": "推荐"}
{"content": "毫无营养", "marks": "很差"}
{"content": "这么一本小薄书卖39真是……………………扣1星", "marks": "还行"}
{"content": "P/NP入门科普", "marks": "力荐"}
{"content": "有点奇怪", "marks": "推荐"}
{"content": "没有想象中的深入，作者说他想写一本关于计算理论的《时间简史》，从这个角度说作者做到了。对于想比较深入了解，会有点失望，100来页的书少了点内容", "marks": "推荐"}
{"content": "书很好，就是中文标题有点乱来。", "marks": "推荐"}
{"content": "总觉得还没说透", "marks": "还行"}
{"content": "简直就是浪费寡人的时间，给中学生看还可以。。。", "marks": "还行"}
{"content": "简单科普书.", "marks": "推荐"}
{"content": "#纸质书# 高中生读物吧。", "marks": "还行"}
{"content": "科普书看了总觉得意义不大", "marks": "还行"}
{"content": "不应该苛求，毕竟能讲的基本都讲到了，但还是感觉作者为了增加可读性（据闻此书是由一篇文章扩充而成的）加了过多的俏皮话和八卦。如果可以适当精简就好了", "marks": "推荐"}
{"content": "14.9.3-非常奇趣。", "marks": "力荐"}
{"content": "讲述得很有意思，但是上过高级算法以后对这些话题就没有太多新鲜感了~", "marks": "推荐"}
{"content": "优点是能让你搞懂什么是 P/NP，缺点是故事散乱，很多例子不知所云，缩略到 1/5 的篇幅应该是本好书", "marks": "还行"}
{"content": "对P/NP问题讲的还不错，不过有些地方挺深的，不太好懂", "marks": "还行"}
{"content": "今后it业发展绕不开的问题 当初跟着家里创业的时候实际上做的项目也略微涉及到这个", "marks": "推荐"}
{"content": "高中生看的", "marks": "还行"}
{"content": "即使以人邮出版的标准看定价也太高。不过内容还不错，高中到非专业研究生读读都会有启发。有人吐槽书名翻译，个人感觉那个副标题“P/NP问题趣史”很贴切，这本书并不是要告诉你P/NP的严格定义和经典证明尝试，说白了是一些有启发的“八卦”。另外有人说翻译不行，我也并未感到阅读不适。除了量子力学那一章原文解释得比较简洁外，其他部分翻译和原文比都尽可能做到了准确，而且我也能完全理解，不存在什么佶屈聱牙造成门槛的术语。第二章假想P=NP的未来，以及中段人们试图证明P/NP的尝试及误区都很有趣。作者点到为止，更专业的可能要去直接爬paper吧……", "marks": "推荐"}
{"content": "科普，对学过计算理论的人来说意思不大", "marks": "推荐"}
{"content": "比《迷茫的旅行商》易读，但缺乏一定的细节(这也是易读的原因)。如果P=NP，世界就会很美好，而上帝对这个世界充满恶意，所以，P≠NP。", "marks": "推荐"}
{"content": "内容对CS专业的人来说十分浅显，当个做饭读物看就好了。不过，“IBM的T.J.华生研究中心”？哈哈哈哈为啥“华生”用在这里这么好笑啊……", "marks": "还行"}
{"content": "优秀的科普读物，适合中学生阅读。搭配图灵公司之前出版的《迷茫的旅行商》，效果更好！", "marks": "力荐"}
{"content": "在P=NP问题解决之前恐怕很难出现科幻电影里面的天网或超脑出现，著名的旅行家问题就足以让计算机算到世界末日，奇点来临也有点杞人忧天了。", "marks": "推荐"}
{"content": "好薄的科普读物。把一些P/NP/NPC问题都用生活化的例子阐述了一遍，我就不喜欢数学一上来就是冷冰冰的符号嘛。。。和已有知识有映射才更好理解嘛，明明也是从实际中抽象出来的，为什么不能从源头讲起。", "marks": "推荐"}
{"content": "还不错～～就是对P/NP的描述还是不够特别的清楚...总觉得读完缺了点什么...", "marks": "推荐"}
{"content": "中规中矩", "marks": "推荐"}
{"content": "讲了P/NP问题的一系列历史，内容通俗幽默！", "marks": "推荐"}
{"content": "意义不大", "marks": "还行"}
{"content": "科普读物", "marks": "还行"}
{"content": "很棒的科普书！", "marks": "推荐"}
{"content": "嘛。。P/NP本身是一个挺棒的问题，但是。。为毛感觉越介绍越复杂了。。", "marks": "还行"}
{"content": "书里面这么定义的。。\"P指的是用计算机能很快求解的问题，NP指的是我们想找到最优解的问题。”", "marks": "较差"}
{"content": "读不懂啊。", "marks": "还行"}
{"content": "能知事之不能知、能证理之不能证，是对事理之极高理解。", "marks": "推荐"}
{"content": "一些对在数理哲学和算法创新方面毫无建树的理工猪还要来秀一下优越也真是醉了。哪怕，你他妈能给出一个现有算法的改进代码我也服啊！", "marks": "力荐"}
{"content": "涉及内容很多，但编排较乱", "marks": "还行"}
{"content": "2017第24本，1. NP代表Non-deterministic Polynomial 2. NP表示存在问题的集合，P则是快速找到解的问题集合，NP=P意味着我们总是能很快计算任何问题的解 3. 虽然存在简捷启发式，小规模解，类同解的不完全替代办法，作者还是认为NP<>P是未来的常态 4. 发现NP与P问题的意义对于我来说不亚于背反定律，两者都是能够帮助判断高价值任务的标签。", "marks": "推荐"}
{"content": "“Twitter帮助人民推翻了政府的统治。科技对人类的影响体现在各种难以预料的方面。人们最好做好准备，以为这一切马上就要再次发生。”作者一语道破天机。。。", "marks": "推荐"}
{"content": "仿佛回到了研究生阶段。", "marks": "推荐"}
{"content": "个人感觉有点简单了，不过毕竟是面向公众的，还算可以吧", "marks": "还行"}
{"content": "我们不能解决P/NP问题，这样难解的题才让生活中可以有隐私。生活中那么多问题是根本不可解的，旅行路线最优的问题，图的问题，所以也说明了想理性地、最优解地活着，是不可能的。次优或者凑合过吧也能接受。再看之间学的简单的，可以按照步骤一步步来的问题，是多么滴可人。", "marks": "推荐"}
{"content": "直到大三才真正地了解P/NP问题，作为一个计算机科学专业的学生，真是惭愧。这本书还是很通俗的。", "marks": "推荐"}
{"content": "过分拖沓", "marks": "还行"}
{"content": "科普书，内容还算比较新，对我这样的没文化的哥们来说，没有在一开篇就讲明白p/np/np完全问题，这几个概念，实在是让人度过了痛苦的前期。我觉得角度和深度都做得不够好……可能因为这个概念并不吸引我吧。", "marks": "还行"}
{"content": "可能是由于P/NP问题涉及的领域过于宽广宏大，这本书给人一种游击队的感觉——打一枪换一个地方。每一处都深入浅出，讲得很有趣，但是都是点到为止，不过瘾啊！", "marks": "推荐"}
{"content": "有意思的书，这个可是“终极问题”之一呢。", "marks": "推荐"}
{"content": "才开始看就发觉废话很多。看了第一章就不太想看了。最后看完的结论是，fuc*ing buillsh*t.", "marks": "较差"}
{"content": "价值600万美金的一道数学题！", "marks": "推荐"}
{"content": "对于P/NP问题、研究现状及应用的简单科普。轻松易读，尽管没什么深度。", "marks": "还行"}
{"content": "嗯，没看懂", "marks": "推荐"}
{"content": "对目前的我来说，看这种书最有意思，基础的知识都有，又能告诉我一些我不知道的。。。文中，鼓励P=NP的证明，但是利用目前P!=NP的情况，也可以做很多事", "marks": "推荐"}
{"content": "看看", "marks": "推荐"}
{"content": "数学家从来不缺乏野心，但在人类与计算机的竞赛中，数学家们到底站在哪一方？这种竞赛，正是人类进步的动力。", "marks": "力荐"}
{"content": "看这本书让我觉得对计算机科学更加感兴趣了。。The first book I read about pure theoretical computer science", "marks": "力荐"}
{"content": "我想打负分", "marks": "很差"}
{"content": "还行吧，作为科普读物随便翻翻还是不错的。", "marks": "还行"}
{"content": "写的太浅.", "marks": "推荐"}
{"content": "一本科普性质的小册子，问题讲的很生动，价格有点贵", "marks": "还行"}
{"content": "我也希望P!=NP", "marks": "推荐"}
{"content": "比想象中有趣一些，虽然翻译得不太流畅。读完以后对P/NP问题还是有了一些理解，最有趣的是那么多计算问题归根结底都是P/NP问题。计算问题很多时候都是从可能性空间中搜索解的问题。", "marks": "推荐"}
{"content": "如果能证明P=NP，那么目前有信息技术的进步只是它的一个脚注；如果不能，那么世界可能就又一次展示了它不完美的一面。但问题是，我们目前没有任何进展！", "marks": "推荐"}
{"content": "计算复杂度理论合格的科普书，不过没涉及NP-hardness", "marks": "推荐"}
{"content": "好吧，，科普读物", "marks": "推荐"}
{"content": "科普小书~", "marks": "推荐"}
{"content": "开阔思维之读物", "marks": "力荐"}
{"content": "可以加深下对计算机问题的划分, 知道可解与能力的极限。另外对于量子计算机和并行计算的阐述也很有意思。", "marks": "推荐"}
{"content": "这本书的选题很好，但是内容过于浅显， 基本没有对P/NP内容进行深入些的探讨，甚至连一个专业点的定义也没有给。书中只是对P/NP涉及到的问题和周边的研究领域进行了简要介绍。简而言之没有太多的参考价值，好在书很薄，读完不会花费太多时间。", "marks": "较差"}
{"content": "有生之年我要解决P/NP问题，一定！嗯！（你想多了", "marks": "力荐"}
{"content": "中间讲的比较崩，可以当作一本引导兴趣的书来读。\n真的不是所有的科学知识都适合普及的。", "marks": "推荐"}
{"content": "NP问题科普，类似的书还有《迷茫的旅行商》，后者更深入", "marks": "推荐"}
{"content": "暑假回西安我就带了这一本书。", "marks": "力荐"}
{"content": "送给前室友当生日礼物的。翻了一下扯淡太多干货少。不过因为作者是大神所以即使水也不会有技术上的错误。五颗星全是给作者的不是给书的。", "marks": "力荐"}
{"content": "NP，有解且能够快速验证一种解的问题；P，能快速找到最优解的问题。虽然拗口，却是计算机科学重要的基础。谁快来搞定NP完全问题！", "marks": "推荐"}
{"content": "关于 P/NP 问题挺不错的科普书", "marks": "力荐"}
{"content": "还不错，给我普及了P/NP问题", "marks": "力荐"}
{"content": "还行吧，前面几章的开脑洞不错，后面很一般。而且没基础的人不太能读得懂，有基础的又不需要看，比较适合我这种半灌水。结语不错：“计算是一种和过程有关的活动，而过程不仅仅出现在计算机上。p/np问题归根到底与自然本身的极限有关，与生物和物理系统进化的极限有关，甚至可以说与人类思想所能达到的极限有关。只要p/np问题还是一个未解之谜，人类就无法确切的知道自己所能取得的成就的极限在哪里。这不由得让人感到精神一振！”", "marks": "推荐"}
{"content": "Fucking NP hard problem!!!.", "marks": "力荐"}
{"content": "科普了，里边有些问题说得不够浅显，需要拓展阅读", "marks": "推荐"}
{"content": "我不知道非计算机专业读者的感受，仅从专业角度评价。如果只是想了解可计算性和计算机复杂性的历史，非常推荐。如果想深究理论细节，不推荐，建议看作者的老师Spiser所著Introduction to the Theory of Computation，川大唐常杰老师翻译的计算理论导引。个人很喜欢，对于理论和概念已经了解，只是不知道这段历史的人，读起来很有趣味。", "marks": "还行"}
{"content": "讲得还是理想化了一些，毕竟是科普的小书，因为这个入了坑结果被高级算法课的NP问题虐得不要不要的。", "marks": "还行"}
{"content": "内容比较浅，科普类的读物", "marks": "较差"}
{"content": "对游戏设计有启发…", "marks": "推荐"}
{"content": "后面的有点难懂", "marks": "推荐"}
{"content": "也许作者自己也对NP问题无解的未来充满了期待，一本书搞懂算法对这个世界的影响。", "marks": "推荐"}
{"content": "第一次知道这个数学疑难对人类的重要性，无论证明P=NP还是P≠NP，都对人类文明极其重要，更与我们息息相关", "marks": "力荐"}
{"content": "很棒的科普读物，有没有专业背景都能读，即便是数学专业，读了后也获益匪浅。就是贵了点", "marks": "推荐"}
{"content": "帮助我了解了问题的概况，能激起兴趣，带来哲学上思考", "marks": "力荐"}
{"content": "NP是存在解的问题的集合，P是能快速求解的问题的集合。P/NP问题的实质是问：是否对于一切搜索问题都存在不用遍历的解法。如果P=NP，所有难题都可以用计算机解决。如果P≠NP,则可以用来保守秘密，比如产生看上去真随机的伪随机数。", "marks": "推荐"}
{"content": "翻译的还算不错吧。", "marks": "推荐"}
{"content": "推荐给各位没有学过组成原理和汇编的同学。", "marks": "还行"}
{"content": "大概看了一遍了吧。第二章的焊接，就是把FPGA组装成SOC, 和预想的不一样。还是第一章指的细细再读。", "marks": "推荐"}
{"content": "扫了一遍，不太感冒", "marks": "还行"}
{"content": "感觉跟操作手册一样。连电子器件商店在日本哪个城市怎么走的地图都有（觉得这种东西多了，设计和编程的部分就被稀释了。。。跳著看好了", "marks": "推荐"}
{"content": "第一章不错，第二章涉及硬件看不懂，第三章太简单", "marks": "还行"}
{"content": "虽然只一个多小时翻了一遍，但作者似乎是全做了一遍，nb....", "marks": "还行"}
{"content": "只能说是消除了一点神秘感，其实哪里读得懂呢。", "marks": "推荐"}
{"content": "先睹为快", "marks": "力荐"}
{"content": "坦诚说，真没觉得这书好。。。感觉像极了一本十全大礼包，什么都讲了一点。", "marks": "还行"}
{"content": "太浅了", "marks": "还行"}
{"content": "自制 MIPS-Like CPU", "marks": "力荐"}
{"content": "非常不错的入门书，通过此学习Verilog也是很棒的；作者讲解的很清楚，深因教学指导", "marks": "力荐"}
{"content": "日本人写的CPU设计入门书，从软件层面实现的指令集到硬件电路的焊接，完整展现了CPU设计的过程，综合数电入门知识、汇编语言设计指令集、CPU流水线操作、总线、I/O访问、存储器访问。", "marks": "力荐"}
{"content": "介绍CPU的书，但感觉章节不是循序渐进，学起来比较枯燥，而且按作者的方式做出来的东西没什么成就感，还是多学学30天操作系统那本吧", "marks": "较差"}
{"content": "更应该被称为手册，而不是一本书。", "marks": "较差"}
{"content": "很实用", "marks": "力荐"}
{"content": "基础", "marks": "推荐"}
{"content": "书中关于简历的写法、一些谈判的问题等都有说明，值得一读。", "marks": "推荐"}
{"content": "精炼。些许部分难读懂", "marks": "推荐"}
{"content": "可以，这很干货！尤其是后面简历的一些指导，面试的一些tips，我觉得每次面试前都最好看一看~", "marks": "力荐"}
{"content": "简单实用，看完就开始修改简历，感觉跟之前的版本完全不一样。", "marks": "力荐"}
{"content": "消除了种种未知", "marks": "推荐"}
{"content": "智力题。", "marks": "还行"}
{"content": "不知道给高分的人都是什么心态？这本所谓的书只是收集了200多个各种类型的貌似有趣的算法题。分3部分，1就是题，2是所谓分析，3是答案。来看看所谓的分析：第22题三角形路径权值最大和的分析就几个字：使用动态规划。再看答案：一个图，一个圆圈标出三角形中一个数的最大和，没有代码，没有算法。我只想对作者说：艹你大爷", "marks": "很差"}
{"content": "给这本书加“算法与数据结构”标签的真是够了，这里哪有数据结构？算法还沾点边，但题型其实也不多，而且更偏向数学类。真要巩固算法的还是去acm网站多写写代码吧，这本书当空闲时间活跃思维的小书看看就好。别太当真。", "marks": "还行"}
{"content": "不错的算法题集", "marks": "力荐"}
{"content": "这是智力题集锦么。。。表示，好想回到了小学奥数时代，不过还是挺有意思的~~", "marks": "推荐"}
{"content": "不需要计算机编程的程序算法练习本。", "marks": "推荐"}
{"content": "算法谜题的思考，解题不够详细有趣", "marks": "推荐"}
{"content": "值得买一本，放在床头慢慢看。", "marks": "推荐"}
{"content": "书是好书，可惜没有源码。", "marks": "推荐"}
{"content": "还是挺好玩的", "marks": "力荐"}
{"content": "无聊时思考一两个题打发时间。。", "marks": "推荐"}
{"content": "这本书是一本习题集，十分适合碎片时间思考一下，挺有趣的", "marks": "力荐"}
{"content": "挺可以的书,不过好多题都是类似.", "marks": "还行"}
{"content": "没有看完啊 ", "marks": "还行"}
{"content": "除了翻译，原版写得极好，说是基础，也仅仅是数学推导都给出来了而已。", "marks": "推荐"}
{"content": "这难度，读着想哭，等sta4002，4003都写完了再来拜读也不迟，真是，工科书写sta就只会摆矩阵么(╥﹏╥)cluster神马的明明之前学过在这里就都看不懂了，还有被噎死什么的，还是说有mcmc么怎么没看见...真•太痛苦", "marks": "推荐"}
{"content": "公式推导已经很详细了，但我……？？？", "marks": "推荐"}
{"content": "机器学习基础知识索引，但是翻译的太烂", "marks": "还行"}
{"content": "数学太差劲了么，公式推导真是没怎么看懂", "marks": "还行"}
{"content": "看过之后再看PRML，顿时明白了好多。适合培养ML的数学基础。公式完全没跳步，解释直观明了，很多PRML用一两句话的地方这里都会解释好几页。还有说翻译烂的，是不是每一本译作都要说一次翻译烂，好像看不懂全是因为翻译烂。说实话这本的翻译已经很不错了。", "marks": "推荐"}
{"content": "翻译有的地方真的很生硬，像是英语专业的人翻译的，55页解释无偏性的地方意思是不是完全反掉了。我要找个博士问问看吗～～～再吐槽几句，有的推导是很细致到啰嗦，但是符号标记实在有点不习惯，比如条件分布和国内教材不同。英语好的同学直接看英文版吧～", "marks": "推荐"}
{"content": "分布式系统算法的概述。算法并不全，但是面基本都点到了。", "marks": "力荐"}
{"content": "非常基础的分布式计算算法，分为消息和共享内存两大类，覆盖了分布式计算的主要体系。", "marks": "力荐"}
{"content": "堪称好莱坞高智商犯罪电影的教科书。", "marks": "力荐"}
{"content": "翻译略微减分。有一些并不适合中国国情，但总体内容还是很好的。人是社会性动物，自然本书的内容会和很多心理学、人际关系之类有很多交叉。重点在于启发读者意识到并利用这些知识，实现“安全审计”。社会工程确实很重要，但是，只有社会工程也是不够的。", "marks": "推荐"}
{"content": "一如既往地砍掉了原书末尾的词汇表", "marks": "力荐"}
{"content": "框架ok，内容太差。", "marks": "还行"}
{"content": "多谢NP老师的反复推荐～", "marks": "推荐"}
{"content": "有许多经典案例，恍惚中觉得像是在教新闻采写——怎样快速与人建立联系和信任。", "marks": "还行"}
{"content": "可以和江湖丛谈结合，本书并没有探讨很多电脑技术，而是教授了一些心理控制的手段。", "marks": "推荐"}
{"content": "把我对IT的吸引力扩大到整个人类范畴，我就能转行做社会工程师了", "marks": "力荐"}
{"content": "IT领域的《FBI教你读心术》", "marks": "还行"}
{"content": "更像一本教人谈恋爱的书", "marks": "推荐"}
{"content": "根本就是私家偵探訓練教材", "marks": "还行"}
{"content": "非常值得多次反复阅读，信不信由你！！！", "marks": "推荐"}
{"content": "无需多言，对得起副标题「欺骗的艺术」", "marks": "力荐"}
{"content": "三卷书只看第一卷就可以了", "marks": "力荐"}
{"content": "抖机灵自修指南", "marks": "力荐"}
{"content": "出版社为了省成本又把索引去掉了。可读性不错。延伸阅读：The Art of Deception。这类书大概十五年前瞄行为科学的书瞄过一点，蛮好玩的。", "marks": "还行"}
{"content": "一直以来对社会工程学很感兴趣，这本书系统讲述了实战所用的社会工程学方法，也消除我长期以来的误解，把握好心理的特征确实可以对人造成一定的影响，所谓操纵可能包含贬义，影响更为合适", "marks": "力荐"}
{"content": "骗子也可以当得很有水准", "marks": "推荐"}
{"content": "从看米特尼克的传记开始了解社会工程，感觉他们把电话的艺术展现的淋漓尽致。当然，还有其他一系列的东西。本书主要举了以米特尼克为主的天才黑客的事例，然后么围绕NLP展开的一系列技巧，当然最终还是强调实践。提供了各种软件和网站，可见作者是个实在人。类似的最近有一本《Who am I》的电影，就是讲这个的，故事讲的还不错，推荐大家去看看。", "marks": "推荐"}
{"content": "内容有点老了，好多诈骗贩子用烂的套路", "marks": "还行"}
{"content": "下期专栏写 social engineering。", "marks": "力荐"}
{"content": "框架好评，值得再看", "marks": "推荐"}
{"content": "连撬锁工具都介绍了呢", "marks": "推荐"}
{"content": "经典，社会工程、心理学，当骗子必备。呵呵", "marks": "力荐"}
{"content": "对于从业人员（非贬义）很有参考价值的一本书，虽说限于年代有些软件和工具配置已经落伍，但是还是把社会工程学的要义阐述得十分精确：误导和操控。", "marks": "推荐"}
{"content": "非常给力的一本书，安全人员必读", "marks": "力荐"}
{"content": "也许就有", "marks": "推荐"}
{"content": "信息收集，诱导，伪装，影响", "marks": "推荐"}
{"content": "要学好多，才能立足。非常有用", "marks": "推荐"}
{"content": "工具什么的都准备好了。", "marks": "力荐"}
{"content": "看看", "marks": "推荐"}
{"content": "不错的社会工程学入门读物，打开了黑魔法世界大门。虽说不是专业的社工人员，但是作为社会的一员，还是可以通过这类读物提高自身安全意识。防人之心不可无。", "marks": "推荐"}
{"content": "以工程学的名义", "marks": "还行"}
{"content": "浅显而杂乱", "marks": "很差"}
{"content": "一个成功的社会工程人员应该是，1.了解套路2.知进退会取舍操作强3.能够伪装自己的身份和想法4.一招制敌。", "marks": "力荐"}
{"content": "心理学的反面的应用，利用人的弱点。或多或少，或明或暗，或故意或潜意识，在生活中应用了书中的各种技术和思路，这些技术和思路有一部分甚至是“情商”的范畴，在各种谈判交流中都有用到。防人之心不可无，害人之心不能有，不骗人，亦不被人骗，更不失去相信人的能力，何其难。做一个有能力有底线有善心的人，何其难。", "marks": "推荐"}
{"content": "提供了一些思路，但真正要用还是得靠自己积累和实践训练", "marks": "还行"}
{"content": "人性漏洞。", "marks": "推荐"}
{"content": "死宅看这个么得用呀", "marks": "还行"}
{"content": "有一点点意思，太简单了。", "marks": "较差"}
{"content": "「维基百科的定义是：操纵他人采取特定行动或者泄漏机密信息的行为。它与骗局或欺骗类似，故该词常用于指代欺诈或诈骗，以达到收集信息、欺诈和访问计算机系统的目的，大部分情况下攻击者和受害者不会有面对面的接触。」", "marks": "还行"}
{"content": "作为介绍书还是可以的。", "marks": "推荐"}
{"content": "都是概念性的东西，很简单的例子。对实践的指导有限。", "marks": "还行"}
{"content": "信息量还是太少", "marks": "推荐"}
{"content": "2015-12-13  此时大四，没什么人在学校了", "marks": "还行"}
{"content": "加强安全意识的一个好的方式是看攻击者是如何伪装与操纵的。充分信息的作用和价值，警惕伪装和操纵，了解被使用的工具，从实际的案例得到启示，帮助我们拥有必要的安全意识和手段。", "marks": "推荐"}
{"content": "好久没读过社会工程方面的书了。这本写得不错，故事性少一点，但框架感更清晰。", "marks": "力荐"}
{"content": "读了这本书更加发现西奥迪尼的《影响力》是部经典，好几本书都引用过里面的论述和素材", "marks": "还行"}
{"content": "五一假期在市图看了大概一半，回学校后终于借到了。相比上一本看的Mitnick那本多了不少干货，挺喜欢", "marks": "推荐"}
{"content": "用俗话说就是玩套路", "marks": "力荐"}
{"content": "要懂技术，懂心理学，太理论实操不易", "marks": "推荐"}
{"content": "神书！我最需要的", "marks": "力荐"}
{"content": "玄学", "marks": "推荐"}
{"content": "发散思维，激发兴趣，很有帮助", "marks": "推荐"}
{"content": "如何成为一个合格的骗子", "marks": "推荐"}
{"content": "有点啰嗦，黑客什么的，始终只是中二梦啊。", "marks": "还行"}
{"content": "诈骗实用手册。但实用部分并不多。", "marks": "还行"}
{"content": "人永远是安全系统中最薄弱的一个环节", "marks": "推荐"}
{"content": "为了工具篇看的社工书，开锁那一章有意思，不过大部分内容和卡耐基教你如何利用人性漏洞系列差不多。本书主旨：安全系统最不安全的影响因素就是人，垃圾桶是信息量最大的地方", "marks": "还行"}
{"content": "本书有一定的危险性，但是也的确震动了我的思想～", "marks": "力荐"}
{"content": "还行，就是内容白开水了点", "marks": "还行"}
{"content": "可用于对企业做微观调研", "marks": "力荐"}
{"content": "只看了前两章，大概了解了下社会工程，相当震惊，对一些行为要提高警觉了。", "marks": "推荐"}
{"content": "社会工程框架建立的尝试，思路很好但整个框架所展开的规模（指的是与其他学科体系的对接）还不够，内容也不够丰富，停留在与某些畅销书有很大重叠内容的水平。", "marks": "还行"}
{"content": "看过不实践等于没看", "marks": "推荐"}
{"content": "全书都在讲渗透", "marks": "推荐"}
{"content": "TEST", "marks": "推荐"}
{"content": "安全最大的漏洞是人，信息最佳的来源是垃圾堆", "marks": "推荐"}
{"content": "框架", "marks": "力荐"}
{"content": "并不是能够通过纸面传授的能力吧", "marks": "还行"}
{"content": "准备转行干侦探", "marks": "推荐"}
{"content": "力荐代表理论上有可以学习的地方、实践上也有可以应用的地方。", "marks": "力荐"}
{"content": "完美的犯罪方法百科全书，作者不断提醒你：不能仅仅知道，要多多练习哦……", "marks": "力荐"}
{"content": "社会工程人员肯定很喜欢现在的时代，收集一个人的信息实在是太容易了。做个社会工程人员更多是天生的，或者经过大量后天练习，书中所写的东西很多没有太多的可操作性。但是从防御的角度来看还是不错。", "marks": "还行"}
{"content": "社会工程就是通过各种方式，欺骗、诱导、操纵对方做不符合其最佳利益的事情，换句话说就是坑人。本书从信息收集开始，分别介绍了诱导、伪装、微表情、NLP、影响和说服、操纵等。其中人类思维缓冲区还是蛮好玩的。本书内容很杂，看了一遍感觉有些晕乎乎的，有空可以好好的整理整理。但是想把这本书应用到组织ISMS等体系中，还需要凝缩和总结。", "marks": "推荐"}
{"content": "Adobe的高级黑...", "marks": "推荐"}
{"content": "之前看的社工方面的书籍都是PDF，这是看的第一本实体书  还介绍了开锁工具呢～", "marks": "推荐"}
{"content": "在学校图书馆看到的。一开始还以为是单纯讲黑客技术的，结果今天粗略看了一遍，发现社会工程远不只是黑客技术，还有心理学等等，真是开了眼界了。", "marks": "力荐"}
{"content": "因为涉及到了人，所以防火墙，杀毒软件都失效了，攻击的方式也多了，安全在于教育，就算不去从事这行，避免被攻击也是很有必要的。 另外，里面几个故事/案例都不错。 ", "marks": "推荐"}
{"content": "『人是信息系统中最薄弱的环节』", "marks": "力荐"}
{"content": "就怕骗子有文化！", "marks": "还行"}
{"content": "第五章的心理学应用绝对是亮点", "marks": "力荐"}
{"content": "废话多\n", "marks": "还行"}
{"content": "最大的安全漏洞在人身上", "marks": "力荐"}
{"content": "感觉也就是个诈骗手册。拿到手之后用了两天的时间看完了，收获挺多的，但依然学不会去欺骗。", "marks": "力荐"}
{"content": "(⊙o⊙)…对我来说可行性较差吧.........", "marks": "还行"}
{"content": "自身有实力的可以去美亚看原版未翻译过的，在国内上架的书有些内容被砍了", "marks": "推荐"}
{"content": "我觉得好，但不做推荐。很难一句话总结这本书的收获，以后找时间好好总结下吧。", "marks": "推荐"}
{"content": "对社会工程学很感兴趣 安全体系中的人性漏洞 人性的弱点一旦被他人所利用你的思想就完全被对方所控制 对人类思维缓冲区溢出甚是感兴趣只是书中略略带过 总之社会工程很强大 看完这本书给了我很大的启发尤其是思维逻辑上的转换还有社交方式 很推荐这本书多看看也避免上当受骗了 ", "marks": "力荐"}
{"content": "看完感觉还行，不是特别震撼，说不上什么。中间说的NLP、微表情什么的感觉距离很遥远。", "marks": "还行"}
{"content": "书地的越多，就越感觉到里面都是故事。。干货很少的。。还有，这书为什么会混到计算机书籍中呢。好奇怪。", "marks": "还行"}
{"content": "很简单的一本书，或者说是各种东西的一点罗列，框架书？可以通过这本书去发现写东西，但想要通过这本书就做到，很难。应时景的一本书。", "marks": "还行"}
{"content": "呕", "marks": "很差"}
{"content": "有意思", "marks": "推荐"}
{"content": "哈哈，演员的自我修养", "marks": "推荐"}
{"content": "最大的漏洞是人的本身，理论有待实践", "marks": "推荐"}
{"content": "操作系统提供的高级服务都是通过向复杂的硬件发送一系列详细的命令实现的有趣的是\" 操作系统并不是从外部控制电脑的独立机制'''它还包括一些软件\" 这些软件由执行应用程序的同一处理器执行。保证操作系统总在应用程序运行结束后重新夺回控制权的安排机制使得操作系统的设计变得非常复杂 操作系统最令人印象深刻的方面来自于服务和硬件之间的不同! 操作系统在低级的硬件上提供高级服务。读者就会理解系统软件处理像串行接口这样简单的设备需要做的事情。设计操作系统时应该隐藏底层的硬件细节并创建一个为应用程序提供高级服务的抽象机器!", "marks": "力荐"}
{"content": "原书5星，翻译负分，许多句子根本不知所云，根本就是机翻！现在出书都这么不负责任了吗？！", "marks": "很差"}
{"content": "直接是在前一本上面扩写 而且写的非常混乱 可见作者只是在混", "marks": "较差"}
{"content": "解答了我的很多疑问。但我不是很喜欢在书里大段贴代码的做法，好在本身组织的还不错", "marks": "推荐"}
{"content": "看完书再去研究一下代码会比较好，特别是一堆状态机", "marks": "推荐"}
{"content": "最早的入门图书了，思路很清晰，但是代码太少，感觉不够深入，点到为止了", "marks": "推荐"}
{"content": "hadoop入门书籍，精彩", "marks": "推荐"}
{"content": " 前面看着还可以，后面重复比较多，特别是一堆状态机，干货就比较少了。", "marks": "还行"}
{"content": "状态机一块的内容解析很好", "marks": "力荐"}
{"content": "重复内容很多。。。", "marks": "还行"}
{"content": "对的时候是想了解yarn是怎样一个过程。可以一本参考书。", "marks": "推荐"}
{"content": "这是国内第一本介绍Hadoop 2.0的书，值得一读。", "marks": "力荐"}
{"content": "还是有点bug啊。。不过也算是不错的爬坡书。。再快点刷完排序和查找，看完OS的部分和linux命令，一周时间review一遍。把有问题的地方跟C++的东西补一下。开始刷第二本。", "marks": "推荐"}
{"content": "这本书真是干货。我之前看了大量的C/C++书籍，自以为“功力深厚”，翻开这本书时，仍然深感愧疚。特别是这本书罗列的一些面试题和笔试题，非常有意思，值得深入去思考。该书的面也比较广，C/C++，数据结构与算法，系统与网络，数据库基本上都涉及到了，适合程序员面试前翻一翻，巩固巩固。", "marks": "力荐"}
{"content": "必须给大风华5星啊！", "marks": "力荐"}
{"content": "还不错的说，比面试宝典好。", "marks": "推荐"}
{"content": "gc unicode closure 等等 可以一阅", "marks": "力荐"}
{"content": "玩具式语言,代码质量一般.如果是初学者会比较合适..", "marks": "推荐"}
{"content": "前边还不错，越往后越抽象，说语法的篇幅大于实现，整体还是值得阅读", "marks": "还行"}
{"content": "选题和写法很有吸引力（让人看不懂放下，然后又拿起看），但是缺少一章解析全书思路的概论，最后只好虎头蛇尾般读完……", "marks": "推荐"}
{"content": "还不错，科普一下，龙书真心啃不动", "marks": "力荐"}
{"content": "看了目录,不实用", "marks": "很差"}
{"content": "有些部分真的翻译得莫名其妙。好歹把一些专业名词翻对吧= =", "marks": "还行"}
{"content": "已暂停，只读了一章，觉得受益匪浅。编译器原理，待我再积累一段时间，重新再战。", "marks": "力荐"}
{"content": "更加深入的理解C", "marks": "力荐"}
{"content": "挺好的，让人对一些程序概念的实现有了一些了解", "marks": "推荐"}
{"content": "再看看", "marks": "还行"}
{"content": "粗略翻过，怎么说呢，感觉之前在hn上看过的一篇怎么自己写一个python interpreter的文章比这本书写的好看多了。", "marks": "还行"}
{"content": "主要介绍如何自己制作编程语言。文中介绍两种语言，一种是动态无类型，一种是静态的。觉得本书作者在陈述自己设计方面欠缺功底，看后不容易理解。而且设计的两个语言太过大，不适合初学者学习。", "marks": "还行"}
{"content": "毕设是编译器，这本书帮了很大忙", "marks": "推荐"}
{"content": "一般，主要是熟悉一下里面介绍的几个工具，对于编译器思想介绍的不深。可以先看看这本书，找找感官上的认识，然后还是得看龙书", "marks": "推荐"}
{"content": "有趣的技术书。书里还有翻页小动画。", "marks": "力荐"}
{"content": "从第三章开始就比较抽象了，对与像我这种刚入门的人来说。还是看的很吃力但是由于制作语言本身就比较复杂，加上没有什么更好的入门书所以对于新手来说可以推荐为第一本书。", "marks": "推荐"}
{"content": "从实践角度入手，让人加深了对语言的理解，好书！", "marks": "力荐"}
{"content": "入门学习,希望能开发自己的语言", "marks": "力荐"}
{"content": "好多东西都讲不太清楚, 需要百度的次数比较多", "marks": "推荐"}
{"content": "显然 这本书虽然初级 但入门来说非常不错", "marks": "力荐"}
{"content": "因为找工作需要，需要突击一下算法知识。国外那本圣经一般的算法导论，太厚了。听同学说这一本还不错，于是就买了一本，回来以后确实很薄看着也通俗易懂但是每当剖根问底的时候，就讲的模棱两可。而且多半是从 算法导论 上摘抄下来的。总之这本书适合突击，给3星！", "marks": "还行"}
{"content": "我感觉挺不错的，结构合理，比较适合教学展开，内容也够详实。", "marks": "推荐"}
{"content": "一般般，干货不多。", "marks": "还行"}
{"content": "所以程序写不好 就去做产品经理", "marks": "很差"}
{"content": "刚看了40页，作者的有些观点真让人来气，真想书里有个评论框。作者目的就在于打击还有理想的程序员，让其变成跟他一样平庸世俗的什么经理", "marks": "较差"}
{"content": "理论多余案例，管理胜过IT团队，或许是放之四海而皆准的rules，那为何不直接去读彼得德鲁克。", "marks": "还行"}
{"content": "匆匆一阅", "marks": "还行"}
{"content": "不仅仅适用于程序员，对于刚接触管理的都有用。（不同意写程序有天花板，而管理没有天花板）", "marks": "推荐"}
{"content": "只是读了blog上的专栏，太过管理学方面的东西，而且又有太多我不能认同。所看范围有限，评价不要太在意就好。", "marks": "还行"}
{"content": "太水，内容估计可以压缩90%", "marks": "较差"}
{"content": "能帮助理理思路，对于一直都埋头做程序的人来说，可以读下", "marks": "还行"}
{"content": "干货挺多", "marks": "力荐"}
{"content": "书中讲的多是道理，其中细节还得自己体味。", "marks": "推荐"}
{"content": "我觉得这本书对IT行业的大多数人都有用，不管是不是想当项目经理的程序员，不管是不是程序员出身的项目经理，都可以从这本书中学到东西。", "marks": "力荐"}
{"content": "像极了那些用天马行空的话大讲道理的书，读了几章就读不下去了。书中充斥着来自于其他地方的段子、典故，都为了说明他的某个观点，像是以前在学校写议论文作文一样。更像是杂文，不能当做职场指导书。", "marks": "较差"}
{"content": "嗯，这是一本我还在做物流的时候读的书，可以说书中的观点对项目经理的角色，和职场的转型讲解的非常到位。", "marks": "推荐"}
{"content": "写了十几年代码，出路究竟在哪里？难道真的要去卖水果吗？项目管理为什么对有些人如此艰难，有些人却能举重若轻呢？看了作者西西吹雪的系列博文，我才豁然开朗，让我重新找到了自信和方向。其实项目管理一点也不神秘，它就是一种做法的方法而已，作者在书中，将程序员的成长、项目管理、为人处事、个人内在修炼这些内容融为一体，让我受益非浅！", "marks": "力荐"}
{"content": "基本是了解性的内容", "marks": "还行"}
{"content": "3.5", "marks": "还行"}
{"content": "真是适合我这种菜鸟的轻量级入门作品……", "marks": "推荐"}
{"content": "理论很浅显，作为用R的ML教程还是值得一读", "marks": "推荐"}
{"content": "看了这本书就知道为什么用R来快速实现模型是最容易的了——因为就是加载个包的事……", "marks": "推荐"}
{"content": "its worth reading many many more times", "marks": "推荐"}
{"content": "轻量级菜鸟入门用，适合调包侠和调参师", "marks": "推荐"}
{"content": "可以读，用r培养machine learning的感性认识。回头应该仔细读读涉及更多算法和数学的书\n\n", "marks": "还行"}
{"content": "最好看的章节是第十章evaluating model performance和第十一章Improving model performance。每一个章节的套路是：概述的理论+翔实的实战代码分析+想办法提高模型的表现。", "marks": "推荐"}
{"content": "教你学名词系列", "marks": "推荐"}
{"content": "作者的文笔很朴实，写得也比较浅显。关于几个基本算法的比较，evaluation讲得比较好，对于像我这样的初学者来说，还是受益匪浅的。", "marks": "推荐"}
{"content": "从原理介绍包括决策树、神经网络等多种基础算法及其优缺点，并运用相关R语言包进行实战，最后还有两章专门介绍模型Performance的评估与优化，简单易懂。PS: 这本是从Level Up Your Machine Learning一文中了解到的ML入门级推荐书籍，果然不错", "marks": "力荐"}
{"content": "第一本入门书", "marks": "推荐"}
{"content": "略读scala部分。适合我这样的菜鸟", "marks": "还行"}
{"content": "对一些常见模式在scala和clojure实现上的差别进行演示，蛮好的一本书", "marks": "推荐"}
{"content": "boring", "marks": "较差"}
{"content": "This book shows why you shouldn't use Scala.", "marks": "推荐"}
{"content": "这书接地气", "marks": "力荐"}
{"content": "AOSA 又出新书了", "marks": "还行"}
{"content": "其中的很多理念和做法深有同感，只是对于非谷歌人士来说，以参考为主，切不可鲁莽行事。谷歌可以达到目前这样的状态，也是经过了很多人的努力和争取，而且其中的很多做法也都是跟谷歌业务的特点息息相关的，例如，并不是所有公司的产品都是围绕着Web或者同一种技术进行开发的，那么在测试平台和测试方式的选择上就会有很多的限制。", "marks": "推荐"}
{"content": "互联网企业的测试方法和传统软件业相似处很少。各种访谈占了不少篇幅，还比较有趣。给我的感觉是，google试图通过小团队各自为战来维持初创企业的进取心和活力，避免大公司的体制僵化，效果如何还要经过时间来验证", "marks": "推荐"}
{"content": "看完了 ，Patrick Copeland的序(建议最后看)太真实太精彩，加星。太难了，从负贰开始比从零开始更难。成功的关键都是\"人\"。", "marks": "力荐"}
{"content": "google还是走在前面的", "marks": "力荐"}
{"content": "大概只有谷歌可以做到", "marks": "推荐"}
{"content": "给一颗星的原因是，翻译真的是差劲到死，看不下去了。", "marks": "很差"}
{"content": "了解下大公司的测试工程是怎么做的~~#公司福利#", "marks": "推荐"}
{"content": "买回来速读了遍，技术要求太高，代码质量类与产品离得有点远了吧", "marks": "还行"}
{"content": "Google EP 项目组成员访谈录", "marks": "还行"}
{"content": "从对待测试的思维与定位而言，对很多企业的测试团队组建是很有帮助的。", "marks": "推荐"}
{"content": "ACC，attribute，component，capability", "marks": "推荐"}
{"content": "扯淡居多", "marks": "还行"}
{"content": "测试更多的是一种开发过程中为确保质量，而采取的组织执行方法，和代码开发耦合很紧密。具体的问题要具体分析。不同的程序类型，项目进程中的不同阶段方法均不同。比看那些有着腐烂味道的测试理论书籍强多了！", "marks": "推荐"}
{"content": "道行太浅，用心修炼", "marks": "推荐"}
{"content": "没想象中牛逼，测试是一个综合性较强的工作", "marks": "推荐"}
{"content": "测试通过工具来保证，工具通过企业文化来催生，文化又通过工具来传播。周而复始，终得质量！", "marks": "推荐"}
{"content": "感觉能借鉴的东西很少", "marks": "很差"}
{"content": "好书。回头抽空写评论", "marks": "力荐"}
{"content": "这本书详细介绍了Google如何测试软件——包括Google的软件测试流程以及Google软件测试工程师的日常工作/职业发展。需要注意的是：这本书中的测试流程在国内很可能行不通（国内企业缺乏像Google那般强大的基础设施（Infrastructure）），但它至少可以让国内企业有一个可以效仿的目标", "marks": "力荐"}
{"content": "进行测试开发，重视测试的流程化", "marks": "推荐"}
{"content": "第一，二，四章写得很精彩，可惜后面差强人意，估计换了其他作者写的。google是每一个软件工程师向往的地方，这本书介绍了google的自动化测试以及怎样用很少的测试工程师却能保证高的软件质量和接近于创业公司的新品发布速度。很多开眼界的地方，值得一读。", "marks": "推荐"}
{"content": "不只是测试，还有工程师文化的建设。", "marks": "推荐"}
{"content": "Good!", "marks": "推荐"}
{"content": "Google大法好！", "marks": "推荐"}
{"content": "实际帮助不大", "marks": "较差"}
{"content": "全书还是没有脱离博客集合的味道，前一百页是精华，很受启发。他们遇到的问题和我们一样，他们解决问题的方式值得我们身体力行。转变思路，尝试践行。", "marks": "力荐"}
{"content": "作为编程行业的翘楚，谷歌的软件测试可谓业界工程典范。从无到有搭建测试平台。强烈建议开发工程师也阅读本书，从另一个环节来考量软件工程。毕竟软件质量真的不仅仅是测试工程师的责任。", "marks": "推荐"}
{"content": "别拦我，中文翻译在哪里。真的是让人有很多新思路的书", "marks": "推荐"}
{"content": "心向往之。很强的参考意义，对大多数公司来说很难做到，但点点滴滴还是能够靠近的。", "marks": "力荐"}
{"content": "看产品吧，毕竟谷歌的软件产品有他自身的特点，适合这种测试方式方法~", "marks": "还行"}
{"content": "第二次阅读，随着自己对测试行业的了解越深，这次阅读的收获更大。第一次阅读的时候读到一半都没懂。现在看完才更加清晰测试的定义", "marks": "力荐"}
{"content": "看完觉得还是挺有帮助的，看看业内先进人士在做什么，而我们又在做什么，差距不仅在技术上，更多的是在意识上。", "marks": "力荐"}
{"content": "公司的测试之道其实是根据公司整体的研发实际慢慢形成的，不会凭空产生。", "marks": "力荐"}
{"content": "工作内容及工作的重要性重复了不少次，具体的一些工具，操作方式没有细讲。作为了解google有哪些测试人员结构配置，岗位内容 的科普书籍倒是还可以", "marks": "还行"}
{"content": "再多一些实践的内容就好了", "marks": "推荐"}
{"content": "介绍了谷歌内部测试流程分类等", "marks": "推荐"}
{"content": "开阔眼界的一本书。如果测试真能达到谷歌说的境界，真是很有意思的事情。 14.07", "marks": "力荐"}
{"content": "这本还不错，会让人有些不一样的想法，只是落地应该挺不容易。", "marks": "力荐"}
{"content": "这本书的视角相当高，高到没几家公司学得起，但又是满满的干货。测试成熟度、几种分类法、ACC模型、几个工具的设计思路、测试人员的定位和关注点、不同项目的高层对测试的理念都很棒，值得之后再看一次，仔细归纳整理能落地的点", "marks": "力荐"}
{"content": "几个月时间，总算看完了，然而发现，很多技术已经过时了，很多思想已经听说过了，所以呀，买书要趁早，这本书也是一本不错的书。代码部分需要学学才能看懂吧，努力吧，有空咯应该从头再撸一遍。。。", "marks": "推荐"}
{"content": "Google的软件测试之道，参考意义首先跟之前看的一篇文章一样，互联网并不缺前端，也不缺测试，我们真正缺少的是工程师思维，是创造性的提出和解决问题的想象力，站在用户角度思考的产品的能力", "marks": "推荐"}
{"content": "不错。", "marks": "还行"}
{"content": "将自动化做到，力争克服”人类智慧的最后一英寸“这也是Google的设计理念与目标，也正是正在构建之中的下一代测试工具的努力方向", "marks": "推荐"}
{"content": "翻墙不容易的年代有这样一本书全面了解谷歌的测试体系和工作方法，简直不要再好了\n干货满满，收获也是很多的，测试必看的书籍", "marks": "力荐"}
{"content": "介绍了Google的测试，开开眼界。不过薄薄一本书貌似不值这个价格。", "marks": "还行"}
{"content": "这是这个迭代敏捷的测试方法，测试也可以是一个高技术的工作，而非没深度的点击而已。", "marks": "推荐"}
{"content": "不错！google的一帮天才！", "marks": "推荐"}
{"content": "本书有两点核心。一是角色（SWE,SET,TE，最终是开发测试极度融合，相互辅助前行），二是ACC理念。（A,C）坐标定义的区域，有两个输出，一个是C(能力，就是test plan)，一个是风险热图（risk heat map）。测试的出发和落脚点是A(attribute)，也是本书提到的，不懂产品的人，根本无法真正的进行测试。", "marks": "推荐"}
{"content": "很有收获.", "marks": "推荐"}
{"content": "关于精简的想法很好，流程上也有所得。其余有限。新人开拓视野还不错。", "marks": "推荐"}
{"content": "收获很多。对自身的工作内容和职业发展有着很好的借鉴意义", "marks": "力荐"}
{"content": "对于正践行着敏捷测试的团队来说，这本书再好不过。没有乏味的教条，本书充满了在敏捷思想下为解决实际问题而磨砺出的种种因地制宜循序渐进的测试开发实践。经常的会心一笑证明我们的敏捷测试是走在了正确的道路上。但伟大的公司之所以伟大，也许不在他们的流程比我们先进多少，不在他们的工具比我们先进多少，而在人才的筛选和对技术的尊崇。这是我们难以学到的。五星推荐给团队（both dev and test）。", "marks": "力荐"}
{"content": "虽然实用性不强，但google的测试理念还是为测试发展指明了一个方向。", "marks": "推荐"}
{"content": "感叹于google的专业性，测试开发。", "marks": "推荐"}
{"content": "为测试正身。测试是一件重要且非常有意义的活。", "marks": "力荐"}
{"content": "对测试方法讲的不多", "marks": "还行"}
{"content": "书里面的一些想法及工具非常实用，可以在工作中结合起来；值得推荐该书！", "marks": "推荐"}
{"content": "这本书写的非常好，没有得到8分以上太可惜了。真正在做产品、做测试的人才能明白文章说的很多方法。", "marks": "力荐"}
{"content": "如果谁在告诉我google没有专职的软件测试人员，我真的会一板砖拍死他的......Bite、QualituBot、RPF、Google Test Analytics这几个工具有空可以尝试下，感觉很不错的样子。\nSET、SWT、ET\n测试人员能尽早的能介入到开发流程中去，但不是通过“质量模型”和“测试计划”的方式。\n\n测试是应用产品的另外一个功能，而SET就是这个功能的负责人\n\n小型测试——通常指单元测试。外部服务必须通过mock或者fake实现\n中型测试——外部指的集成测试，模块应用之间的交互，也类似于接口测试\n大型测试——为了验证整个系统作为一个整体是如何工作的\n70/20/10原则，70小型，20中型，10大型", "marks": "推荐"}
{"content": "cool~ 只有更先进的测试才能救大公司, 说的就是你: 微信", "marks": "力荐"}
{"content": "提出了测试的重要性，都是故事，挺精彩且有启发的故事。", "marks": "推荐"}
{"content": "前言一大堆的高评价+序言的高调的自述，\n却对不住本书切实关于测试精髓承载，里面关于测试的论述像是迷失的帆船永远靠不了岸，永远毫无方向的乱转一气，没有切实到测试关键点上。所以，那些给了极高的评价与序言的同学，请问你们是如何迷乱的海洋上找到了靠岸的方向啊。", "marks": "很差"}
{"content": "理念相同 但只有google做到了", "marks": "推荐"}
{"content": "google是如何进行开发产品的.. 以及一些访谈. 可能是预期太高,读时没达到预期的效果", "marks": "推荐"}
{"content": "这本书让我们学会了周五召开TGIF会议，我本人认为分享是一件很好的事情，但是感觉让团队分享成为一种习惯实在是有点力不从心，google的测试主要是交给单元测试，次要是系统自动化测试，全球最前沿的公司告诉你，不会开发的测试不是好程序员，目前中国在测试上举步不前。就行业感受来讲。", "marks": "力荐"}
{"content": "博客文章很久前就看过，这周末终于找到时间把全书快速浏览了一遍。我很想知道的是，如何才能驱动这样一场改变，如何才能成功的进行这个改变，如何才能在资源极有限的情况下让改变走起来？", "marks": "推荐"}
{"content": "在一个多月的上下班路途上，总算读完了这本超赞的书。google不愧是站在浪尖上的公司，2011年之前就能把测试做的这么赞。接下来就是总结的时间，开读第二遍~", "marks": "力荐"}
{"content": "和旧式测试差异很大的测试方法", "marks": "推荐"}
{"content": "前面几章有些干货，后面的就是采访，意义不大", "marks": "推荐"}
{"content": "测试这么多年第一次看这种专业书籍😂。读完，收获颇多，就是最近读书速度变慢了，一个月才看完一本，需要加速了！", "marks": "力荐"}
{"content": "开发人员和测试人员都值得一读的书。讲述了Google内部是如何对自己的产品做测试的，从专职的测试人员关注产品质量，到全团队关注产品质量的过渡；测试人员在Google负责不同的事宜，负责产品测试、将测试自动化、让测试更方便、培养所有角色的质量意识，到最后开发测试人员完全并入开发团队，利用技术手段将测试人员解放出来，开始转型，做更高level的考量，专注多个产品的测试计划和策略的制定、修正以及更多考虑用户体验。无论是敏捷还是持续交付，所有这些热门概念倡导的理念，都能在这本书里看到，并且在Google内部有了很不错的实践，虽然一字未提敏捷和持续交付。", "marks": "力荐"}
{"content": "细读与泛读所看到的区别太大", "marks": "推荐"}
{"content": "非常好的一本书。对于测试人才，职责，各项测试任务的理解边界划分都很不错，非常值得参考。", "marks": "推荐"}
{"content": "一直印象中测试都挺低级的，看了这个书才对测试有了更深入的认识，当然，依然不是对国内的测试这么看。", "marks": "推荐"}
{"content": "相当具有启示意义。", "marks": "力荐"}
{"content": "除了测试专家或者测试管理，测试开发适合转开发，测试适合转产品，其实测试的前途和钱途远比开发要宽广，前提是资质差不多的人。现实是很多资质不错的都想做开发，不愿做测试，这是误区！开发岗位适合那些一心走技术路线的人！", "marks": "推荐"}
{"content": "评分虚高，书名和目录都是标题党，没想象中的好，书价格也略贵，不值", "marks": "很差"}
{"content": "慢慢读慢慢写读书笔记 看到50页的最大感受就是好想去这样的公司工作，不给工资都行啊。  70/20/10原则很有用，我们现在做的测试不过集中在那10中，也没把代码覆盖率考虑进来，好弱。", "marks": "力荐"}
{"content": "总体来说 一般般 \n里面的理念我很欣赏，让开发更多的参与测试当中，这样质量才会有显著提高。\n里面还提到了测试开发工程师，大概知道做什么的，但具体还是不太清楚，回头还得看一遍。\n还有里面提到了测试工具 但很不详细 而且有些已经停止升级了 比如：BITE\n总之是把吊足了胃口 然后非常失望", "marks": "还行"}
{"content": "高屋建瓴 先码一下 再分享读后感", "marks": "推荐"}
{"content": "感觉非常不错，有一定难度，不适合初学者。", "marks": "力荐"}
{"content": "acc～te面试题的发散思维～web工具介绍～", "marks": "还行"}
{"content": "从多个维度分析了Google的测试是如何进行的，及一些问题是如何处理的。\nGoogle内部的测试团队是如何协调工作。", "marks": "推荐"}
{"content": "好玩。", "marks": "推荐"}
{"content": "挺不错的，介绍了一些TSP的前沿，可惜前后有些脱节", "marks": "推荐"}
{"content": " 奇特的一本算法考古书，野史和干货穿插在一起，个别章节难度陡增。", "marks": "推荐"}
{"content": "妞妞赠书2！很好的科普书咯，作为一个经典NPC问题，若能找到一个“好”的算法，“足以使整个互联网变成历史上微不足道的注脚”。", "marks": "推荐"}
{"content": "有点专业……", "marks": "还行"}
{"content": "#大龄男青年好好学算数系列#", "marks": "推荐"}
{"content": "dang yuan biao shi zhe ben shu bu cuo de.", "marks": "推荐"}
{"content": "想到数学家被这道难题逼到想用时间机器来解决就想笑。业内专家写的科普，我是很多地方看不懂。", "marks": "推荐"}
{"content": "e", "marks": "较差"}
{"content": "看的好困，科普书方法介绍了不少，以为科普所以不能深入，因为不能深入，所以读起来总是缺点什么", "marks": "还行"}
{"content": "以精炼的篇幅钩沉丰富的信息，算不上深入易懂，只能是浮游揽胜、看看热闹，不时碰到自己熟知的东西温馨一下，其余在概念术语堆中长长见识", "marks": "推荐"}
{"content": "NP", "marks": "力荐"}
{"content": "我每次回家或者出行都要先计算好路线，找到接近最优的路线。", "marks": "推荐"}
{"content": "梳理历史多于数学干货。", "marks": "还行"}
{"content": "小问题，大智慧", "marks": "力荐"}
{"content": "中学生科普读物。但是对于中学生来说，这书定价高了。", "marks": "还行"}
{"content": "科普大规模问题解法", "marks": "还行"}
{"content": "前面很好看，可是从线性规划那一章开始就感觉看的好辛苦，最后也就随便看看匆匆看完了_(:з)∠)_", "marks": "还行"}
{"content": "很值得思考的一个问题", "marks": "力荐"}
{"content": "每次看到这种NP完全问题的时候，都会觉得人类实在是渺小，直觉上好像很简单的问题却被人们定义为无法解决；又觉得人类实在很伟大，在历史的长河中总能演化出无限逼近最正确的答案。", "marks": "力荐"}
{"content": "其实我努力试图在算法中读出人生哲理：贪心算法的局部最优解并不能代表全局最优解，就像我们生活中，眼前利益你都得到了，并不意味着这是使你人生利益最大化的选择，所以人生往往应该使用动态规划，年轻时多吃点苦、吃点亏，来寻找全局最优解。但贪心算法却具有时间优势，牺牲了精度换回了时间可行性，于是，我们可以选择这样一个短视的算法，暂时求解当下的人生。", "marks": "推荐"}
{"content": "翻译真蛋疼", "marks": "推荐"}
{"content": "看的时候才发现手上这本估计是印刷错误，少了147-162页，嘛，看目录也是好像看不懂的几节。如果能把蠹虫之惑做成电子游戏还挺好玩的吧，不过也只是想一下而已了。", "marks": "力荐"}
{"content": "科研之精神，循序渐进剖析TSP。", "marks": "推荐"}
{"content": "能看懂的都感谢算法课 T T 把问题和方法名提一遍并不能让人懂，各种八卦也无非能成为一些谈资。还是静下心去看教材上的干货，去思考吧。突然觉得科普没啥意思，只是让人有错误的获得知识的错觉，其实很浅薄，根本用不起上。", "marks": "较差"}
{"content": "The world is bulit by math.", "marks": "推荐"}
{"content": "很有意思的一本书，经典问题如果你不觉得经典，那么说明还没有到那个境界", "marks": "推荐"}
{"content": "旅行商问题是NP问题的典型代表，数学家们在其中付出的努力让人看到他们才是推动世界进步的动力。", "marks": "推荐"}
{"content": "对concorde的各种应用很感兴趣 ", "marks": "推荐"}
{"content": "很享受", "marks": "力荐"}
{"content": "我相信P与NP是不是相等并不是这个问题的本质。也许是我们看待问题的角度出现了偏差。某些深入的数学理念或者工具还没有真正的揭开面纱，好好学数学。", "marks": "推荐"}
{"content": "跪着看完了", "marks": "力荐"}
{"content": "算法问题。", "marks": "力荐"}
{"content": "TSP背后是P=NP问题。书中提到的算法都还蛮有趣的。线性规划+单纯形法已有很多行业实践。略知一二，不多做评论，有装逼嫌疑。 感兴趣的同学可以翻着看看。", "marks": "推荐"}
{"content": "学渣表示看着很有压力", "marks": "还行"}
{"content": "感觉亲眼历证了算法工程师们一代一代哪怕把TSP（以及其他）算法优化一点点儿都要付出千辛万苦...很有趣的一本结合了TSP的历史和各种优化、应用的书...", "marks": "推荐"}
{"content": "tsp问题", "marks": "力荐"}
{"content": "作为科普来读还是很好的，可以相对直观的了解旅行商问题和相关算法的发展情况。同时也要做好为自己的智商捉急的心理准备。。。", "marks": "力荐"}
{"content": "TSP", "marks": "推荐"}
{"content": "TSP:它的源流、应用、计算方法和影响。", "marks": "推荐"}
{"content": "这本书很详实的解释了TSP的问题及其研究的历史，但是我读完觉得书中花了大量篇幅进行复杂的算法介绍但却没有解释算法涉及到的一些重要概念，这对于一本科普性质的书来说是严重的问题，而且脚注过于简单，没有提供更广的外延知识。", "marks": "还行"}
{"content": "恰到好处的算法入门. 以旅行商问题为背景, 作者深入浅出地介绍了算法在实际问题中的应用, 比只讲理论的课本丰富太多.", "marks": "推荐"}
{"content": "小朋友今天终于退烧了，立刻恢复了往日的活力，各种爬，各种站，各种嚎，所有的柜子都要打开视察一遍，所有的水盆都要把手放进去搅和一下。我把象棋装到盒子里，他全倒出来，我装进去，他倒出了，反复了10几次，我终于体力不支，败下阵来。", "marks": "推荐"}
{"content": "由经典的TSP问题，层层深入，问题规模不断扩大，从周游几十个城市的最短路线到周游世界所有城市的最短路线，给出了关于解决TSP问题的许多先进算法，以及TSP问题在现实中的应用。\r\n\r\n", "marks": "推荐"}
{"content": "NP问题真是个天坑。。。", "marks": "推荐"}
{"content": "前几章真精彩，干货十足！后面几章有些野路子乃至神棍！什么通过大猩猩拿香蕉来求解，真是2333！", "marks": "推荐"}
{"content": "总的来说还是挺不错的，数学总是能领先于这个时代~", "marks": "推荐"}
{"content": "记述了各种类型的TSP问题。彩色书。", "marks": "推荐"}
{"content": "行业的深处都是各种高深的数学", "marks": "推荐"}
{"content": "浅显易懂有趣", "marks": "推荐"}
{"content": "各种涨姿势，学过算法，表示感觉很很有趣。", "marks": "力荐"}
{"content": "从历史角度给我们介绍了整个旅行商问题的发展和如何一步步去解决这些问题。很值得读一遍。", "marks": "推荐"}
{"content": "其实就是数学书。。。", "marks": "还行"}
{"content": "超棒", "marks": "力荐"}
{"content": "很多地方讲得并不清楚、详细", "marks": "较差"}
{"content": "旅行商问题的历史娓娓道来，各种解决方法讲的通俗易懂，看完后获得很多启发", "marks": "力荐"}
{"content": "牛逼", "marks": "推荐"}
{"content": "科普读物，不错。算法细节基本没有。以此为基础读paper可能会好点。翻译值得表扬，书价略贵。", "marks": "力荐"}
{"content": "经典的旅行商问题，关于P/NP问题方面的书不多，这本书读起来挺有趣的", "marks": "力荐"}
{"content": "倾情推荐的算法书，很深，很值得研究，TSP问题", "marks": "力荐"}
{"content": "挺不错的，但是这个真的不是指导你一点一点去学习C语法的书，而是更加像对初学者的旅游指南。你要去一个陌生的地方吧，旅游指南告诉你一些注意事项和前人感悟，提醒你到了的话注意某个可能出现的重要指示，但是永远不会告诉你具体的景色如何。所以这本书是一本不错的旅游指南而不是那种炒菜菜谱。但是就旅游指南这个用途而言作者写作的非常好。很多细节要点都有非常好的讲解，适合初学者特别是你对计算机一无所知的初学者。", "marks": "力荐"}
{"content": "还行，一般看C语言我就看看指针部分，并没有看出有什么过人之处。", "marks": "还行"}
{"content": "额，大话C语言的感觉...", "marks": "推荐"}
{"content": "科普读物。", "marks": "还行"}
{"content": "还不错，学到很多东西。", "marks": "推荐"}
{"content": "的确作者的语言轻松幽默，但是很多见解并不负责。", "marks": "很差"}
{"content": "轻松幽默，又有收获。", "marks": "推荐"}
{"content": "废话太多太多太多太多，既然是c语言点滴，就专门讲c语言就行了，前面20%的内容可以删掉。另外，有些叙述是错误的，希望作者能用心核查一下。。", "marks": "还行"}
{"content": "喜欢有温度的东西", "marks": "力荐"}
{"content": "幽默诙谐的一本C语言著作。", "marks": "力荐"}
{"content": "我觉得当作闲书看看来回顾下C里面的重要概念还是不错的，不过，我感觉，关于函数指针和复杂声明，说的并不容易懂。", "marks": "还行"}
{"content": "语言风趣幽默，让人莞尔，对于c开发者，或者编程进阶者有参考价值，书中作者不仅研究c的高级用法，还不忘将各部分的传世经典作品推荐给读者，赞", "marks": "推荐"}
{"content": "比较失望，内容一些重点都没说，让自己去看<C和指针><C陷阱与缺陷>，但是书中内容又大多是这些书里面的，本来是冲着后面的调试和进阶买的，结果看了感觉根本没说什么有用的……", "marks": "较差"}
{"content": "在图书馆读的，内容不算深入，记得里面还有面试技巧什么的，娓娓道来，国人书中算是不错的了", "marks": "推荐"}
{"content": "此书才7.1分，很是不爽", "marks": "力荐"}
{"content": "文风还算幽默，适合参考闲时读读巩固，入门及精通应该不适合。", "marks": "推荐"}
{"content": "“有机械者必有机事，有机事必有哲心”", "marks": "力荐"}
{"content": "终于可以标读过了……虽然打了五星但是我觉得还是有诸多问题的，在一些章节的私货上面。", "marks": "力荐"}
{"content": "从哲学史的角度看，哲学与科学之间的沟通和对话，一直是西方哲学的光荣传统。但就当下的中国哲学界而言，则过分偏重于文献研究，而较少与科学有所关涉。徐英瑾的《心智、语言和机器——维特根斯坦哲学和人工智能科学的对话》一书，对人工智能实践中的许多问题，进行积极的哲学反思，并尝试为强AI提供辩护。", "marks": "推荐"}
{"content": "完美（除了封底折页照片上的蓝色镜框", "marks": "力荐"}
{"content": "学哲学的一定会觉得很有收获，但是工科拿到手上无从下手 反而被过于丰富的思路搅晕。\n只是走到了 维特根斯坦，其实还能走到 存在主义、后现代、甚至借鉴艺术领域。", "marks": "力荐"}
{"content": "徐老师，加油！！！我是第十个人   *-*", "marks": "力荐"}
{"content": "后编写的太不走心", "marks": "还行"}
{"content": "编程是研究如何将相关关系转化为函数关系的过程", "marks": "力荐"}
{"content": "【电子书】书的前半部分主要是C语言一些生僻易错的知识讲解，9-12章主要是进程，线程，网络等C语言高级编程技巧的讲解。用具体的实例讲解C语言编程中的一些具体关键性的知识，例如typedef同名类型指针定义，static变量/函数，scanf函数的缓冲区溢出，字符串处理函数等知识\n。这本书可以用于C语言进阶学习，对于进程、网络等高级编程知识也是一本较好的参考书。", "marks": "推荐"}
{"content": "确实觉得是一本入门的好书呀…虽然看起来比较厚，但其实都是图片，在工作日翻起来也就一周左右的功夫", "marks": "推荐"}
{"content": "很有趣，喜欢这种能写能划的书", "marks": "力荐"}
{"content": "虽然翻译的名字挺恶俗, 但是作为入门书, 简直没有更好.", "marks": "推荐"}
{"content": "典型的教程书，对新手友好在于不局限于语法，提出问题解释然后让你解，不友好在于跟着教程走如果没有其他语言的经验，容易知其然不知其所以然，跟着教程走是第一步，能够自己翻手册解决问题才是真正入门的开始。本书涉及的网络编程、进程、线程只能说是浅尝辄止了，各大标准库也不是书中介绍的主要对象，看完了对怎么操作字符串都还是没什么概念，还是要翻文档来看。在翻C语言文档发现很多函数就是系统调用，直接和计算机底层连接如此紧密，这才是难点所在。", "marks": "推荐"}
{"content": "自学最佳", "marks": "力荐"}
{"content": "挺不错的书，通俗", "marks": "推荐"}
{"content": "第9章后的进阶都没看", "marks": "力荐"}
{"content": "写的很有趣，可是到第九章开始就看不太懂略过了，大概知道有什么而已", "marks": "力荐"}
{"content": "风格不错，知识翔实，很不错。", "marks": "力荐"}
{"content": "适合有编程基础的队友看", "marks": "力荐"}
{"content": "有吃锅包肉的赶脚", "marks": "力荐"}
{"content": "浅显易懂，非常适合新手入门。", "marks": "力荐"}
{"content": "通俗易懂，而且涉及的知识点很多，非常适合入门学习。", "marks": "力荐"}
{"content": "如果要学 一定要学精", "marks": "推荐"}
{"content": "深入浅出", "marks": "力荐"}
{"content": "生动有趣。", "marks": "力荐"}
{"content": "20150901 --> 20150915\n让我重新认识了C语言，当年大一要是看到这本书，那我一定会爱上C语言。\np.s. 推荐所有C语言学习者阅读，特别是那些学习过C语言，但还是爱不上她的人阅读。", "marks": "力荐"}
{"content": "通过简单的例子讲解知识点，通俗易懂，入门很好的书籍。\n附上课后习题的源码方便后来者：\nhttps://github.com/dogriffiths/HeadFirstC", "marks": "力荐"}
{"content": "一贯的HeadFirst！涉及到很多别的书不会涉及的方面，但确实广而不深，特别是遇到c-puzzles之后，慢慢磨《The C Programming Language》吧！", "marks": "推荐"}
{"content": "这书太棒了。。。", "marks": "力荐"}
{"content": "涉及到了 C 语言底层原理的一些内容，覆盖面不广但是都是重点需要掌握的知识点。适合有一定 C 基础但是没有系统学习的小伙伴阅读。", "marks": "推荐"}
{"content": "感觉以前学的C语言太基本了，没讲一点重点啊！", "marks": "力荐"}
{"content": "找到了小时候看书的感觉，非常棒", "marks": "力荐"}
{"content": "入门看挺好的", "marks": "力荐"}
{"content": "C语言进阶看这个没错的。", "marks": "力荐"}
{"content": "这中二的书名，印着杀马特的封面，尴尬的配图对话，怕被人误会在看儿童读物的羞耻感。。并不影响这本书给我的许多启发，确实是极好的入门书籍。", "marks": "力荐"}
{"content": "通过漫画形式展现编程，通俗易懂有趣，适合初学C语言的人。", "marks": "力荐"}
{"content": "挺不错的入门书", "marks": "力荐"}
{"content": "一般般吧，入门可以，但不全面。", "marks": "还行"}
{"content": "最好的地方在于为了解决问题而引入概念 启发式教学 不错  而不是生硬的列概念  读此书的最大的收获不是里面教的知识  作为SE的大四学生这些知识早都知道了  就是想欣赏下作者 的写书思路   貌似这样的书可以是以后选书的标准  ", "marks": "力荐"}
{"content": "如果只是针对中小学生还是可以的。", "marks": "还行"}
{"content": "隔壁家WHU啊哈磊写的书，把很多女生害怕的课程写得充满萌点~", "marks": "推荐"}
{"content": "给小孩子买的。据说语言风趣，但我只是扫下书的结构和例子。例子有趣，如水仙花数、哥德巴赫猜想，以及迷宫游戏。内容其实不多，重点讲数据类型、if, else, for, 数组。没有谈指针，也没有谈读取文件。算是从零开始的不错的入门书。", "marks": "推荐"}
{"content": "的确是很适合入门，只是没讲指针", "marks": "推荐"}
{"content": "2015.10.03.这应该是一本非常适合小学生C语言入门的教材。生动有趣，讲解清晰，循序渐进，案例丰富。不知道另一本《啊哈，算法》如何", "marks": "力荐"}
{"content": "确实很适合小白读。作为第一本C语言的书是挺好的。", "marks": "力荐"}
{"content": "看到了第四章，还行，简单易懂。仿佛回到了大二的时候", "marks": "还行"}
{"content": "强烈推荐给零基础的编程爱好者们，浅显易懂，配合作者自开发软件，能够练习。寓教于乐，其乐无穷啊。", "marks": "推荐"}
{"content": "最头疼的符号不怕不怕啦", "marks": "力荐"}
{"content": "编译器太差了", "marks": "较差"}
{"content": "不错的入门书。", "marks": "力荐"}
{"content": "过于简单？提供的编译器有点奇怪", "marks": "还行"}
{"content": "感觉像是for fun而for fun，如果对比一下Charles Petzold的《Code》~", "marks": "还行"}
{"content": "C语言自学 Day 3, 好开心！！每天跑完步看一小时的C语言。三天结束了这本超级有爱的入门书！！强烈推荐！", "marks": "力荐"}
{"content": "在跟程序员聊天的时候多了一点自信，除此之外没卵用了", "marks": "力荐"}
{"content": "我完全没有基础，看这书一边学一边做的，觉得很有意思。看到最后几页，说“有一些二三年级的小学生问我”……瞬间觉得受到了暴击……", "marks": "力荐"}
{"content": "挺有意思", "marks": "还行"}
{"content": "入门好帮手", "marks": "推荐"}
{"content": "c语言科普入门书，生动", "marks": "还行"}
{"content": "未完整版，嘿嘿。", "marks": "还行"}
{"content": "很适合初学者，适合的书就是最好的书！！！", "marks": "力荐"}
{"content": "给没学过C语言的人看看，唯一的亮点感觉就是相比其他的教材而言，读起来轻松一点而已。至于内容，到倒没有什么值得看的。", "marks": "还行"}
{"content": "这个挺好玩的", "marks": "推荐"}
{"content": "小学生信息学竞赛用这本做教材挺好，对没有搞懂编程的人来讲，降低阅读难度也很有必要，还有就是配图不错。", "marks": "推荐"}
{"content": "重新捡C语言，然后就翻了本给小学生看的书……大概小孩子会喜欢这样的教法吧，我还是滚回去看写给大人的书吧。", "marks": "还行"}
{"content": "我认同乔帮主说不管什么人都应该学编程，至少懂编程思维。分析，解构，重组，循环，建模。后来的所谓分析理论其实都是从人类思维总结归纳出来的。而编程是将归纳的精华让机器去重复海量的学习，帮我们分析归纳。可以说编程思维是最实用的人类思维精华。只不过是抽象而已。", "marks": "推荐"}
{"content": "之前看过作者的前三章的电子书，很有意思，从小朋友的角度和立场来讲，读起来一点都不费劲，跟同类的书籍比起来，通俗易懂，生动有趣。期待完整版本已久，终于来了。", "marks": "力荐"}
{"content": "挺好的 看了一下 给我表弟了～对于入门啥的 还真适合小学生", "marks": "推荐"}
{"content": "高一的时候看的pdf入门，内容太浅，但是对于noip的c已经足够", "marks": "推荐"}
{"content": "原来编程这么有趣，第一本教材选对了～", "marks": "推荐"}
{"content": "初学编程要是看的这本书就好了", "marks": "力荐"}
{"content": "c语言入门", "marks": "还行"}
{"content": "啰嗦得没道理", "marks": "较差"}
{"content": "趣味性非常强的入门书", "marks": "力荐"}
{"content": "适合小孩子做编程入门读物", "marks": "还行"}
{"content": "适合初学者，建议把书中的例子敲一遍，有助于加深记忆。", "marks": "力荐"}
{"content": "超棒，入门神书，用小学生的思维讲述了编程的思想。入门推荐", "marks": "力荐"}
{"content": "很浅显易懂，对像我这种刚入门的人来说很有帮助。豆瓣有电子书吗？", "marks": "力荐"}
{"content": "很给力，必须支持。终于等来完整版了。我都等了1年了。", "marks": "力荐"}
{"content": "入门很好，问题很风趣", "marks": "力荐"}
{"content": "非常有趣", "marks": "力荐"}
{"content": "这本书太棒了，非常简单易懂，作者的表述也很意思，非常有趣，比喻太好了", "marks": "力荐"}
{"content": "灰常好", "marks": "力荐"}
{"content": "很赞！", "marks": "力荐"}
{"content": "适合于完全编程零基础的人看看，内容很浅，当是熟悉下基本语法和编程思维", "marks": "推荐"}
{"content": "入门强烈推荐。我这个对语言学习一窍不通的人看了，都觉得有戏，好好看看，争取小补一下。。。。", "marks": "力荐"}
{"content": "非常非常通俗的C语言读物，文字轻松不枯燥，能调动继续下去的兴趣，超赞！！！ ", "marks": "力荐"}
{"content": "c入门书籍，比谭浩强的书不知道高到哪里去了。大二回头看再看这本书，比较适合非计算机专业阅读。计算机专业读一遍后可能就扔在一边落灰了。", "marks": "推荐"}
{"content": "儿子在自学喔😊", "marks": "力荐"}
{"content": "小伙伴们，终于来了", "marks": "力荐"}
{"content": "很给力的书！", "marks": "力荐"}
{"content": "入门强烈推荐", "marks": "力荐"}
{"content": "面试必备。", "marks": "力荐"}
{"content": "一般。不过对于新人还是有点帮助的", "marks": "还行"}
{"content": "还可以吧，不过要先把书上基础搞定才看得了", "marks": "推荐"}
{"content": "谈不上面试宝典，里面的题基本都是讲笔试的，而且答案很糙，题目感觉也是从题库里扒来的。不推荐", "marks": "较差"}
{"content": "看了几本这样的书，发现面试的地方题几乎都是这里面出来的，看来我来面试的几个公司档次不够啊。里面很粗浅的讲了一下程序员容易遇到的问题和坑，还是很推荐的。", "marks": "力荐"}
{"content": "就这个代码缩进看得我心跳紊乱", "marks": "很差"}
{"content": "决定要找实习才买的一本书，书中所涉及到的知识很广，但很不全面。不是一个很好的java书籍，但作为面试复习用还是很好的。", "marks": "推荐"}
{"content": "垃圾，好多错误", "marks": "很差"}
{"content": "这是我看到的最垃圾的书，没有办法忍受，书上到处是错误，谁能告诉我欧立奇的邮箱，这家伙也配出题！", "marks": "很差"}
{"content": "@2015.09.24 配着邓老师的课程一起学习，简直是一种享受。\n1.好多不错的图哈， 在具体和抽象之间拿捏不错。\n2.以问题始，以解答终，再引出新问题。很多书往往忽略了这一点。\n", "marks": "力荐"}
{"content": "物理存储和问题逻辑层次之间的架构。", "marks": "力荐"}
{"content": "数据结构是一门值得反复学习的课程，越是想编好程序，越是需要学好数据结构。这本书是国内还算不错的数据结构教材，写的很详细，图画的很好。", "marks": "推荐"}
{"content": "打星号的章节好难orz", "marks": "力荐"}
{"content": "读了这本书可说是没白学数据结构，电子系自己用的教材就是辣鸡好吗", "marks": "力荐"}
{"content": "好老师啊！！！", "marks": "力荐"}
{"content": "国内最好的数据结构书，受益良多。", "marks": "力荐"}
{"content": "言语无法表达我对这本书的爱乃至敬仰，建议配合邓俊辉老师的网课使用效果更佳，邓老师竟能把以前严蔚敏带给我的数据结构很枯燥无味的看法生生扭转，自从跟着他学了数据结构，我萌生了做大学老师的想法，所谓上课， 就是秀秀书法，赏赏诗句，像朋友间谈天一样侃侃算法，着实有趣", "marks": "力荐"}
{"content": "从2015年初开始跟着视频学数据结构，中间断断续续，但最后还是看完了。对于不是专门研究算法的同学来说，完全可以1.3倍快放视频，选做习题，重在理解概念，更多的用一些算法题来磨练自己，且学数据结构就得抽出大段空闲时间，视频一口气看完半章，这样效率才高，断断续续地学习就好比是反复切换进程，中间存在着上下文切换等各种损耗。上面这么多话是写给我自己的，注重学习的效率和目的性，加油！", "marks": "推荐"}
{"content": "配上邓老师的学堂在线课程更佳", "marks": "力荐"}
{"content": "教材主页：http://dsa.cs.tsinghua.edu.cn/~deng/dsacpp/ 无法打开，学堂在线OJ也无法打开网页...", "marks": "较差"}
{"content": "清华的好课！老师的教材和课程质量都非常高，课后的清华OJ刷得也格外开心，感谢学堂在线，感谢THU！", "marks": "力荐"}
{"content": "配合邓老师的课程效果很好，最好自己再动手打一遍代码！", "marks": "推荐"}
{"content": "用心之作", "marks": "力荐"}
{"content": "配合邓老师的公开课看，受益匪浅。不仅介绍算法的思想、实现，而且对于能够优化的细节都由详尽的考虑。", "marks": "力荐"}
{"content": "非常好的书.", "marks": "力荐"}
{"content": "国内最好", "marks": "力荐"}
{"content": "配合视频，风味更佳", "marks": "力荐"}
{"content": "五星推荐。非常棒的书\n", "marks": "力荐"}
{"content": "配合MOOC学不好数据结构都难", "marks": "力荐"}
{"content": "完美的体验，正在进阶中", "marks": "力荐"}
{"content": "邓老师可能是我在网络上遇到的最好的老师，清华名师范", "marks": "力荐"}
{"content": "感觉有点难", "marks": "推荐"}
{"content": "挺好的书 不知道为什么评分如此低", "marks": "力荐"}
{"content": "视频都刷过一遍 这本书算是看完了吧 里面讲数据结构讲的比较透 感觉是结合STL来讲的  唯一想说的就是自动化专业毕业的学生居然不学数据结构 还要自己补。。 哎", "marks": "力荐"}
{"content": "应该是国内最好的数据结构教材之一, 但前提你的c++得过关, 书中的代码有点像STL, 基本都是用模板实现的泛型.所以不太适合入门", "marks": "力荐"}
{"content": "配套老师的讲解 真的很棒的教材 简洁优美 还有一个月考研 给自己攒个人品 一定可以！", "marks": "力荐"}
{"content": "the best book about data structure", "marks": "力荐"}
{"content": "不可多得的中文版入门教材", "marks": "力荐"}
{"content": "配合MOOC的课程，学数据结构简直是高潮迭起，邓老师的倾心之作，大赞。", "marks": "力荐"}
{"content": "彩印的，厉害。\n这才叫基于C++语言的数据结构！", "marks": "力荐"}
{"content": "读了不少数据结构的书，邓老师这本我觉得质量是最好的，全彩印刷，配套的慕课，习题，网站。（老师的声音很有磁性）书的内容在难度和深度上的划分很合理。虽然某些地方有小小的纰漏，不过瑕不掩瑜。", "marks": "力荐"}
{"content": "Best slides.", "marks": "力荐"}
{"content": "好老师，好书，好教学视频。。。不给5星心里过不去", "marks": "力荐"}
{"content": "后面越看越失望…………", "marks": "较差"}
{"content": "神作！", "marks": "力荐"}
{"content": "代码太老 太多不work了", "marks": "还行"}
{"content": "被豆瓣友邻推荐的书，总算看完了。。。。", "marks": "力荐"}
{"content": "入门必备。Python写算法优势太明显了，唯一的缺陷就是速度太慢", "marks": "力荐"}
{"content": "从Python语言入手，掌握基本的数据结构的功能、实现方法和应用，了解熟悉常见的算法设计和策略思想。", "marks": "力荐"}
{"content": "图很多,不过代码不够pythonic", "marks": "推荐"}
{"content": "Python数据结构实现", "marks": "力荐"}
{"content": "挺不错的，就是读英文难免有点费力😌", "marks": "推荐"}
{"content": "Pretty good just for me", "marks": "推荐"}
{"content": "虽然书里的错误很多，例子罗嗦，但仍值得一看，看完对设计模式能说出来从哪到哪实现的了。不过，他举的例子可能只是众多实现方法中的一个，切莫拘泥于例子代码。", "marks": "还行"}
{"content": "又复习了一遍设计模式，看似简单，但还是需要多动手写才是王道啊。", "marks": "还行"}
{"content": "感谢作者能写的如此生动，连我这种厌恶编程的人也能喜欢上啊", "marks": "力荐"}
{"content": "很一般，写得简单易懂，初学者容易快速理解，但错误多", "marks": "还行"}
{"content": "best of the best for statistical graphic design.", "marks": "力荐"}
{"content": "大学好好学算法混混ACM的话，哪有后面这么多事，唉。", "marks": "力荐"}
{"content": "一个一个例子做过来，每天一道，每道题强制自己思考三十分钟，并且以写成代码告终", "marks": "力荐"}
{"content": "通过这本书，算法竞赛题我入门了。", "marks": "力荐"}
{"content": "代码精妙无比，值得反复研读", "marks": "力荐"}
{"content": "代码质量真好....", "marks": "力荐"}
{"content": "我已经过了写算法的年纪了……", "marks": "推荐"}
{"content": "强推 不解释", "marks": "力荐"}
{"content": "非常赞的书，如果能早读的话，ACM应该稳了", "marks": "力荐"}
{"content": "这本书竟然能到8.7？和黑书同样的狗屎，上不上下不下", "marks": "较差"}
{"content": "程序写的真好... ...", "marks": "力荐"}
{"content": "实实在在的", "marks": "力荐"}
{"content": "结果没想到还是重操旧业了...", "marks": "力荐"}
{"content": "擦，代码还挺多，周末看完啊", "marks": "力荐"}
{"content": "深入浅出，实践性强", "marks": "力荐"}
{"content": "复习下，初级篇很快就过，高级篇基本就是各种头疼了", "marks": "推荐"}
{"content": "从头到位读完了，很适合初学者，这个的提高还是一个慢功夫。", "marks": "力荐"}
{"content": "代码写的确实很精炼。。。\n但是我这个初学者感到有点力不从心。靠这个入门算法还是有点困难。\n觉得把初级篇看完就差不多了。", "marks": "力荐"}
{"content": "知识难度都很简单，但是可以从中学到一些解决问题的思想和一些优秀的代码风格，是一个很好的补充。", "marks": "推荐"}
{"content": "由于看的电子书，没办法验算，所以很多都没有读懂，继续努力吧。", "marks": "推荐"}
{"content": "比某大神的书语文好太多了。。", "marks": "力荐"}
{"content": "既有理论，又侧重实践，非常有利于学习算法。在DP这里有时候一道题想二三十分钟。。。感觉还有论述的余地。。。选一些问题写成博客吧。。认认真真读到100多页，然后发现真的蛮难，然后趁着休息时间仔细想了想做这个的价值所在。没错，算法很重要，但这样极端的ACM题目，非得都做好了才能去实际编码么？实际编码时难道就学不到吗？对，实际做的时候才学，会导致手忙脚乱而且没有学习方向，但这也不意味着全部学完了才能实际做。想想数学建模。ACM对目前的我来说，是加分项，不应该是主要的。完成该做的事，然后有足够的休息，再有空闲，则做做ACM或者其他的才是顺理成章。另外ACM要用的东西，在你真正的工作里也不是不使用。认真做手头的事，有价值的东西在过程中会出现的。", "marks": "力荐"}
{"content": "这本书是我看过acm的书中最好的一本。很多内容都讲得非常清楚，代码写得精简，可以直接作为模版使用，非常具有学习意义。", "marks": "力荐"}
{"content": "代码质量非常高，而且poj的习题也方便读者练习。。", "marks": "力荐"}
{"content": "不错啊，面面俱到，还有poj例题", "marks": "力荐"}
{"content": "《挑战程序设计竞赛》是一本很好的教科书。它非常适合作为有志参加程序设计竞赛的同学自学，或是正在学习数据结构与算法分析的读者作为练习和拓展的参考书。", "marks": "力荐"}
{"content": "各位大神的译作……", "marks": "力荐"}
{"content": "这本书绝对是参加ACM比赛的最佳入门书，只要这一本就够了，相见恨晚", "marks": "力荐"}
{"content": "深入浅出，很多地方总结分类的很好", "marks": "推荐"}
{"content": "没读完，还是挺不错的", "marks": "推荐"}
{"content": "狂人，怒日", "marks": "力荐"}
{"content": "ACM退役多年，该书算是很好的算法梳理工具，代码写的很漂亮，同时带来了很多新的思考。", "marks": "力荐"}
{"content": "日本人写的acm书籍，模板比较多~读过一部分", "marks": "推荐"}
{"content": "非常难啃的一本书，有些代码得花好几个小时才能看懂。。。不过这些精简巧妙的代码和算法常常让我感叹人类那非凡的聪明才智和伟大的创造力。", "marks": "力荐"}
{"content": "美好的回忆～", "marks": "力荐"}
{"content": "新晋最in“程序设计竞赛全解析”", "marks": "力荐"}
{"content": "挺不错的，书上的题目大多数都出自poj和google code jam，而且每一章后面都有提供一些poj相关题目进行实战练习", "marks": "力荐"}
{"content": "只恨没搞acm", "marks": "力荐"}
{"content": "由好几位target写的并且watashi这位世界冠军翻译的书，不敢说其他的，至少代码写的比哪些教授们写的更加有ACM范~", "marks": "力荐"}
{"content": "没读完", "marks": "力荐"}
{"content": "推荐", "marks": "推荐"}
{"content": "作为ACM/ICPC的入门书这本书已经做到很好了", "marks": "力荐"}
{"content": "没有刷完 已经结束", "marks": "力荐"}
{"content": "刚开始是徐老师推荐的。后来看博客的时候发现很多找工作的人都用这本书。不仅仅对考研与帮助。这本书总结的非常全，适合计算机网络的学习。", "marks": "推荐"}
{"content": "不愧是复习指导系列，剩下三本原先没怎么了解的，看起来十分吃力。", "marks": "推荐"}
{"content": "Dijkstra 提供了一种基于谓词转换器的方法论来解决实际问题. 几个关键词: 状态空间, 选择的不变定理, 循环的可终止性. 几个优化策略: 减少分支, 将重复计算的值缓存, 将不变关系提取到循环结构外, 寻找不变式的更小超集. ", "marks": "力荐"}
{"content": "概念错误，数据错误，逻辑混乱，大杂烩。BULLSHIT！再次证明A股卖方分析师有多傻逼。", "marks": "很差"}
{"content": "材料混杂而编，几乎用“大数据”循环解释了一切互联网商业模式。", "marks": "还行"}
{"content": "其实就是把相关的学术文章拼凑出版一本书而已。像在看文献的感觉，略学究的样子，很多问题只是泛泛而谈。", "marks": "还行"}
{"content": "调研了许多一线企业，写作比较芜杂。", "marks": "还行"}
{"content": "For work一小时草草翻完的。介绍得还不错", "marks": "推荐"}
{"content": "啥都没说", "marks": "较差"}
{"content": "还行吧，感觉没太多新鲜的东西", "marks": "还行"}
{"content": "略有点不接地气。", "marks": "还行"}
{"content": "鄂维南教授的那部分关于科学的开普勒和牛顿模式反思确实很有深度！", "marks": "力荐"}
{"content": "读的网上电子删节版，正好身边朋友在个创业项目于是读书时有了角色更加入味。作者对于互联网、产业发展有较厚功底，所以理论和案例精彩，有收获。内容很丰富，详细需要写个读书笔记了", "marks": "力荐"}
{"content": "看了一天，一口气把这皇皇巨著给读完了，这无疑是我读过最好的一本大数据的书籍，很多我以前困惑的东西都得到了解答。它不光介绍了商业模式还涉及了技术，比如对hadoop这个技术写得比较全面，至少给了我入手的方向。最喜欢书中说得数据资产这个概念，2年前我在公司就提出了数据的重要性，但是我们还是在按照传统的思路，在ioe的束缚下艰难前行，没有hadoop的框架，我们一切大数据思维都是白搭，期待公司的觉悟！", "marks": "力荐"}
{"content": "太水了，非常不推荐", "marks": "较差"}
{"content": "分析师为了炒股写的书，质量可想而知。全书无非就是不断重复大数据好，Google这些巨头利用数据关联赚了多少钱，其他的没有了。赶工出来的作品，错误相当多。清华出版社出书的水平也就这样了。", "marks": "较差"}
{"content": "非常不错的书，给我带来很多新观念", "marks": "力荐"}
{"content": "得到有作者签名的友人赠书，讲大数据运用对产业创新、融合、整合等诸多影响，以及未来不可小觑的飞跃发展，做了17页读书笔记，尽管立场客观，但仍能感受到作者写作时的慷慨激昂，仿佛看见一个小人儿站在书上为大数据摇旗呐喊。一周内看完400多页的专业研报类书籍在个人经历中是史无前例的，足见本书的可读性强而且决不枯燥^^", "marks": "力荐"}
{"content": "时代的弄潮儿。。。。", "marks": "力荐"}
{"content": "这本书具备一定的专业性和时效性，作者正是具备金融背景和IT背景的高端人才。书共分为三个部分，最具参考性的是第一部分同时也是主体内容。作者提出的许多观念譬如“终端+应用+平台+数据”的范式很具启迪，而且举了很多著名的企业当做范例。使得读者对当今火热的互联网金融有了相对科学深刻的理解。", "marks": "力荐"}
{"content": "概述", "marks": "还行"}
{"content": "买了几本大数据相关的书，通读下来，这本应该算是最差的", "marks": "较差"}
{"content": "大数据确实是一个时代的内容。文章整体表达的比较清楚，但总感觉结构有些凌乱，似乎有很多内容重复表达。有一定的参考意义", "marks": "还行"}
{"content": "大数据刚兴起时少有的参考书，其中对数据资产略有涉及，算是国内首本介绍的书。", "marks": "推荐"}
{"content": "刷新眼界，不读不快。", "marks": "推荐"}
{"content": "读了几章，讲得挺好的，理念不错~", "marks": "推荐"}
{"content": "系统性的阐述了大数据的概念及其在各行业的应用。虽然某些章节有凑数之嫌，但也还有很多见地颇深的内容，对实践有指导。2013年的书，书中预见性的内容到现在看起来蛮正确的。", "marks": "推荐"}
{"content": "不错，开拓思维！", "marks": "推荐"}
{"content": "数据是资源，算法才是生产力啊", "marks": "力荐"}
{"content": "浅显易懂的介绍了一些新的想法和观点", "marks": "推荐"}
{"content": "我搞不明白，为什么给了这么高的分数。首先，这书从很高的层面描述了一下大数据，及一些内容。用前面的书友的说法，不接地气。其次，从开篇就是互相吹捧，马屁。这也就算了，权当听故事了。可道德审判，这算什么？一本技术性的书籍，加入了这么多的有倾向 的内容。说你是正义的使者，还是高级键盘侠？抛开有用的内容，看的最上火的一本书，给出有史以来最低的评价。", "marks": "很差"}
{"content": "可能没有理解到吧，不觉得有那么好，仍然是概念性的书，能指引方向？", "marks": "推荐"}
{"content": "1.数据时代催生数据分析师这一新兴职业；2.数据科学将在未来一段时间内迅速发展，成为和自然科学分庭抗礼的又一门科学", "marks": "力荐"}
{"content": "在大数据论坛上初识作者，看结构观点确实是圈里做过足够调研的一本书。对数据本质层面的刻画有商业的视角，这是最大的不同。后一半书是在堆内容了，所谓数据科学，基础没有新东西。", "marks": "推荐"}
{"content": "对比另外一本大数据的入门介绍，差太多了", "marks": "较差"}
{"content": "对于我这个门外汉有所启发。逻辑清晰，涉及方方面面。", "marks": "推荐"}
{"content": "读的比较吃力", "marks": "较差"}
{"content": "行业分析师的作品 非专业背景 拓展思路用 说白了 忽悠用 对基础研究无益", "marks": "较差"}
{"content": "这一定是关于写未来的书，以后最性感的职业将是统计学家", "marks": "力荐"}
{"content": "在读第二遍，希望对大数据及大数据的应用能有一个系统的了解", "marks": "力荐"}
{"content": "139页的IEID是IE10吧？", "marks": "还行"}
{"content": "新的时代，大数据时代。", "marks": "力荐"}
{"content": "一分钟读完", "marks": "较差"}
{"content": "适合对大数据入门型选手阅读", "marks": "很差"}
{"content": "不错，高屋建瓴，可读性很强", "marks": "力荐"}
{"content": "看着简介，好评如潮，想看\n", "marks": "还行"}
{"content": "一本倾注了心血的书。非常值得一看", "marks": "力荐"}
{"content": "让我顺利毕业吧！", "marks": "力荐"}
{"content": "日本书到处可见细致。连“表现层”这样的名词，都要解释“表现”说的是什麼意思。哪像大陆的教材，本来翻译就莫名其妙，讲解时又不解释，于是IT书说话都自成一体，许多书甚至不说人话。", "marks": "力荐"}
{"content": "这本书的中文版最大的问题在于排版，主要是字体太小看得眼睛疼。另外的问题就是，作为一本图解的书，依然有不少文字，加上字体太小，单页承载的信息量太大，直接导致读者的认知负担过大，本书的体验（我指中文版）相当不好。不清楚日文版怎么样。内容还没看完，暂不评论。", "marks": "还行"}
{"content": "挺不错的，通俗易懂，简洁明晰。大学里太多网络教材都在教一些现实工业界很少用到的技术（比如 ATM 网络、令牌环等等）。CS 的学生学习计算机网络，理解基本的网络硬件原理后，可以直奔主题，学好 IP/TCP/HTTP 三大协议，差不多就可以包打天下了。此书的一个小缺点是，作者成书和译者译书的时候，都没有加入一些合适的备注，比如告知下读者，ATM 与 IP 两种网络体系之争。不懂网络的人，学习起来往往会同等对待 ATM 网络和 IP 网络，等到费了大力气学了好多 ATM 网络的各种技术，却发现这个东西在业界已经几乎消失不见了……Anyway，学东西，交叉着多读几本同领域的书是很棒的方法。", "marks": "推荐"}
{"content": "广而不深。", "marks": "还行"}
{"content": "通俗易懂与时俱进，这本书作为大学网络教程应该非常不错。\n大学网络教程里大篇幅的介绍些早就过时的技术真是啼笑皆非，\n好歹与工业级接轨一点啊。", "marks": "推荐"}
{"content": "和图解关系不大，要说通俗易懂也没什么太大的感觉，对我来说就是换一个时期重温一下大二的《计算机网络》课程。", "marks": "还行"}
{"content": "蜻蜓点水，过于通俗，「图解」的图也没什么诚意。本来还能凑合着当综述来翻一翻（给个 3 星），可惜作者一本参考文献也没列，也不知道是不是国内出版的时候为节省纸张给砍了。", "marks": "较差"}
{"content": "讲的比较粗浅简单，对于初学者非常合适，很快就能够学完，之后再进行深入。", "marks": "推荐"}
{"content": "图解个毛图解", "marks": "较差"}
{"content": "2.4G和微波炉一个频段 :)", "marks": "力荐"}
{"content": "非常适合入门，关键是了解大概的结构。这本书都是给出最简单的部分而且图非常多，主要是概念的讲解和说明不是给你最红去解决问题的。当然了解了纲要再解决问题已经简单得多得多。", "marks": "力荐"}
{"content": "太浅", "marks": "还行"}
{"content": "推荐~读了两遍。来自日本作者，通俗易懂，举例形象。内容框架比较合理， 前几章为后面的内容作了充分的铺垫，对没有基础知识的人也很友好，后续逐渐深入，加上图解印象深刻。不足的是名曰图解，但对图片本身的解释不算特别详细；前后的概念有交叠，在后面才详细解释的名词偶尔过早出现，但瑕不掩瑜。", "marks": "推荐"}
{"content": "看完后对这个协议还是清晰不少 日本人的严谨 可见一斑啊", "marks": "力荐"}
{"content": "简明,但是过于简明,没有讲出网络协议的精髓", "marks": "还行"}
{"content": "计算机网络一直都是个短板。复习了不少这方面的知识.", "marks": "推荐"}
{"content": "入门书~ 有几章看得有点马虎. 终于感觉对网络知道一点了...", "marks": "推荐"}
{"content": "作为入门书其实还可以，讲得很浅，深入估计还是得看「TCP/IP 详解」这样的书吧。 ", "marks": "还行"}
{"content": "优点是对于基础的图解非常直观  缺点是深度不够", "marks": "还行"}
{"content": "图！", "marks": "力荐"}
{"content": "网络基础入门了，准备开始深入学习", "marks": "力荐"}
{"content": "图文并茂，浅显易懂。信息安全专业的同学们可以参考参考。", "marks": "推荐"}
{"content": "相比图解HTTP略显得无趣。毕竟有些东西适合用图来表示，HTTP表现的就好好像是去菜市场买菜规划路线，用图表现出来就比较形象化，具体的信号如何传输，如何加密等等。TCP/IP传输层可能还能如此表示，但是毕竟好几层都这么肢解，感觉有点想看医学上的人体穴位图谱，展示的过于细节，看起来就很头疼。（当然主要是自己太渣，先给4分吧。）", "marks": "推荐"}
{"content": "内容已经非常好了，加上这个喜人的设计，啧啧，想不好看都很难，真的把TCP/IP的技术用浅显易懂的语言解释了出来，强烈推荐", "marks": "力荐"}
{"content": "温故知新", "marks": "推荐"}
{"content": "一般般，不够详细，不如《图解http》", "marks": "还行"}
{"content": "终于知道七层都是啥了.", "marks": "推荐"}
{"content": "作为入门是极好的，比tcp/ip详解卷一要更好读，会有概览来了解框架，而不是一下扎到细节中", "marks": "力荐"}
{"content": "入门书，非开发人员也能看", "marks": "还行"}
{"content": "略散碎…", "marks": "还行"}
{"content": "图很多，但是讲的很粗浅，很多细节都没有涉及到", "marks": "还行"}
{"content": "花了几个小时翻了一下，权当复习用了，讲解得很基础", "marks": "推荐"}
{"content": "三星半。TCP/IP hello world，通俗易懂。有不少图形描述。拿这个对照TCP/IP详解看，可以提高效率。", "marks": "还行"}
{"content": "第一遍快速看完，还是要配合项目来深化", "marks": "推荐"}
{"content": "日本书还是挺细致的，一直没时间重温，终于在蚊虫叮咬的深夜读完了。20160507", "marks": "推荐"}
{"content": "有图有真相说的就是这种书吧。", "marks": "推荐"}
{"content": "这是一本科普书", "marks": "还行"}
{"content": "学点黑话", "marks": "还行"}
{"content": "纯概念堆砌啊，不满意，不过里面图片解释蛮不错的，给个三星。", "marks": "还行"}
{"content": "通俗易懂的讲解TCP/IP知识的入门书籍，主要向读者阐述技术概念上的知识，注重整体框架而不是TCP/IP的细节。", "marks": "力荐"}
{"content": "浅显易读，权当复习。", "marks": "推荐"}
{"content": "还不错。2016年读完的第一本技术书", "marks": "推荐"}
{"content": "日本人写的书还是很详细的", "marks": "推荐"}
{"content": "其他的不错，但路由协议和算法讲得很不详细", "marks": "推荐"}
{"content": "科普书，入门级。有点类似应付考试用的小抄。", "marks": "还行"}
{"content": "还不错，理清了一些知识点，有点浅但讲的很清楚。日本人写的书确实细致又易读。", "marks": "推荐"}
{"content": "入门级", "marks": "推荐"}
{"content": "图很多，适合我这种想无脑复习的人", "marks": "推荐"}
{"content": "入门嘛 图多深度少，也就基础的介绍下。自己研究路由设置很长时间了，以前碰过的东西，书上都有很通俗的介绍，终于高清它们都是些什么了。", "marks": "还行"}
{"content": "复习了一遍TCP/IP，有些内容比较浅。", "marks": "推荐"}
{"content": "跟谢希仁的《计算机网络》类似，本书的内容宽度要窄一点，正如书名，侧重点在TCP/IP，与它相关的内容更细，路由部分我没有细看，其它部分当作复习。学习理论基础时，可以跟谢希仁的书一块看，但这两书都是理论偏多，还需要看网络实践：实践socket编程、HTTP\\FTP客户端编程、搭个HTTP\\FTP服务器；学习一两个抓包工具，推荐wireshark，fiddler，简单易用。我读大学时没人引导，几乎没去实践，其实实践的学习成本非常之低：基于libcurl、WinHttp写个单线程下载器极其简单，用python来玩更是轻松有趣，python一行：python -m SimpleHTTPServer 就可以搞一个http文件服务器，学校的计算机网络课程老师们没有去引导，提高学生学习兴趣，实在遗憾。", "marks": "还行"}
{"content": "有点浅尝辄止", "marks": "推荐"}
{"content": "评价比较高有点过誉，内容广而不深博而不精，跟当年考计算机网络三级的教材差不多。其实推荐清华大学出版社的计算机网络第4版，从网络的根儿上开始讲，既专业又不失趣味性。", "marks": "还行"}
{"content": "为什么觉得内容太多太泛了", "marks": "还行"}
{"content": "作为科普书来说挺不错的，不过IP那一章看不下去。", "marks": "推荐"}
{"content": "深入浅出，非常适合入门了解。与之相比感觉大学里学的简直是扯淡，当然大概也是因为自己没好好学。看懂了，试着去解释经典问题“从输入url到页面呈现”，然后发现要填充的依旧太多。再大致瞧瞧图解HTTP刷个流程，然后去啃HTTP权威指南。啊，for a better FE~", "marks": "力荐"}
{"content": "还是推荐大学里没有学过这门课的同学看下这本，基本上是对整个网络架构的概览。当然，深度是谈不上太多。", "marks": "力荐"}
{"content": "一般般，很多相关技术讲的不深入或没涉及到，但是配图很多，把一些难点描述的浅显易懂", "marks": "推荐"}
{"content": "就是一本图解计算机网络基础的书，感觉图还是少了点", "marks": "推荐"}
{"content": "算是一本网络入门教材不错的推荐吧，深入了解还需进一步阅读", "marks": "还行"}
{"content": "TCP/IP是网络相关程序员的必备知识和提高自身的一道坎。本书翻译得很好，从大框架上，逐渐往下把原理通过图解方式使读者醍醐灌顶，是其他枯燥的书籍无法比拟的。适合用于入门学习TCP/IP体系，深入的话需要阅读本书后再去看关注的网络层级中更细化的讲解书籍和RFC。读这类修炼内功的书，总是心情愉悦的！", "marks": "力荐"}
{"content": "先开始看详解 词汇量不够基本原理不懂看不动 然后决定先看这个 简单易懂 比喻精确", "marks": "力荐"}
{"content": "文字比较生硬，图大部分都是以前见过的老图，作者并没有用图来将一些概念介绍的很清楚，总体感觉知识流于表面，特别是数据链路层和路由方面。", "marks": "还行"}
{"content": "挺好的一本书，图文并茂，适合对网络不太熟悉的新手学习", "marks": "力荐"}
{"content": "写得很易懂，力荐！", "marks": "力荐"}
{"content": "虽然讲得比较浅显，但作为提纲复习下相关知识还是不错滴。。", "marks": "还行"}
{"content": "只能理解5成", "marks": "还行"}
{"content": "学习网络基础知识的好书，日本人写的一些书确实就是比较浅显易懂。", "marks": "推荐"}
{"content": "如果是给学生看，应该可以拿个五分。 给工作的人看，就太浅了，只能给个三分。tcp/ip也讲的不多。蜻蜓点水的把网络的东西过了一遍。", "marks": "推荐"}
{"content": "讲的全面，但是没有深度。刚好可以作为提纲复习", "marks": "还行"}
{"content": "电子版的看着挺累，还是买个纸质版的书来看了。已下单。", "marks": "推荐"}
{"content": "应该是相对简单的入门书了吧，但是我看着还是挺多不理解的。", "marks": "推荐"}
{"content": "很科普，受用了", "marks": "推荐"}
{"content": "只读过这一本计算机网络方面的书，暂时没有对比。但是也学到很多东西。还是赞，感谢作者！", "marks": "推荐"}
{"content": "用来入门的非常合适的一本书，特别是配图非常的形象", "marks": "力荐"}
{"content": "我绝对支持网络主权，这是中国特定发展治理水平决定的，而且中国“开放的大门永远敞开”，我们正与世界相向而行，而互联网正是人类重筑巴别塔追求世界大同最切实的努力之一。我想和大家一起思考的是一个分寸问题:有些措施是不是有一点点过了？它产生的弊是不是已远大于它可能带来的利了？", "marks": "还行"}
{"content": "当参考书还行，不如去看wireshark的书来学网络", "marks": "还行"}
{"content": "复习不错", "marks": "推荐"}
{"content": "不错。", "marks": "力荐"}
{"content": "简明易懂，可作为TCP/IP详解的前导读物，先有一个整体的认识", "marks": "推荐"}
{"content": "还行，各种小介绍，适合索引", "marks": "推荐"}
{"content": "【未看完】\n\n写的太枯燥了，填鸭式的写书方式，为填鸭式教育而生。", "marks": "很差"}
{"content": "通俗易懂，简单明了，网络入门必读，赞。", "marks": "推荐"}
{"content": "太浅了。。作为本科学过几次的当回顾一下。。", "marks": "还行"}
{"content": "比大学教材生动，入门内容，要求不能太高吧。", "marks": "推荐"}
{"content": "图文并茂，又有很多鲜活比喻，适合通识性教育。", "marks": "力荐"}
{"content": "只是图解，图是比较无趣的图。 为何需要图解？因为他文字说不好。", "marks": "较差"}
{"content": "图示很多，但讲解比较浅，适合入门看", "marks": "推荐"}
{"content": "太基础了,而且和题目不符合..", "marks": "推荐"}
{"content": "快速翻阅，没什么收获", "marks": "还行"}
{"content": "生动形象的入门书籍、分层和TCP 握手、还有优化的图非常棒，还有最基础的加密解密，适合再看一次", "marks": "推荐"}
{"content": "挺好的。比教材通俗易懂一些", "marks": "力荐"}
{"content": "TCP/IP的入门书，相对来说重要的网络层和传输层部分有点太过于简单了，不过作为入门来说很棒了，结合图文来学习很快，每章平均用了4~5个番茄时间来阅读和手记，挺好的~", "marks": "力荐"}
{"content": "TCP/IP快速入门，以及索引。 译者的计算机背景似乎不是很强，比如第24页，“最典型的时大实体和小实体”，有点莫名其妙，实则应该是“大端和小端”。 ", "marks": "还行"}
{"content": "这本书很适合我，图文对照来看，很快就能理解，只是最后面的一些没有接触过，感觉不是很好懂", "marks": "力荐"}
{"content": "讲得多，但是太杂，很多概念讲了跟没讲一样。", "marks": "还行"}
{"content": "TCP/IP最佳入门书！", "marks": "力荐"}
{"content": "本书主要讲解了TCP/IP协议的原理以及重要的网络协议，包括TCP/IP协议标准、分层模型、数据包格式等，按照\n\nTCP/IP协议分层模型逐层讲解了链路层、IP层、传输层、应用层的协议原理，具体有VLAN、IP层的辅助协议、应用\n\n协议（如SSH、FTP、HTTP、SMTP等）、安全网络协议（IPSec、SSL、VPN等）。书中深入浅出的给出了各个协议的原\n\n理示意图，非常便于初学者理解TCP/IP协议，并且还辅助以具体的协议例子加深理解。", "marks": "还行"}
{"content": "适合没有任何基础的人入门。了解tcp/ip各层的名词和作用。", "marks": "推荐"}
{"content": "虽然叫图解TCP但其实是一个精简版的计算机网络。挺有趣。", "marks": "推荐"}
{"content": "比较全虽然不深但更适合入门", "marks": "力荐"}
{"content": "娓娓道来", "marks": "力荐"}
{"content": "主要讲TCP/IP协议的一些基本概念，简单易懂", "marks": "推荐"}
{"content": "TCP/IP概述，图多，通俗易懂，看起来很轻松；适合入门、复习以及准备面试，深入还是要看详解", "marks": "还行"}
{"content": "很棒的TCP/IP入门书籍, 了解TCP/IP协议族中各层的主要协议以及原理, 对于做Web开发程序员了解到书中协议知识足够了", "marks": "力荐"}
{"content": "走马观花的看过 内容比较科普 东西很多。点到为止 ", "marks": "还行"}
{"content": "和《图解HTTP》一样，排版、插图、语言的表达都很友好。相比来说，学校的教材完全就是把概念放上去，配上几道习题。", "marks": "推荐"}
{"content": "没有图解HTTP写的好玩", "marks": "还行"}
{"content": "覆盖的知识点还算全面，但只是把一些过程讲了出来，不够深入。如果一本网络入门的书还是不错的。", "marks": "推荐"}
{"content": "看完后的感觉是：此书作为科普书还行，想更深还得读那两本宝典", "marks": "推荐"}
{"content": "这本书相对于其他讲网络方面的书，弥补了空间结构想象的问题，通过图的方式，描述流程和结构，容易读，不过相对来讲深度也浅一些，配合一起来读效果很好。", "marks": "推荐"}
{"content": "本来打算补补网络的知识，这也讲得太浅了，意义不大。", "marks": "还行"}
{"content": "入门级的好书，生动直观，复习了一遍大学计算机网络，深度有些不足。", "marks": "推荐"}
{"content": "到关键的地方总是说得模棱两可的", "marks": "推荐"}
{"content": "不错啊～比其他网络书好读", "marks": "力荐"}
{"content": "除了个别章节因自己还没相关知识储备而看不懂跳过去以外，其他的章节算是看过一遍了。对于我这样一个计算机网络菜鸟而言，本书大部分内容还是浅显易懂的。有了大体的知识框架，接下来再看《TCP/IP 详解》应该会好一点吧。另，OSI/TCP_IP 协议的分层处理对于软件设计也很有参考价值（通过分层降低结构复杂性，并能够很好地做到解耦）。", "marks": "推荐"}
{"content": "不如看steven的TCP/IP详解的卷一。觉得这本写得没什么内容。", "marks": "还行"}
{"content": "前半部分基础知识和课本上差不多，语言和示意图更丰富些。后期的各个协议、技术的解读暂时只挑了感兴趣的读了下", "marks": "还行"}
{"content": "浅显易懂，正好用来回顾一下丢失以久的网络基本知识，书里讲解的比较细致。有些东西比以前的教科书还要解释的好。", "marks": "推荐"}
{"content": "前兆以太网。\n前兆以太网。\n前兆以太网。\n前兆以太网。\n前兆以太网。\n。。。。。。", "marks": "还行"}
{"content": "图示清晰易懂；在复习的基础上了解到了一些以前遗漏的知识。", "marks": "推荐"}
{"content": "翔实的入门书。但是知识点的罗列不算是我喜欢的顺序，有点乱。", "marks": "推荐"}
{"content": "一看就停不下来的好书。简单明了的写法阐述复杂的网络结构。推荐阅读！值得多次翻阅！", "marks": "力荐"}
{"content": "说了很多东西，但一样都没说清楚，而且理论的东西太多了，得不到操练。好处就是跟科普一样能看到，在短时间内把osi模型过了一遍", "marks": "还行"}
{"content": "一般般，不适合网络基础好的人，适合入门，我就当复习了吧。", "marks": "较差"}
{"content": "轻松的入门教程，网络管理人员，应该人手一册，这种图解式的入门书不多", "marks": "力荐"}
{"content": "没有 http 那本写得好", "marks": "还行"}
{"content": "2016.23 一下午加晚上翻完 广度够了，深度不够，还是老老实实看TCP/IP三卷吧，可以当入门书，图文并茂还是不错的", "marks": "推荐"}
{"content": "快速扫盲", "marks": "推荐"}
{"content": "我一直认为，学习tcp/ip最终还是要回到rfc上，没有其它路可走", "marks": "还行"}
{"content": "语言比较通俗易懂，作为计算机网络课的教材不错。不过有好几处错字。", "marks": "推荐"}
{"content": "可以作为计算机专业的同时学习，书中的插图很用心。", "marks": "推荐"}
{"content": "讲得比较浅，但是里面丰富的图，可以帮助迅速回忆TCP/IP协议相关知识点。", "marks": "推荐"}
{"content": "过了一遍，以后多多实践后再来看一遍", "marks": "推荐"}
{"content": "读书的时候,简单翻了《TCP/IP协议族》,可能对这本书期望过高了.感觉讲的太乱,没有切到重点.《图解计算机网络》 可能更加贴切.", "marks": "还行"}
{"content": "这本真的比蒋鑫的权威指南好懂多了", "marks": "力荐"}
{"content": "基本入门的都介绍到了", "marks": "还行"}
{"content": "从商业的角度，我不会选择ASP.NET MVC，但作为向Ruby on Rails过渡的技术铺垫，我选择了它，hope it works!", "marks": "还行"}
{"content": "系统全面，有内容有深度，适合初学和进阶。阐述了mvc基本原理框架，对比了webform，还讲解了相关知识，如ef、jQuery、knockout、控制反转、依赖注入、webapi、异步action、缓存、日志等，细看有收获。", "marks": "力荐"}
{"content": "真的蛮不错啊...相当基础浅显, 顺便用C#一定要用 attribute 要不然就没有意义了", "marks": "力荐"}
{"content": "比较全面地介绍了如何开发一个高效的、可维护的、可扩展的Web项目", "marks": "推荐"}
{"content": "一般，浮光掠影而已", "marks": "还行"}
{"content": "简直火大，到底是写给会的人看的还是不会的人看的，每到重点地方就解释得越来越少连课本都不如", "marks": "较差"}
{"content": "怎么说呢，反正只是理论的书，具体的实现还是得看源码。（妈的，刷完发现对面考834，复习用书是微机原理。妈的）", "marks": "较差"}
{"content": "2014第50书。《蝴蝶效应之谜》。刚看完，数理化底子未丢净，能理解一些。不禁想起俺17年前的高考，数理化很好，语外较差，总分差6分进不了清华，误入人大。从此，高考成了俺这么多年的恶梦主题，最痛苦的一次是连考3年都没进清华。罢了，诌几句:数理幻化成蝴蝶，蝴蝶振翅风暴劫。风暴乍起生混沌，混沌分形永无歇。", "marks": "推荐"}
{"content": "主题很好，但感觉作者还是没有用心写，给人感觉就是各种有趣的材料拼凑在一起，但没有认真的按照由浅入深的逻辑顺序去组织语言，导致没什么系统性。。。而且书里提到的分形和混沌在许多领域的应用对非专业的人来说根本就一头雾水，老实说后面一大半内容我都看不太明白。。。", "marks": "推荐"}
{"content": "简明，多图，说的也清楚，（吹毛求疵的话，没有什么深入的分析，有点儿罗列史料）#不过，那个王二搭讪林童的段子太扯了，完全是理科geekYY出来的浪漫爱情故事的桥段，怒减一星~", "marks": "推荐"}
{"content": "#纸质书# 内容很有趣，信息量比较大也比较注意组织，就是你们物理学家谈恋爱都是这样么！说女孩子的围巾像朱利亚集，带学艺术的女朋友整天跑一群男生参加的讨论会…… 我说林零怎么还没跑掉。", "marks": "推荐"}
{"content": "好无聊的一本书", "marks": "较差"}
{"content": "自从kindle下了这本书 再也不怕睡不着了 （并不是黑", "marks": "推荐"}
{"content": "科普读物，分形与混沌理论初步。", "marks": "推荐"}
{"content": "经典书籍，清华出版。。。", "marks": "力荐"}
{"content": "太狗。想说的太多，读着挤。个别说法有误", "marks": "推荐"}
{"content": "看不下去了，蛮好的内容你非得王二张三李四小学生一样拟人在那里瞎叨逼些有的没的，阅读感很差好嘛！", "marks": "较差"}
{"content": "匆匆过了一遍，只能说有个大概印象。十几年前在大学里我还选修过一门混沌课呢！", "marks": "推荐"}
{"content": "世界观的物理基础：信息论、复杂系统动力学、量子力学、分子生物和基因", "marks": "力荐"}
{"content": "话题着实有趣，但是讲的不是太好", "marks": "还行"}
{"content": "写得太简单", "marks": "还行"}
{"content": "6413.03.11", "marks": "推荐"}
{"content": "前两章快速了解分形和混沌", "marks": "推荐"}
{"content": "很有趣的一本小书，言简意赅，生动活泼，力赞", "marks": "力荐"}
{"content": "虽然作者已经尽力写得深入浅出，但老实说，分形还真的不是很容易搞懂的一门学科啊。", "marks": "推荐"}
{"content": "再深入浅出，咱的理解能力还是不行呀！但真心觉得不错~~", "marks": "力荐"}
{"content": "很好的了解分形和混沌的入门书，那些天书一样的数学公式可以直接跳过，不影响理解。不过本书仍然没有解答我的疑问，就是如何从混沌到有序，金融市场是否有那个“规则110”？", "marks": "推荐"}
{"content": "很好的书", "marks": "推荐"}
{"content": "分形部分还能看得懂，但混沌部分就比较云里雾里了。可能与混沌理论本身也不成熟有关。", "marks": "推荐"}
{"content": "书写的很易懂，感觉分形很牛，但不知道怎样应用。", "marks": "推荐"}
{"content": "很有趣的一本书，作为介绍分形、混沌的入门科普很好。能吸引读者，引人入坑（嗯，数学的坑）足够了，对混沌和分形做了简单易懂的讲解。缺点是不够深入，没讲透，整体逻辑性不强，有些零散。作为入坑的第一本，还是很不错的。", "marks": "推荐"}
{"content": "公式太多，表示看不懂", "marks": "还行"}
{"content": "活在当下,这才是生活的真谛.", "marks": "力荐"}
{"content": "公式太多了。。。", "marks": "还行"}
{"content": "话题是有趣的，但是写的对于没有一点高数基础的人来说还是过于深奥了，基本上没太理解", "marks": "还行"}
{"content": "算是不错的启蒙，不要希望懂为什么，知道这个概念是啥先。", "marks": "推荐"}
{"content": "书挺好的，用不严肃的语言讲述了严肃的内容，基础知识都有涵盖，看完后对于这个学科会有个基本的了解，就是对于里面的人物感觉像八十年代的讲述方式。", "marks": "推荐"}
{"content": "入门书", "marks": "较差"}
{"content": "初次了解分形与混沌，有趣，但这本书写的过于科普，看完有点味同嚼蜡。", "marks": "还行"}
{"content": "从过去到当前，还跨越众多学科领域。写得挺好，不妨看看。", "marks": "推荐"}
{"content": "还不错，比较浅显，适合用来入门", "marks": "还行"}
{"content": "对数学真是一点兴趣都没有了，看个热闹吧，还不错", "marks": "推荐"}
{"content": "杀死「拉普拉斯只妖」，在不确定中寻找稳定", "marks": "还行"}
{"content": "作为科学意义上的混沌一词，我最初是从普利高津的著作中知晓的。书名这会儿没想起来，毕竟已经有二十几年了吧。尽管无论现在还是那时，是否搞清了混沌的含义，也已经显得不重要了。重要的是，我又一次从本书中分享了一次科学之旅，带给我精神上的愉悦，这才是值得回味的。", "marks": "还行"}
{"content": "即使作为科普也尚未达到维基百科的水准，故事推动，作者讲的故事却又太没有推动发展的能力，太生硬", "marks": "还行"}
{"content": "不能理解的很多，翻了下～", "marks": "推荐"}
{"content": "很棒的科普，大陆华人写的", "marks": "力荐"}
{"content": "感觉还挺好的~", "marks": "力荐"}
{"content": "讲解的方式很有娱乐性。不过内容太深的缘故，没有基础的话，理解起来还是很费力，只看了一半。", "marks": "推荐"}
{"content": "黑天鹅也好，洛伦茨吸引子也好，各类学科或科学都在说着同一个话题。无论你试图聚焦在某个点，还是扩散到任何一个面，都摆脱不了分形，一个放之四海而皆准的规律，你说它可以是什么，它就不是什么。这TM才叫不可预测才是真正的预测。", "marks": "力荐"}
{"content": "1分形具有自相似性，无穷多层次，由一个简单的递归迭代方法产生出来，是混沌的几何表述\n", "marks": "推荐"}
{"content": "开眼界了，原来数学还可以这样。。", "marks": "推荐"}
{"content": "2014.1.5读完。好多年没看科普书看出这种感觉了，看完整个人都晕乎了，一个头两个大。有种当年啃完霍金的《时间简史》的感觉。", "marks": "力荐"}
{"content": "分形与混沌确实更有趣很奇妙。", "marks": "推荐"}
{"content": "这书读完后之后一心就想自己写代码把这些个神奇的图跑出来。。。", "marks": "推荐"}
{"content": "通俗易懂的科普读物。希望看到更多华人科学家们的大作。缺点就是口水话略多，但总体来说还是很长知识的。", "marks": "推荐"}
{"content": "科学学术上的东西,还是留给学者们去看吧.我读书少,看着看着就\"晕擦擦\"", "marks": "还行"}
{"content": "有书评", "marks": "推荐"}
{"content": "需要进行后续总结\n总体来说是本优秀的科普书籍", "marks": "推荐"}
{"content": "写个长评吧，微推荐，这本书分有点虚高", "marks": "推荐"}
{"content": "书不错 我是在想 我了个去 我论文怎么办", "marks": "推荐"}
{"content": "北京一只蝴蝶拍了下翅膀，能引起加勒比海飓风吗？分形天使和混沌魔鬼将揭示操纵这一切的“看不见的手”。", "marks": "推荐"}
{"content": "本来打三星，但作者一再骚扰，要我改评论，只能写好听的话，甚至要我删评论，还打着电话来骚扰。没见过这么恶心的。举出缺点是希望书能改得更好，这点指责都受不了，那就给你来点更猛的，一星！\n", "marks": "推荐"}
{"content": "非常棒的有关复杂性和分形的科普著作~", "marks": "力荐"}
{"content": "虽然写得很浅显易懂，但是我还是希望有些实质性的公式，理论在里面。", "marks": "推荐"}
{"content": "主题很好，但为了内容推进方便而塑造了王二，，，张三，，李四，，，这些学生，写作手法也太复古了些。几次差点看不下去。", "marks": "还行"}
{"content": "推荐阅读", "marks": "力荐"}
{"content": "挺生动的", "marks": "推荐"}
{"content": "数学不好,很多地方看不懂", "marks": "较差"}
{"content": "基本历史和概念还算清楚，只是在混沌的应用方面蜻蜓点水，不够深入。作为科普书，还是比较适合适的。", "marks": "推荐"}
{"content": "终于明白蝴蝶效应是怎么回事，感叹世事无常。。。", "marks": "推荐"}
{"content": "书中分形的彩图让人感觉到大自然的绝妙之美", "marks": "推荐"}
{"content": "领略分形之美和混沌的神奇", "marks": "力荐"}
{"content": "洛伦兹与蝴蝶效应", "marks": "力荐"}
{"content": "混沌真是无处不在，应用到股票市场上真实用", "marks": "力荐"}
{"content": "推导难度不大，非常适合我这种程度的人来看。科学家不再是一个干巴巴的公式，而还有背后鲜活的故事，只不过常常很穷罢了。", "marks": "力荐"}
{"content": "挺通俗的科普书，还挺幽默", "marks": "推荐"}
{"content": "这本书让我初步了解了分形与混沌，对于我这种完全的门外汉来说，浅显易懂挺明了的。接着可以进阶地去看一些这方面的别的书籍。", "marks": "推荐"}
{"content": "想反复阅读的书", "marks": "力荐"}
{"content": "通俗易懂", "marks": "力荐"}
{"content": "失之毫厘，差之千里", "marks": "推荐"}
{"content": "大自然很神奇，人类认知的道路还很长，科普佳作，深入浅出。", "marks": "力荐"}
{"content": "不可多得的关于分形、混沌的科普书", "marks": "力荐"}
{"content": "分形？混沌？蝴蝶效应", "marks": "推荐"}
{"content": "不错，适合入门~", "marks": "力荐"}
{"content": "非常棒的书。", "marks": "力荐"}
{"content": "科普之作。说混沌的部分很有启发性。但似乎说的不是很清楚。这部分应该找资料继续学习。", "marks": "还行"}
{"content": "了解分形和混沌不可多得的科普书", "marks": "力荐"}
{"content": "讲解i 清晰，很好的混沌入门书", "marks": "力荐"}
{"content": "妈的，全他妈水军评论，骗老子买书", "marks": "很差"}
{"content": "很好看的书", "marks": "推荐"}
{"content": "7.5", "marks": "推荐"}
{"content": "对蝴蝶效应，分形，混沌都有了更一步认识", "marks": "推荐"}
{"content": "换个角度看", "marks": "推荐"}
{"content": "讲的很好，很详细。期待细读", "marks": "力荐"}
{"content": "很多地方，蜻蜓点水一点而过，再看封面的推荐，觉得有些言过其实了~", "marks": "还行"}
{"content": "协同过滤我能一眼挑出错误，后面有点过马观花了。", "marks": "力荐"}
{"content": "概论性读物，接下来啃Handbook", "marks": "推荐"}
{"content": "一本导读，对于算法的介绍基本一带而过，但提到了大量的参考文献，适合快速了解这个领域，再找相应paper深入阅读", "marks": "推荐"}
{"content": "一句废话都没有", "marks": "推荐"}
{"content": "2010年的综述书，部分章节 tooooooold", "marks": "还行"}
{"content": "公式很多，只认真看了前两章。现在跳到后面开始看。", "marks": "还行"}
{"content": "不能算读过，只能算翻过", "marks": "还行"}
{"content": "详细，彻底，方便修改拿来用。", "marks": "力荐"}
{"content": "一般吧 没什么硬货", "marks": "还行"}
{"content": "在介绍算法的同时，帮助建立了关于一个完整系统的蓝图。非常赞。", "marks": "力荐"}
{"content": "翻完了，只能大概知道每个方法是怎么实现的，具体的统计学公式还真的看不懂……", "marks": "推荐"}
{"content": "作为推荐系统的入门书籍是很好的，介绍的比较详尽。", "marks": "力荐"}
{"content": "新流行", "marks": "力荐"}
{"content": "点到即止啊,可惜了", "marks": "推荐"}
{"content": "很奇怪这本书居然能打8分多。。。感觉写得乱七八糟的啊。。。废话多，主次不清，简单的问题都讲不清楚。还是我水平太差了看不懂？。。", "marks": "较差"}
{"content": "基本概念，很好 特别是防作弊那段", "marks": "推荐"}
{"content": "啊呀且住！", "marks": "推荐"}
{"content": "推荐系统文献介绍。", "marks": "推荐"}
{"content": "虽然比较早，有些内容很有用", "marks": "推荐"}
{"content": "推荐系统", "marks": "推荐"}
{"content": "推荐系统方面的入门书，适合用来了解推荐系统的研究和应用，缺点是不够新，有些地方没讲明白。", "marks": "推荐"}
{"content": "第8章 比较有价值 前面的章节太注重怎么算了 而且都没有深入讨论", "marks": "还行"}
{"content": "入门书籍，想了解相关技术的话可以一读..", "marks": "推荐"}
{"content": "结构很好 但是没啥insight 读起来有点无聊 很多reference 这点很不错 感觉不适合给第一次接触推荐系统的 当查缺补漏是不错的专业书", "marks": "推荐"}
{"content": "找一群人来写推荐语挺烦的，内容还不错。实例较多，攻击部分有趣，没有技术背景的浏览即可", "marks": "推荐"}
{"content": "推荐系统。。。", "marks": "力荐"}
{"content": "很好，很全面的推荐系统的入门书~", "marks": "力荐"}
{"content": "作为入门比较好，最后看英文的，里面没有很生僻的单词，读起来还是很顺的", "marks": "还行"}
{"content": "价格有点贵，国内推荐系统的书就那么基本，都需要好好读读。", "marks": "还行"}
{"content": "正本书感觉像一篇长长的博士论文。。", "marks": "推荐"}
{"content": "系统的扫盲书，大部分讲的是电商的推荐系统，和微博的推荐系统还有差别", "marks": "推荐"}
{"content": "这本书讲的东西很多，但都很浅，翻译的也很糟，不推荐", "marks": "很差"}
{"content": "入门好书", "marks": "力荐"}
{"content": "还比较全 笔记：https://github.com/fire717/Recommendation-system/blob/master/note/%E3%80%8A%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%5B%E5%A5%A5%5DDJ.AF%E3%80%8B%E7%AC%94%E8%AE%B0.md", "marks": "推荐"}
{"content": "对于入门来说应该是足够的。包括基本的推荐技术介绍，包括协同过滤，基于内容，基于知识，以及混合推荐系统。后半部分讨论了衡量的标准，以及后来的趋势。", "marks": "力荐"}
{"content": "毫无使用价值", "marks": "还行"}
{"content": "翻了一遍，启发思路不错。", "marks": "力荐"}
{"content": "通过本书可以较为全面的了解推荐系统的相关知识，了解推荐系统现有的算法，如何组合，如何评估，未来的发展趋势等。是学习推荐系统的一本好书。", "marks": "力荐"}
{"content": "导论", "marks": "推荐"}
{"content": "分类介绍了推荐系统的几种方法，科普性有个认识，具体的一些进展也引用了相关的paper，需要自己去看", "marks": "推荐"}
{"content": "推荐系统最佳的入门书籍 里面的总结与概述的角度与高度都很到位 而且推荐的论文也很好 ", "marks": "力荐"}
{"content": "比较综述。有本准备转让，北京地区交易。可豆油。", "marks": "推荐"}
{"content": "作为扫盲读物尚可 内容覆盖还算全面 算法部分基本上就是介绍一下idea 讲解很不透彻 读下来感觉跟没读差不了许多", "marks": "较差"}
{"content": "入门级书一本。", "marks": "力荐"}
{"content": "简单翻了一下，不知道为什么评分还挺高的，反正我是没啥感觉，用别人的评价就是“翻过没能力评价”", "marks": "较差"}
{"content": "感觉很好很强大的样子，适合刚刚入门的小鸟..............", "marks": "力荐"}
{"content": "每个推荐类型都介绍了下，像是一本摘要。总体作用比较小。", "marks": "较差"}
{"content": "入门", "marks": "力荐"}
{"content": "有收获", "marks": "推荐"}
{"content": "还可以，读完对推荐系统有了大概的印象。", "marks": "还行"}
{"content": "这本讲的很详细，已经翻过一遍", "marks": "力荐"}
{"content": "很不錯的一本open source data structure textbook 與時俱進和安排合理 應該是本書最大特點", "marks": "力荐"}
{"content": "没仔细看，等真正有用到时再看吧", "marks": "推荐"}
{"content": "我觉得还是得好好看下操作系统，而没有太大的必要读这个。实际上，大部分东西都没有细看", "marks": "推荐"}
{"content": "OS X内核编程入门必备，但与iOS关系不大", "marks": "推荐"}
{"content": "这书只能拿来做导论，不能拿来做java学习", "marks": "还行"}
{"content": "java101 而且没觉得和计算机科学家有什么关系", "marks": "还行"}
{"content": "快速入门！该做8.10\n9，10，11，12，p152card所有程序，13，14，grid world 所有，附录A，15", "marks": "推荐"}
{"content": "火尧", "marks": "很差"}
{"content": "基础又结合实践练习", "marks": "还行"}
{"content": "这本教材通俗易懂，是java入门的好书，主要讲编程的思维。我觉得就是因为没有好好看这本书，当年Java课才低分飘过的……", "marks": "推荐"}
{"content": "适合给基本没有基础的人看，有点基础的看会觉得太小儿科了", "marks": "还行"}
{"content": "很好的一本书，循序渐进。", "marks": "推荐"}
{"content": "简短读本，很适合一口气读完，一些基本概念讲的蛮好的，未深入涉及高级特性，（翻译的）书名与内容相关性没那么大", "marks": "推荐"}
{"content": "思路非常清晰，译者翻译的也很用心，适合找工作前的突击复习。。网上能找到英文版PDF，但是截止目前没有中文版的。如果能把书中的《术语表》单列出来，估计会非常有意义。", "marks": "推荐"}
{"content": "这一版一般。还是前一版好，后面的章节介绍了数据结构的知识。可是这一版结尾就没有数据结构的内容。所以，去网上搜前一版的 pdf 比较好。", "marks": "还行"}
{"content": "作为技术简介读起来很不错，想了解编程语言、分布式存储、云计算相关内容的可以读一读", "marks": "推荐"}
{"content": "都是实在话。对未来哦预测比较有意思。", "marks": "推荐"}
{"content": "总体差强人意。DSL 那部分还行。看完对 Go 反而更感兴趣了。", "marks": "还行"}
{"content": "覆盖广 但较浅", "marks": "还行"}
{"content": "依我看，未来还要不要用文本编程都是不一定的事情", "marks": "还行"}
{"content": "不好看╭(╯^╰)╮", "marks": "还行"}
{"content": "《设计模式》就是人肉编译器。就软件编程，我认为大多数的创新应该都不外乎是本书介绍的这些技术的延伸。每个月构思主题，查阅资料，编写示例程序，再写成文章，但是在构思文章主题的时候，需要放眼于日常工作之外的世界 ，这样便拓宽的了视野。", "marks": "力荐"}
{"content": "弃，松本还是不写书得好...", "marks": "还行"}
{"content": "非常有想法", "marks": "力荐"}
{"content": "和作者的上本书类似，话题很广但都比较浅，正如序言所说主要目的是培养新人，从这点来看还算不错，但对有一定经验的人来说会觉得什么也没学到", "marks": "推荐"}
{"content": "走马观花，有点意思，但又没几个意思", "marks": "还行"}
{"content": "内容比较泛，也没什么新鲜思想", "marks": "还行"}
{"content": "还凑活，松本又把投到技术杂志的文章汇总起来出一本书，不过大部分的知识都是wiki上有的。 这样不好吧。", "marks": "还行"}
{"content": "喂！侬号角！怎么都是好像，貌似，可能，唉？", "marks": "较差"}
{"content": "对于爱好者了解计算机语言的入门，和一些常见实际问题是个很好的书籍", "marks": "力荐"}
{"content": "试读部分么有看到吐槽云计算/大数据的内容ToT", "marks": "推荐"}
{"content": "Matz 好博学啊~", "marks": "还行"}
{"content": "里面讲借助unix系统实现负载均衡的那段确实令人耳目一新", "marks": "推荐"}
{"content": "这本书评价被水军刷了吧。。。这本书其实是连载的合集，名字应该是“技术的剖析”，介绍各种语言、技术，等等，叫“代码的未来”纯粹是哗众取宠。这样合集的书实在品赏不了，内容又乱又浅，即便是松本行弘也难逃与此，正儿八经读就算了，随便翻翻还行。为 SB 标题 -1。", "marks": "较差"}
{"content": "略读了一遍，翻译错误有点严重，满分全部给Matz，周同学要继续努力。", "marks": "力荐"}
{"content": "太浅了。//松本行弘的专栏录，说的东西挺多的（于是吐槽也挺多的，经常走题）。在图灵社区看了前半本，后版本找不到电子版啊啊啊。但是纸质书又太贵了><", "marks": "还行"}
{"content": "零散的一些知识点", "marks": "还行"}
{"content": "还行", "marks": "还行"}
{"content": "走马观花，除了编程语言的部分没啥意思。", "marks": "还行"}
{"content": "智者的广度", "marks": "推荐"}
{"content": "涉及的面很广，普及一下知识还不错", "marks": "还行"}
{"content": "同一本书中反复重复相同内容，这个还真是少见啊。\n作为专栏中不同时期的文章还情有可原，成书了也不编辑一把，有凑字数的嫌疑。\n内容更多的是一些语言，工具，api的介绍，离封面上说的“会是什么样” 感觉还是差好大一截。 只能看作是作者当前看好的玩意", "marks": "还行"}
{"content": "1. Ruby 是我最喜欢的语言。 2. 我是松本行弘的粉丝。3. 特别佩服他完全不在意自己写出来的东西是否足够高深、足够牛逼这一点。", "marks": "力荐"}
{"content": "看目录讲得很杂，包括编程语言实现和趋势、负载均衡、流行的代码库都讲了。刚看到Lua一节，其中提到编程语言多来自欧美，只有Lua和Ruby是南美和亚洲人所做，“实在是太寂寞了”XD", "marks": "力荐"}
{"content": "两三天读完了, 感觉作者有点谦虚, 还有点傲娇", "marks": "推荐"}
{"content": "可以當科普讀", "marks": "还行"}
{"content": "极好。之前读过他的另一本，也非常有启发。能够创建语言的程序员，应该是程序员之尊了吧？这样的人对语言和程序的观点都会非常有启发性。", "marks": "力荐"}
{"content": "读了可以开拓视野，了解许多和语言设计、分布式、云计算等相关的知识。只是稍显零散。", "marks": "还行"}
{"content": "多看上有电子版的，随便翻了翻，感觉没有特别感人的地方", "marks": "还行"}
{"content": "花一个下午泛读，拓展知识面吧", "marks": "还行"}
{"content": "读完想学后马上学了下 ruby 可惜现在全忘了", "marks": "推荐"}
{"content": "作为Ruby语言的发明人，Mats把前三章关于各种编程语言的topic写得让人想一口气读完。后三章就写得一般了，只是简单讲解了一些概念，有些还没讲明白。感觉JRuby才是王道啊，Mats自己都承认自己写的Ruby解释器性能差。", "marks": "推荐"}
{"content": "把这本书看完了，我很喜欢松本行弘的这种风格的写作，看着不累，好像是跟朋友聊天。", "marks": "推荐"}
{"content": "这书很不错啊~ 不知道为什么豆瓣才7.7分 看起来又轻松又能把最新的技术都大致了解一遍~", "marks": "力荐"}
{"content": "并行运算 GPU 感觉被时代所抛弃了。。。", "marks": "推荐"}
{"content": "感觉谈的是代码的历史和现在啊。。。而且夹带死活颇多", "marks": "较差"}
{"content": "有些问题，瑕不掩瑜", "marks": "推荐"}
{"content": "燃起我再点几个技能的冲动", "marks": "推荐"}
{"content": "挺好的一本书，但好像内容有重复？介绍mongodb和进程间通信方式的部分", "marks": "还行"}
{"content": "每日一节，收获颇多。", "marks": "力荐"}
{"content": "对编程语言的见解是一流的", "marks": "推荐"}
{"content": "没有第一本惊艳，可是能看到大师对平常见到的一些技术和框架的理解也还是很有帮助", "marks": "推荐"}
{"content": "1，抽象度高的编程语言不必描述详细过程，从而可以用简短的代码达到目的。 2，在函数对象中，将局部变量这一环境封闭起来的结构被称为闭包。3，GO虽然增加了对类型的描述，但却可以同时获得鸭子类型带来的灵活性，以及静态编译所带来的好处。4， 布隆过滤器算法有意思。", "marks": "力荐"}
{"content": "我相信未来20年Java仍然称霸企业级应用，Unix的灵魂继续借Linux而存在。", "marks": "推荐"}
{"content": "本书内容=松本行弘的程序世界+深入理解计算机系统+APUE+UNP，都看过就没必要买了……看完有种点透的感觉，书里面提到的，之前都已经看过，但是没想到可以这样组合使用。比如之前也看过分布式hash，却没有想到这才是应付大规模并发的绝佳武器，针对hash表编程也因此获得水平扩展的能力。又比如之前学过golang，但是没有深入的意识到，channel其实就是golang环境里的unix管道。最后感谢下松本，能够用这么生动的语言，为读者重温了这么多经典的知识点", "marks": "还行"}
{"content": "有些内容真是翻来覆去啊！", "marks": "推荐"}
{"content": "预测未来是愚蠢的，知道预测未来是愚蠢而认真谨慎的预测是勇敢而明智的。", "marks": "力荐"}
{"content": "好书", "marks": "力荐"}
{"content": "确实浅，内容太分散", "marks": "还行"}
{"content": "一些文字片段，出差的时候看看。", "marks": "还行"}
{"content": "扩增知识面，让你对现状和未来有个大局观，且不少论述均让你知其然还是其所以然，当然有些简介API真可以略过；本次算是略读吧，把感兴趣的读完了，下次还会再读一遍，巩固下", "marks": "推荐"}
{"content": "算是对现在部分语言和应用的一个总览吧，和未来倒是没啥太多的关系", "marks": "还行"}
{"content": "内容涉猎的比较多，前面编程语言方面不错，不过都算是介绍，拓宽视野利用暗时间来看看，没有让人感触很深的内容", "marks": "还行"}
{"content": "书名是有点土，但内容是五星好书。", "marks": "力荐"}
{"content": "2013.09.30 基本是在火车上读完。相比《松本行弘的程序世界》，matz的视野变化好大！也许写专栏share相当提升水平：）\n\n通读的过程中不断浮现《unix高级编程环境》这本书，ruby毕竟是C系哦。\n\nDSL章节想到了最爱的《unix编程艺术》<= better。\n\n最有价值应该是no-sql那章了，读完关于mongodb和redis我各买了一本书。<= redis搞 c++有过接触，但还要好好补充下<= 记性不好哦。\n\n和matz对JS的看法很一致：）\n", "marks": "力荐"}
{"content": "介绍和语法细节占了不少的篇幅（都是我不会用的东西…）。但总体上还是很有收获的。", "marks": "推荐"}
{"content": "大师的著作，适合放松时看看", "marks": "推荐"}
{"content": "浅显易懂，ruby学习、科普必备", "marks": "推荐"}
{"content": "进阶阅读", "marks": "推荐"}
{"content": "其实是散文集，总体上觉得日本人写的书还是好读，因为够认真愿意画清晰有步骤的图去解释问题，而且自己是真懂。", "marks": "力荐"}
{"content": "更多的是实现层面的比较，少点高糌远煮的思考。这点看ruby的未来倒也不错，会少点商业气息。", "marks": "还行"}
{"content": "maz老师的书不能错过", "marks": "推荐"}
{"content": "乱了点，但好歹主线还算清晰", "marks": "推荐"}
{"content": "I recommended my company buy the book. So I'm reading it first now.", "marks": "还行"}
{"content": "可以从大师的角度了解一下有意思的技术", "marks": "推荐"}
{"content": "技术杂文，可见作者的技术广度很不错，文风轻松，这种书的深度就不指望了", "marks": "还行"}
{"content": "粗略读了,松本是个出色的程序员,但不是一个出色的作家", "marks": "还行"}
{"content": "里面涉及了许多Ruby的东西，通过Ruby类比，介绍了很多新技术，我是泛读的，很多没看懂。", "marks": "推荐"}
{"content": "感觉比较杂，标题和实际的内容有些不相符", "marks": "还行"}
{"content": "比较水。\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "marks": "还行"}
{"content": "毕竟是写过Ruby的人， 虽然有点泛泛而谈，但是可信！", "marks": "推荐"}
{"content": "前几天看CHINA-PUB上还有张购书卡就买了这个，本来以为会是那种聊聊新技术比如什么大数据，云技术算的书，打开目录一看没想到全是聊编程思想与方法的书，全是干货，都是作者多年编程的思想精华，就看这个目录都能给满分！", "marks": "力荐"}
{"content": "浅显易懂，很好。不过和数据库相关的都没仔细看，自己知识上有欠缺。", "marks": "推荐"}
{"content": "碎碎语啊碎碎语", "marks": "推荐"}
{"content": "和前一作风格比较接近，依旧是以作者的视角来阐述各种技术的发展，顺带宣传一下Ruby，讲的都不是很深入，但是每门技术都讲解了比较重要的概念，相当于是“你必须知道的XXX”。", "marks": "推荐"}
{"content": "讲设计语言的方法面面，有趣的读物。但是ruby差不多是运行速度最慢的脚本语言，不知道作者怎么看。", "marks": "推荐"}
{"content": "开阔眼界的一本书，介绍了一些技术的实现方式。算是一本程序员界的科普读物。", "marks": "力荐"}
{"content": "把闭包讲述的非常清楚，编程语言相关的东西也很精彩，那些云计算相关的东西就一般了，总体上还是推荐看下的，毕竟发明一个流传甚广的语言也不是普通之辈~", "marks": "推荐"}
{"content": "中文名有点哗众取宠，这是作者在技术的剖析专栏的合集，看看高手对各种技术的见解，可拓宽知识面，增进对各种技术的认识。", "marks": "推荐"}
{"content": "不成体系", "marks": "推荐"}
{"content": "因为作者总是在将一些的语言特性往“模仿”Ruby上靠，这本书让我觉得非常不愉快。内容也不算是普及向，NodeJS真可以放在多核那块讲吗？人家一开始都没利用到多核呢", "marks": "较差"}
{"content": "精华为第2章：编程语言的过去、现在和未来", "marks": "推荐"}
{"content": "一如既往的好，就是有些部分内容重复。", "marks": "力荐"}
{"content": "挺好的，虽然我学的C#，这书又是主讲UNIX相关，但是用来扩宽知识面还是很不错的。（一名新手C#渣），而且可读性高。", "marks": "力荐"}
{"content": "晦涩难懂", "marks": "较差"}
{"content": "就那点儿破事嘛", "marks": "还行"}
{"content": "编程语言、框架的科普读物", "marks": "推荐"}
{"content": "还不如上本¯\\_(ツ)_/¯", "marks": "还行"}
{"content": "收益颇丰。前三章将语言的很多新颖的专题，终于通过这本书对闭包，垃圾回收，元编程有了概念。最后一张讲阻塞和IO的也很好。中间的篇章，大数据，云计算，多核，感觉离我比较远，有点难以消化。好像是从博客上摘录的文章，因为内容有很多重复的，还都是一些偏主观的东西，基本都是作者的观点和讨论。总之，值得一读的一本书。", "marks": "推荐"}
{"content": "不仅仅谈到了ruby，而且还谈到了很多关于未来变成语言的看法!\n===\n第二次看得時候,是在kindle上的,關鍵詞[反射][閉包],[動態語言],我想我會會翻第三次的,因爲每次的感受都不一樣!", "marks": "力荐"}
{"content": "真后悔买了电子书，这个还是只能看纸质的。。。", "marks": "推荐"}
{"content": "从书中学到 Murphy's Law （凡是可能出錯的事必定會出錯），也足够了。", "marks": "还行"}
{"content": "广而浅", "marks": "还行"}
{"content": "Ruby 布道师，万万没想到，我居然也写起了 Ruby", "marks": "还行"}
{"content": "专题式的一些文章，关于某些概念的讲解真的是举重若轻。可能是因为文章形式的问题，看上去略显杂乱，不喜欢或者不懂的部分跳过了很多。以后有时间再补上吧。", "marks": "推荐"}
{"content": "好多语法介绍槽，golang就写了一个sample就开始讨论go！跟issue-9", "marks": "还行"}
{"content": "值得一读。前几章的质量很不错，深入浅出，很有意思。后几章比较像科普，短文杂烩。", "marks": "推荐"}
{"content": "有的地方略显重复，读来仍然受益匪浅！Programming is a process of designing DSL for your own application.一语中地！", "marks": "力荐"}
{"content": "介绍为主，并不深，内容太偏向编程语言设计者了，不过作者本来就是干这个的…", "marks": "推荐"}
{"content": "听marz扯淡", "marks": "推荐"}
{"content": "上周有两个晚上失眠，本书阅读进度便大为提前。足见失眠之威力与危害。通读本书，对事件驱动、异步 I/O、NoSQL、ZeroMQ、node.js 的认识加深了。", "marks": "力荐"}
{"content": "后半本讲云计算的编程、支持大数据的存储、多核时代的编程。个人不感兴趣", "marks": "还行"}
{"content": "看不下去了。。。可能我误解了书名", "marks": "还行"}
{"content": "Ruby派的创始人点评其他门派的武功，只言片语之中便点破关键之处。可惜我这等小菜鸟只是对那些武功心法略有所闻而无一习会，有种梦里看花的感觉，还是根基太浅呀!得继续加油加油加油", "marks": "推荐"}
{"content": "一名牛x的程序员不仅可以写出诡异的hello world，更在于能预见技术的未来。", "marks": "力荐"}
{"content": "果然stackoverflow程序员不能把这本书看的比较明白", "marks": "还行"}
{"content": "C C++ Java Javascript Python\n大写字母是公有对象，小写字母是私有对象", "marks": "推荐"}
{"content": "一个编程语言设计者眼中的编程语言学习与如何评价一门编程语言，很有启发性。", "marks": "推荐"}
{"content": "没有世界那本  有感触", "marks": "推荐"}
{"content": "不是一本将编程知识的书，是一本讲编程语言的本质和未来趋势的书，但是还是需要有编程基础的人才能看得动", "marks": "推荐"}
{"content": "属于随笔，比较零散不系统，适合有一定基础的人读。计算机科学上的知识，我只能抽着能理解的内容跳读了。", "marks": "还行"}
{"content": "在入门者看来很专业，但是在专业者看来很入门的一本书，对前沿讲解得还挺好", "marks": "推荐"}
{"content": "加深了对计算机语言的理解。", "marks": "推荐"}
{"content": "Matz 杂谈。", "marks": "推荐"}
{"content": "地铁上看完了，不是教材，是科普读物。", "marks": "推荐"}
{"content": "细节太多", "marks": "较差"}
{"content": "前一部分讲语言不错，后面有点扯。", "marks": "推荐"}
{"content": "最初看到目录的时候，觉得只有前面一半关于语言的内容是我想看的，后面一半关于大数据、nosql虽然是我的兴趣所在，但觉得可能深度会不太够。拿到书以后，发现和之前的程序世界一样，是专栏的合集，因此章节之间相对独立。整本书看下来，并没有特别深奥的地方，但是收获也不小。matz对技术的认知和阐述是值得一读的。中文版名字真不如专栏名“技术的剖析”，翻译整体还行，不过有些名词翻得很怪，比如partition翻成“分裂”。", "marks": "推荐"}
{"content": "比起《程序世界》深奥了不少，有些知识点还是当前的自己所无法理解的。", "marks": "还行"}
{"content": "因为之前捣鼓过 rm 的关系，对 ruby 有点了解，也对松本行弘很有好感。这么两三年来，对于语言的涉猎其实还不是很多，尤其讨厌带类型的语言。\n\n然而最近准备上 typescript 了，发现我对类型的认识其实来自于 java ，其实错不在类型，而在于 java 中的那种类型。\n\n到底有哪些类型系统呢？写代码真有意思。看了本书，更是想实现一门自己的语言了。", "marks": "力荐"}
{"content": "看完这本书, 看来要加快学习 GO 了, 嘎嘎.", "marks": "推荐"}
{"content": "松本行弘的品位真心不错", "marks": "推荐"}
{"content": "不明觉厉！", "marks": "推荐"}
{"content": "内存管理章节不错。", "marks": "还行"}
{"content": "并没有什么长远的未来，只是从各个方面去看编程而已。", "marks": "力荐"}
{"content": "失眠了读到天亮，以后不会买这种书了。代码的未来还是代码。", "marks": "还行"}
{"content": "科普書", "marks": "还行"}
{"content": "《码农》第三期的专访人物(Ruby之父)的著作，几个月前看完了，感觉看了收获不大吖，可能是我现在的水平还不够吧，o(︶︿︶)o ", "marks": "还行"}
{"content": "写的很空，适合做科普性质的教材", "marks": "推荐"}
{"content": "通过从语言的经典特性到新语言潮流中的新思想、多核、通信、现代存储等多个主题的讲述, 对我们这种可能最早\"与未来遭遇\"的人种有非常多的启发. 松本行弘, 作为一个语言开发者角度的作品, 值得推荐!", "marks": "力荐"}
{"content": "about the code trend in the future", "marks": "还行"}
{"content": "前半部分还是有点启发，对概念的认识稍微有帮助，后半部分感觉很乱", "marks": "推荐"}
{"content": "简单的科普", "marks": "还行"}
{"content": "作者多次强调的现在是多核编程时代，如何在 JavaScript 中将多个核利用起来，这是个难题。Service Worker 是一条路，但应该还不是最终答案。", "marks": "力荐"}
{"content": "水货，杂侃，顺带简单介绍一些技术，通过这本书了解一下技术名词不错，但离入门远远不够", "marks": "还行"}
{"content": "总体还是非常不错的，松本行弘大叔非常谦虚和蔼。内容上也非常全面，堪称大杂烩，是不错的科普入门书。只不过本书是文章合集修订而成，因而体系性不强，并且不少地方也有重复。", "marks": "推荐"}
{"content": "虽然其中很多内容相互重复，但是总体是认识计算机软件系统和各类编程语言及平台的深入浅出的好书。事实上重复的部分也相对于加强印象了。", "marks": "力荐"}
{"content": "相比《程序世界》内容丰富和厚道很多，重复的内容也没有那么多...内容多为科普和示例，对几年流行的内容和趋势都有所提及，和书名中的“未来”十分贴切", "marks": "还行"}
{"content": "没读完", "marks": "推荐"}
{"content": "半个晚上读完这本书，没有预期的精彩", "marks": "推荐"}
{"content": "果然语言相关的章节比较好看，其他部分一般", "marks": "推荐"}
{"content": "匆匆翻翻，讲得有点浅，好多重复的地方", "marks": "还行"}
{"content": "挺不错的一本书，作为一个程序员的角度看一些技术及其发展。很多概念讲得朴实易懂", "marks": "推荐"}
{"content": "科普书，啥都讲一些，但是都不够细", "marks": "推荐"}
{"content": "覆盖面很广，说的也很深入，需要多看几遍", "marks": "力荐"}
{"content": "不愧为大师，能够用很通俗的语言把很高深的技术描述的很清楚。 而且把各种技术关联在一起，正应了那句话，技术总是相同的，牛人的牛逼之处就在于能够触类旁通。总之，这本书给我的帮助很大。 ", "marks": "力荐"}
{"content": "前面讲解的很精彩，是作者擅长的领域，很有启发性，后面就是一些基本库、组件的用法，结合ruby代码，有滥竽充数的嫌疑，整体上来说值得一读。", "marks": "力荐"}
{"content": "结构太散，基本就是技术文章的整理，同时也是松本行弘各种Ruby秀。", "marks": "推荐"}
{"content": "2014年的首本书。算是对计算机技术的科普吧。不会很深入", "marks": "推荐"}
{"content": "讲得还是比较基础的，但还是收获很多。话说，松本行弘很有意思，多次傲娇的暗示Google学了他的……不得不说，他确实对于语言的了解很深，而且Ruby确实是我非常喜欢的一门语言，所以看这本书觉得很有趣。", "marks": "推荐"}
{"content": "把戏，你翻译什么都是把戏？", "marks": "还行"}
{"content": "not as interesting as its amazon reviews, every chapter stops before its climax, introductory but not explanatory", "marks": "还行"}
{"content": "去年看过的最好的科普书", "marks": "力荐"}
{"content": "作为科普读物，翻译错漏百出，反而增加了阅读成本。中文版不值得看", "marks": "还行"}
{"content": "好看", "marks": "推荐"}
{"content": "终于过了看科普书的年纪了", "marks": "较差"}
{"content": "这周慢慢读完了这本书，也当做是自己的「算法」学习入门，浅显易懂的白话和生动的例子，挺适合非计算机专业的普通读者。前九章介绍了现在计算机、互联网广泛应用的几种算法和学术思想，犹如提斛逛顶让，人感慨我们平常使用的搜索引擎、信息传输加密背后这些算法机制的巧妙和神奇。全书除了算法，还介绍了相关的时代背景和人物，娱教结合，倒也有点读故事的味道。最后那章「证明为什么计程序本身不能发现程序的bug」倒也挺有意思，强调了人本身的灵性。", "marks": "力荐"}
{"content": "好一般", "marks": "较差"}
{"content": "科普就应该写成这样，浅显易懂、生动有趣，不过如果再能加点牛人的奇闻逸事就更好了。倒数第二章最有意思。", "marks": "推荐"}
{"content": "写给初中生看的，不适合我。尤其是翻译太差", "marks": "较差"}
{"content": "买的多看的电子版，讲解浅显易懂，适合非计算机专业人看的算法科普。翻译一般。", "marks": "推荐"}
{"content": "写给外行科普用的 但外行估计看着费劲", "marks": "推荐"}
{"content": "讲得好绕，", "marks": "还行"}
{"content": "值得一读", "marks": "力荐"}
{"content": "科普小品", "marks": "推荐"}
{"content": "这本举例的例子更简单，但对于理解这种算法的本质很有帮助。还是高手出的书，思想对自己处理数据很有启发性。", "marks": "力荐"}
{"content": "一直質疑「比喻」在自然科學裏的作用。這下知道了，至簡的大道之所以至簡，不在於簡潔的數學形式，而在於一個外表平凡的思想。對我而言，最讚的部分就是「公鑰加密」那章。簡直不能相信，信息加密竟然不需要藉助數學就能詮釋清楚。", "marks": "推荐"}
{"content": "一本关于算法的科普书。", "marks": "推荐"}
{"content": "优点：浅显易懂，例子不错。缺点：完全给外行看的，没有深入；翻译特别是排版有瑕疵。", "marks": "还行"}
{"content": "计算机的科普书 感觉值得一看。不过翻译得挺一般 有一些句子会有逻辑问题或者不通顺。", "marks": "推荐"}
{"content": "从生活中的例子做比喻，慢慢演变成计算机版本故事。加密技术和数字签名科普得不错。最后一章alwaysYes.exe到YesOnSelf.exe的推导有问题", "marks": "推荐"}
{"content": "Too simple for students of Computer Science...", "marks": "推荐"}
{"content": "相比纠结于技术细节的教材，这本书更好的阐释了这些算法的前世今生，前因后果，更能理解算法在全局环境下的意义所在。很好的科普读物。", "marks": "力荐"}
{"content": "科普书。", "marks": "还行"}
{"content": "算法，也是思维方式，记忆方法，决策方法。思维，神经元0与fire，模糊论断。记忆，压缩与精简。\n", "marks": "推荐"}
{"content": "浅显的科普书", "marks": "还行"}
{"content": "太科普了没意思", "marks": "较差"}
{"content": "所有计算机科学里伟大的思想都应该能在不需要任何编程或其他计算机科学知识的情况下得到解释。", "marks": "还行"}
{"content": "前沿读物", "marks": "推荐"}
{"content": "书作为普及类的书还是可以一看的，会了解不少内在的基本逻辑。但是这个翻译。。看着满本的‘把戏’这个词语，真是无力吐槽……", "marks": "推荐"}
{"content": "每一个高深算法一开始都是“不怕做不到，只怕想不到”的简单把戏（trick）", "marks": "推荐"}
{"content": "还不错，如作者说的：每当我注视夜空，我知道的少量天文知识增强了我对这一经验的感受。有时，我对自己看到事物的理解，让我产生了一种满足和惊奇的感觉。", "marks": "推荐"}
{"content": "挺不错的科普，让你们知道我们码农有多聪明！", "marks": "推荐"}
{"content": "多看三天限免看了一半，科普书", "marks": "推荐"}
{"content": "信达雅之科普", "marks": "推荐"}
{"content": "讲的很清楚★★★ 复习了一些算法知识★", "marks": "推荐"}
{"content": "常识很重要", "marks": "力荐"}
{"content": "書名太蠢 但是內容超棒 非常優秀的科普書 列舉的演算法全都簡練而美妙", "marks": "推荐"}
{"content": "这本书真得是很不错，已非常通俗的语言讲述了这一些伟大的算法。 所有的大思想都能在不需要任何计算机编程或其他计算机科学知识的情况下得到解释。 伟大的思想都是简单的", "marks": "力荐"}
{"content": "很易懂", "marks": "推荐"}
{"content": "跟《Code》有一拼的科普神作，简单明了的例子说明了各种算法的思想，强烈推荐！", "marks": "力荐"}
{"content": "点到即止。", "marks": "推荐"}
{"content": "如果是不了解技术的人读起来可能津津有味，但是如果你本身就是技术出身，就稍微有一点点的索然无味了。不过标题还是挺到位的，这些算法确实改变了人类。", "marks": "还行"}
{"content": "通俗易懂", "marks": "还行"}
{"content": "这些算法大部分以前都看过了，感觉例子举的并不是很好，看完举的例子反而让我迷惑了，整体感觉不如数学之美很多，后面两章也是草草看过", "marks": "推荐"}
{"content": "挺有意思", "marks": "力荐"}
{"content": "补习基础", "marks": "还行"}
{"content": "比读大学时的教科书有趣多了，也浅显易懂，尤其是讲解我一直以来都没搞清楚的公钥加密和数字签名。", "marks": "力荐"}
{"content": "用语通俗易懂，但是算法的精髓很难从作者的只言片语描绘中理解，最好自己先亲手操作过，再阅读才会有深刻的理解", "marks": "推荐"}
{"content": "除了书名取的太大了以外，基本找不到缺点，算法科普不能更棒的书~", "marks": "推荐"}
{"content": "How would you like to change the world?", "marks": "力荐"}
{"content": "看似复杂的算法背后都是特别简单的数学思想。翻译一般。", "marks": "还行"}
{"content": "纠错码，数据压缩讲得好。此书的确应该保证在四五个小时内读完，多了就不值。给7分。", "marks": "还行"}
{"content": "就看了两个算法，扫盲", "marks": "还行"}
{"content": "Refreshed some concepts.", "marks": "推荐"}
{"content": "有点罗嗦，普及入门书。", "marks": "还行"}
{"content": "科普读物", "marks": "还行"}
{"content": "这些思想都是非常好的，只是有一两个算法略微难懂（比如加密的那个），其他的普通人都应该看看，提升自己的思维逻辑。包括神经网络、决策树这种，都很有帮助。", "marks": "力荐"}
{"content": "很有意思的关于算法的科普作品", "marks": "还行"}
{"content": "内容上满分。。这是我见过用比喻的方法将一些不是很简单的概念称述得如此通俗易懂的书。扣掉的惯例还是翻译不尽如人意。。", "marks": "推荐"}
{"content": "翻译的确实不好。。。", "marks": "还行"}
{"content": "计算机小白不错的科普书。这书什么时候写的？中信13年引进翻译已经落后时代了。这些技术不是改变未来，已经在现实中大量运用。", "marks": "还行"}
{"content": "不知道google已经超越了我们多少", "marks": "推荐"}
{"content": "在優美海岸風景的陰影下，這張給我比較多的是失望。幾乎每首歌都跟樂滿哈瓦納沒什麼區別，但音樂本身還不難聽，三星半。", "marks": "力荐"}
{"content": "当程序员醉心于有情义又有气势、有逻辑又有韵味的代码的时候，他发现简洁优雅和无以言表的美是这个世界上难得可以信任的感觉。", "marks": "还行"}
{"content": "计算机科学是什么，编程只是起步，伟大的算法也只是其中一块重要领域。但是对大多数文盲而言，计算机科学就是修电脑的。", "marks": "推荐"}
{"content": "科普挺好", "marks": "推荐"}
{"content": "强烈推荐", "marks": "力荐"}
{"content": "很科普的一本计算机读物，讲了计算机领域的九大算法，或者是几大不同类别的算法。浅显易懂。", "marks": "推荐"}
{"content": "很一般", "marks": "还行"}
{"content": "通俗易懂", "marks": "推荐"}
{"content": "用极其简单的方式来说明算法，易懂，阅读的成就感呀~ ", "marks": "推荐"}
{"content": "推荐每一位即将踏入大一的计算机类专业学生阅读", "marks": "推荐"}
{"content": "简单明了的科普读物", "marks": "推荐"}
{"content": "电子签名技术太厉害了", "marks": "推荐"}
{"content": "非常好的科普书，浅显易懂，让人看到什么才是计算机科学。", "marks": "推荐"}
{"content": "篇幅短，不够细致，适合非专业人士读。翻译水平不能让人满意，不过算法科普书嘛，重要的是算法。", "marks": "推荐"}
{"content": "超赞！不玩计算机的朋友也可以看，生活会变有趣的！", "marks": "力荐"}
{"content": "过于入门", "marks": "很差"}
{"content": "科普副本 很有意思。没有复杂的公式，但把问题讲的很清楚", "marks": "推荐"}
{"content": "还不错，介绍了目前应用比较广泛而而且比较精巧的几类算法，并且并没有应用非常严肃的语言和数学公式，使得它适合给有兴趣但没专业背景的人科普。只是翻译有点糟糕，很多地方觉得说的很罗嗦很乱，一些词汇用得也让人觉得怪怪的。", "marks": "推荐"}
{"content": "非常好的书，非常烂的翻译。。。", "marks": "还行"}
{"content": "很科普的一本，从问题开始，用生活中的例子去解决问题，最后再回到算法中，实现算法的步骤，但感觉略浅，每个算法的篇幅都不算太长，故不能深入。", "marks": "还行"}
{"content": "扫盲，不错的", "marks": "推荐"}
{"content": "翻译成祥。", "marks": "还行"}
{"content": "技术和人文结合的非常好！第一次有一种读小说又能学技术的阅读体验，这可能跟作者是一位大学教授有关。。。", "marks": "力荐"}
{"content": "通俗易懂，颇有启发", "marks": "推荐"}
{"content": "码农必读，PageRank、RSA、数据一致性、神经网络、数字证书…多Cool的名词啊。", "marks": "力荐"}
{"content": "科普。。。能不能改变未来不知道， 不过确实改变了过去。。。", "marks": "推荐"}
{"content": "写得通俗易懂，学了很多计算机哲学\n", "marks": "推荐"}
{"content": "从台湾CS博客http://www.csie.ntnu.edu.tw/~u91029/index.html\n中看到推荐这本书，刚开始读，发现确实没有学究气，能像一个没有任何编程背景普通人能娓娓道来算法的乐趣。\n\n抽空闲时间，把这本书读完了。写得确实比较简单易懂，如果你看了MIT公开课Mathmatics for Computer Science那基本就不需要再这本书了。", "marks": "推荐"}
{"content": "科普类读物", "marks": "推荐"}
{"content": "翻译的挺渣的。。", "marks": "还行"}
{"content": "经济实惠，简单易懂", "marks": "力荐"}
{"content": "科普了计算机历史上的经典算法，用尽量贴近大众的语言降低了认识的门槛。", "marks": "推荐"}
{"content": "扫盲的书，科普还行", "marks": "还行"}
{"content": "后面看不懂所以看不进去了 ，能力有限。", "marks": "还行"}
{"content": "作为一本科普书来说, 可以算挺不错的, 讲得很生动易懂. 翻译不是特别差. 可以放到 \"各领域入门书籍\" 列表里去, 其它专业的人可以看看开阔视野. 对搞计算机的代码猴来说, 就太浅了, 不必特意买来看.", "marks": "推荐"}
{"content": "入门计算机科学读物", "marks": "推荐"}
{"content": "最后两章没看懂，遗憾。还有翻译太次，有能力建议读原著。", "marks": "推荐"}
{"content": "凑单的书，花费了半天的功夫读完了，出乎意料的好，翻译也不错，尤其难得的是能把复杂的事情讲简单咯。 即使对于工程师而言，肯定也有平时不关注的方面，至少倒数第二章的停机问题的证明就挺好玩的。", "marks": "推荐"}
{"content": "超级棒！", "marks": "力荐"}
{"content": "浅尝辄止，科普而已，闲来一读尚可", "marks": "还行"}
{"content": "作者用易懂的语言介绍了生活相关的几种计算机算法", "marks": "推荐"}
{"content": "这本书真的是很棒的一本科普，把九种计算机世界里很经典的算法用尽量接地气的例子解释了内涵的思想。作为计算机专业的看完还是感觉很有收获呢，虽然确实得承认在数据库和加密那儿有些概念大概没解释清楚2333，但总体真的科普的很良心！尽管翻译很多地方翻译错了，但为了书里的思想也很值得一读~", "marks": "力荐"}
{"content": "讲得非常浅显易懂", "marks": "力荐"}
{"content": "科普读物，我是it从业者，对这些算法或多或少都有了解，所以读得比较随意，作为休闲读物。对算法的讲解很浅显易懂。另外，翻译得很烂，毁原著。", "marks": "推荐"}
{"content": "灰常有趣！", "marks": "力荐"}
{"content": "科普书籍里算是讲解的不错的了。", "marks": "推荐"}
{"content": "看得似懂非懂。。。就权当是翻译得不好吧！", "marks": "还行"}
{"content": "科普读物喽，看看也不错", "marks": "推荐"}
{"content": "精彩", "marks": "力荐"}
{"content": "正如作者所言，真正经典的算法，不需要任何计算机相关知识，也可以被普通人所理解。本书总结了自现代电子计算机诞生以来最为核心的九大算法，介绍了很多为我们日常所用、却从未认真思考其原理的技术（如互联网搜索排名、网络信息加密、数据压缩、数字签名等），很具有科普意义。读后，不禁对眼前的计算机另眼相看，因为其中凝聚了太多前人辉煌的思想火花。", "marks": "力荐"}
{"content": "介绍了几个主流算法，可惜仅仅局限于计算机科学领域内部，缺少扩展。\n还以为会多将一些神经网络和机器学习。", "marks": "推荐"}
{"content": "科普类的，看的比较快，不能算深入学习。", "marks": "还行"}
{"content": "通俗易懂", "marks": "推荐"}
{"content": "泛泛", "marks": "推荐"}
{"content": "想读", "marks": "力荐"}
{"content": "以前买的，一直没有读完，比数学之美差远了", "marks": "还行"}
{"content": "简单的道理，讲的太玄。", "marks": "较差"}
{"content": "真的很希望大一的自己看过, 可惜书是2011年写的", "marks": "推荐"}
{"content": "在多看买的kindle版，几趟公交的功夫看完了。属于科普类，内容还不错，不过非常浅，适合非计算机专业尤其是非理工科专业同学或理工科大一新生阅读", "marks": "还行"}
{"content": "一个新手小白。看完还是有些不懂。如果之前明白的，看这个可以帮你加深理解，否则像我这种门外汉，不做笔记的话美国多久就忘记了。", "marks": "还行"}
{"content": "科普书", "marks": "推荐"}
{"content": "作为科普读物很不错，可以偷懒少做一些科研的survey。", "marks": "推荐"}
{"content": "全书浅显易懂，是很好的科普读物。", "marks": "力荐"}
{"content": "一本科普广泛应用的经典算法的好书，不过仅限于科普", "marks": "推荐"}
{"content": "在飞机上看的，居然看得饶有兴致", "marks": "推荐"}
{"content": "算法入门前可以看到东西", "marks": "推荐"}
{"content": "科普作品，快速入门。不过NP问题是搞不定了，学的东西都还给宋公了，，还是当时就没学明白？！", "marks": "推荐"}
{"content": "给五星真的不算多。我学的专业和计算机相关，但里面的好多东西我也不是很清楚，看完这本书，真的感觉茅塞顿开啊~而且，现在是信息时代，能改变计算机或者互联网行业的伟大算法必然会极大程度的改变世界。", "marks": "力荐"}
{"content": "把世嘉写成sEgA的奇人。。。", "marks": "很差"}
{"content": "翻译质量有提升空间。", "marks": "还行"}
{"content": "微软，苹果，谷歌，计算机信息技术和互联网领域不能忽略的三家公司利益纠葛，未来判断和影响纠缠不休的巨头三十年来爱恨情仇。中国的BAT，那么他们叫什么AGM。", "marks": "推荐"}
{"content": "即使已经知道还是被回顾时这个行业的进化速度惊到了. 真是让人兴奋的时代. ", "marks": "推荐"}
{"content": "感觉翻译有问题，比如可处理问题，request请求吧? 不过反垄断诉讼对微软的影响，那个值得思考，有意思。", "marks": "还行"}
{"content": "一般。大多是事实和数据的累积，缺少良好的组织和故事性，也并没有提供多少启发人的创见。", "marks": "还行"}
{"content": "不能再烂。\n翻译者完全是外行，用来形容google的时候反复提到“网站每天受理xxx个问题”，我就奇怪了这个“问题”究竟是什么，google难道是百度知道吗？细想一下翻译者肯定是把query取第一义直接拿来用了。文中这中驴头不对马嘴的翻译到处都是，看到一半的时候果断放弃。", "marks": "很差"}
{"content": "收到中信出版社给送的书，正好也是挺感兴趣的内容。这本书可以描述成微软在关键节点的不作为，成就了另外两家伟大的公司——苹果与谷歌。", "marks": "推荐"}
{"content": "可惜了辛诺夫斯基，也许最终他还是输掉了微软内部的政治斗争才不得不离开，好在他Windows大一统的思想遗产总归是留了下来", "marks": "推荐"}
{"content": "几家巨头之年的争斗，互联网还真是血雨腥风啊。翻译懒得吐槽了，错别字和莫名其妙的地方一大堆。", "marks": "推荐"}
{"content": "在IT领域，判断与选择，一念之差，去之千里，残酷！内容水分很大，不值49元。", "marks": "还行"}
{"content": "公司书架上的书，26W字，花了两个晚上，，顺便记录了1700字笔记。写的是98年到11年，微软，谷歌，苹果直接的商业战争，微软几乎输掉了所有的战争，股价的表现也说明的如此：98年底，微软4446亿美元，苹果55亿美元，谷歌1000W美元；11年8月9日，苹果3467亿美元，微软2143亿美元，谷歌1851亿美元。我关注的重点在三个公司文化的不同和微软失败的原因，从外包，更能反思自己现在工作的成败。//给三星的原因：中文翻译很差，很多句子都不太通顺。", "marks": "还行"}
{"content": "大公司的命运", "marks": "力荐"}
{"content": "论核心竞争力，微软是Windows与Office的垄断所带来的巨大现金流；苹果把技术化繁为简，贴近人性，令消费者心服口服地卖单；谷歌则手握无与伦比的搜索技术，随着互联网一日千里，水涨船高。", "marks": "还行"}
{"content": "唉，远远不如浪潮之巅～", "marks": "较差"}
{"content": "科技界的历史，有空可以看看。不过我对这些纷争已经看的很淡了，这种叙事类的书我还是少看为好", "marks": "较差"}
{"content": "其实一个简单的现象后面存在着激烈的商业斗争，而商业斗争的威力与残酷绝不亚于一场传统意义上的战争，虽然书中很多属于产品及技术方面的内容了解的不很深刻，但是仍能感觉到实际意义上的商场上纷飞的战火。", "marks": "还行"}
{"content": "当做科技史来看的。。。", "marks": "推荐"}
{"content": "畅销书格式的，互联网题材的，拉家常...", "marks": "较差"}
{"content": "挺好的一本书，关于苹果，谷歌和微软……谁知道，排名分先后", "marks": "推荐"}
{"content": "写的还算详尽，翻的不忍直视。", "marks": "还行"}
{"content": "对于那段好玩的历史不懂的童鞋可以看看哈，非常之细节", "marks": "推荐"}
{"content": "叙述乏味缺乏重点，翻译挺烂，倒是装帧很好看。", "marks": "较差"}
{"content": "不错，主要讲苹果和Google如何踩着微软的肩膀上位，在互联网和电子消费领域，微软其实输给了自己", "marks": "推荐"}
{"content": "比较清楚吧，就是有点无聊。", "marks": "还行"}
{"content": "逻辑混乱。", "marks": "很差"}
{"content": "其实吧，干巴巴的...", "marks": "还行"}
{"content": "好精彩啊……数字战争，不仅是商业的较量，更是思想的碰撞和精神的交汇~~", "marks": "推荐"}
{"content": "微软和苹果、谷歌的战争，全书重点放在了数字音乐、搜索、手机和平板电脑四个方面，独立成章，蛮详细的，推荐看。看书评说翻译不好，但是我没体会到，也不算是太差吧，不影响阅读。", "marks": "推荐"}
{"content": "图书馆借的，没什么感觉，信息量不大。", "marks": "较差"}
{"content": "这不是维基百科么。", "marks": "很差"}
{"content": "好书！作者详细描绘了谷歌、苹果和微软三家巨头如何在互联网浪潮中占据自己的阵地，展示了企业文化和战略的重要，唯一可惜的是作者貌似是一微软黑。。。", "marks": "力荐"}
{"content": "错别字有点多啊，还是出版物啊，编辑呢？还有写的有点不客观，估计是鲍尔默被黑的最惨的一次吧。不过也算是了解Microsoft google apple三个公司纷争的一个途径吧。", "marks": "还行"}
{"content": "只能说此一时彼一时", "marks": "还行"}
{"content": "基本就是说，鲍尔默是个傻逼，乔布斯万岁~谷歌万岁~微软是个傻逼", "marks": "较差"}
{"content": "微软、苹果、谷歌这里面所有的弯弯曲曲，故事很多，内情很多。", "marks": "推荐"}
{"content": "microsoft的尾大不掉和公司内斗成就了apple的复苏和google的成长,nokia就是一悲剧...", "marks": "推荐"}
{"content": "故事书.......", "marks": "还行"}
{"content": "也……也还好啦。", "marks": "还行"}
{"content": "避免陷入挫折感，關注計劃和目標，而不要陷入問題中，出去走走，或者運動下。", "marks": "推荐"}
{"content": "怎么说呢，还是有有意思的小段落，不过程序员要思考的可比书里写得要多多了。而且感觉是写给有编程经验的不会编程的人 ... ", "marks": "还行"}
{"content": "過於簡單了", "marks": "推荐"}
{"content": "读了前面，后来没时间了，以后还得回来再重读", "marks": "力荐"}
{"content": "由于不懂c++语言，读起来有一定难度，但是整体的逻辑思维，解决问题的方式值得细细推敲", "marks": "推荐"}
{"content": "没有做到让人学会思考的程度", "marks": "还行"}
{"content": "本书着重讲解了如何通过编程解决某些实际问题，是将编程知识概况成方法的一本书。将问题分解，使它们更容易被解决；函数、库、类实现复用；挑选合适的数据结构。", "marks": "还行"}
{"content": "暗时间里说思维的书很重要，思维方式影响着方方面面，就像看完七周七语言的感受。如果只学过c++/java（不用其动态特性），就不知道原来编程可以这么编，prolog的声明式编程真的好特别，数据即代码的思想也是 #参coolshell中的元驱动编程模式跟冒号课堂的元编程范式 #好像都跟书本身的内容无关= =", "marks": "推荐"}
{"content": "编程的真正挑战不是学习一种语言的语法，而是学习创造性的解决问题，从而构建美妙的应用。  ", "marks": "还行"}
{"content": "读了之后才发现我不想当程序员", "marks": "较差"}
{"content": "我还不知道自己怎么思考的", "marks": "推荐"}
{"content": "对编程思维方式的入门讨论", "marks": "还行"}
{"content": "前面两章还有点意思。但是后面说的感觉很没含量。解决问题的技巧，1 看清问题，2 划分问题，3 从自己所知开始，4 类比 5 不行就尝试减少问题。用递归解决问题这里有点意思。头递归和尾递归。头递归传递的东西多，一般使用尾递归。", "marks": "还行"}
{"content": "过年回家那几天边晒太阳边看，在我回来前的那天看完了。", "marks": "推荐"}
{"content": "非常基本的指导。对于入门应该还好。对于我真正有用的是第一章讲解基本的解决问题方法。", "marks": "很差"}
{"content": "是我想要看的内容", "marks": "力荐"}
{"content": "很遗憾 没有学会", "marks": "力荐"}
{"content": "不适合作为基础编程入门书，倒是合适学过编程之后的人回过头来梳理一下自己的思维，不管是思维定势，还是某些思维还不太成熟，这本书的某些点上可能真的是你的知识盲点，然而就整本书而言，感觉trick多于solid knowledge。", "marks": "还行"}
{"content": "大学时读这本书最合适了,递归那章尤其透彻。", "marks": "推荐"}
{"content": "写的超级棒！", "marks": "力荐"}
{"content": "只看了递归一个章节, 一开始觉得概念不算, 细想后, 也就那么回事~...", "marks": "推荐"}
{"content": "对困难问题的解题思路", "marks": "推荐"}
{"content": "这本书深刻地证明了，代码比数学公式难懂得多。我觉得机器学习类出实战类的书籍就是哗众取宠。", "marks": "很差"}
{"content": "喜欢这种理论不深入,但是有可运行的代码/实例能快速入门的书籍.", "marks": "推荐"}
{"content": "在这本书的帮助下, 1 小时理解了决策树算法的核心思路, 赚了一个 HHKB", "marks": "力荐"}
{"content": "我觉得“决不重复造轮子”的工程师应该是不喜欢这种书的，因为这本书就是在教你造轮子。学术范儿的科学家应该也不喜欢这种书，因为理论部分真的弱。所以这本书才叫入门教材吧，给我的启发就是实例应用部分稍稍开阔了点见识。", "marks": "还行"}
{"content": "代码质量不行，感觉这作者 Python 水平太一般。当作入门读物还不错。", "marks": "还行"}
{"content": "例子给出的代码很差，丝毫不考虑读者的感受。", "marks": "很差"}
{"content": "不适合小白。。。。结合《统计学习方法》食用，效果更佳～～", "marks": "推荐"}
{"content": "读到第三章，实在读不下去了，理论太强", "marks": "推荐"}
{"content": "比较老旧了。", "marks": "还行"}
{"content": "介绍了机器学习领域十大算法的原理及应用，但没有深入其背后的数学分析，非常适合我这样的数学渣上路。我要弄懂回归、SVM和AdaBoost还存在明显的障碍。", "marks": "力荐"}
{"content": "处于原理和直接sdk之间的自己实现算法.  不去看数学原理的书, 看这个真的没什么用.  ", "marks": "还行"}
{"content": "认真的说，这本书写得不是特别好，但是比较适合入门了。由于原理没有说清楚，代码写得也一般（大量的缩写变量名，没有注释），所以我对很多算法都没有理解。接下来看周志华的《机器学习》", "marks": "还行"}
{"content": "介绍机器学习的入门书，使用Python实现。示范的例子都挺有趣的，比如国会选举、twitter数据的分析。算法的覆盖面挺广，可惜原理的讲解有些浅，因此需要一些基础知识。书中没有神经网络算法的介绍，有些遗憾。", "marks": "还行"}
{"content": "PCA, SVD, MapReduce", "marks": "推荐"}
{"content": "讲的比较清楚，虽然偏基础一些", "marks": "还行"}
{"content": "终于看完了,感觉离入门还有很大的距离:一是缺乏实践,二是数学忘得光光的,还得补上才行", "marks": "力荐"}
{"content": "前四章", "marks": "推荐"}
{"content": "战五渣啊......", "marks": "较差"}
{"content": "实在有些过于简单了，内容不多", "marks": "还行"}
{"content": "好痛苦", "marks": "力荐"}
{"content": "可以粗略的了解下领域", "marks": "还行"}
{"content": "好书，只是自己对python数据结构还不够熟练，看着不顺畅；感觉算法里面有错误；再次谢谢作者和译者带来的这本好书", "marks": "力荐"}
{"content": "工程上应用很好，但是很多算法的原理没有讲清楚，像logistic回归之类的还是要看统计学习方法", "marks": "推荐"}
{"content": "身为一个只会写Python还写的不好的学渣。很多东西就都指望这个了。", "marks": "推荐"}
{"content": "还没读完的书", "marks": "力荐"}
{"content": "挺好，都是Python代码但比Python数据挖掘那本更适合入门", "marks": "推荐"}
{"content": "其实只读了一点点，但是实在受不了它一直放在我的“在读”list中。。。", "marks": "还行"}
{"content": "科普启蒙读物", "marks": "推荐"}
{"content": "找个时间可以再看一遍。之前通读了一遍，最近因为在写bayes分类器，所以又拿了出来，感觉理解得深刻了。", "marks": "还行"}
{"content": "需要重读", "marks": "推荐"}
{"content": "用实例来讲解，生动形象", "marks": "力荐"}
{"content": "其实是本非常棒的ML入门书，写的很浅显，翻译得也很流畅，读起来毫不费力，数学方面的东西比较少，所以甚至直接放弃了EM算法，但理论和实践相结合也是学习ML的最佳途径，不知道为啥有些人给的评分很低。。。不过有些python代码的缩进没处理好，还好提供源代码下载。", "marks": "力荐"}
{"content": "有启发，部分代码写得确实不太好。", "marks": "力荐"}
{"content": "机器学习 python sklearn", "marks": "推荐"}
{"content": "不好看。作者写的太啰嗦，没有关注原理而直接将算法。讲的逻辑结构也较混乱，把握不到整体的思路。也许都学会之后再翻做参考书比较好？", "marks": "较差"}
{"content": "当时为了从音视频想转行到ML看的。基本囊括了ML的所有基础算法，理论轻描淡写，Python代码简洁明了，配合一些数据集，简直是ML实践必备。", "marks": "力荐"}
{"content": "我觉得对于初学者来说简直是太棒了", "marks": "推荐"}
{"content": "mapreduce和FPgrowth算法看的比较略，终于看完了一本讲machinelearning的书，第三本专业书，加油！Python代码示例，很棒！", "marks": "力荐"}
{"content": "2,7不支持 有点尬", "marks": "推荐"}
{"content": "历时1个月，终于读完。问自己，当初在学校的时间都在干嘛呢？全书分为4个部分，分别是分类（有监督学习，包括KNN/决策树/朴素贝叶斯/逻辑斯蒂回归/svm/改变样本权重的bagging和adaboosting）、回归（有监督学习，线性回归、局部加权、特征维度比样本个数多时缩减系数，如岭回归、lasso等，树回归，这块掌握不太好）、无监督学习（kmeans、apriori/fp-growth）以及其他工具（PCA/SVD/MAPREDUCE）。基本上都比较清楚了，过段时间再刷一遍代码吧", "marks": "推荐"}
{"content": "硬啃，硬是把这本书啃完了，虽然不懂为何用这数学公式，当也看出用意，书写的易懂。然呃和现在说的神经网络学习还没有扯上关联，书还是有些年头了，打个基础👌", "marks": "推荐"}
{"content": "第一部分介绍了机器学习的基础知识，然后讨论如何使用机器学习算法进行分类；第二部分讨论连续型数值的回归预测问题；第三部分讨论无监督学习；第四部分介绍了机器学习算法使用到的附属工具。", "marks": "还行"}
{"content": "我。终于把所有的代码都写了一遍！结果发现软肋是数学，又要开始恶补数学了！", "marks": "推荐"}
{"content": "入门好书，以代码为基础来介绍算法，机器学习的算法对数学的要求比较高，这是个好的切入思路。理论介绍不太清晰，大概能达到‘了解’ 程度。", "marks": "推荐"}
{"content": "比较简单，数学原理讲得不清楚", "marks": "还行"}
{"content": "很好的机器学习入门书籍", "marks": "力荐"}
{"content": "案例很多 不过篇幅有限 感觉有一些讲的不够透彻", "marks": "推荐"}
{"content": "跟R语言实战完全不同的套路\n每个算法都用Python重新从底层写起\n对应用型选手来说不那么适用\n不过编的还是挺好的", "marks": "还行"}
{"content": "有人说这本书不好，不科学，其实我觉得还是不错的。对于我这种编程小白来说，真是手把手教我怎么用python。如果想要科学性可以看李航的《统计学习方法》和周志华的《机器学习》，这本书既然叫“实战”了，确实是偏重实战一些。理论上跳跃比较大，可以看其他书作为补充。", "marks": "推荐"}
{"content": "用来学python的", "marks": "推荐"}
{"content": "去年毕业前一阵买的，刚扫完，算法写一遍。下集预告：五月份买的《数据挖掘：概念与技术》", "marks": "力荐"}
{"content": "用实例讲解，分类，聚类等常用的机器学习算法，python代码编写，简单易懂", "marks": "力荐"}
{"content": "入门简介", "marks": "还行"}
{"content": "简明易懂，需要实践", "marks": "力荐"}
{"content": "是本看完能对各类机器学习算法有个整体了解的好书，虽然python程序没看懂，但也了解到这门语言的大用处，继续学习。--这是上次的。\n读完之后，对机器学习有了初步的整体的认识，期待阅读第二遍以及读书笔记总结，希望到时候我已经学会python入门了，哈哈。", "marks": "推荐"}
{"content": "挺棒的一本书，非常非常基础，只需要掌握基础Python和一些线性代数知识即可，主要是聚类分类预测方面的内容，主要讲了原理，代码还有可优化空间，SVM真的很难懂啊，线性代数还是很重要滴。", "marks": "力荐"}
{"content": "实用", "marks": "推荐"}
{"content": "……又看了一半（大雾）", "marks": "推荐"}
{"content": "配合《统计学习方法》读确实好。一个讲数理原理，这个来实现。", "marks": "力荐"}
{"content": "学习机器学习中与实践相关比较简明易懂的书", "marks": "推荐"}
{"content": "超级初级的一本书", "marks": "推荐"}
{"content": "用python实现了一些经典算法，讲的还算蛮清晰的，不过决策树之后的代码我就没心思看了。", "marks": "推荐"}
{"content": "温故知新", "marks": "推荐"}
{"content": "一本系统介绍数据挖掘算法的工具书。", "marks": "还行"}
{"content": "实战对于小白用户还是很有友好的，理论的外壳全部褪去了。如果看了《统计学习方法》，再看这本，真的就没有什么难点了。", "marks": "力荐"}
{"content": "这本书定位太尴尬了，理论的东西不多，大篇文字竟然在解释代码，而Python代码写的实在可读性不高。讲真，读这本书还不如看scikit-learn文档呢。", "marks": "较差"}
{"content": "搞清楚自己想要什么。", "marks": "推荐"}
{"content": "好难懂啊。。。", "marks": "推荐"}
{"content": "例子还行，但是作者一定是java过来的，代码完全不符合python规范真是一件很恶心的事情。", "marks": "推荐"}
{"content": "代码读者很辛苦，特别是代码注释都在正文里面。", "marks": "较差"}
{"content": "理论较少，代码比较多", "marks": "还行"}
{"content": "通俗易懂，好书", "marks": "力荐"}
{"content": "很多人说这本书太过于基础，或者说这本书的代码比数据公式还复杂。我觉得要么是大家的定位不同，要么是大家根本就没有仔细阅读。这书定位就是机器学习初学者，并且懂python，如果因为自己本身技术很牛或者不懂python就说此书简单垃圾，则有失公允，此外我是书上的代码几乎都阅读过了，感受还是很多的。一方面这本书的阅读需要结合搜索引擎，有些数学算法书中确实没有描述很清楚，需要我们自行搜索学习；另一方面，书中使用python来处理向量和矩阵的运算，真是让人打开眼界（原谅我是python小白）。", "marks": "推荐"}
{"content": "看完有两点收获，一是开会时知道大概在谈什么了，acc，auc啥的；二是还是把它当成黑盒省心，三是感谢魔头推荐", "marks": "推荐"}
{"content": "评论里说这本书理论太强的一定是在逗。这本书简直是python和numpy的小教程。要深入原理的话还是配着别的书一起看比较好。作者字里行间一些憋不住的冷笑话还是蛮好笑的。", "marks": "推荐"}
{"content": "简明易懂，代码风格也好", "marks": "力荐"}
{"content": "学没学过线性代数都忘了，基本上没一点数学底子了，这尼玛怎么学机器学习，读完也就刚了解个概念（悲伤脸）", "marks": "推荐"}
{"content": "代码乱成一团，我也是服。。", "marks": "还行"}
{"content": "适合学过机器学习，但是需要实战的同学。本书以python为实现语言，只需要导入numpy库就可以实现机器学习的算法。内容主要覆盖监督式学习和非监督式学习，大部分常见算法都涉及到，不过缺点在于对算法原理的解释不够全面，例如SVM的原理没有讲清楚，导致代码看不懂。另外，本书用的是python2写的代码，如果自己用python3实现的话，需要做一定的修改。", "marks": "力荐"}
{"content": "5.2.2：“此处本书略去了一个简单的数学推导。” 感受到了作者对一个学渣的深深嘲讽。", "marks": "还行"}
{"content": "结合几种算法 很不错 python实现", "marks": "推荐"}
{"content": "特别适合新手，特别适合新手，特别适合新手。长度适中，举例形象，概念浅显通俗。难得有一个条理清楚 逻辑不迷糊 不堆砌代码打哈哈的书。基于这个理由bonus给五星，以后给别人推荐就这本了。 \n　　 \n　　尤其是前面几章，介绍机器学习的基本概念。作者给我们指明了一个做ML的基本要求：“机器学习的目的在于提炼数据背后的隐含规律。你们应当让机器说人话，而不是说鬼话”。我觉得对于初学者这种概念非常有意义。可惜冲着过来看这本书的都是ML expert，根据书名和期望值就匆匆打了个低分就离开了。", "marks": "力荐"}
{"content": "不少编辑错误。过多细节的代码可能在学习概念时带来一些障碍，但可借鉴的代码和函数规范也是优点。", "marks": "推荐"}
{"content": "精读之后可以写在简历里了", "marks": "力荐"}
{"content": "入门的好书，方便理解，不会因为深涩的理论卡壳。推荐看几遍，过程中多搜索，理解些理论的以及本后的内容。", "marks": "力荐"}
{"content": "算法的讲解一般，使用numpy和scipy的算法实现倒是很有参考价值。", "marks": "推荐"}
{"content": "理论结合实际", "marks": "力荐"}
{"content": "这本书案例很丰富包括机器学习的各种问题，包括分类、聚类、回归、关联都有精彩的应用。但就模型假设、学习策略、优化目标探讨较少，缺少提纲挈领的思路。", "marks": "推荐"}
{"content": "算是摸着门槛在哪里了", "marks": "推荐"}
{"content": "过时了", "marks": "还行"}
{"content": "代码和数学理论都不够深入，若是入门知识点太零散了。", "marks": "还行"}
{"content": "代码很棒，不过理论十分少，另 本书没有我需要的ensemble method和神经网络的例子。", "marks": "推荐"}
{"content": "看这本书的收获很大 代码的变量名起的怪怪的 ", "marks": "推荐"}
{"content": "赶紧去补充数学知识，看的磕磕绊绊的。", "marks": "推荐"}
{"content": "虽然我在阅读的过程中看到作者的代码那么浪费纸张就心痛，不过毕竟能用Python写机器学习算法已经很难的了，总体上还是推荐读的。", "marks": "推荐"}
{"content": "具有很强的实战性", "marks": "力荐"}
{"content": "各主流数据挖掘算法的简单实现。", "marks": "推荐"}
{"content": "未读完。算是经典的实践类书籍，但感觉有点过时了，作者再版似乎已经是有生之年系列，技术类书籍还是要追新。\n算法介绍有些啰嗦，不如直接看Andrew Ng的课。代码也有点丑，python是2.x的，调用库直接全部import，而且不符合python精简的哲学。譬如第二章KNN，三行代码可以搞定的事情写了十几行……", "marks": "还行"}
{"content": "这本书的作风大概是先描述问题，讲下大概思路，明确下主要步骤，最后一行一行一行代码实现。中规中矩，言简意赅。代码对新手理解起来有点困难，不过还是值得学习的。但没有对为什么这样用做出进一步解释，道友们还得找找别的书多看看哈。", "marks": "推荐"}
{"content": "入门用书，原理讲的简单但是复杂的也没讲明白。让我对机器学习有了大概的认知，仅此而已。还有翻译的一般般。", "marks": "还行"}
{"content": "python做机器学习必看", "marks": "力荐"}
{"content": "机器学习不适合用快速上手的方式写出来，没有坚实的理论基础，欲速则不达，翻译的特别好。我去补基础了", "marks": "推荐"}
{"content": "说起来，同样作为机器学习或者说是数据挖掘的入门书，就从讲算法的角度来说，这本比那本《集体智慧编程》来的好多了，虽然伪代码写的不怎么样，但是每段代码后面都有详实的解释，真是让人觉得看代码轻松了不少啊。不过写这书作者写的代码的规范性感觉没有集体智慧编程那作者来的好。然后《集体》那本书，会把整个过程，从获取数据到数据预处理，到选择模型，到最后得出结果，到展示结果全都讲一遍，所以侧重点有所不同吧，自然的，讲算法的部分就不那么透彻了。", "marks": "力荐"}
{"content": "为了面试，花了近两个星期刷完了这本书。虽然不算是机器学习零基础，但是按照书的流程走了一遍下来发现脑子里已经构建了ML的知识体系了。书中的的理论部分讲的不是很多，很多东西作者都是直接给出了公式，而没有给推导过程以及更详细的解释，需要自己从网上在搜索一下相关的资料。书偏重实践，如果能够深入了解每个算法背后原理再参考书中的代码，估计也就能够上手实战了。推荐阅读。", "marks": "力荐"}
{"content": "翻了几章，感觉一般……比较入门", "marks": "还行"}
{"content": "非常不错的一本书。作为一个理论学习了一大堆，但是实践能力很弱的PhD，本书让我感觉非常的亲切。", "marks": "力荐"}
{"content": "值得一读再读，仔细琢磨的书", "marks": "推荐"}
{"content": "建议结合教材来看，理论结合代码效果更好。当时直接看这本书，如果对基础知识不熟悉的话，一些算法实现也不会明白。", "marks": "力荐"}
{"content": "內容不錯然而代碼部分有點小坑啊。。。", "marks": "推荐"}
{"content": "科普类。。。", "marks": "还行"}
{"content": "没看过", "marks": "还行"}
{"content": "学python的书，关于理论的介绍相对偏少", "marks": "推荐"}
{"content": "凑合吧 错误太多 胜在有代码 对码农来说天生的亲切感。", "marks": "推荐"}
{"content": "用python代码简单的实现了机器学习的一些算法，适合大概的感受一下什么是机器学习", "marks": "推荐"}
{"content": "作者不认真", "marks": "还行"}
{"content": "里面的例子和代码都还行，最合适作为入门教材", "marks": "推荐"}
{"content": "攒灰一年，为了写Adaboost的作业才拿出来，本打算靠它迅速解决(抄完)作业，没想到书里的代码太坑，不重写一遍简直难受，最后作业自己做的。。", "marks": "还行"}
{"content": "整本书内容比较浅显，但是代码都是用矩阵算法来写的，这点还不错", "marks": "还行"}
{"content": "不错的书。书中有完整的源码实现。举的例子也很有说服性。", "marks": "力荐"}
{"content": "仔细一看会发现代码挺差的。不知道为啥被捧得这么高。", "marks": "还行"}
{"content": "作为一本标题里带“实战”二字的书还是写的可以的", "marks": "推荐"}
{"content": "介绍了常见的机器学习算法，对python零基础仍可用此书入门ml。然而对算法数学原理涉及较少，建议结合西瓜书和〈统计学习方法〉一起来看。此外代码质量有待提高，关键语句缺少注释，变量名用的缩写含义不清。不过瑕不掩瑜，仍是一本入门神书", "marks": "力荐"}
{"content": "真的好！相当实用！DATA IS GOLD！", "marks": "力荐"}
{"content": "从分类、回归、聚类和关联分析等几个主要方面把主要算法讲的比较通俗易懂，是本入门好书！", "marks": "推荐"}
{"content": "不错，第一本学习机器学习的书，里面涉及到很多代码～可以不断实践！", "marks": "推荐"}
{"content": "这本书删掉所有代码就是菜鸡福音了", "marks": "推荐"}
{"content": "以前不懂的，解释很清楚。很通俗！\n人工智能，机器学习 已经是个大方向了。\n不过要看一下python\n", "marks": "力荐"}
{"content": "以实际例子讲解主要的机器学习算法，适合engineer背景的机器学习的上手", "marks": "推荐"}
{"content": "对基础的机器学习算法做了比较通彻的讲解，结合python的代码实践，可以对基础的各项算法有了比较全面的掌握。机器学习初学者之选", "marks": "推荐"}
{"content": "代码比较臃肿晦涩", "marks": "还行"}
{"content": "没有理论，只有实践，所以配合着《统计学习方法》看，收获很大！", "marks": "力荐"}
{"content": "作为入门书还是挺不错的，至少能练练Python，最好用Jupyter notebook操作书中代码，搭配吴恩达的机器学习课程和统计学习方法理解地更清楚 ，以后还是得撸撸sklearn文档和xgBoost，多做些网上的赛题，搞ML，任重而道远，而这才刚刚开始。", "marks": "推荐"}
{"content": "比较入门的书。", "marks": "还行"}
{"content": "有源码，可执行，需要先看下python，有些理论比较绕看看代码就清楚了。源码有些章节有逻辑错误，特别是apriori。这本书看的比较认真，收获比较大。", "marks": "推荐"}
{"content": "非常入门级，没太大必要看", "marks": "还行"}
{"content": "这本书介绍算法不是特别深。但是绝对能带入门。看过最好的书之一", "marks": "力荐"}
{"content": "使用 Python 讲解机器学习算法，叙述精炼，配合实例讲解，但是在深度上可能不够。", "marks": "推荐"}
{"content": "写得挺浅的，不过不失为一本好书；机器学习想实践的话，是一本用于初级练手/入门的好书", "marks": "力荐"}
{"content": "自学machine learning读的，书中算法都以python代码实现，适合有一定编程基础，入门机器学习的读者。", "marks": "推荐"}
{"content": "有代码的机器学习，适合快速入门", "marks": "力荐"}
{"content": "介绍了使用python语言实现经典的数据挖掘、机器学习领域的算法，每个算法后面都带有几个实例，学以致用，挺不错的。", "marks": "推荐"}
{"content": "研究生阅读", "marks": "推荐"}
{"content": "学完cs229之后看得第一本机器学习的书。主要有代码，可以顺便熟悉一下python，内容上也把最基础的都覆盖到了。", "marks": "力荐"}
{"content": "提供的实例不错", "marks": "力荐"}
{"content": "对于学习机器学习相当不错。", "marks": "力荐"}
{"content": "用Python实际写完一遍十种机器学习算法，你就算是入门了！发现网上很多python实战的机器学习代码都是出自本书，或者是代码雷同。书还是不错的，比教材强一些", "marks": "还行"}
{"content": "很实用 可以很快速的应用 与 introduction to machine learning一起看效果很好", "marks": "推荐"}
{"content": "读了一部分而已", "marks": "推荐"}
{"content": "书中的理论介绍不深，算法相关的代码也是适合于较小数据集的简单实现。但是，对于接触了较多的理论，而不知道从何入手编程实现的读者来说，还是非常值得一读。通过书中的介绍，可以对这些算法的实现思路有初步了解。\n\n本书也是一本很好的入门书箱。\n\n不得不说——翻译得已经算是很好了。", "marks": "推荐"}
{"content": "内容过于简单，适合毫无linux经验的人阅读。", "marks": "还行"}
{"content": "入门看看还行", "marks": "推荐"}
{"content": "HOWTO的文档吧，基本每一章都是独立的，需要配什么样的系统，看那一章就差不多 ，部分例外，但看同一部分就是没问题的。对Linux基础基本没什么要求。", "marks": "还行"}
{"content": "冯诺依曼为了让这台完整的设备成为通用的计算机器，它必须包含某些主要元\n件用于运算、存储数据、控制以及连接操作人员。翻译成现在的术语就是，CPU提供运算和控制功能，内存和磁盘用于存储数据，键盘、鼠标和显示器用于连接操作人员。。变量是RAM 中的一个位置，可以让程序在运行期间存储数据。之所以称它为变量，是因为它的值会随着程序的执行而变化。在高级语言里，声明变量就相当于我们在玩具汇编语言中为一个内存位置起一个名字。启动，但基本思想是一样的，即少量指令足以找到更多指令，后者依次再找到更多的指令。", "marks": "力荐"}
{"content": "Kernighan 开的本科生计算机文化课。", "marks": "还行"}
{"content": "作者是K&R中的那个K，即使是科普也能体现大师级的水平。", "marks": "力荐"}
{"content": "最后关于隐私保护的部分应该予以重视。", "marks": "推荐"}
{"content": "K&R的K老头对当前的新科技了解的都这么多...", "marks": "力荐"}
{"content": "如果我在大学入学前读到这本书，就好了", "marks": "推荐"}
{"content": "后悔没有当时去普林斯顿大学进去看看。居然在普林斯顿住了半年。。。", "marks": "力荐"}
{"content": "基本概念查维基百科就够了。\n", "marks": "还行"}
{"content": "瑕疵还是在翻译。。。", "marks": "推荐"}
{"content": "很棒，很浅。", "marks": "推荐"}
{"content": "就像这本书说的一样：写给没有计算机背景的人看的书，非常浅显易懂，通过这个本书可以让我更加了解这个信息化、数字化社会背后技术的方方面面，以及这些技术所带来的影响", "marks": "力荐"}
{"content": "K for Kernighan", "marks": "推荐"}
{"content": "看这本书的目录，先从硬件讲起，再到软件，网络通信，结构非常合理，小白看完了也就理解这个信息时代了，剩下的靠自己对哪方面感兴趣就去深入学习。不愧是科学家写的书啊。学计算机前看到就好了", "marks": "力荐"}
{"content": "科普书，不适合专业计算机人员", "marks": "推荐"}
{"content": "#分享书籍# The C Programming Language的大神写的书，是整个计算机时代的基础简介。业内人士可以不看，讲的挺浅的。", "marks": "推荐"}
{"content": "IT扫盲书", "marks": "推荐"}
{"content": "给非计算机专业同学的科普读物。", "marks": "推荐"}
{"content": "的确是初级了一点", "marks": "还行"}
{"content": "基础中的基基础", "marks": "推荐"}
{"content": "没想到K神还写过这种书", "marks": "力荐"}
{"content": "渴望被科普", "marks": "还行"}
{"content": "`11.2 跟踪` 写的太好了 翻译的也很出色", "marks": "力荐"}
{"content": "英文书名“D is for Digital”的语感没译出来。关于这个数字世界的硬件、软件与规则种种，果然是文科生也能看得津津有味的计算机科普。", "marks": "力荐"}
{"content": "原来是大神的书，现在才听说", "marks": "力荐"}
{"content": "还是《计算机科学概论》比较好", "marks": "推荐"}
{"content": "对非计算机行业外人介绍是足够了", "marks": "还行"}
{"content": "从目录也可以看出来是本科普书，对计算机专业背景的人来说比较简单，第一部分讲硬件挺有意思，要进阶的话更推荐《编码》这本书，可惜后面部分就和教材一样都是都是简单的概念", "marks": "还行"}
{"content": "小白最佳科普读物，大学白学了。。。", "marks": "力荐"}
{"content": "每一个话题都可以继续深入挖掘，这本书只是个大地图！涵盖了数字化的方方面面，以及为什么比特能统治全世界！有必要再重读一遍巩固一下", "marks": "力荐"}
{"content": "网络的部分很精彩 ", "marks": "力荐"}
{"content": "科普乱炖", "marks": "很差"}
{"content": "真正的计算机领域科普书，写得很全。对我毫无用处，谁要可以拿去。", "marks": "推荐"}
{"content": "对计算机完全不了解的可做入门书。。。注意是完全不了解。。。作者大牛", "marks": "力荐"}
{"content": "比较简单，感觉网络安全的部分写的不错，适合非计算机系的人科普", "marks": "推荐"}
{"content": "【Kindle】计算机入门介绍，适合大一通识教育", "marks": "还行"}
{"content": "说实话，并不是很好的入门书", "marks": "还行"}
{"content": "大师的科普作品。讲的东西并不深，适合相关专业的初学者入门以及对计算机及互联网感兴趣的非专业人士。特别是本书对计算机及软件的介绍不多，而对网络及通信着墨较多，也比较符合大家平时的使用状况。作为SE专业的大三学生，大多数内容已经了解过了，但也学到或者强化了很多细节，而最后的隐私部分之前并没有怎么想过，收获倒蛮大。总之，感谢作者的付出。这种科普书虽然讲得内容都比较浅，但由于面向基础较少的人群，而且涉及面比较广，还是比较考验作者功底的，而大师由于自己对专业理解较为深刻，对要介绍的内容架构设计得比较好，而且介绍起来也能用比较明白易懂的语言把东西讲明白，而不是东一句西一句扯概念。", "marks": "力荐"}
{"content": "作者是亲身经历数字世界逐渐占据社会工作生产生活重要地位的过程，以其资深的经历和长期的思考，将数字化浪潮的若干重要理念和思想在硬件、软件和通信三个方向展开，深入浅出介绍相关知识和流变历程。多年教学经验更让本书对读者更加友好。", "marks": "力荐"}
{"content": "用来科普还不错", "marks": "推荐"}
{"content": "非常好 IT 或 IT 都推荐读一读", "marks": "力荐"}
{"content": "计算机技术扫盲书", "marks": "力荐"}
{"content": "CS101", "marks": "还行"}
{"content": "基本概念都说清楚了，是一本合格的科普读物。", "marks": "推荐"}
{"content": "非常棒的科普，也是普林斯顿的计算机入门教材。全书以浅显易懂的语言和例子介绍了计算机各方面的基础知识，算法那块是我见过的最好的科普，网络隐私那块最实用，介绍了很好的浏览器插件和安全策略。不管行内行外都非常值得一读。", "marks": "力荐"}
{"content": "非常精彩 受益匪浅 非常易读 计算机技术变化那么快 如果能每隔几年出一本就好了 很遗憾关于云计算只有一小节的描述\n2014第二次阅读：这是一本可以多次阅读 常读常新 每次都有收获的一本好书", "marks": "推荐"}
{"content": "挺好的 普及知识 帮助不太懂的人理解这个建构在数据之上的现代社会 然而许多人对自己的数据隐私却不怎么上心 前几天看新闻说黑市的个人数据都不如以前值钱了 看来巨头们数据收集的差不多了 奇点将近呐", "marks": "推荐"}
{"content": "K写的书啊，大牛书，也是王子屯讲课稿的改编版本挺好的", "marks": "力荐"}
{"content": "适合非专业人士的计算机科学导论", "marks": "还行"}
{"content": "#硬件：计算机结构，信息表示；#软件：算法，编程语言，操作系统；#通信：网络，互联网，万维网。", "marks": "力荐"}
{"content": "条理还是挺清楚的，给外行入门挺好的", "marks": "还行"}
{"content": "从硬件到软件再到通信最后到互联网，娓娓道来，将这一领域的知识穿成串，如此大的跨度如此多的概念举重若轻，不愧是经历过计算机各个阶段的大师。能将某一领域的知识框架化并阐述透彻的书都是好书。这本做为计算机领域的科普已不能再好。", "marks": "推荐"}
{"content": "计算机科学概论类的书，相当于计算机科学的科普吧。本书涉及了CS的方方面面，概念也清晰易懂，像我这种自学的看看还是有好处的。", "marks": "推荐"}
{"content": "对于没有基础的人觉得第十章自己最后一段就很受益了。", "marks": "力荐"}
{"content": "看到序就知道买对了\n===\n今天终于看完了,看来javascript真的要一统江湖了,有点太多,缺点也不少", "marks": "还行"}
{"content": "终于把这本教科书般的书看完了，太墨迹了，好在最后两章还算有趣", "marks": "还行"}
{"content": "今天才注意到是kernighan的书！\n每个非专业的人都该读读", "marks": "力荐"}
{"content": "端午的时候，看了本书第三部分“通信”。书是根据普林斯顿大学的教授，根据通识课程的授课内容改写的，写得深入浅出，有很多小案例。书不厚，信息密度却很稠。即使读完都忘了，但对世界的理解更深了，这部分是会留下来的。", "marks": "力荐"}
{"content": "入门佳选", "marks": "推荐"}
{"content": "入门书和专业书的阅读顺序还是应该循序渐进，如果大一读的是这本书而不是计算机网络，也许就不会那么讨厌学网络。不过大一这本书还没有出我也不懂还有外国大学公开课XD。", "marks": "力荐"}
{"content": "计算机体系的分子说", "marks": "力荐"}
{"content": "像百科全书，浏览了一遍。", "marks": "推荐"}
{"content": "入门科普好书", "marks": "力荐"}
{"content": "只读了前3章，看了看目录，还是没有决定要读下去。\n因为对于从业者来说，实在太简单了，没有深奥的内容。", "marks": "还行"}
{"content": "#2015/04/26 看了“硬件”和“软件”两个部分，现在对“通信”部分还没有什么兴趣，以后再看吧。", "marks": "力荐"}
{"content": "来吧，请试着成为一个程序员", "marks": "推荐"}
{"content": "作者亲身经历了计算机发展的各个阶段，然后用通俗易懂的笔法给我们展现了数字技术的发展轨迹以及这些技术对日常生活的影响。本书是基于一门课程的讲义而写的，虽然课程是针对非计算机专业的学生，但是本书对于计算机专业的学生及从业者也会有相当大的价值……", "marks": "力荐"}
{"content": "计算机知识扫盲入门科普书，非计算机专业或文科生必读。讲述硬件、软件、操作系统、编程、网络、人工智能等多个领域的基本概念。", "marks": "力荐"}
{"content": "看看", "marks": "推荐"}
{"content": "还是看教材才能有更细致的认识，书后注解提到的书应该都值得一看", "marks": "推荐"}
{"content": "计算机科学科普书", "marks": "还行"}
{"content": "作为文科生，很受用。后几章和通信相关的内容，作用不大，前几章很详细。", "marks": "推荐"}
{"content": "内容丰富，有关数字技术发展对社会带来的一系列包括法律、伦理等问题讲述的很透彻。", "marks": "推荐"}
{"content": "看到最后才发现原来作者是The C Programing Language的作者，值得每一个专业和非专业的人读的计算机书籍。", "marks": "力荐"}
{"content": "原来是入门书", "marks": "还行"}
{"content": "很不错的科普书，更喜欢Charles Petzold的《编码》。", "marks": "力荐"}
{"content": "其实这本书是《数字图像处理》《软件工程》《计算机网络》《计算机操作系统》\n等等书的集合。", "marks": "力荐"}
{"content": "作为非科班的科普书还是 ok 的", "marks": "还行"}
{"content": "棒棒的科普文 让更多人了解计算机", "marks": "力荐"}
{"content": "科普书，恶补了一些互联网知识。讲的深入浅出，但个人以为这本不如《编码》经典。PS：普林斯顿的校园很美", "marks": "推荐"}
{"content": "真的是一本非常好的普及计算机和网络知识的书，不过一本好书，我确是断断续续差不多快两年才读完，近来的读书效率实在是慢地可怕。", "marks": "力荐"}
{"content": "生动有趣的计算机导论课，虽然是计算机系学生，但是对一些日常经常碰到的计算机领域的名词和原理也不是很清楚，本书给了我很好地解答。特别推荐给每一个文科生。", "marks": "力荐"}
{"content": "羞愧。。。作为电子专业的看科普书还很多不懂的。。。", "marks": "推荐"}
{"content": "温故而知新，非常适合科普", "marks": "推荐"}
{"content": "之前读过的，忘了内容了。从来都是看过就忘。", "marks": "推荐"}
{"content": "好快餐", "marks": "还行"}
{"content": "作者是著名C语言KR教程中的老K,真正的大师,生动的诠释了什么叫深入浅出.非计算机专业的小伙伴看了也可以轻松在计算机的各个领域吹上一个小时牛逼", "marks": "力荐"}
{"content": "全面了解数字化世界的一本好书。", "marks": "力荐"}
{"content": "很好的计算机科普，适合小白。另外《编码》也不错，都可以看看。", "marks": "力荐"}
{"content": "2016年3月份看的", "marks": "推荐"}
{"content": "这可能是最简单也最适合大众的计算机科普读物了。。。  真正意义上的科普！", "marks": "推荐"}
{"content": "这就是一本计算机基础知识大全。想考计算机二级的可以看看，比看知识点有趣的多", "marks": "还行"}
{"content": "学到不少 还把学过的细节知识连上了 不错的科普", "marks": "推荐"}
{"content": "计算机科普的一本好书，比大学计算机教程好多了", "marks": "推荐"}
{"content": "不错，读完了你就知道怎么和技术问问题而不会被当做白痴了。。。", "marks": "力荐"}
{"content": "这本书介绍了数字世界的所以基本常识，适合没有计算机背景的人了解数字世界。有计算机背景的人读一下也会有不少收获。", "marks": "推荐"}
{"content": "正在看", "marks": "推荐"}
{"content": "很好的书，给想要了解计算机专业的人准备的书籍。", "marks": "推荐"}
{"content": "科普读物，翻翻就好。", "marks": "较差"}
{"content": "介绍了计算机的各个方面，但对于现在的bigdata，cloud computing没有相关的。", "marks": "推荐"}
{"content": "想法独特，让我知道了银行卡号不是顺序排列的", "marks": "力荐"}
{"content": "看个热闹...想起本科计算机2级考试的一些知识...世界上只有10种人 懂2进制和不懂2进制的", "marks": "推荐"}
{"content": "计算机扫盲书，普及硬软通信三个方面的常识，感觉比大力推崇的《编码》要好(那本明明是写给初中生看的╮(╯_╰)╭)，第三部分关于互联网协议传输以及数据信息隐私表达的很好，简单明了的解释了信息是如何传递以及第三方(广告商)是如何跟踪我们上网足迹等信息时代每个人都应该大致了解的内容。", "marks": "力荐"}
{"content": "计算机科普，值得一看。", "marks": "推荐"}
{"content": "还不错，算科普，适合非计算机的学生读", "marks": "推荐"}
{"content": "语言塑造我们的思维方式，决定我们可以思考什么", "marks": "还行"}
{"content": "生动版的大学计算机基础", "marks": "还行"}
{"content": "很不错的科普读物。", "marks": "推荐"}
{"content": "算是我 2016 年读完的第一本书。读完了才知道是大名鼎鼎 UNIX 创始人之一，《C Programming Language》的作者 Kernighan 写的。主要介绍了硬件、软件以及通信的相关概念，算是一本科普书。推荐每一个互联网相关的从业者读一读。 ", "marks": "力荐"}
{"content": "评分都是瞎评的，科普读物，本来就是给小白读的。难道要让童话书写成红楼梦才是好书？", "marks": "力荐"}
{"content": "好书常读常新 如果你从没学过计算机 这本书可以带你一窥计算机的奥秘 通俗易懂 页数也不多 ", "marks": "力荐"}
{"content": "多么希望学校能用这本书做教材啊~~~", "marks": "力荐"}
{"content": "译者还是花了些功夫，有一定文字功底了。", "marks": "力荐"}
{"content": "出版社把这本书毁了。", "marks": "还行"}
{"content": "半个小时左右就翻完了，没什么实质性内容，对一些Session的管理，以及一些负载均衡策略以及TFS,KV存储感兴趣，但是书上都是浅尝辄止，这更像是一本人物传记书，当成技术书看就免了。", "marks": "还行"}
{"content": "流水账，贵，不推荐。看不出来目标读者会是谁……这样出书真没诚意！", "marks": "很差"}
{"content": "规模从小做到大，技术与业务相互支撑并非一蹴而就，重要的是把握住了变化的机遇。最难能可贵的是能招募到合适的牛人。", "marks": "推荐"}
{"content": "无论是产品还是技术，它都是“长”成这样的，不是突然爆出来的。", "marks": "推荐"}
{"content": "流水账为主，前面讲架构的部分还挺有收获。以及终于开始看技术类的书了。。。", "marks": "还行"}
{"content": "#豆瓣阅读# 挺有趣的，虽然中段开始内容无聊起来了。", "marks": "推荐"}
{"content": "看这本的时候很容易想起《数学之美》。两者相比，前者明显属于技术层面，而后者却有着世界观与方法论的高层架构。但这种活生生的技术史实在难得一见，让我这个做了社科类工作的理科女有一种非常亲切而尊敬的感慨。书里除了大量的技术回顾之外，另外提到的与管理相关的几乎就只剩一件事：晋升——这才是硬道理啊。", "marks": "推荐"}
{"content": "门外管窥", "marks": "力荐"}
{"content": "1.技术水平的提升在于不断遇到问题解决问题，一个公司整体技术架构的更新换代也是如此；2.中小型公司的技术问题买商业解决方案即可，大型企业遇到的技术难题往往需要靠自己的研发解决；3.牛逼的人都有苦逼的过去，多做事情，不会吃亏，即使不是你的事情", "marks": "推荐"}
{"content": "瞄了大半，幽默诙谐 。。", "marks": "推荐"}
{"content": "还行，叙述较多，技术较少，能看个大概，有些地方重复，角度较高，没有说到淘宝不好的地方", "marks": "推荐"}
{"content": "和网上的那篇文章基本上一样，很快就读完了，感觉有点不划算", "marks": "推荐"}
{"content": "关于淘宝的历史。对那些技术名词懵懵懂懂。", "marks": "推荐"}
{"content": "大开眼界啊，虽然好多东西都是第一次听说。。", "marks": "推荐"}
{"content": "前面还不错，后面编的乱乱的。很多技术内容还是看不懂，技术人员看作用会更大点吧~", "marks": "还行"}
{"content": "技术闲篇儿 + 八卦", "marks": "推荐"}
{"content": "借来看的，像是一篇长篇知乎文", "marks": "还行"}
{"content": "允许我说句伤人和悲哀的话吧。技术工程师和小项目经理的十年，给公司的贡献太大了，留给自己的东西太少了。无论给互联网行业本身做多大的包装，树立多少金闪闪的偶像巨巨，没有大创造权限的工程师和小项目经理只能是真正的普通劳动者。资格挺老，江湖太小，这就是我们底层IT人羞于讨论的话题。", "marks": "还行"}
{"content": "书还是不错，像是讲故事一样，突然有了点当年看《Borland传奇》的感觉。不过基本上没技术细节，就是大体的发展框架。本来想打4星，但是书里面有些段落竟然能前后一字不差地重复两遍，甚至三遍，不得不拿掉1颗星。", "marks": "还行"}
{"content": "这书就前半部分有用，后半部分访谈价值不大，且与前面的内容多有重复。最要命的是这么薄一本，价格还不低，真正有用的干货还真不多，性价比低了点。", "marks": "还行"}
{"content": "优秀的架构多数都是大同小异", "marks": "推荐"}
{"content": "大多数也是道听途说而已, 行文没有组织. 看得出来taobao的技术起点不高", "marks": "较差"}
{"content": "3.5 ～ 4", "marks": "推荐"}
{"content": "其实技术讲的不多，用很多“人”描绘了一个轮廓。讲架构的时候一直在对比，借用@anrs 一句话：优秀的架构多数都是大同小异 ...", "marks": "推荐"}
{"content": "早读早受益\n", "marks": "力荐"}
{"content": "内容有一半是心灵鸡汤，p127前值得一读，第六章有大量重复内容，两半平衡下只能给个中间分，价格无论如何是坑爹的", "marks": "还行"}
{"content": "好的系统是进化出来的", "marks": "还行"}
{"content": "挺不错的", "marks": "力荐"}
{"content": "很多在校长博客里都看过了，应该付钱，但是定价45实在是太贵了", "marks": "推荐"}
{"content": "大公司病的成因", "marks": "还行"}
{"content": "4星给历史", "marks": "推荐"}
{"content": "本身技术出生，看这本书没有太多收货，我纯粹当小说来看。", "marks": "较差"}
{"content": "技术词汇太多，借着以前的老底痛苦的看了3章就发给程序管理员了，估计他能领会", "marks": "还行"}
{"content": "是不是入错行了？", "marks": "推荐"}
{"content": "说是传记不传奇，说是技术没细节。没有做好定位", "marks": "较差"}
{"content": "谈了一些淘宝发展的故事梗概，涉及技术的地方都基本上点到为止", "marks": "还行"}
{"content": "企业的发展历程，以假修真是一个必须的过程", "marks": "还行"}
{"content": "还是有点干货的，道理明摆着！", "marks": "推荐"}
{"content": "淘宝从一个小网站，到现在的规模，用了十年时间。但行好事，莫问前程，谁能想到可以到这样的系统的呢？一开始，也不用考虑太多架构什么的，先把功能实现出来，这才是最为要紧的事情。", "marks": "还行"}
{"content": "太流水账了", "marks": "较差"}
{"content": "对于工程师的成长有一定的帮助，技术方面的内容较少，更多的是一种概念上的介绍。淘宝业务对技术架构影响和推动写的还算可以。", "marks": "还行"}
{"content": "前半部分还不错，使我们窥探了淘宝的架构，后半部分降了一星，，，，", "marks": "还行"}
{"content": "多数都是网上的段子，文笔轻松，当做消遣看看还不错。虽然不是我掏钱买的，但是觉得这定价与这内容不符啊。", "marks": "还行"}
{"content": "在读这本书的时候，可以思考总结下自己的过去。", "marks": "推荐"}
{"content": "拓展下视野", "marks": "推荐"}
{"content": "机场读物。当故事看了。", "marks": "推荐"}
{"content": "读起来像一部CSP发展史，但为什么有种振奋人心的感觉呢！想来一个企业的发展，也像一个人的发展一样，再平淡无奇的事，从更大尺度上来看就是值得玩味的了。", "marks": "推荐"}
{"content": "很有趣的书~感觉阿里真是个不错的公司~", "marks": "推荐"}
{"content": "技术类书籍，普通人看了就是了解一下而已。", "marks": "推荐"}
{"content": "之前在学校的时候想学技术，歪歪推荐给我的其中一本书，现在才看完，惭愧啊", "marks": "还行"}
{"content": "1）一个好的设计不是天生的，而是逐渐演化的。\n2）用户持续增长的需求会倒逼技术进步，技术的进步支撑业务的发展。\n3）当你成为世界第一的时候，你面临的问题也是世界级的，没有现成的方案，你就要自己去创造解决方案。", "marks": "推荐"}
{"content": "这样的技术介绍书籍该多写点，感谢作者。另外云风的一系列也写的很好", "marks": "力荐"}
{"content": "原来大牛们也就那样了", "marks": "还行"}
{"content": "挺水的，没啥细节", "marks": "还行"}
{"content": "很有意思。", "marks": "力荐"}
{"content": "内容有些重复，不过还是很惊艳的~！", "marks": "推荐"}
{"content": "前半部分收获颇多，开视野の好假眼", "marks": "推荐"}
{"content": "讲述一个技术公司成长的历程，以及一帮大牛的程序世界。当小说一样看完了，阿里巴巴的技术栈成长历史值得借鉴。", "marks": "推荐"}
{"content": "技术角度看淘宝的发展，每个牛逼的现在都有个苦逼的当年，对书末几位大牛的采访印象深刻，几乎每个大牛对年轻人的寄语都是找到兴趣、扎根下去、投入时间、不问回报不计眼前，名利自然是水到渠成的事情，别浮躁。为多隆的专注和执着感叹：“发现问题，解决问题，不要绕开问题的本身；多做事情，不会吃亏，即使不是你的事情。”", "marks": "还行"}
{"content": "过来认识认识淘宝技术大牛有哪些~~", "marks": "推荐"}
{"content": "完全没想到淘宝最早是LAMP", "marks": "推荐"}
{"content": "还行。比较流水账", "marks": "还行"}
{"content": "技术很细致，也很高深。这本书深深的打动我的是，技术是积累而来的，而不是升级而来的！让我得重新规划自己的职业发展方向，这本书很重要！", "marks": "力荐"}
{"content": "电商", "marks": "还行"}
{"content": "垃圾", "marks": "很差"}
{"content": "泥煤花了很多钱买的电子书，能看懂的十分十分少……书开始写得蛮精彩，让人充分感受到淘宝一路走来多牛逼，后面重复内容居多~看这样的书最大的收获就是让自己惭愧", "marks": "推荐"}
{"content": "最后两章不错，长见识", "marks": "推荐"}
{"content": "写的非常有趣，该涉及的技术和相关商业发展也一点没漏。一点一点看着淘宝的搜索引擎做得越来越nb，业内最顶尖的人才都跑到tb、度娘和企鹅去了。ps子柳校长收了我吧", "marks": "力荐"}
{"content": "站在巨人肩膀上 走一次", "marks": "力荐"}
{"content": "不明觉厉", "marks": "推荐"}
{"content": "如果要了解淘宝技术史，是不错的回顾。可惜我并不感兴趣。最反感是淘宝的花名，跟用9527一般消灭个性有什么不同？至少给个对照表，个人详细介绍啊。", "marks": "较差"}
{"content": "难得给个两星的评价，因为离我的预期实在太远了，后悔买了这本书。", "marks": "较差"}
{"content": "典型的电商网站发展路线。用户量很是能推动技术创新的。一个人要能在公司里能发展得更好，自己要专注于技术，也要做不是自己责任内的东西。自己努力了，把握好机会即可。", "marks": "推荐"}
{"content": "一般借着公司名气出书的有两种结果，一种是让人对公司更加敬仰了，另一种是让人感叹这公司什么人都要。显然这本书的情况不属于前者。", "marks": "较差"}
{"content": "八卦看看即可", "marks": "还行"}
{"content": "后面两章算是个人传记了, 如何想当作技术书籍来读, 就只看前面部分吧, 或者直接到作者的blog看个够 [淘宝技术发展](http://kb.cnblogs.com/page/132724/)", "marks": "还行"}
{"content": "超巨型企业的技术演化，工程师们的经验与心得。", "marks": "推荐"}
{"content": "不够出彩", "marks": "还行"}
{"content": "小白读物，适合我^^", "marks": "推荐"}
{"content": "一个半小时翻了一遍，虽然讲的很简略，还是很exciting的，业务需求带动技术创新，技术反过来促进业务发展。Problem solving真是最有成就感的事情。", "marks": "还行"}
{"content": "这本书写得散乱，没有太系统，本来最多三星的。不过关于技术架构的演进部分很喜欢，所以加一星。 从架构变化来看，所有的东西都是需求驱动的，业务变化在改进思想，去IOE是一种需要，不是一种必需要追捧的潮流，可惜很多人往往以为这是技术先进性的代表而不考虑自已是否能够做到。", "marks": "推荐"}
{"content": "后面干货较少，取名技术十年有失偏颇", "marks": "推荐"}
{"content": "前半本值得看看，什么架构都是一点点改出来的，一上来就指点江山的十有八九是大忽悠。", "marks": "推荐"}
{"content": "可以参考一下淘宝前期是怎么做出来的,而且我觉得第3章,企业级Java网站;第5章,分布式电子商务操作系统 值得一读.前5章的内容还是蛮充实的,后两章就有点滥竽充数了.", "marks": "推荐"}
{"content": "佩服多隆", "marks": "力荐"}
{"content": "技术最大的作用是努力帮助业务的成长.一言蔽之,技术一定要有好的业务这个土壤才能生根发芽开花结果.", "marks": "力荐"}
{"content": "还可以，对了解不多的人是一个很好的介绍。如果比较熟悉TB的就不用看了", "marks": "还行"}
{"content": "晕哦，看到半夜三点发现看过别人博客连载这本书", "marks": "推荐"}
{"content": "在驾校看完了这本书，文笔比较随意，也就是工程师水准。不明觉厉。工程师就是要不断学习，不断解决问题才能保持/增加价值。", "marks": "推荐"}
{"content": "相当有趣的书，里面有很多非常有趣的业界八卦。技术上是科普的写法，对于像我这样刚从校门里走出来的学生而言，此书可以看做是大型网站技术登堂入室的引言书籍。当然，光知道这些动技术名词显然是远远不够的，但是此书毕竟让初学者知道了大型网站技术大概包含哪些东西，指明了学习的方向。另外，此书中有诸多大牛的微博链接，一个个连过去，发现这些人要么是alibaba/taobao/tmall的xx总裁，要么是某某新兴公司的CXO/创始人，可见，能力与机遇对于一个人成长的重要性，励志点的说法是“机会总是留给有准备的人”，通俗的说法是，首先是要保证自身的能力达标，然后在适当的时候抱对大腿，努力干下去。", "marks": "推荐"}
{"content": "更像是一个大杂烩，什么都说了一点。这本来是一个可以说的更好的故事，现在只成为一本快速翻阅后无甚观感的读物。", "marks": "还行"}
{"content": "简单的博客内容拼凑，翻翻还可以", "marks": "还行"}
{"content": "Empire business.", "marks": "还行"}
{"content": "无限唏嘘... ...  在你左顾右盼犹犹豫豫的时候，别人已经倾巢出动风风火火的干起来了", "marks": "推荐"}
{"content": "作为一本书来说，技术部分讲得确实是不够好，当作博客就还不错了", "marks": "还行"}
{"content": "大概了解下大面儿的", "marks": "推荐"}
{"content": "我看的第一本讲述大型网站技术发展历程的书，还不错。值得给像我这样的人扫盲。", "marks": "还行"}
{"content": "产品经理必读～技术就算了～", "marks": "力荐"}
{"content": "稍作了解还是不错的~", "marks": "推荐"}
{"content": "还算符合书名，八卦、技术路线、作者经历都有", "marks": "推荐"}
{"content": "读完发现45！差评- - ", "marks": "较差"}
{"content": "如何最快上线系统-花钱买个现成的；技术的选择和使用以适用和够用为主，即以有效的解决问题为主，这样技术的价值是最大化的…淘宝系统如何从最初的架构到今天的分布式，其中的各技术线上的变化都是因为业务的发展倒逼而成。不同的人看了会有不同收获，推荐。", "marks": "力荐"}
{"content": "卖太贵了。前半部分内容还不错，体现了“好的架构不是设计出来，是演化出来的”。后半部分有点凑字数的嫌疑。", "marks": "还行"}
{"content": "相当不错的一本书，虽然不乏插科打诨，也并非全部都是技术，很多是在讲淘宝内部的生态，但淘宝技术发展主线是清晰的，把握住了各个阶段面临的主要技术问题和最后的解决路线。", "marks": "推荐"}
{"content": "论坛热心版友告别式的文字。淘宝技术团队厉害之处在于跟上了业务发展的速度，相当不容易", "marks": "还行"}
{"content": "作者定位很清晰，从底层看淘宝的十年。但是叙述有些拖沓，技术细节将说未说，哈哈。具体书评：http://mp.weixin.qq.com/s?__biz=MzA5MDU0MDIwNA==&mid=402606281&idx=1&sn=8cdfba6763f2744a360c33c7179445f5#rd", "marks": "推荐"}
{"content": "拿到阿里offer的时候赠送的此书，看实体书的感觉很棒很棒。书中的内容完全博客体，其中冒出过很多技术名词让我好汗颜，完全门外汉的感觉。看呐，这就是IT界高级码农的生活。", "marks": "推荐"}
{"content": "回天津的高铁上看完的，洋洋洒洒，看个热闹罢了。里面的技术部分，看看就好，不必过于当真", "marks": "推荐"}
{"content": "果然就是博客文章汇总", "marks": "还行"}
{"content": "这么贵...没有干货...浪费钱", "marks": "较差"}
{"content": "除了IT技术（完全看不懂）以外，淘宝还有更多值得学习的。", "marks": "推荐"}
{"content": "前面还行", "marks": "还行"}
{"content": "呵呵", "marks": "还行"}
{"content": "做得好粗糙", "marks": "较差"}
{"content": "这里面讲的人基本上都很靠谱，但是作者，我就呵呵了～", "marks": "还行"}
{"content": "喜欢阿里的花名文化", "marks": "推荐"}
{"content": "流水账。几个读后感：1. 技术架构不是凭空变的，而是随着解决实际业务问题逐步进化的。2. 技术无难事。 3. 增长是一切。", "marks": "较差"}
{"content": "快速浏览了这本书,只看自己感兴趣的,还好", "marks": "还行"}
{"content": "看得让人拍案叫绝，技术方面的启发对于我这个小码农还是豁然开朗。淘宝是个好的平台，不论对于公司，还是对于技术，还是对于人。", "marks": "力荐"}
{"content": "分为两个部分，第一个部分讲变化，写得不够出彩，第二部分讲采访，也没体现人物nb之处。\n", "marks": "较差"}
{"content": "很多经验可以借鉴", "marks": "推荐"}
{"content": "好贵好薄。。不过技术部分基本看不懂><", "marks": "推荐"}
{"content": "有什么样的需求催生什么级别的技术", "marks": "力荐"}
{"content": "前面不错，后面就没怎么读了", "marks": "力荐"}
{"content": "对现阶段的自己起到了很多指导", "marks": "力荐"}
{"content": "内行看门道外行看热闹，作为技术盲我也就只能一边晕乎着一边被科普。不过这书内容略尴尬啊，作为技术书籍太浅薄，作为传记太片面，我凑热闹也凑的很难过的。", "marks": "推荐"}
{"content": "从用户的角度来看这本书，原来平时很容易的操作，是经过如此复杂的演化过程。", "marks": "推荐"}
{"content": "由于听过子柳的分享，很多类容都有所了解。这本书文字不多，但涵盖了淘宝技术发展的很多方面，值得门外人一看。", "marks": "推荐"}
{"content": "天才与非天才的天书", "marks": "推荐"}
{"content": "火车上花一小时略读了全文。技术永远是伴随着挑战。在一家成长缓慢的公司，无论前后端还是算法，都并没有面临真正的压力和挑战，所谓技术积累，也无处说起。想起11年入职时，领导说一个人能够有多远，取决于他与谁同行。是这样的。", "marks": "还行"}
{"content": "有些不明觉厉，不过愈发钦佩这家神奇的公司了…", "marks": "推荐"}
{"content": "感觉是一种博客梳理出来的历史流水账，技术上并没有针对某块做特殊详细说明，后边又重复把前边已经写过的个人经历搞了一大章节，最后一章访谈给我感觉是乱占篇幅，觉得为了某种目的出书提高知名度的样子。", "marks": "较差"}
{"content": "颇有参考价值，尤其本书讲述了淘宝的架构是如何完成演进的。", "marks": "推荐"}
{"content": "抱着学技术的心理来看书的，但是里面很多东西是完全看不懂的，有句话印象很深：I hear and I forget,I see and I remember,I do and I understand.", "marks": "推荐"}
{"content": "很喜欢，给自己解惑了。", "marks": "力荐"}
{"content": "可以只看第1章至第5章，加上第7章正明的那篇采访，重复的地方很多，不过作为参与淘宝多个项目的作者来说，第一手的技术资料还是弥足珍贵，有些地方写的不太清楚，字母缩写使用也过多，好多都未解释，作为一本书，应该可以做的更好一些的！", "marks": "还行"}
{"content": "有料有真相。淘宝无愧业界翘楚，构架让我等干小项目的无法望其顶背。这一本有点像个让人能够登高望远的台阶，但有些细节还是得自备望远镜了。另外吐槽一下作者的叙事能力，就算写流水账也有办法写的条理更加清晰是吧，在公司里这样作报告恐怕也会被k的。", "marks": "推荐"}
{"content": "淘宝后端技术的变迁屡的很清楚，遗憾的是前端UED这部分仅在最后的访谈中一笔带过。", "marks": "推荐"}
{"content": "讲故事一样，3个小时读完。淘宝真是一个注重技术的公司，比bd要好。最后一段对多隆的介绍，简直是点睛之笔“inner peace”  “发现问题，解决问题，不要绕开问题的本身；多做事情，不会吃亏，即使不是你的事情。” 多隆", "marks": "推荐"}
{"content": "后面就看不懂了", "marks": "推荐"}
{"content": "刚毕业的时候做过招投标网站，那时候经常看阿里巴巴的网站。今天回想起来有个问题一直没解决，为什么当时没有想到去试试阿里巴巴而是选择去东软？离家近不是理由", "marks": "还行"}
{"content": "简单的描述下，却看到了许多有血有肉的人，以及触手可及的项目，或者正在享受解决问题快乐的项目。", "marks": "力荐"}
{"content": "没有看完全本书，其中的一些淘宝的变更迭代，很有趣。了解一些我还没有做产品的时候，互联网的那些事。", "marks": "还行"}
{"content": "只能说我不是目标读者…在图书馆翻了半个多小时…蛮流水账的…", "marks": "还行"}
{"content": "真巧 阿里云发了红包 试试阿里云 也是浓浓的淘宝味 四处充斥着山寨的气息，还是喜欢AWS和青云", "marks": "还行"}
{"content": "公司成长的历史很有意思", "marks": "推荐"}
{"content": "常见企业级开发中使用的模式，此部分模式较为经典，很有参考意义，基本上在Java EE的相关框架实现中都有所体现。", "marks": "推荐"}
{"content": "好薄的一本书.", "marks": "推荐"}
{"content": "虽然内容比较短，但是都很精彩，很实用，总有一天会用上", "marks": "力荐"}
{"content": "相对前二卷，本卷很薄．", "marks": "推荐"}
{"content": "写给程序员的R语言书", "marks": "推荐"}
{"content": "数据结构讲解清楚应该是最大的优点，最后几章超棒——少有的中文R相关资料——第二大优点。中译版提供的勘误和code弥补了英文版的相关不足：https://github.com/cosname/art-r-translation 作为一本语言书，已经很赞了。", "marks": "推荐"}
{"content": "翻译的很好", "marks": "力荐"}
{"content": "最赞的是case study部分的内容。可以定位为一本“面向程序员而不是分析师的R语言教材”，但是感觉很多东西没有涉及到，难道只能去翻阅文档了么？", "marks": "力荐"}
{"content": "很不错，简单清楚，适合入门", "marks": "推荐"}
{"content": "需要做一个 talk，又翻了一遍中文版，非常适合码农读", "marks": "推荐"}
{"content": "没读完，太贵了~", "marks": "推荐"}
{"content": "结构非常清晰，从语言处理的各类元素展开解释，再介绍基础的操作。难度适中的入门读物，能对R的构架有比较扎实的打底。", "marks": "力荐"}
{"content": "上次装逼的时候看过", "marks": "还行"}
{"content": "我还是得找个东西亲手做做才上手得快啊", "marks": "力荐"}
{"content": "这本书是按照编程的目的编写的，从数据结构，到控制语句，再到面向对象、调试和优化。。。通读了一遍，一开始有点难度，收获很大，还需要多多实践案例，它也可以当工具书来用的~~", "marks": "力荐"}
{"content": "很好的入门书", "marks": "还行"}
{"content": "这本书从语言本身介绍了R的一系列特征，详细介绍了R中的常见数据类型，面向对象，字符串处理，绘图，调试与性能，并行计算等。书中知识点都很纯粹，没有涉及到数据科学中复杂的数学模型和相关算法。如果你想要全面了解R语言，建议读这本书。", "marks": "力荐"}
{"content": "入门来说优于 r in action", "marks": "推荐"}
{"content": "我的R入门书。 非常不错。就是讲绘图少了点。", "marks": "力荐"}
{"content": "先拜下大神  暑假必然好好钻研.. ", "marks": "推荐"}
{"content": "针对编程的R语言技巧，最后几章特别好。如果只是想写量化交易策略，这本基本上用不着", "marks": "推荐"}
{"content": "原来我的数学弱到看不懂里面的简单例子……基础部分介绍得很细，看到了很多以前没用过的函数。终于弄清了S3跟S4对象。性能优化跟并行计算着墨略少，毕竟不算主要部分吧。", "marks": "推荐"}
{"content": "是一本优秀的R语言编程入门书籍，但有点对不起“编程艺术”四个字，最有价值的后四章点到为止。", "marks": "推荐"}
{"content": "数据结构讲的清楚，不过还得配合官方文档看，google也总有意外惊喜。", "marks": "推荐"}
{"content": "入门很好", "marks": "力荐"}
{"content": "介绍R语言本身", "marks": "力荐"}
{"content": "可以说是相当好读了", "marks": "推荐"}
{"content": "意思不大", "marks": "还行"}
{"content": "提纲挈领", "marks": "力荐"}
{"content": "结构喜欢，每章节讲一种数据类型，适合有一定基础，有时有恍然大悟的感觉\n", "marks": "力荐"}
{"content": "对于编程更加侧重，有利于弄清楚各种内在语法和函数，以免糊涂。如果是想现用，用R实战；如果想更好的掌握R，先学R艺术。", "marks": "力荐"}
{"content": "刚开始，感觉还蛮好看的 隐约看到了好几种语言的影子\n前面几章看得比较粗糙，后面3-4章跳过了没看 mark下。也就先了解了基本的语法之类的啊。。希望能像学awk一样，慢慢的实践上手吧", "marks": "推荐"}
{"content": "入门的好书 翻译也不错", "marks": "力荐"}
{"content": "第五章的范例数据是缺失的，从github中找到的范例是无法完整执行的。本书当作一个R语言的使用说明文档还是可以的。", "marks": "还行"}
{"content": "我的R语言入门书", "marks": "还行"}
{"content": "看了一半就没读了……反正都是渣……", "marks": "推荐"}
{"content": "R语言入门书，感觉稍微有点理解R的一些语言风格了。看完还是不会用R……", "marks": "还行"}
{"content": "讲得很基础，适合刚入门的程序员背景的初学者。基本上都是编程的一些基本知识。", "marks": "还行"}
{"content": "适合程序员", "marks": "还行"}
{"content": "高数E60分，纯文科生，先玩了swirl包，看这本书的过程很痛苦，但可能恰恰是那一个多月死啃死啃的经历，让自己在一堆金融、统计、计算机系的大神中存活下来，虽然活得惨兮兮的。以一个纯小白的视角看，这本书很棒，推荐先看前九章，然后听入门课，跟着把书里的代码再敲一遍。", "marks": "力荐"}
{"content": "程序员的R书，两周浏览一遍，写代码再详细参考", "marks": "推荐"}
{"content": "对于编程什么都不知道的小白来说，只要书里有自己不会的，能帮助自己的，都是好书。", "marks": "力荐"}
{"content": "还是不错滴", "marks": "力荐"}
{"content": "写的非常好。非常具有操作性。", "marks": "力荐"}
{"content": "还行", "marks": "推荐"}
{"content": "如果用r做项目，我推荐一定要看这本。介绍了很多很实用的小函数，和一些编程需要注意的", "marks": "力荐"}
{"content": "终于读完了，从二月份春节到现在，三月初，不到一个月的时间。比《R语言实战》更引人入胜，真正体会到了\"R语言编程“，有些部分值得反复读，希望能有更深入的著作问世。。。R并行值得好好研究。。。", "marks": "力荐"}
{"content": "值得好好的阅读", "marks": "力荐"}
{"content": "入门一阶半的必读书目，对处理技巧、编程规范、优化调试都有很多有益的总结，多数用户是统计导向，交互界面跑命令粘结果完事，这不是正确的打开方式。", "marks": "力荐"}
{"content": "额，是本学计算机的人写的书，过于强调语言", "marks": "推荐"}
{"content": "就是它啦！R语言上的第一步~当做入门的书籍读还是很好的~\n不过技能的学习还是要learn by doing~~\n", "marks": "力荐"}
{"content": "2016年的第一本书。读了好久。后半部分基本囫囵吞枣，什么都没看懂，以后理解深刻了再回来看。", "marks": "力荐"}
{"content": "值得反复读几遍！", "marks": "力荐"}
{"content": "能深入理解R语言编程框架的一本入门书", "marks": "力荐"}
{"content": "前面蛮好的内容,后面有点难", "marks": "推荐"}
{"content": "非常强调函数式编程思维和方式，适合看完R in action入门之后对R对象的结构和编程过程有更深入的了解～", "marks": "推荐"}
{"content": "挺好的。对于编程者熟悉R语言有很大帮助，到最后还是要看各种package的文档吧。不涉及数据分析建模之类的。", "marks": "推荐"}
{"content": "比较偏编程方面，比较系统，入门应该找一些侧重统计内容的书籍", "marks": "推荐"}
{"content": "相当于官方文档的中文简版，一些函数功能讲的比较简略，举的很多例子我都跳过了，感觉例子没讲太好，不过网上资料也少，英文文档查的头疼，总得来说还行吧。", "marks": "推荐"}
{"content": "需要比一般水平略高的C语言功底才能全部读懂得书，如果C一点不会读起来恐怕相当吃力", "marks": "力荐"}
{"content": "也是适合入门用的书，与R实战不同，本书注重从编程的角度入手，提到了很多细节，和R实战一起用作入门教材可谓相辅相成。\n", "marks": "力荐"}
{"content": "这本书对于R的描述确实很全面，但是作为一个初学者来说，应该先打好基础再看，对你的帮助就比较大；书中有很多例子都是提前用后来的知识叙述的，建议先看<R语言实战>再来看这个；", "marks": "推荐"}
{"content": "这本书应该是挺好的，但是其中有些地方看不懂，看不明白，不知道是翻译的问题，还是原文的问题。", "marks": "推荐"}
{"content": "书是好书，可我真的看不进去编程教材", "marks": "推荐"}
{"content": "主要面对程序员吧，就r语言的缺点提出了解决方案。", "marks": "推荐"}
{"content": "这本书很不错，读完之后觉得自己对R语言了解更全面了", "marks": "力荐"}
{"content": "比较适合有计算机背景的人学习。", "marks": "还行"}
{"content": "R语言领域的两部杰作之一！", "marks": "力荐"}
{"content": "编程角度而非统计角度讲解", "marks": "力荐"}
{"content": "补足了翻译版的若干小瑕疵。从设计技术的角度分类很新颖，也谈不上谁好谁坏吧，从问题角度分类也有其优点。讲课的时候还是要依实际情况来决定的。", "marks": "力荐"}
{"content": "从算法本质的角度来分类说明，简直不要太实用！", "marks": "力荐"}
{"content": "你们怎么都在刷这一部？国内写得....315页。。。。70元，这通货膨胀的速度啊", "marks": "还行"}
{"content": "适合每一个使用mapreduce的码农，对hadoop类似项目开发农意义不大", "marks": "推荐"}
{"content": "讲的比较详细，Hadoop是一种处理大数据的工具，更新也快。", "marks": "推荐"}
{"content": "很详细，很精彩", "marks": "推荐"}
{"content": "代码太少", "marks": "还行"}
{"content": "买了很久了,终于看完了", "marks": "力荐"}
{"content": "想说这是我读过hadoop相关书籍废话最少，条理最清晰的一系列，配合源码服用疗效更好", "marks": "推荐"}
{"content": "对hadoop MR的介绍详细具体, 代码,参考文献,原理讲解都很透彻. 看得出来作者写的非常用心. 适合修改Hadoop MR的朋友, 以及想了解MR内部机制的朋友阅读.", "marks": "力荐"}
{"content": "确实挺深的哈", "marks": "力荐"}
{"content": "我只想说，作者的博客禁止了copy，太凶残了", "marks": "力荐"}
{"content": "侧重内部实现", "marks": "力荐"}
{"content": "书中的流程图很赞!", "marks": "推荐"}
{"content": "比较不错的源码和流程分析", "marks": "推荐"}
{"content": "董的博客, 这本是hadoop V1的，不过除去资源一块 核心内容大体相同", "marks": "还行"}
{"content": "其实国人能写这样的书，感觉还是不错的，不过感觉很多东西不太深入，感觉在深入之前，和先有整体，带着整体做深入会更好一点，\njobclient,jobtracer,tasktracer之间的关系最好能系统化", "marks": "还行"}
{"content": "每次看着作者在群里推销  看样子还是有干活的 不知道到底如何 必须要看过才知道 不过 现在已经不是很关注hadoop了  处理数据已经不重要了 重要的是从有限的数据中提炼最大的价值 \n\n拜读过之后  表示这本书的干活还是很多的  初读之后  意犹未尽  还需再研究研究  ", "marks": "力荐"}
{"content": " 这本书总体上写得还是很不错的，脉络清晰，干货十足，作者的水平很好，也很负责！", "marks": "力荐"}
{"content": "还不错，将hadoop大卸八块，各个模块的功能和怎么组织起来，描述的还算清晰吧！ 并不是那种一看就瞌睡的书，适合我这种不会java但想学hadoop思想和架构的人。在读第二遍，仔细看看……", "marks": "推荐"}
{"content": "写的挺详细，可惜是老版本", "marks": "推荐"}
{"content": "介绍了MR的原理和运行流程，代码讲的比较泛泛，还需要自己参照着深入研究", "marks": "推荐"}
{"content": "挺好的，有时间看下另一本", "marks": "推荐"}
{"content": "知识点的系统性是本书的亮点！ \n读完之后对分布式设计和开发的细节有了更多的认识 同时对分布式框架有了更多思考 另一方面对mapreduce计算框架的细节解释的很系统  分布式开发启蒙读物 很不错的一本书", "marks": "力荐"}
{"content": "对hadoop了解不多，也没有太仔细看这本书，但感觉内容还是很完整详细的。", "marks": "力荐"}
{"content": "条理很清晰，难度很大，只看了个大概", "marks": "推荐"}
{"content": "对于我这种新手，适合看前八章，了解mapreduce&hdfs的技术原理。。讲解很清晰，代码不是特别多。但是还需要学的东西更多更多，任重道远啊~要尽快搭出来三种环境模式啊我，节奏慢死了", "marks": "推荐"}
{"content": "非常棒的一本讲mapreduce的一本书，新手读起来很容易懂，高手读起来能看到很多细节。缺点是没有练习，需要再找实战书籍看与练习。", "marks": "力荐"}
{"content": "从代码层面认识 MR", "marks": "推荐"}
{"content": "讲得的确很详细。只是如果一口气看太多的话，这本书会看得我犯困。。。", "marks": "力荐"}
{"content": "关于Hadoop编程模型,RPC,JobTracker,TaskTracker,Task的内部运行机制和容错均有很详细的解析，对着hadoop源码看效果更好，同时还可以学习到很多Hadoop的调优，也初步了解如何实现一个大型分布式计算框架。接下来准备继续看系列之Yarn了。", "marks": "推荐"}
{"content": "粗略过了遍，很值得新人及想了解内部实现细节的开发购买。", "marks": "推荐"}
{"content": "作者dong对内容的组织逻辑清晰。对于不在MapReduce上做二次开发的人，也可以借鉴作者的分析思路。对于希望深入了解Hadoop的人，还是值得一读的。", "marks": "推荐"}
{"content": "对于Hadoop以及MapReduce的概念讲的非常清楚，但是现在在项目中使用不上。", "marks": "推荐"}
{"content": "说的很详细 内容讲解的很全面 但是不是太深入", "marks": "推荐"}
{"content": "非常好的书 细致全面", "marks": "力荐"}
{"content": "作者本科和我一个学校的呀，原来的时候就看过他的博客了", "marks": "力荐"}
{"content": "粗略读过，作者讲的很好，我没有接触过hadoop，但是看我以后有种豁然开朗的感觉", "marks": "推荐"}
{"content": "好的技术书籍不应该故作高深，而是深入浅出，娓娓道来，可以说本书做到了，从整体到细节，从设计到实现，就像作者博客的内容一样，读到会意之处，每每让人欣喜，当然作者有些地方还可以分析的更为透彻更详细些，源码的分析结构更完善些，但在国人写的技术书中已经很不错了，作者还列出了大量的文献引用，包括一些网络资源的引用，深入下去还是很有意思的", "marks": "力荐"}
{"content": "配合这本书看MapReduce源码非常不错。", "marks": "力荐"}
{"content": "源码分析讲的还是相当到位的，建议初步了解mr基本编程后阅读此书。", "marks": "推荐"}
{"content": "这本书的技术实施上写的非常详细，并且也有理论知识。作为操作指南的话，这是一本不错的书。", "marks": "推荐"}
{"content": "谢谢西成送的这本书，花了近一个月的时间，让我这hadoop小白用户理解了hadoop mapreduce的架构设计，逻辑清晰，组织合理，真的是很不错", "marks": "力荐"}
{"content": "不错，对于mapreduce的原理及其过程将的很详细，但是调优章节写得计较浅显。", "marks": "推荐"}
{"content": "这本书不适合初学者，内容侧重mapreduce内在机制，推荐hadoop实战", "marks": "还行"}
{"content": "良心书，Hadoop MapReduce介绍的很详细", "marks": "力荐"}
{"content": "对于MapReduce的工作原理，看视频，看直播，都云里雾里的。没办法，找书，找到这本，终于解惑了，读的停不下来。真是一本好书，不晦涩，连涉及到的基础知识点都解释的非常详细，java基础一般的读起来也没有困难。", "marks": "力荐"}
{"content": "这本书不同于现有的《Hadoop权威指南》、《Hadoop实战》、《Hadoop operation》等书，这些书只是从使用者角度介绍Hadoop，比较浅显，而本书则不同，它从源代码角度深入解析了MapReduce实现原理，对于想要深入研究Hadoop的朋友有很大帮助。", "marks": "力荐"}
{"content": "可能之前读了作者博客的缘故，书中大部分内容作者已经在博客中提及，所以读下来感觉都是在复习。从支持作者写了那么多优秀博文的角度，买一本是应该的。", "marks": "推荐"}
{"content": "初学和进阶必备", "marks": "力荐"}
{"content": "这本书竟然有hopcroft参与，而且有官方pdf，最新一版完成于20140814.", "marks": "力荐"}
{"content": "挺薄的一本小册子，粗粗看完，其实里面就是关于复杂科学的一些常见内容的说明，如小世界、自组织、生命游戏等，不过最有价值的两点是第一章给出的关于复杂性科学的思考较为全面，第二是给出的python实例节省了自已写的时间，给的练习也有针对性，做了几章，确实有趣。", "marks": "推荐"}
{"content": "#纸质书# 3.3 分。真的是…… =-= 大学中级教材么？", "marks": "还行"}
{"content": "这本书其实给爱好者看更合适，因为理论部分不够先进，代码部分不够深入。但是好玩，这就有价值了。考虑改造为R版本。", "marks": "推荐"}
{"content": "草草读完此书。感觉本书的精华在于其中体现的思想，而不必在意于具体的实现过程。", "marks": "推荐"}
{"content": "蛇头蛇尾啊", "marks": "还行"}
{"content": "非常好，仅仅薄薄的一本书，就带我领略了编程之美", "marks": "力荐"}
{"content": "看得有点晕乎乎，主要还是对各种概念不明白吧。 整体结构上看， 正文部分比较玄乎， 案例部分倒是比较平易近人。 以前看生命游戏时候也从未想过有这么深远的话题在里面，果然是技能不够啊", "marks": "还行"}
{"content": "老实说大多都没看懂。。。", "marks": "推荐"}
{"content": "选题挺好的，就是内容太单薄了些", "marks": "推荐"}
{"content": "内容短小，但是信息量很大，关键看你是走马观花的读，还是一行行代码地进行实践了，收获是不一样的。", "marks": "力荐"}
{"content": "囫囵吞枣的看了一遍，数学和算法基础差，没有深究看明白。", "marks": "还行"}
{"content": "内容广而少，当索引倒不错。", "marks": "推荐"}
{"content": "挺好玩的，就是书太贵，150页卖40块钱，抢钱啊", "marks": "推荐"}
{"content": "用计算机模型探讨哲学问题。烧脑。可惜翻译得有些生涩。", "marks": "推荐"}
{"content": "这完全就一神书啊，我表示完全看不懂。书很薄，才110多页，而且中间还有很多的练习题目，然后价钱还是49.文中说到了图，细胞自动机，说到了一些模型，说到了博弈论。文中的一个思想是通过简单的规则去构造复杂的系统，不同和的规则是为模型。博弈论也是对于规则的适应和抉择。文中有举例不同的规则会得到什么样的现象，但是我没看出来什么结论。不过文中的这个思想是很有意思，所谓复杂的系统，他的规则其实可以是很简单的。这个原理也让我对于计算机科学的发展充满信心。", "marks": "还行"}
{"content": "对于一本书而言还不够深入，每个话题都是浅尝辄止，作为导论还行。", "marks": "还行"}
{"content": "第一章挺有意思，后面就不怎么样了。", "marks": "推荐"}
{"content": "提到了生命游戏，细胞自动机等概念，看完很涨知识，但是要完整的实现起来还是很难的。", "marks": "推荐"}
{"content": "第二次读这本书感觉打开了一扇新窗口......内容丰富超出我的想象....图论果然重要,可惜学不到啊....", "marks": "推荐"}
{"content": "一本可以作为系统论、还原论等认知哲学的导读读物，看似薄薄的一本，拿到手还说定价这么高亏了，结果一读才知里面别有洞天。本书本身就是一个复杂性科学模型的范本——避免跨域细节，只讲所涉及问题域的知识点，干净利落。作者以python为基础，演示了多种复杂系统的模型，让在计算机诞生之前难以验证的理论得以模拟，并逐步建立起复杂演绎基础之上的新认知模式。很多代码、练习有时间还得需要仔细研究实践。PS.翻译的质量有待提高。", "marks": "推荐"}
{"content": "如果我还是个学生，我一定很喜欢这本书，给足了思考空间。可惜我老了，这种课上点到为止，课后作业多多的教材，我已经没有耐心读下去，想下去了", "marks": "还行"}
{"content": "书很好，原作者很明显是希望读者能够通过他的引用去了解更多的知识，翻译的水平是可以接受的（华章科技里这本算翻译行的了）。但是想深入理解这本书需要掌握一定的Python编程技巧，以及比译者还强的英文阅读能力（这本书本来可以写成300页，但作者只写了150页，剩下的自己去网上看）！有时间的话我想连同引用重译这本书～", "marks": "还行"}
{"content": "感觉像是个大纲,想说的太多,啥都没怎么说...", "marks": "还行"}
{"content": "书的内容与题目很不相符，里面python比重太大，像前几章讲的是很基础的东西，根本没有体现出“思考”的深度，只是列举了一些概念；而且书太贵，性价比太低；排版太随意", "marks": "还行"}
{"content": "一本有趣的介绍数据结构的书, 习题很有意思", "marks": "推荐"}
{"content": "书很薄，非常贵，最坑爹的是无法下载源代码。这样这本书就完全 无用了！", "marks": "很差"}
{"content": "平庸", "marks": "还行"}
{"content": "与其说是点技能不如说是重新种了颗新树。。。", "marks": "推荐"}
{"content": "快速过了下，先了解下概念性的东西。", "marks": "推荐"}
{"content": "部分章节写的很难懂", "marks": "还行"}
{"content": "看一遍忘一遍……", "marks": "力荐"}
{"content": "对于了解常用的算法，还是有帮助的。讲解比较详细，基本上都有算法运行过程的分析，对于SVM算法的说明比较透彻，学习AdaBoost算法也是通过这本书。", "marks": "推荐"}
{"content": "如果不懂算法直接看英文吃不消，建议看数据挖掘导论", "marks": "还行"}
{"content": "讲解不够详细。", "marks": "还行"}
{"content": "当手册用，点评了数据挖掘的十大算法，给出了n多经典参考", "marks": "推荐"}
{"content": "2016.04.06～苏州的天气呦！这书感觉更像是文献综述，适合什么人看呢～估计不适合我。看了四个算法了，搞完去搞周志华老师的《机器学习》吧", "marks": "推荐"}
{"content": "书里的内容远超我的理解范围，了解不到十分之一。这本书可作为一个目录来读，指向的是整个科学领域，需要花一辈子时间学习。", "marks": "力荐"}
{"content": "书写的非常好，语言生动通俗。不过书更侧重于重要结论和作者观点的陈述，所以想要看懂，必须有非常丰富的背景知识，这对于一个本科毕业生甚至是硕士毕业生都是难以达到的。如果真有人想不开，可以认真一读。还有，作者比较狂妄，从书中也能体现。", "marks": "力荐"}
{"content": "一本有趣的哲学书，但绝不是相关内容的研究生教材，茶余饭后消遣可。作者是数理逻辑圈的名人", "marks": "推荐"}
{"content": "好水啊……不过对我还是有用的。NoSQL是Not only SQL", "marks": "还行"}
{"content": "前1/3还行，后面就太水了", "marks": "还行"}
{"content": "学院派 作品，非学生可以从中了解 cpa ，base 理论", "marks": "推荐"}
{"content": "综述，但没有参考文献...太简单了", "marks": "还行"}
{"content": "题目惊悚。看得晕乎。基本上是数据库软件下载安装手册。浮光般的知识值得你掠影般过。", "marks": "还行"}
{"content": "开拓视野系列图书。", "marks": "还行"}
{"content": "综述，目测有四五个学生一起写的。综述的文章、书如果写好也很有价值，但这本...就当个引子看吧", "marks": "还行"}
{"content": "可以学到不少基础知识。", "marks": "力荐"}
{"content": "虎头蛇尾\n笔记：http://artech.farbox.com/post/note-book/-da-shu-ju-tiao-zhan-yu-nosqlshu-ju-ku-ji-zhu-du-shu-bi-ji", "marks": "还行"}
{"content": "果然是“编著”啊", "marks": "还行"}
{"content": "走马观花看看还行，开头几章理论部份还有点用", "marks": "还行"}
{"content": "入门大数据和NoSQL的一本书，还可以。感觉整本书应该不是一个人完成的，估计分章节找不同的人写的。", "marks": "推荐"}
{"content": "数据库面面观，当百度百科看了", "marks": "较差"}
{"content": "读了1,2章，讲的不错～", "marks": "力荐"}
{"content": "基本上都是些基本的东西，非常宽泛，还不如去看官方文档。", "marks": "较差"}
{"content": "基础上，概念书", "marks": "还行"}
{"content": "Servlet 和 JSP 介绍的很全面 必读经典之作啊  推荐！", "marks": "力荐"}
{"content": "很不错的一本入门书，介绍了servlet3.0的新特性", "marks": "力荐"}
{"content": "用来入门以及整体了解", "marks": "还行"}
{"content": "读过有点，只是以后JSP用的少了，没再继续往下读", "marks": "推荐"}
{"content": "挺不错的一本书, 很实用. 大部分的章节讲解的非常流畅(当然也不能忘记翻译者做了很多贡献),尤其是安全性一章让我首次了解了Web安全知识,唯一美中不足的是部署一章有点让人昏昏欲睡.", "marks": "力荐"}
{"content": "在jsp/servlet上面写的很细的一本书。", "marks": "力荐"}
{"content": "基础而全面，读的很畅快", "marks": "推荐"}
{"content": "讲解挺详细的，特别是 servlet 3 的新特性方面。", "marks": "力荐"}
{"content": "比较适合入门，讲的比较基础。可做对JSP和Servlet的入门书籍，但是还需要读其他很多文章和博客来加深理解。", "marks": "推荐"}
{"content": "Servlet", "marks": "还行"}
{"content": "不知道是翻译的原因还是什么，看的时候里面各种这个，那个，另一个。新手本来知道的不多，直接被说的一脸懵逼，感觉这本书的思路表达的一点也不清晰。。。。", "marks": "很差"}
{"content": "如R君评价，书写的很基础", "marks": "还行"}
{"content": "绝大部分讲的都是python。。24章解释了RSA的加密和认证。ps.24章开头引用了《心灵捕手》里我最喜欢的一段话", "marks": "还行"}
{"content": "研究生期间读过，当时还写了邮件给作者反馈一些问题。。", "marks": "推荐"}
{"content": "细致", "marks": "推荐"}
{"content": "真是太棒了。。。", "marks": "力荐"}
{"content": "写得太好了，感动的哭了", "marks": "力荐"}
{"content": "程序是入门级的 内容不错 但有点贵啊", "marks": "还行"}
{"content": "书如书名，从零开始学，一本还算不错的Windows平台下postgresql入门书吧", "marks": "推荐"}
{"content": "对于新手来说，有这样一本书来入门还是不错的。", "marks": "推荐"}
{"content": "大部分是翻译文档，还没翻译全。排版很乱。空格都没了", "marks": "较差"}
{"content": "一般，一部分是翻译过来的文档，80%都是pgamdin下的操作，win的多linux的较少", "marks": "还行"}
{"content": "忘光了", "marks": "还行"}
{"content": "拿来翻翻还可以，适合入门", "marks": "还行"}
{"content": "最基本的校对都没有，错别字满天飞，缺乏对自己工作的尊重", "marks": "较差"}
{"content": "vsphere 初识", "marks": "还行"}
{"content": "很适合第一次接触vmware sphere的新手，值得推荐。", "marks": "还行"}
{"content": "翻译的一般，但介绍很全面", "marks": "推荐"}
{"content": "还不错，有点薄。不过几个小贴士还是不错的。", "marks": "还行"}
{"content": "读完之后对整个vSphere体系有了较系统的理解。", "marks": "力荐"}
{"content": "产品文档书，随便翻翻吧", "marks": "较差"}
{"content": "喜欢的一本书，从概念上阐述了未来数据中心的建设思想与趋势", "marks": "推荐"}
{"content": "提供了不少VMware虚拟化软件实施的最佳实践，缺点是错别字比较多，如果你有一定的经验，可以猜出来错别字想要表达的意思。", "marks": "推荐"}
{"content": "这书完全就不适合初学者看，还是去刷另外一本Clojure Programming好一点....", "marks": "还行"}
{"content": "书很薄，讲的太泛", "marks": "还行"}
{"content": "还剩两章读完。总的说来，主要的要点都提到了，但是都没有一个特别详细的例子，当然书中的案例选得还是不错的，就是有些细节还是没有说得太明白，另外内容的安排上不是那么的循序渐进。买了本Clojure Programming，准备也读了比较一下。", "marks": "推荐"}
{"content": "印刷错误太多。感谢译者赠书。", "marks": "推荐"}
{"content": "还是得拿项目练手", "marks": "推荐"}
{"content": "翻译的中规中矩，作为一本入门的图书很适合我。接下来应该着一个实际的应用场景和深入一点的书。", "marks": "还行"}
{"content": "感觉比较凌乱。", "marks": "还行"}
{"content": "入门，这个是下一步", "marks": "推荐"}
{"content": "只讲最核心部分，蛮好的", "marks": "推荐"}
{"content": "初次接触函数式编程，还是很不适应", "marks": "还行"}
{"content": "对于入门来说还是不错的，但是感觉条理上，系统性上不够完善，不过，毕竟 是本小册子，可以挺快看完，加入实践的行列；", "marks": "推荐"}
{"content": "Clojure中文资料比较少.  这本用来入门很不错.  学习Clojure的时候, 建议先看看 SICP 前两章", "marks": "还行"}
{"content": "Clojure (Lisp) 入门绝佳", "marks": "力荐"}
{"content": "Rich Hickey 推荐怎么会有错。书不厚，但是介绍的应该都是核心内容，不啰嗦。介绍某一种编程语言的书类里应该算是水平很高的。学习clojure，(repeat 推荐). 再者建议看完书后去看Rich Hickey 和 Brian Beckman的expert to expert talk，会有更深入的体会。", "marks": "力荐"}
{"content": "当Lisp乘上JVM，那将是什么情况", "marks": "还行"}
{"content": "没有joy of clojure啰嗦，入门就是应该简洁直接的", "marks": "力荐"}
{"content": "挺不错的，适合初学者", "marks": "推荐"}
{"content": "这是一本侧重于讲述Clojure编程思想的好书。也许它并不全面和深入，但蕴含其中的编程理念对于Clojure初学者来说，是极为可贵的。", "marks": "力荐"}
{"content": "一般，可以作为普通的参考手册，里面虽然谈到到一些最新的技术，但只是讨论了基本的用法，还称不上“精髓”", "marks": "还行"}
{"content": "粗读了下实验还没做几个。值得一看，尤其是4，5，7，8章节。", "marks": "力荐"}
{"content": "大概浏览了下，内容参差不齐，可以随便看看", "marks": "还行"}
{"content": "不是特别喜欢这种写法，看了半天啥都没学到的感觉。", "marks": "还行"}
{"content": "系统学习内核配置与调试技术, 为下层开发做基础.", "marks": "推荐"}
{"content": "比较难懂", "marks": "还行"}
{"content": "工具本", "marks": "推荐"}
{"content": "DSL只会让问题更复杂！老马再次用宗教式色彩给我们喝了杯毒鸡汤！", "marks": "较差"}
{"content": "罗列各种模式，感觉比较全面。每种模式点到即止，别期望看完就从入门到精通。翻译值得吐槽，读起来很不顺畅。", "marks": "推荐"}
{"content": "#书来如山倒,书去如抽丝#DSL实践地图册! (敬谢何编赠书) (评论: 领域特定语言)\thttp://book.douban.com/review/5883524/\n", "marks": "力荐"}
{"content": "对DSL各方面都覆盖到，开始从简单到复杂介绍DSL概念和常用例子的实现，从interpreter、parser左右的章节涉及到语言实现，再接下来是closure、symbol table等等一些概念和实现。《编程语言实现模式》阅读过程因为一笔带过导致不太清楚的概念也被掰开揉碎的介绍法给解决了。有人说翻译不好，其实通顺程度可以，机翻感的句子数量可接受，但一些名词真不如不翻。", "marks": "力荐"}
{"content": "难得老马能把这么多东西归纳到一块儿，分类，抽象成模式。有一定的启发。", "marks": "推荐"}
{"content": "比较系统全面的DSL介绍，具体实践还得自己抠", "marks": "推荐"}
{"content": "“一种专注于某个特定领域并具有有限表达特性的计算机编程语言。”", "marks": "推荐"}
{"content": "大师之作，必读精品。", "marks": "力荐"}
{"content": "DSL的经典教程，发现不少想法我已经在用了。", "marks": "推荐"}
{"content": "五星的主题，三星的行文，二星的翻译。前后文引用严重，概念混淆不清，语言啰嗦繁琐。如果你在需要这方面的内容，不妨捏着鼻子读下去。", "marks": "较差"}
{"content": "这手不释卷的港觉是肿么一回事呢！！！", "marks": "力荐"}
{"content": "看不下去。。。", "marks": "还行"}
{"content": "翻译水平欠佳，对于DSL缺乏明确定义，内容太过浅显。不过，利用DSL这种思想来设计软件架构是大势所趋。", "marks": "还行"}
{"content": "代码和例子占据的篇幅太多，跳过了；总体来说，翻译很烂！", "marks": "推荐"}
{"content": "挺厚的一本书，如作者所说，要写的太多了，但是为了能出版，不可能面面俱到。是个很有难度的主题，作者也算是费劲心思。虽然是DSL，但本质还是归到编译那套东西（主要是前端），尤其是对于外部DSL，因此我会觉得《编程语言实现模式》更精彩一些。另外吐槽两点，一是有些示例代码喧宾夺主了，代码的逻辑比传达的模式要复杂；二是翻译有改进的空间。", "marks": "推荐"}
{"content": "Martin难得有那么厚的书，看了前几章，一直强调语义模型，到外部内部DSL实现就没时间看了。暂时用不到，以后再翻。", "marks": "力荐"}
{"content": "部分讲解编译原理的章节暂时还没找到适用的场景", "marks": "推荐"}
{"content": "非常好的书", "marks": "力荐"}
{"content": "一个资深程序员的经验清单，对，是清单，算不上总结。对新手来说，提到了各个要点，但是太过简略；对老手来说， 这里可能没有任何新鲜东西。中文名与那本经典同名，英文名根本不是这样。英文名副标题也是比较准确的：Navigate Your Workplace, Cube Farm, or Startup。", "marks": "还行"}
{"content": "这本书只能说一般，原因有二：一，出来的太晚，道理都被其他的书说过啦；二，书中大多只是在讲道理，缺乏实际技巧的举例，譬如关于提高开会的效率，作者貌似只提到要提高开会的效率，但是未提于哪些方面着手。\n\n但是此书第二部分\"人员技能\"还是给自己一些启发，尤其是如何提高自己的曝光率：先踏实做事，低调做人，待熟悉路数以后，抓住机会适当表现自己，以期获得领导的重视。程序员尤其要注意这些，不能只低头走路，更要经常抬头看路。", "marks": "较差"}
{"content": "该翻译成《新手程序员生存手册》", "marks": "还行"}
{"content": "新手程序员必读", "marks": "力荐"}
{"content": "随便翻看了一遍，比较适合新手，老油条就不用看了。", "marks": "还行"}
{"content": "很务实，也很有趣。", "marks": "推荐"}
{"content": "不只是程序员。。", "marks": "还行"}
{"content": "原书名New Programmer's Survival Manual概括书的内容恰如其分，中文版译名走题了（不得不吐槽科技书籍的编辑，书名的中文翻译真的不是你们该发挥的地方）。本书方方面面都有涉及，工作中的要点基本都有覆盖，新人老人都值得阅读。", "marks": "力荐"}
{"content": "技巧", "marks": "还行"}
{"content": "最佳实践系列", "marks": "还行"}
{"content": "空洞", "marks": "还行"}
{"content": "没读完，内容太杂。\n", "marks": "还行"}
{"content": "不写代码了。随便翻翻", "marks": "还行"}
{"content": "看完了第一章，对于我这种学生党还是有些收获，就是有些内容陈旧，总得来说还是不错", "marks": "推荐"}
{"content": "可以2天读完的小册子，对于初中级程序员来说还挺合适的", "marks": "还行"}
{"content": "Matlab中很多都可以实现Maple的功能（Matlab买了Maple的使用权),本人感觉Matlab更好些。如符号矩阵的求逆、行列式Maple给不出具体表达式，而Matlab可以。", "marks": "推荐"}
{"content": "有點過時了...", "marks": "还行"}
{"content": "有过一阵子对maple实在是很感兴趣，过了之后也就没什么感觉了。", "marks": "还行"}
{"content": "内容挺全面的，对软件的各方面都有一定介绍，尤其是作者还很仔细的介绍了maple的各种数据存储结构，编程语言的格式，这些都对更深入的理解maple的使用方法很有好处。", "marks": "推荐"}
{"content": "非常棒的书 这个Cormen就是Introduction to Algorithms那本书的Cormen", "marks": "力荐"}
{"content": "如果没勇气读1300多页的《算法导论》，可以先从这本200多页的书入手，作者Cormen是《导论》合著者之一，Khan Academy上的算法课程就是以这本书为框架设计的，有基于JS的在线编程交互练习，可以与本书配合使用。（读完这本发现还是得回去啃导论才过瘾。。。）", "marks": "推荐"}
{"content": "还行，不过还是慢点直接看clrs吧", "marks": "推荐"}
{"content": "这本书即将有中文译本发行，我老婆翻译的——《算法基础：打开算法之门》", "marks": "力荐"}
{"content": "这是我大四时候花了将近一个月的闲暇时光读完的，是我的计算机算法和编程的启蒙教材。这本书是算法导论的跳板。等我编程算法羽翼丰满会去挑战算法导论的，真的很有意思。益智而且对学术有用。", "marks": "力荐"}
{"content": "对新手友好，难度偏低，大概相当 LeetCode easy", "marks": "推荐"}
{"content": "美国谭浩强。每次都是浅尝辄止。", "marks": "还行"}
{"content": "一本大杂烩，什么都讲，什么都讲不深，既然想谈程序设计，并没有提供一些有价值的python /oo的设计哲学，基本的type,decriptor,mro都不说，更不用提设计模式，我很怀疑封底说的该作者写java教材大学使用率最高这一说法，这本书更像小白看的，看了能怎样呢，也只是会用tk画几个演示图，对工程应用并卵。 不如The Hacker's Guide to Python", "marks": "较差"}
{"content": "梁教授虽然早就不搞科研了，但编写基础教材还是可以的。", "marks": "推荐"}
{"content": "书名说了是introduction,真的是introduction！虽然看完这本书现在在看廖雪峰的教程也是一脸蒙逼，但是对于初学者来说这本书真的还不错。", "marks": "推荐"}
{"content": "例子比较多，对于gui 讲解比较好...\n对我这种动手低分学生估计很适合.......", "marks": "力荐"}
{"content": "通俗易懂", "marks": "力荐"}
{"content": "哈哈哈 在豆瓣分享编程书心得的估计是少之又少了吧 但是这本书实在是太赞 ", "marks": "力荐"}
