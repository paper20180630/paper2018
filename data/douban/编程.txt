{"content": "目测是豆瓣上第一个 \"读过\" 这本书的人吧...", "marks": "力荐"}
{"content": "針對 Spark 2.x，沒有比這本更好的入門書了。雖然我覺得很多內容你們應該直接寫進官網的文件啊。", "marks": "力荐"}
{"content": "time series 那章感觉不错，但是整体比较像cookbook, 没有什么高端例子，不知道是不是因为还没有正式定稿的缘故..", "marks": "还行"}
{"content": "挺好的，破解了很多神秘感。", "marks": "推荐"}
{"content": "原来都是使用linux下的虚拟化技术编写的", "marks": "推荐"}
{"content": "结构比较完整，但是基本原理介绍的不详细，我这个新手看的懵逼，后面的每个功能就是代码分析文章，还是了解原理后多看看这本书的代码比较好", "marks": "还行"}
{"content": "通过代码展示docker原理", "marks": "推荐"}
{"content": "之前看过他们在阿里云的社区上的博客，很不错，现在出书了买一本，内容挺深入，适合对Docker原理感兴趣的读读。", "marks": "力荐"}
{"content": "略一般。不建议看了。", "marks": "还行"}
{"content": "给五星。好评。第8页到第11页，已经把整本书讲完了。真是很有诚意。其他的都是附带的。还有辣么多瞎子，乱评。哎哎。\n我要是写书，应该也是这种风格。深度学习的关键卖点，作者都已轻松的语气点到了，但你不读论文，其实也意识不到，既然不如，还不多少说。\n好书。但不是瞎子有资格读的。就酱。哈", "marks": "力荐"}
{"content": "不要脸", "marks": "很差"}
{"content": "纯粹骗钱的广告手册。强烈建议不要买，更不要浪费时间去读。目录是各种蹭热点，知识点都是一段介绍完毕。三分之二以上是代码，代码中三分之一是输出结果。纯粹凑页数的。现在出书的门槛真是低。。。", "marks": "很差"}
{"content": "够浅，够入门", "marks": "推荐"}
{"content": "只要通俗易懂就行", "marks": "推荐"}
{"content": "入门书籍，可以一看", "marks": "还行"}
{"content": "还可以，讲了一些基础技术", "marks": "还行"}
{"content": "内容覆盖广泛，包括了一些比较新的内容。整体浅显，组织略显凌乱，适合梳理知识，跳读感兴趣部分。作者医药学专业出身，基础和实践经验不够，理解不深，但有高人指点。", "marks": "还行"}
{"content": "差。只讲Mac环境。贴代码占页数。Typo略多。图片都是作者大头像让人恶心。", "marks": "很差"}
{"content": "看了这本书才觉得写书的门槛能有这么低，整本书充斥着大量质量不高的代码和框架截图，另外就是对官网内容的粗浅翻译", "marks": "很差"}
{"content": "什么都谈一点，又没什么重点", "marks": "较差"}
{"content": "刷新了我对于一本技术书籍质量标准的底线", "marks": "很差"}
{"content": "客观地讲，感觉讲的东西比较杂，以为会讲node，结果却讲了django，例子讲的蛮多，但都是比较旧的知识例子，ionic比较新，但又讲的不多。性能方面讲的还不错，运维部分感觉就是用jenkins，每个方面都讲了一种框架或系统带过，但又不一定是最好的，不能叫精益实践吧～", "marks": "很差"}
{"content": "似乎并没有什么干货", "marks": "还行"}
{"content": "作者还是很厉害的。一看书就知道这个作者的阅读量惊人。古文经典信手拈来，以及对数据科学与哲学融会贯通。行文还很有逻辑很细致很深入，读完受益匪浅。\n让我联想到之前看过的一本书——金观涛《控制论与科学方法论》，这两本书行文风格有点儿类似。", "marks": "力荐"}
{"content": "其实是很好的一本书，旁征博引涉猎广泛", "marks": "力荐"}
{"content": "书中多次在注解中写上“源自百度百科”的坦诚态度，以及对当代生活各方面热点词汇的解释令人不得不打出两星。最后，对本书定价的自信表示质疑。", "marks": "较差"}
{"content": "教学大纲类读物，图书馆翻翻就可以了。3星半", "marks": "推荐"}
{"content": "shame of this book", "marks": "很差"}
{"content": "也许作者确实知识面很广逻辑力很强，这本书却让人完全摸不着头脑。数据和科学的意义就讲了两章，各种中西方古代故事混讲（然而也并没有让人觉得醍醐灌顶。好吧以为是科普类的给初学者看，然后用了两页讲完统计学各种分布，没有任何名词解释....OK，作者有想过这书的受众是谁么……", "marks": "很差"}
{"content": "首先确实有干货，但是不喜欢这种组织方式，连着N页的文字，各种片段式的代码．三星半吧．", "marks": "还行"}
{"content": "配合书籍配套的代码，目前比较好的学习go语言的书籍。缺点是作者表述有点啰嗦~~", "marks": "推荐"}
{"content": "罗里吧嗦，与期望不符", "marks": "很差"}
{"content": "第一章写的很好，很适合入门，后面的章节都没法跟着做，不适合学习", "marks": "较差"}
{"content": "还不错。对数据架构的分析挺好", "marks": "推荐"}
{"content": "一般吧", "marks": "还行"}
{"content": "大家不用担心ng4的问题，本书最有价值的算是数据架构部分了，不是很习惯Redux这种模式，需要多看几遍，除此之外并没有多少干货，也没有官方文档详细。书中样式在由semantic切换到bootstrap时并没有做特别说明。", "marks": "还行"}
{"content": "官方教程还是很有水准的,内容写的好,代码看的舒服(不过并没工程式规范),有看过官网的英雄教程,前面半本都在舒适区.从10章开始,RX和Redux的数据模型就比较晕了,书讲解的还算详细,囫囵吞枣先通读了,需要补充相关知识后再复习一下.", "marks": "力荐"}
{"content": "推荐书评 Angular权威教程 读后感（上） http://www.jianshu.com/p/9170620f772a\nAngular权威教程 读后感（下）\nhttp://www.jianshu.com/p/1eb10ffb82e8", "marks": "推荐"}
{"content": "刚好想了解一些前后端分离的知识，Angular 是个不错的选择，不过对我还是有点门槛，前端涉及的概念需要慢慢熟悉（e.g. RxJS、Redux）。总的来说书不错，但不能急于求成地去读。", "marks": "力荐"}
{"content": "这本书是由参与双11的各技术部门各自写一部分，然后集合起来成书的。各个部门都在吹自己厉害，而不知道自己所处的位置，有的章节一叶障目不见泰山，没有搞清自己的定位，吹牛都没有边了。阿里的水军不要太过分了啊，书里错别字、病句到处都是，整体来说这本书很一般。", "marks": "较差"}
{"content": "闲书一本，每个部门都在说自己怎么怎么艰难，一步一步发展到今天，想了解看电子版就好，这种书没必要买", "marks": "很差"}
{"content": "整体失望。比较泛泛而谈，没什么干货，感觉大部分是在说“我们阿里的创新／技术水平牛逼”, which I already knew beforehand.", "marks": "较差"}
{"content": "一个大型结案", "marks": "还行"}
{"content": "高压下的创新，细节点到为止。", "marks": "还行"}
{"content": "有些收获，技术讲得太少，吹了也不少……", "marks": "还行"}
{"content": "以双11为入口，讲解了阿里的主要产品的技术架构、演化史，技术讲解非常浅，只能了解个大概的思路，使读者可以了解：下单支付收货这个简单的过程背后的一系列复杂的故事...", "marks": "推荐"}
{"content": "中间件、大数据这块阿里确实是行业标杆", "marks": "还行"}
{"content": "读书笔记：http://www.hellovc.com/blog/1584", "marks": "力荐"}
{"content": "架构规划非常重要而且可操作，我们也可以从中吸取经验。规模大了以后，企业架构的统筹和治理就显得非常重要，否则多头的开发会造成巨大的浪费，也为整合增添巨大的困难。把最牛的架构师组织起来，夯实基础架构，为业务系统的架构提供可直接使用的最佳实践，是平衡人力资源投入和系统架构的可选之路。", "marks": "推荐"}
{"content": "这本书应该只有管理者读来才会觉得受益匪浅", "marks": "推荐"}
{"content": "全书满满的干货，第二章是我团队写的", "marks": "力荐"}
{"content": "阿里巴巴技术发展史，没有技术架构和观念，之后问题和解决问题之后的感觉。", "marks": "推荐"}
{"content": "阿里的书我都强推 不能洗脑的书都不是好书", "marks": "力荐"}
{"content": "略浅，为阿里打广告居多", "marks": "还行"}
{"content": "各部门博文的汇总，拼成一本书总觉得怪怪的", "marks": "较差"}
{"content": "阿里毕竟还是阿里，那个别的几个顶尖的牛人就是靠着业务目标扩大带来的巨大挑战锻炼出来。", "marks": "推荐"}
{"content": "虽然写的比较简略，干货不多，但还是能看到很多思路。", "marks": "推荐"}
{"content": "主要是了解下阿里技术以及针对大型网站优化方案的一些思路，不指望能有什么具体干货", "marks": "还行"}
{"content": "粗略读了一下，需要根据一些内网的东西继续深入一下，而且今年双十一感觉可以更加深入一下。", "marks": "力荐"}
{"content": "在2017年双11之际读完这本书，感慨。", "marks": "力荐"}
{"content": "这本书对阿里的技术给了一个系统的介绍，世界奇迹双11背后有太多人的付出，体系也非常庞大，作为了解，非常不错。任何技术的发展，都是业务发展推动的，没有无缘无故的技术。另一方面技术的发展也会促进业务的发展。从这本书的内容能够感受到阿里技术发展的历程，以及阿里人坚持不懈的精神，以及他们开发的心态。互联网真正改变了世界。", "marks": "力荐"}
{"content": "文章重新阿里双11发展历程，经历技术跌宕人心的进化", "marks": "推荐"}
{"content": "记录了阿里的技术演进过程。", "marks": "力荐"}
{"content": "电商先驱，技术与业务创新齐头并进，相辅相成", "marks": "力荐"}
{"content": "自己也有贡献，看到了整个演进…自己也有收获。赞这个双11的九年", "marks": "力荐"}
{"content": "业务驱动技术演进，为了满足业务场景，技术不断迭代创新的过程。经历共同成长是一种可遇不可求的经历", "marks": "推荐"}
{"content": "没有什么具体的东西", "marks": "还行"}
{"content": "一直想了解背后的技术细节，虽然没能亲身经历过，但跟随书的叙述感受一下也是可以的，推荐读读。读完感触良多，中国的技术将越来越好，也越来越强大，(๑•̀ㅂ•́)و✧加油", "marks": "力荐"}
{"content": "没什么干货，连一般的故事书都比不过，每个人各自吹了下牛合并到一起的一本书，居然卖这么贵，不值", "marks": "很差"}
{"content": "首先这本书不是讲的具体技术，而是对阿里双11技术统揽全局的概述；想要看技术细节的同学要失望了，不过本书最大的价值是开阔你的眼界，书中内容包含前后端、PC/手机端、算法等业务在双11中的演进，各位同学都能在书里找到自己感兴趣的地方。", "marks": "力荐"}
{"content": "基本是当故事书看", "marks": "推荐"}
{"content": "技术细节不够深入", "marks": "推荐"}
{"content": "有故事，有突破。", "marks": "力荐"}
{"content": "听人吹牛来见见世面", "marks": "还行"}
{"content": "大同小异吧 代码片段重复的太多了 并发和同步方面真是方便易用", "marks": "推荐"}
{"content": "讲了一些具体的程序例子，在例子中讲解了基础知识，包括数组，分片，map，函数，接口，基础库的介绍和使用，对入门有很大的帮助", "marks": "力荐"}
{"content": "易上手，示例偏简单", "marks": "推荐"}
{"content": "确实非常适合入门，目前基本看过几本go体验最佳。", "marks": "力荐"}
{"content": "一天能读完的小书", "marks": "推荐"}
{"content": "感觉一般", "marks": "还行"}
{"content": "浅尝辄止，对不起实战二字", "marks": "还行"}
{"content": "个人感觉一般：\n\n翻译的关键概念的辨识度不足，用词平常易混、无英文术语旁注，导致核心概念理解费力，结果忍不住去看英文版。\n尽量想以Go自己的视角而不用C层概念快速直接地解释（之前自己有体系的C/C++基础，如复杂指针应用无压力）；没有对语言体系讲解。结果不能形成自己的自主推演。\n扫了一下其它的书，语言体系讲解还是要看：\nThe Go Programming Language，2015-11；The Way To Go，2012-03\nProgramming in Go，2012-05；Introducing Go，2016-02", "marks": "还行"}
{"content": "挺不错的入门书，当然真正实战靠这本书是不够的。。。", "marks": "力荐"}
{"content": "1. 20170712 看完了一二章，还不错，get到很多语法……\n2. 20170805 之前看完了3-5章，也写了不少代码了，影响很大，今天开始看并发相关的\n3. 后续如再使用go，本书可作为参考", "marks": "推荐"}
{"content": "好书，图文讲解go内置数据结构很赞", "marks": "力荐"}
{"content": "学习go里面目前中文版的最好的书。没有之一。真的。简练~~", "marks": "力荐"}
{"content": "对Go的并发机制很感兴趣买来一观。\n看完关于并发的几章之后，对于goroutine/channel有一定的了解。但例子中的sync包，defer语句都没有很深入的讲解，不太符合“实战”一词，属于入门书。", "marks": "还行"}
{"content": "1程度：入门 \n2重要章节： \n  chapter2 Go程序实例； \n  chapter6 并发知识； \n  chapter7 并发应用实例； \n  chapter8 标准库log+json+io使用；", "marks": "还行"}
{"content": "入门不错，但是还得实战啊", "marks": "推荐"}
{"content": "入门不错，工程角度介绍各种特性，就是代码解释好啰嗦，先粘贴上整段代码，然后逐个函数再贴一遍代码和解释，放在网上文章里合适，放到书里像是凑字数", "marks": "推荐"}
{"content": "内容适当，排版规范，代码基本都可以运行，比国人写的那些认真很多", "marks": "推荐"}
{"content": "挺好的，很基础，可以作为入门书籍，讲了些基本的，代码分析很细。", "marks": "推荐"}
{"content": "一本书200多页,代码注释倒是挺详细,是优点,也是让人难受的地方,大段之后,再抠出小段来占版面,有点受不了", "marks": "推荐"}
{"content": "好书，这本书适合已经有编程经验的同学看。书页数虽然才两百多页，但是 Go 基础讲解到位，代码注释全面，讲解详细。其中第四章讲的数组切片和映射内部实现时图文并茂，好评！", "marks": "力荐"}
{"content": "除了集群部分都很好，集群部分redis cluster和那个cache cloud真的不行，还是要看codis和twitter的那个。", "marks": "推荐"}
{"content": "强烈推荐，逻辑清晰，深度适中，尤其是对运维人员和初级开发人员", "marks": "力荐"}
{"content": "真的应该成为国产技术书籍的标杆，不管是书的内容，还是创作团队在网络上公开的博客，文章等，都是用心之作。唯一个人认为可以再优化的是，监控软件的安装，很多配置都默认写在一些文件，导致自定义安装目录时带来部分不变，，，但是依然不能妨碍书本身的精品。大力推荐 ，不管是 redis 新手 老手，都能学到很多。", "marks": "力荐"}
{"content": "值得拥有", "marks": "力荐"}
{"content": "v3.0", "marks": "推荐"}
{"content": "看了Redis的设计与实现，觉得这本也阔以，稍微侧重一点点实战。", "marks": "力荐"}
{"content": "本身redis相对也简单，在API方面讲的也很详细，内存方面的原理也有讲到。目前只是把redis用作简单的缓存实现，也没有集群。", "marks": "力荐"}
{"content": "如果本书以github仓库形式发布，bug和issue能提一堆。然而瑕不掩瑜，作者的组织结构，实战分析的经验，是对得起四颗星的，甚至可以作为一本工具书；书中的错误有些比较严重，我以读书笔记代表性提出两个。。有质疑的地方，就去追踪源码，毕竟redis实现还是比较简单的。", "marks": "推荐"}
{"content": "运维部分读起来比开发部分有意思多了😄", "marks": "力荐"}
{"content": "redis入门好书。有基础的api、数据结构讲解。redis能做什么的场景解析。运维和集群也有涉及。", "marks": "还行"}
{"content": "有种书可以做你身边的技术专家", "marks": "力荐"}
{"content": "redis cluster介绍的非常详细，从原理到实战经验全部都有。", "marks": "力荐"}
{"content": "以前关于Redis只知道有两本书，《Redis 实战》和《Redis 设计与实现》。前者重点是怎么使用，后者重点是源码实现。这本书偏重于怎么维护，插入前面两本书之间，算是一个很好的三部曲了。", "marks": "力荐"}
{"content": "目前看到的写redis最棒的书。强烈推荐。", "marks": "力荐"}
{"content": "很好的书，和《redis实战》配合看效果好，勘误网址如下：https://cachecloud.github.io/", "marks": "力荐"}
{"content": "大致看完这本，就能深入学习 Redis 设计和实现了。", "marks": "力荐"}
{"content": "从基础介绍、原理、开发运维一气呵成，难道的好书。", "marks": "力荐"}
{"content": "好看！", "marks": "推荐"}
{"content": "适合零基础当做入门科普读物吧，书中的python代码不多，还算直观。买这本书是冲着python代码去的。有点小失落，理论部分还行。", "marks": "还行"}
{"content": "科普读物", "marks": "还行"}
{"content": "对于初学者真的蛮好的，概念拆的很清晰。树立起学习信心才能更好地进行学习嘛，赞", "marks": "力荐"}
{"content": "简单好看，我觉得叫图解算法入门简介比较合适，所有的算法都有介绍但是没有深入的分析", "marks": "推荐"}
{"content": "小白归小白，还是实用的", "marks": "推荐"}
{"content": "看了此书我才知道，好多基于数学的算法我都学过的。可惜都惭愧了还给了老师。现在我也才明白当初那些数学课到底有什么用！只可惜知道的太晚啦。。。", "marks": "力荐"}
{"content": "非常好，结合这写算法的应用讲解，以及图让你理解", "marks": "力荐"}
{"content": "适合给本科生以下的初学者。", "marks": "还行"}
{"content": "浅显易懂，图很可爱。", "marks": "推荐"}
{"content": "通俗易懂，算法中重要的知识点都有。", "marks": "力荐"}
{"content": "通俗形象，但浅了点", "marks": "推荐"}
{"content": "翻译有的地方有些奇怪【。", "marks": "推荐"}
{"content": "3.5吧，虽然凌乱，其实还挺有趣的。", "marks": "推荐"}
{"content": "入门得过于简单", "marks": "较差"}
{"content": "适合新手看的入门书。早些时候看会有帮助", "marks": "推荐"}
{"content": "虽然是入门，但有点少而浅", "marks": "推荐"}
{"content": "太基础，适合小小白", "marks": "还行"}
{"content": "大概看了看，不适合我这种需要深入学习数据结构的考研狗。", "marks": "还行"}
{"content": "算法是编程的灵魂。", "marks": "推荐"}
{"content": "一般,一些复杂算法还是要敲代码调试才能明白。", "marks": "还行"}
{"content": "科普", "marks": "还行"}
{"content": "这本书实在是写得太简单了……感觉是给小孩子看的", "marks": "还行"}
{"content": "非常基础的算法", "marks": "力荐"}
{"content": "简单易懂。比起那些大部头的算法书，这本算是让读者以最轻松的方式了解算法的一些基本知识了。强力推荐。", "marks": "力荐"}
{"content": "用图来解释算法是非常好的想法，这本书也非常的体贴，看起来也很快。当然要说不足，这本书只能算作学习数据结构和算法的热身教材。可以给你一个整体的感觉，但是很多细节需要你再继续学习。当然这本书看起来还是非常舒服的，基本上半天就可以学习完。例子也很适合笔算，一步步的图解也很好！", "marks": "力荐"}
{"content": "通俗易懂", "marks": "推荐"}
{"content": "入门的算法书 篇幅很小 但基本的都有点到 让算法变的有趣而不是那么的枯燥", "marks": "力荐"}
{"content": "就是喜欢这种200页的小书。", "marks": "力荐"}
{"content": "非常不错的入门书籍，简单有趣还授之以渔。", "marks": "力荐"}
{"content": "算法入门书，学个概念，有用时再复习！", "marks": "推荐"}
{"content": "感觉像是小学及中学向的算法书", "marks": "还行"}
{"content": "学习一下 形象理清思绪", "marks": "推荐"}
{"content": "至少可以看懂", "marks": "推荐"}
{"content": "讲解真的很明白，图画的也都很有趣，当然不能强求深度，作为科普和小书已是精品。", "marks": "力荐"}
{"content": "入门", "marks": "推荐"}
{"content": "该详细的不详细，该略讲的讲的很幼稚.....并没有多少干货.....唉", "marks": "较差"}
{"content": "入门书籍，数学基础几乎没有要求，讲解简单明了。一周目，算是我看过最简单的算法书了。", "marks": "力荐"}
{"content": "#98天读35本书#第18本,对算法做了一个概率.图文结合的形势不错,对算法的讲解不够细致.", "marks": "还行"}
{"content": "入门", "marks": "力荐"}
{"content": "算法入门神书，推荐给年轻人看", "marks": "力荐"}
{"content": "挺不错的一本零基础算法科普书", "marks": "推荐"}
{"content": "好书好书，适合给孩子讲课。", "marks": "推荐"}
{"content": "小篇幅python小白了解算法的书籍（可是一本17年的书py还是2.7。。）。课后有很简单的练习题，并有答案）。小白归小白，本书仍有益处。", "marks": "推荐"}
{"content": "偏入门向的算法书，只看了最后三章，动态规划部分更像是介绍了一种方法，原理并没有讲太多。", "marks": "还行"}
{"content": "算法入门，可用作规范一些算法思维，但是读深入的算法书是必须的", "marks": "推荐"}
{"content": "浅显易懂", "marks": "推荐"}
{"content": "举的例子真的恰到好处，非常适合初学者", "marks": "力荐"}
{"content": "三天看完，比较基础", "marks": "还行"}
{"content": "很通俗易懂，浅显的初级知识。", "marks": "力荐"}
{"content": "本书尽量用图画的形式来阐述算法思想，虽然很有趣，但是内容太浅，只是入门而已。还需要看别的书籍！", "marks": "推荐"}
{"content": "非常适合算法入门，特别是前面几张，从开始一直到hash那一章非常清晰明了，包括各种O的估算是怎么得出，各种数据结构的娓娓道来，但从贪婪，动态规划开始就讲得太浅了，离真正实用还是有些距离，偏科普了，不论怎样还不错的", "marks": "推荐"}
{"content": "门都没入，但写得非常好", "marks": "推荐"}
{"content": "初学者友好，如果是计算机专业的同学想复习算法还是太简单了", "marks": "推荐"}
{"content": "适合入门", "marks": "力荐"}
{"content": "作为一本算法的扫盲书，无疑很优秀，让人读得进去的才叫入门书籍，不然就是劝退了", "marks": "力荐"}
{"content": "简单，容易理解，算法选择很经典，加深了理解，搞懂了很多以前不明白的点", "marks": "力荐"}
{"content": "入门读物，仅仅是介绍，附的代码很好读，就是有一点小错误。", "marks": "推荐"}
{"content": "研究了画风。。", "marks": "推荐"}
{"content": "轻松愉快的入门书，当然看完还是需要实际的练习。如果当年的OS老师给我们教算法先用这本书而不是\n https://book.douban.com/subject/4034470/ 入门的话，也许出勤率应该会更高吧……", "marks": "推荐"}
{"content": "极为基础的算法入门书。看完不会有很大的提升，但讲述精要清晰，适合对基础算法理解模糊的读者。读起来很快。", "marks": "推荐"}
{"content": "很好的书，生动形象，就是内容有点少。", "marks": "推荐"}
{"content": "p.32 有一处缩进出错\np.124 排版出错\np.125 一处错误\n\n小白算法科普读物\n有些代码排版不是很好", "marks": "推荐"}
{"content": "算法入门\n中文的弊端  一些术语  用中文很反感\n提纲挈领的讲了算法\n图解很好\nPython虽然是2 但影响不大", "marks": "力荐"}
{"content": "太浅了  一天看完了… 不过是本入门的好书  爱看插画的可以看看", "marks": "还行"}
{"content": "适合小白入门", "marks": "还行"}
{"content": "本书介绍了几个基础的算法和数据结构，并图文并茂的把复杂枯燥的东西说的简单明白。", "marks": "力荐"}
{"content": "讲解平实详细，容易理解，适合入门", "marks": "还行"}
{"content": "5.22-5.24三天读完，最通俗易懂的算法入门书，其实简单到门都没入，介绍概念但是干货不多。", "marks": "还行"}
{"content": "的确像小说一样有趣，读起来很轻松。例子用Python加画图讲得有趣透彻。读完明白了广度优先遍历、动态规划有趣的应用。", "marks": "力荐"}
{"content": "最后三章还不错，开头的有点太基础了，适合0基础的同学入门", "marks": "推荐"}
{"content": "很好的入门书，每一个算法都有python的代码实现，有逐行解释，很适合我这个新手。一天就翻完了，希望有进阶版。减一星是因为有一些印刷错误小瑕疵，无伤大雅，可根据上下文理解。", "marks": "推荐"}
{"content": "很棒，浅显易懂", "marks": "力荐"}
{"content": "通俗易懂，生动有趣，一本不会让人想睡觉的入门书籍", "marks": "推荐"}
{"content": "算法入门书，适合小白和想要了解算法的人", "marks": "推荐"}
{"content": "算法入门或者想复活对算法已死的心，推荐！", "marks": "力荐"}
{"content": "这本书的内容其实挺简单的，不过里面对算法的图示非常好，有助于初学者对算法的象形理解，还有对实际问题的结合，也是本书的优点之一。", "marks": "推荐"}
{"content": "入门必备，简单易懂，图很多。很薄，两天读完，梳理完基础知识。", "marks": "推荐"}
{"content": "挺简单的一本小书，一天看完，重新复习了一些算法基本知识 最后几章提供了些新技术的关键词，小有所得", "marks": "推荐"}
{"content": "图灵打折买的，很短小", "marks": "力荐"}
{"content": "比较简单，内容少而精，作为算法入门书籍还是值得一读的，", "marks": "力荐"}
{"content": "有趣形象，简单明了", "marks": "推荐"}
{"content": "对敏捷理念和方法讲的比较透的一本书，虽然书中的概念和实践都已经有了比较深的了解，类似的书籍也阅读的很多，但是这本书还是给我一些新的体悟。", "marks": "力荐"}
{"content": "在第一次接触敏捷开发开发并初步尝试后近八年，再次回顾敏捷的一些核心思想和实践，依然很有启发。而本书也有对这些年来各项目团队不那么成功的敏捷实践案例的一些反思，这是比较可贵的。", "marks": "推荐"}
{"content": "从实践到思想，从do到think，非常科学的敏捷教程！", "marks": "力荐"}
{"content": "3分已读，美工略欠缺。", "marks": "还行"}
{"content": "主要介绍微信小程序的开发流程，有部分内容是来自微信小程序开发文档，核心内容应属后面几章的开发实例。", "marks": "还行"}
{"content": "一本理性认识小程序的书，感性地看了一下...", "marks": "推荐"}
{"content": "同样当作工具书一本，摆在案头，需要时拿来看一看。", "marks": "还行"}
{"content": "编程入门书，国内少有的挺有趣的教材，可能是作者比较年轻的缘故。", "marks": "推荐"}
{"content": "自上而下的顶层设计，自下而上的执行方法", "marks": "推荐"}
{"content": "看了慕课视频买的。\n性质类似于讲义，内容与前后的逻辑(后面的需要了解的东西没有在书中说明，有一部分在视频中说了)不完整。\n\n总之\n1. 不适合没有任何其他语言基础的人入门。\n2. 必须配合视频才知道完整的知识点。", "marks": "还行"}
{"content": "很棒的一本教材，配合嵩老师在中国大学MOOC开设的课程就更棒了，Python入门首选。", "marks": "力荐"}
{"content": "给孩子看的吧。", "marks": "较差"}
{"content": "挺基础，可以给小娃娃做练习题用:)", "marks": "还行"}
{"content": "给孩子看的吧。", "marks": "较差"}
{"content": "一般般", "marks": "还行"}
{"content": "三星给的是目标读者-想知道算法是怎么回事没有任何基础的人。毕竟整本书基本只覆盖了简单的数据结构和几个搜索算法。 我的感觉是就算法和数据结构而言，有时候入门和第一个台阶之间真的有一段漫长容易走弯路的距离，入门书（如同这本）太简单，知晓几个名词看得懂思想，其实真的远远不够，因为太具体了，单论遇到一个问题怎么规约到已知的算法上去，就有无数种变形和抽象，这一步估计只能通过不断的训练了。毕竟算法的目的是为了高效解决问题，只学会了用锤子但不知道什么钉子能砸、拿什么锤子砸，容易出现挫败感。  高级的书又太难，直接给你论证锤子的制造过程，充满数学公式，又太抽象。", "marks": "还行"}
{"content": "通过一个不太引人入胜的故事科普常用算法，不过还是有点意思。短时间内将以前学的算法以这种还算有趣的方式回顾一遍。\n另外，书很薄，但很贵", "marks": "还行"}
{"content": "太牵强了", "marks": "较差"}
{"content": "很薄，不到两小时看完。内容不多，提到了深搜广搜等几个基本搜索算法，数据结构只有栈队列二叉树和堆。 完全没基础估计看不懂，有点基础就当成蹩脚故事书看吧，书中场景比童话还童话。 \n也许只有刚刚入门的孩子，有闲当成故事书翻翻，跟晦涩理论书印证一下，才有些用处。", "marks": "还行"}
{"content": "看看", "marks": "还行"}
{"content": "大部分都是比较基础的搜索算法，额，情节人物几乎全是为了科普服务的。所以作为小说非常糟糕……但是作为一本趣味算法入门的话，倒还不错", "marks": "还行"}
{"content": "贼不好玩", "marks": "较差"}
{"content": "比较简单吧，最多到二叉搜索和堆排序。没有图相关的算法（深度优先和广度优先有）", "marks": "推荐"}
{"content": "涉及的算法太基础了。用小说来写算法是一个不错的想法，但是本书太臃肿了，一多半的篇幅都没用。二分搜索，并行搜索，深度优先搜索，广度优先搜索，深度限制优先搜索，二叉树，平衡二叉树，内容只涉及这些算法，感觉一片文章都可以讲明白的，整整讲了一本书。", "marks": "还行"}
{"content": "分开来说，小说情节挺没劲的，算法介绍挺入门的，合在一起，有点新意但没多大意思。前阵子狗东图书促销差点买了这本，所以书评神马的，随便听一听。", "marks": "还行"}
{"content": "其实不是很清楚这书的受众… 对小朋友来说太无趣，对文科宅来说文学性为负，对技术宅来说整个故事流露出一种智商堪忧的尴尬，设定很尴尬。其实看到它把xx公司首席xxx作为卖点的时候就应该意识到大概率不值得花费时间。", "marks": "较差"}
{"content": "当算法入门书太简单，举的例子都冗长且不易理解；当小说情节太简单，故事发展太强行，完全为科普算法服务；两者结合更灾难", "marks": "还行"}
{"content": "故事好无聊，但是算法解释还算有趣，可以给小朋友们看", "marks": "还行"}
{"content": "入门", "marks": "还行"}
{"content": "第一本读完的算法书……算法基础太差了，之前一到图论就死活读不下去……这次总算对复杂结构有概念了。\n我可能是个假程序猿😂😓😰\n小小一本，卖的死贵……还好京东活动买的……", "marks": "推荐"}
{"content": "太幼稚了  读不下去了  初中生看看差不多", "marks": "还行"}
{"content": "内容也实在太简单了", "marks": "还行"}
{"content": "轻松是轻松了，看完没啥收获", "marks": "还行"}
{"content": "蛮有意思的书", "marks": "推荐"}
{"content": "如果世界上所有代码书都这么好玩就好了~", "marks": "推荐"}
{"content": "…怎么说，内容简单。给小孩子看吧，文字绕弯，图例不够形象，英文名不翻译的话不认识，翻译的话一些幽默又会看不懂。\nps太贵，要出第二本的结尾也很无力吐槽", "marks": "还行"}
{"content": "很好的通俗易懂算法入门引导书", "marks": "推荐"}
{"content": "最大的敌人显然是不必要的复杂性。开始节奏比较慢，算法都是很基础的。怎么用小说的方式来写出算法的故事是很有意思的。搜索优化的关键是信息，是本书的主题；为了多次搜索的优化，一次花成本的时间建立合适的数据结构。索引、缓存、堆都是这个目的，维护和检索某种有信息的树是快速查找的关键", "marks": "推荐"}
{"content": "难得用算法来解释文学的书，用硬功夫硬生生推倒文学对科学竖起的高墙，尽管还不够精致，但很有想象力和实际意义", "marks": "力荐"}
{"content": "还不错，refresh 自己有限的算法知识。而且这个工程师有一个有趣的灵魂，愿意花时间来编一个故事来深入浅出地讲解这些基本的算法知识，值得嘉奖。希望世界上多一些有趣的人", "marks": "还行"}
{"content": "小科普书籍，也算是脑洞大开。。小白看", "marks": "推荐"}
{"content": "挺有意思的", "marks": "推荐"}
{"content": "一本小书。里面对各种算法的解释特别适合拿来讲给小孩子或外行，很会打比方。", "marks": "推荐"}
{"content": "天哪为什么我要花这个钱买它😭😭介绍的无非队列堆栈二叉树而已……搞了个噱头骗钱", "marks": "还行"}
{"content": "能对算法有个简单的了解，适合外行入门。（故事有点生硬）", "marks": "还行"}
{"content": "有意看这本书的，无算法基础的想在读侦探小说的趣味中顺便获取算法的知识，有算法基础的想看下算法来可以怎么应用到侦探方法上，然而我看算法还是有点费劲，也没看到一些有趣的算法应用。这本书结合得不是很好。", "marks": "较差"}
{"content": "太简单了，没有挑战性", "marks": "还行"}
{"content": "瑟瑟发抖的萌新可以用来入门算法，克服心理障碍。", "marks": "力荐"}
{"content": "比较失望 没有找到小说和算法书的平衡点 ", "marks": "还行"}
{"content": "书中写的算法就是数据结构中学的几种基本算法，当时学的时候理解了，可能是没有深刻理解和应用，这本书生动的和现实中遇到问题结合起来，而且又是侦探类型的，触发读者主动去思考和理解，如果之前学过，读这本书就感觉很有趣了，没学过的，这本书可以让你很轻松的理解各种算法的原理和适用环境。", "marks": "推荐"}
{"content": "读起来没难度，很大众化的入门书。", "marks": "力荐"}
{"content": "nodejs学习不可错过的一本好书，注重解决实际问题，而且选题绝不肤浅，能学到不少知识。", "marks": "力荐"}
{"content": "偏深入的实战经验，但是还是浅了，看了不过瘾。", "marks": "还行"}
{"content": "翻译确实不行，内容确实有许多过时了，收获还是挺多的，过时的地方就没怎么看了", "marks": "推荐"}
{"content": "机翻水平", "marks": "很差"}
{"content": "很棒的书！遇到的很多开发上的问题都能在书中找到解决方案！美中不足的是没有应用ES6语法。", "marks": "推荐"}
{"content": "好书，之前看其他nodejs的书，看得我晕头转向的，不知道在讲啥。这本书虽然只看了前面几章，但是有条理，逻辑清晰，只是自己能力不够，有些地方看不懂，后面还会继续看下去", "marks": "力荐"}
{"content": "值得一读！", "marks": "力荐"}
{"content": "大道至简", "marks": "力荐"}
{"content": "简约且简单", "marks": "还行"}
{"content": "软件本质是交付价值。GOF4之一。敏捷，尽早交换价值软件，就需要更好把握用户需求。", "marks": "推荐"}
{"content": "学生党表示全是大道理啊，暂时没有用啊，以后又会忘记。。。", "marks": "推荐"}
{"content": "敏捷方法价值论", "marks": "还行"}
{"content": "很基础，偶尔能有特别的启发", "marks": "还行"}
{"content": "书很不错，思维新颖", "marks": "力荐"}
{"content": "一大亮点在于重新给设计模式分类，借助类比帮助理解。\n当然图解有点夸张，不过一些时序图也起到了作用。\n之间夹杂着一些UML，Java基础知识的讲解。\n完全以例子代码帮助理解设计模式，入门书比gof好。\n建议把一些Java知识剥离开，放在前面或附录，比如提到了多线程，内部类等知识点。", "marks": "力荐"}
{"content": "非常的设计模式 书籍，例子也非常好", "marks": "力荐"}
{"content": "更倾向于github上的教程", "marks": "还行"}
{"content": "书就是通俗易懂最佳！！！！", "marks": "力荐"}
{"content": "太啰嗦", "marks": "还行"}
{"content": "结城浩桑的书都是棒棒哒", "marks": "力荐"}
{"content": "本人计算机大三学生，为了准备校招面试才准备学习设计模式，经同学推荐找到这本书，写的非常详细，对新手很友好，入门轻松同时又不缺乏深度，个人感觉读起来比head first 设计模式要轻松，更容易理解", "marks": "力荐"}
{"content": "这是一本经典的书籍，非常适合作为1~2年的学习经验的程序员来学习。书中的内容细致，讲解的很到位，刚买了一本准备重新理解一下设计模式。", "marks": "力荐"}
{"content": "书被誉为学习LibGDX游戏开发的最佳入门书籍，全书从零开始，完整的开发了一款2D横轴游戏，全面而又深入的讲解了LibGDX的各大模块及游戏开发的常见技术，比如：应用生命周期、资源打包、动画、粒子特效、模拟（Box2D、Bullet）、音效、着色器等", "marks": "力荐"}
{"content": "非常适合自学，深入浅出，是学习LibGDX 的最好的一本书。", "marks": "力荐"}
{"content": "本书通过一款游戏的完整开发过程，由浅入深，循序渐进的介绍了LibGDX框架的大部分知识点，这对初学者来说是至关重要的。全书内容精挑细选，每一部分，每一章节都很好的介绍了一个重大的知识点。与其它书籍不同的是，本书并不平铺API洪流，而是将每一项技术应用在实际项目中，一方面详解重要API功能及用法，另一方面从应用架构的方向锻炼读者的编程技巧。强烈将本书介绍给每一位对游戏开发有兴趣的同学（前提是你必须有一点点Java基础）。", "marks": "力荐"}
{"content": "内容详实，深入原理，案例丰富，是当前深入学习Angular不可多得的好书", "marks": "力荐"}
{"content": "一直在关注angular2，官方文档全部看完，这本书相对比官方文档来讲，是不错的，内容很详细，基本了解道angular2的方方面面。我其实一直期待angular的js版本，哪怕es6的版本也OK，我是接受使用js开发，而不是typescript，从不相信黑盒转化的语言，最后都是一堆坑。", "marks": "推荐"}
{"content": "应该是目前最靠谱的angular2中文书了，开篇部分能更多介绍ES6特征，并且对ES6和TypeScript特征做个对比介绍就更好了", "marks": "力荐"}
{"content": "目前最好的ng2书籍，比还没汉化完的ng2-book还棒。ng2-book比较注重快速上手，此书注重深入理解，不过也有实战。希望国内团队多出这种优秀书籍。", "marks": "力荐"}
{"content": "很不错，从简短的案例，由浅入深的讲，加深了对Angular的理解。", "marks": "力荐"}
{"content": "一个字：非常好", "marks": "力荐"}
{"content": "非常有用。大部分教写代码的书只谈些语法和实现，这本书把一个编程老司机需要的所有只是都介绍了一遍", "marks": "力荐"}
{"content": "用JavaScript 讲编程知识，可能适合野生前端？但其实很多知识只能意会无法言传。", "marks": "还行"}
{"content": "太基础了吧。。。快速翻阅", "marks": "还行"}
{"content": "囫囵吞枣  快速过了一遍  大部分都听说过  还是需要不断实践啊！！！  长路漫漫  \n知行合一", "marks": "推荐"}
{"content": "相当于概论类书籍，介绍广泛，点到即止，适合刚入门和即将入门的同学们。", "marks": "推荐"}
{"content": "买的时候没有看到英文原标题，蛮基础的一本书，但对于初学者是比较全面的，特别是一些软技能的培养，我认为也是很重要的", "marks": "推荐"}
{"content": "口水书，还是少费钱在这类书上吧", "marks": "还行"}
{"content": "这本书是以JavaScript语言为背景的计算机程序设计入门书，但即使你没有或者也不打算学习JavaScript，甚至于并没有志向成为一名程序员，而只是简单地用到一些计算机程序设计的知识（哪怕只给Excel写写脚本），这也是一本不可多得的好书。对已经入门的程序员来说，这本书也能在知识与方法的梳理方面提供良好的建议，是不可多得的佳作", "marks": "力荐"}
{"content": "全是一本口水书，介绍的内容相对较多，散，口水多，不推荐！", "marks": "较差"}
{"content": "你还记得初次写出hello world的心情吗", "marks": "力荐"}
{"content": "Steven从一个麻瓜的角度带入，给还没有进入编程世界的新人讲述每个看似毫无头绪但程序员习以为常的日常，本书以JavaScript编程为例，讲述了环境、依赖、构建、版本、测试及文档的配置及其重要性，给读者构造了一个程序开发的大概轮廓。授人以渔，书后部分的资源也相当受用，推荐给编程新人和自觉还没入门的人～", "marks": "力荐"}
{"content": "Hadley Wickham的数据哲学", "marks": "力荐"}
{"content": "基本上是hadley在安利他的各种包tidyr, dplyr, purrr, ggplot2，hadley的东西有更高的抽象，用起来还是比较舒服的。只不过base包的东西已经很熟，表示老狗学新把戏的意愿不是很高。本书在手机上看完，囧rz..", "marks": "推荐"}
{"content": "读得不太认真，有需要再复习吧。R毕竟不是专门做统计的，大部分场合下当然没有stata之类直观，纵有万般好，也不必过分推崇。我决定实用主义地穿插着用各种软件，虽然姿势难看，但是省劲儿啊……\n", "marks": "力荐"}
{"content": "大概因为有点pandas和sklearn的基础，一刷非常顺畅~暑假跟着R for finance类的教材初学R真是不堪回首=。= #选对入门书太重要!", "marks": "力荐"}
{"content": "入门书。Tidyverse 的哲学可看作 R 的新（现代）范式，目的就是取其精华、去其糟粕。请 pandas/matplotlib/sklearn 诸君继续努力，因为我被迫用你们时经常怀念 tidyverse 的某些优雅与效率", "marks": "推荐"}
{"content": "非常好。之前一直因为R混乱的语法而弃用很多次，但是pandas和jupyter notebook又不够灵活，勉强用python做了一段时间的数据分析。这次偶然接触了tidyverse套件，瞬间觉得R非常清晰好用。另外这本的理念很好，完全摒弃了其他R工具书从头到尾讲统计的陋习。", "marks": "力荐"}
{"content": "这书可以翻翻，里面的很多package并不常用，像什么tidy 很少用的。作为参考书是可以的，但是入门这本书并不好", "marks": "推荐"}
{"content": "刷新R的世界观和方法论", "marks": "力荐"}
{"content": "适合有一定R基础的初学者；在线Bookdown版本：http://r4ds.had.co.nz/", "marks": "推荐"}
{"content": "学了一阵子tidyverse包，觉着还是挺好用的。相比于很多觉着这个包大大刷新了R的世界观/方法论，改变了R语言的面貌（变得更加简洁清晰），但却又囿于以前的知识不太想学想用的人来说，一开始就接触的就是这个包大概是幸运的。", "marks": "力荐"}
{"content": "看的是网页版，内容很全，从数据整理，R编程，作图甚至markdown的使用都有涉及到，适合入门，每个部分也都推荐了一些深入的paper和书，适合做深入理解时用", "marks": "力荐"}
{"content": "本校大神作品\n", "marks": "力荐"}
{"content": "实用", "marks": "力荐"}
{"content": "把整个互联网整体架构讲述的非常清楚，清晰描述了每个组件在架构中的位置，使用到的相关技术原理，推荐了常用流行的解决方案，已经多个方案之间的权衡取舍，也说明当前一些技术的局限性和实施难度，非常具有实际意义。", "marks": "推荐"}
{"content": "一切之前先确保自己做的东西是真正的需求，有价值；然后专注于伸缩性、优化。", "marks": "推荐"}
{"content": "本书总体上对主题有了比较全面系统的介绍，但仍有一些局限性:Web服务一章没有覆盖以Thrift为代表的跨语言RPC框架，且很多篇幅都是推荐Amazon等厂商的产品方案，不适合本国国情。瑕不掩瑜，终究是本好书。", "marks": "力荐"}
{"content": "入门必读", "marks": "力荐"}
{"content": "建立伸缩性的整体概念，包括前端，web服务，数据访问，缓存，消息队列，搜索，测试，运维等各个职责的各种伸缩性方案的优缺点分析，可以建立伸缩性整体概念框架，引导日后更深入的学习", "marks": "力荐"}
{"content": "写的非常清晰，译者也写了类似主题的书，翻译很流畅", "marks": "力荐"}
{"content": "非常棒", "marks": "力荐"}
{"content": "结合《大型网站技术架构核心原理与案例分析》一起看对整个网站的架构演进及实现都会有个比较深入的了解。", "marks": "力荐"}
{"content": "本书中文名翻译的很有意思，比英文厡名似乎更准确一些。本书的受众为新创企业应用设计开发者，阐述如何在企业新创阶段既要做到经济节省、降本增效，又要规划好系统的伸缩性以应对可能的指数增长。作者围绕Web应用的伸缩性提出了一个贯穿全书的指导思想，和具体应用于七个领域的设计原则和最佳实践。", "marks": "力荐"}
{"content": "比较简单 一些思想 best practice还是不错的", "marks": "还行"}
{"content": "最近看过最好的技术书，没有之一", "marks": "力荐"}
{"content": "很全面", "marks": "推荐"}
{"content": "可能之前看分布式架构的书太多了，书中大部分介绍的技术和理论都已经耳闻。不过后面讲消息队列那里很受用。还是那句话，看完此书对出去吹牛大有裨益。", "marks": "还行"}
{"content": "挺不错的，通俗易懂，每个章节讲解一部分，缓存，数据库，web服务层，全都围绕着标题“可伸缩”三个字展开。我觉得比国人写的两本大型网站技术机构好", "marks": "推荐"}
{"content": "暂时没有很理解  毕竟经验还少  以后工作再来回顾", "marks": "力荐"}
{"content": "互联网开发的关键技术", "marks": "推荐"}
{"content": "如果你可以接受RBT的讲解先是Haskell来一遍，再伪代码来一遍，在Pythn实现一遍。。。", "marks": "还行"}
{"content": "purely functional data structure + pearls of functional algorithm design。新瓶装旧酒，亮点是和命令式实现的比较。parallel algorithm着墨太少，系统性不如CMU 15210 lecture notes，fp老炮可以略过此书。", "marks": "还行"}
{"content": "开始是在TL讨论组看的电子版，后来惊闻出了实体版，于是又买了本，内容上比电子版更翔实。汉母语作者写的算法书里，这本是我觉得最好的一本。", "marks": "力荐"}
{"content": "很厉害。各种算法都讲解的很明白。关于各种树，一直分不清楚，看了之后醍醐灌顶。", "marks": "力荐"}
{"content": "开头的两个例子很精彩", "marks": "力荐"}
{"content": "太强了。。。都有点看数学竞赛书的感觉了", "marks": "力荐"}
{"content": "一个算法用不同的编程范式的语言写出来时，会让人眼前一亮的，对，我说的就是Haskell", "marks": "力荐"}
{"content": "继续努力，写下一本。", "marks": "力荐"}
{"content": "对入门自学编程的孩子挺友好的…", "marks": "推荐"}
{"content": "本书非常适合python入门。我是结合着廖雪峰的教程一起看的，半个多月看完。可读性很高，不是那种枯燥的教科书，所以也适合没有编程基础的人。不过书中有些不详细的地方，想深入研究的就需要再看其他的教材或者靠自己多编写程序来提高。所谓师傅领进门，修行靠个人，而且编程本来就是需要靠自己多练习来提高的。", "marks": "推荐"}
{"content": "对新手非常非常友好，把程序及语言解释得非常清楚且形象", "marks": "力荐"}
{"content": "在Python技巧与编程思想的讲解上，Vamei掌握了一个很好的平衡。书的语言真是深入浅出，把一些高阶函数、高级特性也能讲的通俗易懂。推荐！", "marks": "力荐"}
{"content": "初级", "marks": "推荐"}
{"content": "从今天起，我要成为一名键盘侠！😈😈😈", "marks": "推荐"}
{"content": "前面部分讲得清晰易懂，到第六章后开始有点难懂了，不过我感觉后面的部分属于高级内容，先大概有一个印象，以后在编程之路上可能会慢慢融会贯通，到时候回来再来看这一部分就能够理解了。总体来说很不错！", "marks": "力荐"}
{"content": "生动有趣，通俗易懂", "marks": "力荐"}
{"content": "不太适合给小白入门哦", "marks": "还行"}
{"content": "哪有给自己书打5星的", "marks": "较差"}
{"content": "看过博客，然后今天在书城看完了，书比博客更加详细一些。支持Vamei，打算看完他写的所有博客。", "marks": "力荐"}
{"content": "对于一个没有编程基础的人来说，书中举的例子都挺简单的，代码也都能看懂，但无法与实际联系在一起，读完只能对这一门语言有一个初步的基础了解，无法系统化地了解一门编程语言的特点及要点。", "marks": "推荐"}
{"content": "我特别特别喜欢VAMEI的文字，他总是有办法让你一开始读就停不下来，所有的知识点都在他的娓娓道来中 一点一点呈现。书中不仅有知识点，还有很多他觉得可以有更多思考的地方和方向，但要仔细读才能发现。比心~", "marks": "力荐"}
{"content": "属于入门友好级的书，让你了解python的语法思路，但书中还是有些地方没说清楚，有些地方的代码如果没有编程基础还是比较难懂，总体上不错，对python理解又更进一步了", "marks": "推荐"}
{"content": "通俗易懂，Python语言的各方面都有提到一点，作为入门书籍还是不错的！毕竟200页的书也不可能涉及太多深入的内容！", "marks": "力荐"}
{"content": "以前看了作者博客，学到很多东西，买一本支持一下，比较适合入门，建议下一版把博客后面进阶和标准库的一些东西加上去，现在的内容有点少", "marks": "力荐"}
{"content": "作为python入门确实不错，但是到最后几章的例子没有注释看不太懂。有时候就觉得讲的太简单了", "marks": "推荐"}
{"content": "在知道创宇余弦大大的wx公众号看到的推荐就买了，四天读完（新手），之前看过廖雪峰的python教程和《笨方法学python》。要是作为入门我当初一定选这本书（当时还没出），有点遗憾没有添加python标准库的章节进来（看到作者的blog教程上有）以及web开发的章节，所以感觉没有廖的教程那么完整（因为我学python目的很明确，就是为了做web后台）", "marks": "推荐"}
{"content": "前面还可以，后面真心不太懂。", "marks": "还行"}
{"content": "简洁，易懂，真的很喜欢^0^", "marks": "力荐"}
{"content": "开始写的挺好，后面愈发的读不懂了", "marks": "推荐"}
{"content": "Python 3写的 总体来说非常适合入门的人看 介绍的还是挺全面的  入门推荐", "marks": "力荐"}
{"content": "较快速翻过", "marks": "还行"}
{"content": "在网易云阅读快速翻过前六章，只能说，这是一本笔记集合，称不上书。章节安排合理，但章节内容杂乱无章。结合源码和官方文档来看此书可能是比较好的方式，不推荐单独阅读", "marks": "还行"}
{"content": "原来读时给五星，读完觉得还是稍稍下调星等吧……", "marks": "推荐"}
{"content": "经典蕴含着传统与继承。程序设计变化的层次性：语句，函数，文件。语句能够通过创建和操作变量、对变量赋值并控制这些操作的执行流程来描述运算。语句通常会被组织成代码段，即花括号中的一系列语句。程序就是由一系列声明、赋值、条件、循环、调用和返回语句组成的。一般来说代码的结构都是嵌套的：一个条件语句或循环语句的代码段中也能包含条件语句或是循环语句。", "marks": "力荐"}
{"content": "这本书为了自己的目的（比如为了兼容2和3）搞了很多自己的模块代替python内置模块， 基本对学习python用处不大.因为这本书是为所有专业的人写的入门书，书中的示例程序也大多与高等数学，物理等相关，明显与计算机专业书籍差别很大。倒是书中的一些编程思想还是不错的！", "marks": "还行"}
{"content": "作为python初学者觉得写得还是挺不错的。", "marks": "力荐"}
{"content": "配上视频和课后题入门非常好", "marks": "力荐"}
{"content": "支持一下小甲鱼，可惜书里没有课后题答案", "marks": "力荐"}
{"content": "入门好书", "marks": "力荐"}
{"content": "作为刷过视频又刷过书的人，感觉还可以。目前二刷中-，-", "marks": "力荐"}
{"content": "I love fishc.com", "marks": "力荐"}
{"content": "一般而已，买就没必要了。但是如果自己搞api可以参考github的。初略翻读", "marks": "还行"}
{"content": "本书是一本github的工具书，github api，gollum等github高级应用工具，以及github api与python，android，.net，javascript等集成使用技术。", "marks": "推荐"}
{"content": "先说出各种方法与该注意的地方，然后举一个例子去讲解。感觉像字典一般，算不上特别好，许多关键要介绍概念没注重介绍，默认读者都知道这些基础知识。", "marks": "还行"}
{"content": "这本书后面翻的也太烂了吧，感觉就是用百度翻译翻的，译者懂Java吗？", "marks": "很差"}
{"content": "整体一般般，翻译也一般，很多知识点没有讲清楚，还不如清华大学出版社的《Java Web从入门到精通》，要是想学习关于Servlet和jsp的知识，可以看下《Servlet与JSP核心编程》", "marks": "较差"}
{"content": "翻译得太生硬了，尤其是后半部分，是用百度翻译翻译的？", "marks": "较差"}
{"content": "P109 写：感觉好棒，我们竟然可以用中文编程了 ————妈蛋 js 不是 IE6 时代一直就可以这样嘛！？整本书就是一个 Clojure程序员 想把 js 改造成 Clojure 来用的故事。", "marks": "较差"}
{"content": "同事写的书，国庆放假期间读了一遍，收获颇多，虽然很多理论知识如Y不动点，Monad还没有办法完全理解，但是可以发现，函数式编程将逐渐成为未来发展的方向，不管是后端或者前端。", "marks": "推荐"}
{"content": "我觉得这本书在解释 Monad 上面还是说得挺好的", "marks": "推荐"}
{"content": "很棒的一本书，但看之前最好有一些基础知识作为铺垫，以及要有足够的兴趣，否则看起来可能会比较吃力。", "marks": "推荐"}
{"content": "相当于mostly adequate guide，图画很有趣，但是拼写错误也太多了，希望能有个勘误表", "marks": "推荐"}
{"content": "终于出来了，居然没用我萌萌哒插画当封面(ಥ_ಥ)", "marks": "力荐"}
{"content": "ScratchJr是给幼儿用的编程APP，所以本书不厚，也不难，半天足以弄明白所有功能。没有这本书，也能搞懂APP，就是会慢得多。想提高效率，值得买。", "marks": "力荐"}
{"content": "这本书不错。看过外面那种视频，但是都讲的不够仔细。书非常仔细，基本涵盖了每一个功能的介绍。也有例子。从大人的角度看，两天不到的时间就能看完。", "marks": "推荐"}
{"content": "浪费钱", "marks": "很差"}
{"content": "刚看到本书的时候，眼前一亮：哇，终于有国人大神写Python WEB了！拿到手后略略一翻，感觉内容很浅，也很杂，还有很多代码片段以及官方DOC中的API中文翻译。其实在我看来，搞PythonWeb应该都有很好的基础了，然而本书很大篇幅却是在讲基础知识，讲得又不深，感觉就像是要用500页把一个小白搞成PythonWeb大神(拜托，《python 核心编程》第二版都有650页)，所以给人感觉很杂，最终搞得是两头都不占。关键本书还是基于python2的，虽然在生产中，现目前2确实比3用的多，也有很多框架还未完全支持3，但作者觉得2比3有前途，这点我真的无法苟同。总之，我的意见是本书不值得购买。不知道豆瓣的那本绿皮python web怎么样？！想去搞来看一看~~", "marks": "很差"}
{"content": "很快的读过，只有书名在生产中有借鉴价值，内容呵呵哒，不建议购买", "marks": "还行"}
{"content": "无聊买着看 实在太泛泛了 稍微有点基础的人会觉得不如官方文档 稍微没有基础的也不见得看不懂。PS：windows环境和Python 2.7有点不能忍。早看了豆瓣的评价，就不会买了。有谁想看想省钱的 给我邮费我白送", "marks": "较差"}
{"content": "垃圾书，可以看出作者没怎么用它实践过。内容和例子都非常低级。", "marks": "很差"}
{"content": "前半部分优点啰嗦，后半部分的实例代码大多没法实现，更过分的是我找不到源代码在哪~~~另外作者对Django的了解有限，没有用到Django的特性", "marks": "较差"}
{"content": "一本2016出版的书籍用的还是古老的python2.7，估计连python的作者本人都想打你。一本书讲四个框架，贪多不精，一个框架就够写一本书了。写个fibonacci都能那么晦涩，最不能忍的就是居然在win下的开发，连个Linux下的环境怎么操作都没说明。现在的人太急躁，都想一夜暴富，最好看完这本书就能学会web开发，想想多可笑，书的面向受众可想而知。毕竟python3的书籍真少，python4都快出来了吧。吐槽是消费者的权利，但自己买的书，质量怎样还是要看的完的。", "marks": "较差"}
{"content": "一般，读了前三章。", "marks": "还行"}
{"content": "这本书真的很简单，没有干货", "marks": "很差"}
{"content": "touch and go on many topics. do no think it is worth reading", "marks": "较差"}
{"content": "看完第一章之后感觉自己活在2007年，粗略地读一遍感觉这几十块钱浪费了", "marks": "很差"}
{"content": "内容很浅，很多代码片段，但是不提供源代码，既不能看还不能用", "marks": "很差"}
{"content": "连个源码都没。。。。而且很多章感觉就在列举api", "marks": "较差"}
{"content": "书是基于Python2.7的，因为Twisted框架对Python3的支持还不完全", "marks": "力荐"}
{"content": "和python web，董伟明那本一起买的，也很不错，随时拿出来找点东西还不错", "marks": "推荐"}
{"content": "良心之作，，高性能必备", "marks": "力荐"}
{"content": "比较泛泛而谈。没有一个贯彻始终的项目，不适合从零开始。但是进阶的话这又太简单了，就是一些常用的库介绍。（最近这作者和人在知乎撕逼，大家可以看看，他的代码风格非常糟糕", "marks": "很差"}
{"content": "书没有读过，但根据知乎上作者的态度就可以判断出", "marks": "很差"}
{"content": "感觉好熟悉啊，豆瓣最好的就在于大家都想把代码写好，就有了很多可用的利器。团队影响个人，个人又影响团队。（我们也是这样的团队，而且我们没有历史包袱都 Python 3 走起了，招人了！", "marks": "推荐"}
{"content": "简要翻译了一堆文档凑一块也能出书了…讲真这书照着目录搜搜就差不多了…", "marks": "较差"}
{"content": "看目录给我感觉什么都覆盖到了 看内容给我感觉什么都没说清楚", "marks": "还行"}
{"content": "比较泛的一本进阶书，适合想要快速了解Python Web开发全貌的读者", "marks": "推荐"}
{"content": "第一个标记读过的！", "marks": "推荐"}
{"content": "定位是进阶读者，介绍了Python web的生态，有些包介绍得太简单，每个包应用场景都有提及，但又过于分散，如果是围绕着一个项目构建组织全书就更好了。PS:没有高亮代码的实体书看着不舒服，技术书是不是该革新代码显示这部分了。", "marks": "推荐"}
{"content": "相对于国内上的技术书还是不错的", "marks": "推荐"}
{"content": "谁告诉我这是初学者的roadmap，看完这个我都不想学web了，不仅泛泛而且有些混乱，不适合初学者。", "marks": "很差"}
{"content": "Python Web开发的Roadmap，如果你是新人，那么恭喜你，你会少走很多弯路。如果你是老司机，相信很多地方会有共鸣，会想起曾经折腾的自己：）", "marks": "力荐"}
{"content": "解决很多 flask 使用中的疑问，学习了；缺点是知识点比较琐碎，适合当手册遇到问题可以翻一翻", "marks": "力荐"}
{"content": "第一时间买来看，一些经验介绍还不错，其它大部分简直官方文档入门部分", "marks": "还行"}
{"content": "它不是一本可以当做深入学习的书来读，但可以放在身边，当遇到一些不熟悉的解决方案时，可以翻一翻，在书中找一下董伟明的解决方案，然后自己google深入。 大概就是这样吧，有时候，这本书可以提供一个解决方案的思路。因为它涉及的范围确实广，但细分到每部分的内容，写得也确实不好。", "marks": "还行"}
{"content": "不仅仅是Web开发，实际上是一整个工程实践，能感受到作者将自己所知倾囊传授的迫切心情...苛求深度是没意义的，脉络梳理好了，血肉还是要靠自我奋斗啊", "marks": "推荐"}
{"content": "草草翻过一遍，等有机会用到再细读", "marks": "力荐"}
{"content": "把web栈各种工具罗列出来给你，免得搜索不挺好吗，有些人啊就喜欢开上帝视角，减一颗星是因为你丫用的啥破字体啊", "marks": "还行"}
{"content": "awaits", "marks": "推荐"}
{"content": "拼凑出来的书，不要买，浪费钱。", "marks": "较差"}
{"content": "内容全面但讲解都不太深入，对于了解web开发总体思路与流程有用", "marks": "还行"}
{"content": "这是一本罗列了Python Web后端程序员所需知识点和工具的书，适合Web后端程序员入门快速了解工业界开发的全貌，见微知著。评论里有很多批评这本书不够深入，可是话说回来，具体深入某一项技术或者工具的要怎么去写呢，这要根据实际的开发需求而来的呀。小明不知道你的需求，他只知豆瓣的需求。", "marks": "推荐"}
{"content": "看了目录，感觉还是有很多地方值得学习的，期待！\r\r看完了，书写的挺全面的，能看出董大的用心。", "marks": "推荐"}
{"content": "这本书其实看个目录就可以了，了解下大致豆瓣用的都是什么库，什么技术就好了，里面的内容，杂乱，没有重点，该讲细致的不讲，该介绍的却扯了一大段…看个目录就好。", "marks": "较差"}
{"content": "书的作者在知乎上怒喷写python爬虫的，然后自己开了python爬虫的live。出的是好几章是翻译flask文档...拼凑...啧啧啧", "marks": "很差"}
{"content": "2016.58 需要点基础，内容还是不错，就是很多地方太泛泛了，不够深入，当成科普书还不错，python生态介绍", "marks": "推荐"}
{"content": "写web开发的全貌", "marks": "推荐"}
{"content": "不一定要求内容不能这么写，但是毕竟是书籍，也要有基本的阅读友好度。这个格式真的和我平常的读书笔记整理成册一样，不过我的笔记过段时间就连自己都不会全看得懂了", "marks": "很差"}
{"content": "难得看到一本好书", "marks": "力荐"}
{"content": "这本书对于python进阶有比较大的帮助，整本书没有深入讲述python某个web框架的使用，也没深入讲解python语言的相关知识，作者把关于web开发的方方面面都展示了出来，有一些方向性的指导作用，广而不深，不过一本书能兼顾广度和深度应该会很难。", "marks": "推荐"}
{"content": "好吧，我承认作者很牛，但我实在跟不上", "marks": "还行"}
{"content": "实用主义", "marks": "推荐"}
{"content": "含括的内容丰富，发现了很多有趣的东西，包含了作者多年的踩坑经验，估计在我掉坑之前应该再回顾一下。", "marks": "力荐"}
{"content": "非常*糟糕*的一本书，洋洋洒洒，每一个章节都只是目录标题的一点点展开，把一万种选择摆在你面前，却既不深入介绍自己推荐的，又不深入任何一个。\n看了开头的环境搭建我就知道很多新人要放弃了——洋洋洒洒，写Vagrant，写Docker，但是核心只写了”要搭建一个虚拟机”，但是如何搭建？怎么把Vagrant或Docker在VirtualBox上run起来？怎么去写Vagrant的配置文件去映射本地代码到虚拟环境？一句没有。\n至于后文，更是散乱不堪，花十几页介绍Flask，介绍模板语言Mako，然后move on……每一种涉及到的技术都仅仅是“提及”的程度，我只能认为这是一部技术“目录”，而非入门书", "marks": "很差"}
{"content": "很全面，适合我这样的入门选手", "marks": "推荐"}
{"content": "写的还算比较全面，但太多用不到的东西，感觉就是把网上的文章汇总整理了一下", "marks": "还行"}
{"content": "不会再买这种通篇代码的书了， 可能是个人之见，但方方面面都点到一点。只是买来作为系统了解 python web 构架的入门书。 ", "marks": "还行"}
{"content": "写的真好。。。。", "marks": "较差"}
{"content": "看了下目录，没有看的欲望，主讲flask，不过我研究的是django，另外感觉没写啥的样子。", "marks": "还行"}
{"content": "知识面很广，对于菜鸟的我来说，受益匪浅！", "marks": "力荐"}
{"content": "全是字和代码，一张图都没有，看了一百多页看不下去了，这本书的定位应该只是文档，而不是深入学习flask。在我学习flask的过程中，这本书的帮助是最小的", "marks": "推荐"}
{"content": "嗯读起来还算不错，适合刚入门想了解多点 Web 相关的 Python 程序员观看。\n\n已经入门的也可以拿来复习一下。", "marks": "推荐"}
{"content": "十分失望；市面上的技术书籍普遍有个毛病：“”1+1=2，剩下的你去看文档吧”，此书也不能免俗", "marks": "较差"}
{"content": "豆瓣大神的书，搞python必备啊，很多小工具，很实用", "marks": "力荐"}
{"content": "当年是在线英文版读完 现在出纸质版了买一本支持一下 作者对Erlang的理解极深刻", "marks": "推荐"}
{"content": "书籍不错，比Joe大神些的还要详细一点儿，适合初级入门。", "marks": "力荐"}
{"content": "找工作用，读书当年好书甚少，叹少年", "marks": "力荐"}
{"content": "看过1才来买的2，失望至极，应该叫剑指offer或者leetcode题解才合适吧！", "marks": "很差"}
{"content": "内容比较基础", "marks": "推荐"}
{"content": "作为一个新手，感觉知识点和知识点递进很好，代码精炼巧妙，但是，，文字解释读起来，跟少了几行似的，比较难懂，也可能是我智商低吧，反正我一看它的文字解释就一脸懵逼。", "marks": "还行"}
{"content": "入门书籍", "marks": "还行"}
{"content": "快速扫过一遍，入门", "marks": "还行"}
{"content": "那应该换个工作啊！\r\n\r\nhttps://www.douban.com/note/580030716/", "marks": "还行"}
{"content": "东拉西扯了许多不必要的东西。。。", "marks": "还行"}
{"content": "很棒的入门读物", "marks": "推荐"}
{"content": "spring boot 入门", "marks": "还行"}
{"content": "分低是因为后边的附录还有书的深度么……书名从实战改为入门应该不会这么低的分数了……", "marks": "推荐"}
{"content": "哎，就这样吧，水水的", "marks": "还行"}
{"content": "最开始因为下载spring boot版本和书不一致，造成的问题可以通过改配置解决，但是后面登陆测试的时候，实在改不动了。而且截图使用的url跟代码写的不太一致，索性后面就不跟着写了，快速翻了。虽说解决了配置问题，但是最后附录还是给了相当量的配置项，有种另一种配置狂魔的感觉。", "marks": "还行"}
{"content": "还不错，中间两章和grovvy相关的没看，感觉写进书里也多余。", "marks": "推荐"}
{"content": "说实话,书写的不错,尤其适合我这种java不太熟的前端工程师,足够应付日常开发中修改Spring相关代码的需求了.", "marks": "推荐"}
{"content": "知识层面很浅，不过是快速入门的佳作", "marks": "推荐"}
{"content": "还不错的SpringBoot入门书。前四章实战性较强，后四章大概浏览了下。附录总结的不错。", "marks": "推荐"}
{"content": "1. 外国人写的书看起来始终感觉有点别扭\n2. 感觉外国人和我们的关注点不太一样\n3. 总得来说，值得用一两天快速泛读 ", "marks": "较差"}
{"content": "快速了解如何使用spring boot", "marks": "还行"}
{"content": "简单教程，清晰易懂，干货不多。", "marks": "还行"}
{"content": "深入浅出讲解了SpringBoot.", "marks": "推荐"}
{"content": "内容简短精悍，可读性很强，但是关注点多在不常用的部分，如cli和groovy、grail的融合，实用性对我来说一般。", "marks": "推荐"}
{"content": "言简意赅,深入浅出.即表明了Spring-Boot的强大,又讲解了基本的原理,看起来就放不下手了,不愧是Spring in action的大牛作者.200多页居然有50页是附录,我也是服了.例子都写的很浅显,千万不能把这书作为工具书..", "marks": "力荐"}
{"content": "对于了解spring boot可以读一下，基本一两天就能搞定，算是入门吧，更深的需要去看官方稳当了", "marks": "推荐"}
{"content": "偏基础，不过这样的书有个好处，就是他能很概括的给你讲一遍，除了看文档之外，也不用在网上东拼西凑的学习了，万一看到错的得不偿失。\n另外书其实挺薄，如果能加一些cloud的讲解就好了。", "marks": "推荐"}
{"content": "相比官方的Spring Boot参考指南，更为系统的介绍Spring Boot，对Spring Boot的概念进行一定程度的抽象和总结，值得一读。", "marks": "推荐"}
{"content": "入门级的书，初学者读起来很容易，能把这么复杂的一个框架说的明白而且让人理解，可见作者的功力", "marks": "推荐"}
{"content": "满全但缺很浅的 Spring、Spring Boot 教程", "marks": "还行"}
{"content": "springboot的核心自动装配说明了，就算是一种成功。不过这些稍显肤浅的的东西，文档上也有。总得来说，值得用一两天来扫度。", "marks": "还行"}
{"content": "springboot入门书籍，内容涵括了很多东西，对于java后台开发人员来讲，有一些东西还是不必要的，总之，讲了一些比较基础的东西，里面的内容还是需要深究的", "marks": "还行"}
{"content": "Spring Boot 入门最佳实践.", "marks": "推荐"}
{"content": "讲的不深，但特性讲的比较全，适合放在手边随时翻阅", "marks": "推荐"}
{"content": "对刚入行的有参考价值", "marks": "还行"}
{"content": "写了一般，刚毕业的学生可以参考", "marks": "还行"}
{"content": "第一部分和第二部分看看了解一下技术大概。第三部分我直接跳过了。", "marks": "还行"}
{"content": "作为程序员里的老司机，我要对这本书点赞，它将程序员世界里理性的内容感性地展现了出来，特别是对新手来说，是一本比较不错的指引。如果将优化、运维方面的内容更丰富一些、实例更多一些会更好，只是局限于PHP会让其他入门选手很难理解。", "marks": "推荐"}
{"content": "没法归类，就是网上的几篇博客的价值。介绍了一些学习的方法，但是这些方法跟程序员反而没有太大关系。同时举了很多例子，类似进行心理分析，小时候怎样怎样导致了我现在怎样怎样，真的是这样吗？有理有据吗？\n程序员为什么就不能好好讲程序呢？", "marks": "还行"}
{"content": "非常棒，值得学习", "marks": "力荐"}
{"content": "NHXG TP311.1 234\n简单略读了一遍\n写代码是最好的修炼\n工作再看看", "marks": "还行"}
{"content": "作者秉着极客精神编撰的此书，在了解了程序员内外兼修的方法外，还了解了脑结构及其工作原理", "marks": "力荐"}
{"content": "技术方向的选择，有高学历、计算机基础扎实的选择算法等有需求的大公司，入门的专注兴趣然后补上计算机基础。\n\n感悟本体，认识自己的思维。\n\n罗飞在失去母亲，患过病然后辍学去编程，可见还是有不少人遇见苦难微笑面对。", "marks": "还行"}
{"content": "额没太能坚持看完，前面一直讲一些大脑科学什么的，中间写了蛮多代码例子...然后跳着看完了...", "marks": "还行"}
{"content": "都是讲PHP的，没有太多干货，跟看个公众号里的文章差不多！", "marks": "还行"}
{"content": "感觉内容写的一般了。没有JavaScript忍者秘籍写的好，大部分内容都点到即止算不上精通。", "marks": "还行"}
{"content": "翻了一下，感觉很失望，第一版比较好，不过内容过时了，第二版和第一版完全不同，内容都是点到为止，有经验的没必要看，没经验的看也不合适。看这本书和浪费时间差不多", "marks": "较差"}
{"content": "看这书根本没法精通js... 感觉还是YDKJ(你所不了解的javascript)写得比较好，入门选蝴蝶书，精通选YDKJ。", "marks": "还行"}
{"content": "读了两遍，准备读第三遍", "marks": "力荐"}
{"content": "简洁清晰", "marks": "力荐"}
{"content": "面面俱到，基本把之前尝试中存留下来的问题都解决啦！感谢 Hadley！", "marks": "力荐"}
{"content": "推荐理由：作者是Hadley Wickham。好吧……\n写得很棒的一本书，对R包开发讲解得很详细很透彻。要了解和学习R包，这本书必看。翻译过程中参考了本书，感谢。", "marks": "力荐"}
{"content": "关于python ecosystem的", "marks": "推荐"}
{"content": "看完了（虽然作者没写完），略水", "marks": "推荐"}
{"content": "入门之后粗看一眼，解答了我一些疑问，很粗的一本，只是介绍了一些项目约定，格式约定，以及一些最佳实践，抽空一读还是不错的。", "marks": "推荐"}
{"content": "作者不错，看了网上中文版本", "marks": "推荐"}
{"content": "确实是Best Practices for Development。老司机带你读代码那部分。", "marks": "推荐"}
{"content": "#老司机带我飞#  提供了许多Python的最佳实践，相对与在线版丰富一下，但作为纸版书而言又稍显单薄", "marks": "推荐"}
{"content": "老手带你漫游一整天。 20170623", "marks": "推荐"}
{"content": "看了英文网页版 姑且认为读过打个卡", "marks": "推荐"}
{"content": "手册一样的书", "marks": "还行"}
{"content": "PART I 和 II 不错，后面的选读。此外，附录别忘了看哦，有推荐书目。", "marks": "推荐"}
{"content": "说实话写的真一般", "marks": "还行"}
{"content": "只是教你如何用函数，但没有告诉使用的原因，并没有从数学上给出合适的定义。写得不如文档详细，内容还不到文档的水平", "marks": "较差"}
{"content": "出版即过时, 没有干货.", "marks": "较差"}
{"content": "Angular2依然没有吸引力，TypeScript倒是应该积极跟进。", "marks": "还行"}
{"content": "下次涨工资就指这个了 ...", "marks": "推荐"}
{"content": "书的内容有些过时", "marks": "还行"}
{"content": "angular的尝鲜之作,把angular2的概念做了不错的阐述.不过还是有些不足:1.虽然核心方面都说到了,不过详细的内容感觉有点随意,时深时浅,缺少循序渐进的过程,看起来有点费力2.书是在angular旧版本基础上写的,有些代码已经过期,需要跟当前的实现理解匹配,从而减低了书的实用性.3.有几个地方(毕竟难理解的)翻译的不好,甚至有错误.", "marks": "还行"}
{"content": "再读一遍，学习promise和生成器 ", "marks": "推荐"}
{"content": "作为一个资深的前端，也并没有对操作符的优先级,以及【~】以及很多生僻语法的深入研究，看过之后真的感慨，我真的不知道。promise和目前jquery的deffered的概念差不多，使用chain的语法来分拆多层嵌套。而yield的概念非常棒，之后可以一试。", "marks": "力荐"}
{"content": "一如既往的好。尤其是关于异步、回调和生成器那几章节，简直太精彩！", "marks": "力荐"}
{"content": "这一本有一些看不太懂呢。。。。。", "marks": "力荐"}
{"content": "异步太难读，要再回头读", "marks": "力荐"}
{"content": "每次读完这一系列都对JS有了全新的认识。", "marks": "力荐"}
{"content": "值得一读", "marks": "推荐"}
{"content": "很好的书", "marks": "力荐"}
{"content": "这是我读起来感到吃力的一本书，没有辜负我第一本给我的印象，好多东西，我以为我懂了，其实我不懂，极力推荐的一本书，学海无涯，共勉吧", "marks": "力荐"}
{"content": "此书对于目前的我来说有些深，读起来略费劲。", "marks": "力荐"}
{"content": "感觉比上一本要难懂，被生成器那部分搞晕了", "marks": "推荐"}
{"content": "异步的部分讲的很棒。这几天准备再刷一遍。", "marks": "力荐"}
{"content": "Amazing", "marks": "力荐"}
{"content": "读到第二部分之后，发现这翻译实在不行。。。", "marks": "推荐"}
{"content": "前半部分就是基础语法的深入理解，感觉还不错。后面半部分没看完，但感觉过于复杂了新特性用了很多生僻的词来表达⋯⋯导致有部分反而不能理解，也可能是我对es6理解不够的原因⋯⋯大概没有项目经验可能不太好理解这些坑\n", "marks": "推荐"}
{"content": "必读系列", "marks": "力荐"}
{"content": "这本书分为两个部分，类型和语法，异步和性能，对于初学者，在后面一块被搞晕了。", "marks": "力荐"}
{"content": "有点难，看到promise就不是特别理解了", "marks": "力荐"}
{"content": "第一部分感觉不错，读起来很流畅。到了第二部分就完全懵逼，看了几十页一点知识都入不了脑子里，感觉还是翻译的问题。第二部分的翻译感觉还是比较差，过于晦涩", "marks": "还行"}
{"content": "可能也是因为这部分更加深入了，所以翻译起来有些晦涩，整体读起来书还不错，很多东西值得精读", "marks": "推荐"}
{"content": "Jake Archibald说要给我的异步加十分，想想都有些小激动。\n光看懂可能还不够，去高仿一下作者的asynquence或许会更刺激一点。嗯，是一个方向。\n发现自己对于设计的一些思想还是没有融汇贯通的感觉。", "marks": "力荐"}
{"content": "前半部分的语法讲的确实不错，后半部分看到promise感觉还好，但是到当看到生成器加上promise时整个人都凌乱了。除了附录外算是硬啃完了吧。还是要找个时间再重新咀嚼一下，知识点太多一下吸收不了。", "marks": "力荐"}
{"content": "2.7的代码，唉:-(", "marks": "还行"}
{"content": "很通顺，但不够具体，这也许跟篇幅以及书本身的结构有关系。总之，看完了能明白爬虫、一整套的抓取数据流程是什么样的。有意思的是讲验证码识别部分，如果“难一点我们应该怎么样？”使用付费的人工识别服务， 猝不及防！", "marks": "还行"}
{"content": "从知乎董伟明的live里来的，内容还不错，也还蛮新的一本书，再读读。进阶之路走得有点慢。", "marks": "推荐"}
{"content": "还可以，讲得比较基础", "marks": "推荐"}
{"content": "故意占篇幅", "marks": "较差"}
{"content": "基础覆盖的挺全的，把写一个爬虫所需要的方方面面都渗透到了，很不错。", "marks": "推荐"}
{"content": "很薄的书，深入浅出，读着很快。", "marks": "推荐"}
{"content": "通俗易懂 170929", "marks": "推荐"}
{"content": "够实用", "marks": "推荐"}
{"content": "终于读完了", "marks": "力荐"}
{"content": "不错，挺好~", "marks": "推荐"}
{"content": "15年出的书，16年翻译出版，17年就已经看不了了。代码都是python2.7版的，有点老。", "marks": "较差"}
{"content": "不错的网络爬虫入门。看完之后基本方法就清楚了，剩下就是实践了～", "marks": "推荐"}
{"content": "挺全面，入门", "marks": "力荐"}
{"content": "还是需要多实践，多练习，多拓展。", "marks": "推荐"}
{"content": "http://blog.csdn.net/column/details/13041.html这个专栏就是对应这本书写的笔记，可以参考。", "marks": "推荐"}
{"content": "偏简单", "marks": "还行"}
{"content": "了解了爬虫的常用手法", "marks": "推荐"}
{"content": "内容全面，缺憾是大多数都是两年前的东西。不过其中Portia可视化爬虫的部分有点小惊艳。", "marks": "推荐"}
{"content": "爬虫不只是一个简单的get或post请求，还涉及如避免重复爬取、并发下载、爬取 js 内容等方方面面。本书算是对这些点给了一些浅尝辄止的介绍。", "marks": "还行"}
{"content": "和之前看的 web scrapping with python 内容差不多。不同是，这本提供了多线程和 ip 代理的思路，把爬虫速度提升了好几十倍。还不错。推荐两本互补看", "marks": "还行"}
{"content": "Python大法好", "marks": "推荐"}
{"content": "内容实用，都是比较新的工具。讲得很细，对于新手很友好。每章都提供了源码，方便学习，可以看出作者很用心。", "marks": "推荐"}
{"content": "对我来说还是挺有用了，系统地学习了一遍爬虫，关于静态网页，动态网页，表单交互的POST请求有了更加清楚的了解，对持久化，缓存，断点续爬，验证码也有了认识，scrapy，portia这些工具很惊艳。", "marks": "推荐"}
{"content": "很浅显的书 ", "marks": "很差"}
{"content": "拥有一个技术舍友的福利，那就是我有好多可以看…\n最大缺点当然是python2,老书没办法，各种代码到今天应该是有些过时了…不过用来丰富爬虫大纲不错…", "marks": "还行"}
{"content": "春入门，感觉可以用几天就看完，很多东西都和网上的博客一样，不过爬虫这种东西还是应该与时俱进，如果时间富裕可以翻一翻。", "marks": "还行"}
{"content": "学Python爬虫入门很好的书", "marks": "推荐"}
{"content": "加点具体例子就更好了，书不错的，不罗嗦", "marks": "推荐"}
{"content": "这本书自己敲了大概有一个月，比较简单，用一个网站介绍了一些基本的爬虫基本知识，后面的scrapy框架和例子大概看了一下算是比较不错的入门书", "marks": "推荐"}
{"content": "0.一看标题就明白不是从入门到放弃了。\n1.八天，粗率弄了一遍。得第二遍撸点儿代码了。（必须思考思考），跑跑小轮子。", "marks": "力荐"}
{"content": "了解网络爬虫的基本知识。", "marks": "力荐"}
{"content": "写的不错，值得一读", "marks": "推荐"}
{"content": "刚读完，感觉讲的比较浅显，可以尽快熟悉网络爬取的流程，但深入的讲的不多，还有网上下载的源代码比较混乱，需要仔细的校正", "marks": "推荐"}
{"content": "内容很简洁。作为爬虫入门不错。", "marks": "推荐"}
{"content": "算是短小精悍的一本入门书，把爬虫涉及到的方方面面都做了介绍，包含html，缓存，并发，js，表单，验证码以及Python流行框架Scrapy，每一块都对现有的主流方法做了简介和实例讲解，虽然整体内容不多，但是基本上把爬虫的知识梳理了一遍。爬虫，无法一劳永逸，还得对症下药。", "marks": "推荐"}
{"content": "介绍蛮多的爬虫技术和Python模块。其实挺不错的。最好配合培训视频来看。", "marks": "推荐"}
{"content": "不错，通过一个爬虫串联起各章的内容。唯一可惜的是用的python2.7。", "marks": "力荐"}
{"content": "书里面代码有bug，感觉书不太好用，没有《python 网络数据采集》条理清晰，看了两本关于爬虫的书，对比之后，高下立判。", "marks": "还行"}
{"content": "适合那些没有接触过爬虫的人，想通过此书入门的话还是不错的。\n全书内容不算多，很基础，比较像导论和介绍性的，更深入的内容需要自己去搜来看", "marks": "还行"}
{"content": "使用的技术虽然有些老，但爬虫的思路还是深入浅出，循序渐进，适合初学者学习。但薄薄的一本要40多有点贵。", "marks": "推荐"}
{"content": "书太薄了吧！里面字还这么大，还这么贵。。。。不值。", "marks": "较差"}
{"content": "对于新入门的24K小白来说，是非常好的入门书。而且介绍了很多tricks~不过也只能算是入门了。至于有人说书上代码是基于Python2.X而不是Python3.X的………这重要么？", "marks": "力荐"}
{"content": "海淘500rmb 来的原版 本来想翻译一发 结果出版社说已经有人在从事这个工作了……", "marks": "力荐"}
{"content": "一举两得,注重实践,循序渐进,一学就会", "marks": "力荐"}
{"content": "基于Python3，作为python初学者和ctf爱好者非常喜欢！因为教程里的例子都是切实有用的（我就不说rsa分解考过多少次了），所以编程的时候动力十足，也比较好理解。之前已经粗略看完了廖雪峰的教程，可以自行看题实现功能，写完后再看作者的程序，琢磨思路的亮点，同时还能巩固基础知识（密码学和python都是）。总而言之收获非常大~", "marks": "力荐"}
{"content": "非常基础，如果想深入了解，不要读这本。这本只适合没写过代码的小白。", "marks": "还行"}
{"content": "循序渐进，适合没编程和密码学基础的新手。", "marks": "力荐"}
{"content": "简单易懂，但是讲的不够深入。", "marks": "还行"}
{"content": "很浅显易懂，初学者很合适", "marks": "力荐"}
{"content": "推荐 总体写的还是不错的，就是总有一点某瓜的感觉...每章都是写写就绕到菊厂产品去了...", "marks": "推荐"}
{"content": "给非专业人士写的", "marks": "推荐"}
{"content": "简单易懂，写得非常好。", "marks": "力荐"}
{"content": "這種通過項目來講解的方式真的不錯，我只是不喜歡 Python 而已。不乾淨！得幹很多髒活。Python 不是靠組合來獲得能力，而是靠規定😒\nP.S. 作者在 p48 那個「容器」的比喻太讚了：變量的容器是「作用域」，而數據的容器是「數據結構」😱", "marks": "还行"}
{"content": "原书是2015年的 翻译是2016年的 很多库都更新了 有些具体方法都改了 还好有 stackoverflow", "marks": "推荐"}
{"content": "讲的不错。编程就是要边看边练，这本书值得一看。", "marks": "推荐"}
{"content": "我可能要爱上这个作者了。作为入门书籍非常棒，从实用的例子来练习熟悉，章节顺序安排合理，跟着练下来可以信心十足的明确自己会做哪些，还能做哪些。包括最开始介绍的如何排查错误，其思路也可以运用到很多事物上。作者一定会是个好爸爸（喂）", "marks": "力荐"}
{"content": "python入门最佳书籍。", "marks": "力荐"}
{"content": "非常好的 入门与应用书籍", "marks": "力荐"}
{"content": "这一类书好像没有看过一说。编程的书其实都是工具书，需要在不断的练习过程中不断拿来学习的。", "marks": "推荐"}
{"content": "Python入门首选，内容很新，而且讲得很详实。唯一缺点是翻译有点生硬。", "marks": "力荐"}
{"content": "这本书作者尽量写的简单化，让没有编程经验的人也可以快速上手！但是我觉得有其它编程语言经验的同学，也可以直接看着本书快速了解Python可以做什么，语法问题可以变做东西边查！", "marks": "力荐"}
{"content": "比起标题略简单了", "marks": "推荐"}
{"content": "相当实用", "marks": "力荐"}
{"content": "重要的是思路和视野，其实书写的很简单。", "marks": "力荐"}
{"content": "适合开发使用，有很强的任务驱动性，对数据分析帮助不大", "marks": "推荐"}
{"content": "没有《python语言及其应用》好，太简略", "marks": "较差"}
{"content": "确实，书如其名，就是很多都是点到为止，不过瘾。", "marks": "推荐"}
{"content": "很奇怪这样一本毫无内涵的书是如何拥有这么高分的。。。", "marks": "还行"}
{"content": "适合没有编程经验的人", "marks": "还行"}
{"content": "虽然是入门书，不过写得十分详细和精细，不多不少，前面的语法学好写程序和读代码完全没有问题，至于后面遇到什么不能实现的功能增加对应的模块即可。还有像线程，类，Bash调用没有细讲后续用到再补充", "marks": "力荐"}
{"content": "很系统 偏基础 本想看看怎样抓取web端 ", "marks": "力荐"}
{"content": "书中每个章节就是工作中可以自动化的一个点，可以直接拿来使用。也可做为Python基础知识学习后实践练习材料，写这样的代码练习Python，成就感大大的。", "marks": "力荐"}
{"content": "随手翻完，适合初学者。", "marks": "推荐"}
{"content": "佳作", "marks": "力荐"}
{"content": "这书很不错，可惜……里头几乎我都会了，错误的时间遇到", "marks": "推荐"}
{"content": "比较入门的书，kindle上粗浅翻过", "marks": "推荐"}
{"content": "读过的最好的Python基础教材，完全是给非计算机专业的人写的。不要再迷信这个基础，那个速成了，这本书一次性解决Python上手问题。", "marks": "力荐"}
{"content": "语法是python3的，涉及了字符串操作，文件读写，调试，爬虫，Excel、CSV和Excel文件处理，时间模块，电子邮件，GUI。若你没有用 Python 处理过这方面的任务，则这本书是最好的入门。", "marks": "力荐"}
{"content": "python用法有无数种，如果想提升工作效率，帮助我们做一些无聊的重复的工作，那这本书就会有很大的帮助。本书大部分篇幅通过一个个的案例，介绍了如何使用python提升工作效率，包括内容匹配，处理文件，网络抓取信息，处理表格 pdf word，发送邮件，操作图像等。非常适合上手入门", "marks": "力荐"}
{"content": "类似于cookbook的书，可以学到些小技巧", "marks": "推荐"}
{"content": "和另一本《python编程：从入门到实践》一起，是零基础入门python的最佳读物。", "marks": "推荐"}
{"content": "虽然只是刚好看完一半，已经忍不住来评价，入门极品简直没法说！完爆什么鬼《python基础教程》！为什么？因为这本书有系统地习题和答案！学了一个知识点后就有机会直接去用，这样子学才是最有效率的。作为入门书，该讲的基础都讲了，晦涩深奥的细节都没出现，虽然这决定了它只能当入门书，但是快速领我入门之后自己就有能力去探索更多的细节，是极好的", "marks": "推荐"}
{"content": "虽然好评如潮，可能不太适合我，学起来觉得内容一般。", "marks": "还行"}
{"content": "相较挂羊头卖猪肉的7天掌握xxx，一个月学会xxx，这本书当得起名副其实。前面的基础内容其实一般，不如python crash course简洁扼要，出彩在后半部分自动化任务。常用的如批量处理excel和word，批处理邮件，web抓取，gui，均可按图索骥。珍惜生命，学习编程。", "marks": "力荐"}
{"content": "翻译的不是很好，原文书更好玩，但即使是原文书，也很简单，所以适合新手学。恩，实践是学习的最好途径。", "marks": "还行"}
{"content": "类的方法讲的少，唯一收获就是免费发短信。", "marks": "力荐"}
{"content": "适合工作自动化，平常写点用完即弃的代码", "marks": "推荐"}
{"content": "基础入门书 常用场景小例子", "marks": "推荐"}
{"content": "对新手十分友好的一本书", "marks": "力荐"}
{"content": "7.5小时\n后面没细看\n内容很好  项目导向风格", "marks": "力荐"}
{"content": "都看完了，非常适合新手入门，前10章是基础，后8章介绍了一些与日常工作相关的模块及使用，个人认为好的技术书籍就像这样让你很轻松地进入其中，然后激发你浓厚的兴趣，从而让你自己能很快投入实践并随着遇到的问题再自行不断深入探索", "marks": "力荐"}
{"content": "作为入门教材，不会过分打消我的积极性😂", "marks": "推荐"}
{"content": "3天学会Python 3（嗯……前提是会Python 2）", "marks": "力荐"}
{"content": "上手快，可以走捷径", "marks": "力荐"}
{"content": "很好的入门书，基础知识介绍很详细，边学边用，没有面向对象的讲解，对初学者友好。", "marks": "推荐"}
{"content": "带我入门！", "marks": "力荐"}
{"content": "作为 Python 入门还是可以的", "marks": "力荐"}
{"content": "两本我最喜欢的python入门书籍之一", "marks": "力荐"}
{"content": "自动化办公利器，让办公效率大大提高", "marks": "力荐"}
{"content": "真的很好", "marks": "力荐"}
{"content": "很多地方都没有讲清楚……", "marks": "还行"}
{"content": "实例代码旁都会有标注某段代码的作用，关键词会加粗，好评~ 缺点是感觉太依赖项目了导致有些基础内容没按照条理讲清楚", "marks": "还行"}
{"content": "两百多页内容只能带你进门槛，把使用ionic开发的大致过程带你走一遍。接下来要自己学习。好贵的书。", "marks": "推荐"}
{"content": "属于翻了一遍就不想读的那种技术书籍，排班也是相当复古", "marks": "较差"}
{"content": "珍爱生命，我用 Flask ：）", "marks": "推荐"}
{"content": "就算能抵制Flask的强大诱惑，当你看到译者名，还能不心动？", "marks": "力荐"}
{"content": "哈哈哈。@su27。", "marks": "推荐"}
{"content": "苏老师翻译的！台风天和Flask更配噢", "marks": "力荐"}
{"content": "并不深入。。。但是内容还不错，比各种纠结前端的另一本 Flask 书好的多", "marks": "推荐"}
{"content": "还是写php吧", "marks": "推荐"}
{"content": "內容全面，Flask 的自由需要開發者有更多好習慣，此書就包含很多規範的指南，和另外一本《Flask Web 開發》，作爲入門書籍非常合適。", "marks": "推荐"}
{"content": "并不深入，不过也还不错。", "marks": "推荐"}
{"content": "比flask web development更系统性的讲解flask的使用，就是这本书的译名很让人误解。", "marks": "力荐"}
{"content": "翻译质量不错，排版错误较多", "marks": "推荐"}
{"content": "应该是根据Flask的官方文档写的，应该搭配狗书一起看。", "marks": "力荐"}
{"content": "看来这些mastering某个framework的书都不能读，谈不上深入理解，只能说是教会你怎样写不是demo的代码，当然也是写不出来production级别的东西的。", "marks": "还行"}
{"content": "此书介绍的比较全面，但不深入，配合方面是一条狗的《Python Web 开发实战》效果最好，能互补。", "marks": "力荐"}
{"content": "非常详尽，但美中不足的是从第六章开始，你无法在没有 cover 后面几个章节内容的情况下把网站运行起来。建议先略略地读一遍此书，再回到第一章上手编码。推荐给所有的 Flask 新手，完成此书后可以无缝衔接《Python Web 开发实战》。", "marks": "推荐"}
{"content": "书名：Mastering Flask -> 掌握Flask。先看官方文档，再结合《Flask Web》和这本《Mastering Flask》食用，口感更佳", "marks": "力荐"}
{"content": "讲的都很基础，从零开始倒是真的，但是很有条理。", "marks": "力荐"}
{"content": "放网上当做个纯新手入门教程还行，出书就没意义了。", "marks": "较差"}
{"content": "讲的比较清晰，推荐阅读资料很赞，只是深度不是很够，支持作者，毕竟吃了他那么多狗粮，哈哈 ", "marks": "还行"}
{"content": "看博客就好了，深度不太够，入门可以", "marks": "还行"}
{"content": "内容乏善可陈，思路也是毫无新意，说是翻译版教科书的剪辑和堆砌并不为过。", "marks": "很差"}
{"content": "一刷 看个大概", "marks": "力荐"}
{"content": "看到实验室学弟桌上有一本，比较感兴趣就拿起来翻了翻。\n大概翻看了一下我就要笑出声了，感觉很多人可能会因为这个书名而购入。。。\n总的来说，无论是从算法还是数学方面都没有好好地在讲，也和尾页描述的“力求引起读者的兴趣”不搭界。要学算法还是认认真真看算法导论，认真写代码。", "marks": "很差"}
{"content": "从编程小白的角度看，入门极佳。手把手教的感觉，却绝不啰嗦。什么叫入门书？一本书读下来，行文上不卡壳，逻辑上不跳跃，读者如爬楼梯，一步一步即可登楼。", "marks": "力荐"}
{"content": " 20170626阅毕，编排比较合理，后面加了三个实战项目挺不错。作为入门还行，学习笔记：https://github.com/hairuo/LearnPythonCrashCourse", "marks": "推荐"}
{"content": "架构非常漂亮，基本一本书描绘了Python的一幅“景象”，它不是教科书式的分章节阐释语法，仅在前半部分讲到一些基本的表达（如果已经有面向对象编程基础的，就只剩下语法问题），后面的三个操作案例分别是游戏开发、简单的数据可视化和web应用，没有太复杂的概念延伸，入门可，但基本不会重读", "marks": "推荐"}
{"content": "很好的入门书，简洁全面，适合小白。learning python之类大砖头太不友好。这本虽然有些地方讲得不深入，但是对新手友好。", "marks": "力荐"}
{"content": "前半部分讲概念深入浅出，要言不烦，很赞", "marks": "力荐"}
{"content": "推荐做量化史学研究和实证政治分析的同仁每人啃一遍。", "marks": "力荐"}
{"content": "入门好书，真的是手把手教你写，就是涉及的内容太浅了，有基础的童鞋就不用看啦", "marks": "推荐"}
{"content": "讲述了Python的基本知识外加3个简单项目，对我而言，那个网页项目有一点点收获。", "marks": "还行"}
{"content": "内容很浅显，适合小白。", "marks": "推荐"}
{"content": "Django的部分介绍的很好，估计等未来有自己项目的时候还得拿这个步骤参考。熟能生巧。", "marks": "推荐"}
{"content": "这可能是 Python 入门书籍中最简单清晰的一本，基本也没有一本更简单的书带你入门了。", "marks": "还行"}
{"content": "看完了基础，相当平易近人\n但又有点太浅了，希望后面项目能更深一点", "marks": "力荐"}
{"content": "入门好书", "marks": "推荐"}
{"content": "比较容易上手\n", "marks": "推荐"}
{"content": "认认真真的看了基础部分，每天新内容+整理文档+复习前天文档+练习实践……可以说非常有收获了，后面断言部分，可能书太旧了？？之前有学过selenium部分Python编码，运行不起来需要加一个函数耶~后面实战部分还没看……", "marks": "力荐"}
{"content": "理论部分看完，实践部分没做，感觉确实不适合有基础的人。讲得很细，不过内容比较基础。简单，所以没动力操作。", "marks": "推荐"}
{"content": "python小白入门之书，前面是基础部分，后面是项目部分，给力之作。", "marks": "力荐"}
{"content": "讲的很好，对于小白也很友好，这本书让我认识到课后习题的重要性，通过做习题，能提高语法的掌握使用能力，只跟着做了项目一，将来有空将其他两个补上", "marks": "推荐"}
{"content": "好用的入门书。", "marks": "推荐"}
{"content": "很友好的入门书，项目没有做完,只选了自己感兴趣的部分实现了一下。", "marks": "力荐"}
{"content": "真的非常入门级，因为以前学过一些其他语言所以能意识到有些理解性概念没有讲…但是手把手教！非常友好！主要用后面的实践部分搭博客了…\n但是多说开发者跑路，所以又有点想抛弃hexo…）", "marks": "力荐"}
{"content": "据说是最适合 python3 的入门书了，还算好懂，还是要多练", "marks": "力荐"}
{"content": "本书的定位基本上是没有学习过编程的人，因为只讲解了部分常用基础知识，适合没有编程基础的同学学习。对于有编程基础，但是没有接触过Python的人来说，快速的看一遍，对Python就有了一定的认识，喜欢这门语言的话再接着看其他深入一些的书籍，挺不错。", "marks": "还行"}
{"content": "真是入门书啊~", "marks": "力荐"}
{"content": "三个项目都比较有趣 按着做会有收获 代码还是要多写", "marks": "力荐"}
{"content": "非常好的入门书，还有具体的实践例子，作为一个使用python 十几年的工程师，强烈推荐初学者阅读", "marks": "力荐"}
{"content": "入门可读", "marks": "推荐"}
{"content": "入门", "marks": "推荐"}
{"content": "一般吧 难度不高 还没够到Python的门槛", "marks": "推荐"}
{"content": "基础的入门书，手把手教习，适合没有其他语言基础的自学。不然的话可以精简到几十页。", "marks": "推荐"}
{"content": "主要学习了类这一章节", "marks": "力荐"}
{"content": "啰嗦” = 详尽。这部分地方其实可以跳过不看，如果有不懂的地方，“啰嗦”部分又能为你解疑。而且书中经常举例说明某个知识点的用途，感觉很受用，不枯燥。所以说，对于零基础者来说，这本书很棒。", "marks": "力荐"}
{"content": "友好度非常高的入门书，不过也有可能是因为我C++先入为主带来的错觉...", "marks": "力荐"}
{"content": "基础部分讲解恰到好处，不多不少，实践部分，以项目为模块，很好的练习了常用的模块", "marks": "力荐"}
{"content": "py 一波", "marks": "推荐"}
{"content": "内容很“温柔”像是给孩子讲python 逻辑性也很好，后面的项目部分没看", "marks": "力荐"}
{"content": "2.0的版本", "marks": "推荐"}
{"content": "半天看完。觉得开始写程序足够了", "marks": "推荐"}
{"content": "看完前十章才发现这是一个宏大的世界，而我向这个世界走出了天真而稚嫩的一小步", "marks": "力荐"}
{"content": "书如其名，从入门到实践，在入门书中值得推荐。", "marks": "推荐"}
{"content": "主要看的是英文版，前面小部分看了英文，只适合入门", "marks": "推荐"}
{"content": "入门书，生动有趣，看起来不累人而且很好玩。推荐！", "marks": "力荐"}
{"content": "选了很久，入门书选了这本，挺不错的", "marks": "力荐"}
{"content": "4.5 对编程小白来说入门简直完美...0.2扣在习题设计...", "marks": "推荐"}
{"content": "很棒的一本python入门读物。本书和其他python入门书的很大区别在于，后半部给出几个很棒的实践案例，分别为游戏制作、数据可视化以及网站搭建。本书并未涉及到装饰器等高级知识点，需要其他书籍补充学习", "marks": "力荐"}
{"content": "这本书面对的是没有其它编程语言基础的初学者，非常不适合想了解一下Python的有经验的程序员。", "marks": "推荐"}
{"content": "清晰简单的书，入门很不错，前半基础，后半作业。还要敲后半，一周目", "marks": "力荐"}
{"content": "Python入门最好的书了", "marks": "力荐"}
{"content": "这本书对python基础部分讲的很好，很清晰的告诉你哪些地方会有坑，让你摩拳擦掌想开始实践。但后面三个项目一个是游戏编写，一个是数据分析，一个是web编程，感觉不是特别适合我。入门的话，个人更推荐另一本python编程快速上手。人民邮电出版社的这一系列书质量真不错。", "marks": "推荐"}
{"content": "最佳入门", "marks": "力荐"}
{"content": "偏基础 系统看来补下漏洞", "marks": "力荐"}
{"content": "和隔壁《python编程快速上手：让繁琐工作作自动化》一起，是零基础入门python的最佳读物。", "marks": "推荐"}
{"content": "本来想从这本入门python的，但还是被老师逼着直接上手了。入门新语言还是需要一本这样的书来快速了解吧，没读过别的，不做评价", "marks": "较差"}
{"content": "很适合入门的一本书，中间并不涉及一些关于算法的例子，不会给初学者带来额外的阻力。内容是纯知识性的，整本书看下来，有关于类，继承章节有点困惑外，其它基本都能看懂。但涉及到的拓展并没有指出，比如字符串的方法，list的方法，pygal各函数的说明，需要自行查看了解。", "marks": "力荐"}
{"content": "入门不错，挺好的。", "marks": "推荐"}
{"content": "无敌爆炸螺旋强力推荐！HeadFirst一边去=)", "marks": "力荐"}
{"content": "编程小白的入门书籍，不过我感觉如果你是为了办公处理文件的话，还是更推荐另外一本也是同样的封面但是图片是个机器人，办公自动化那本书。如果学着玩，这本书很好了，后面有三个项目与基础语法部分是结合起来的，实用性很强。", "marks": "推荐"}
{"content": "不错的实例入门书", "marks": "推荐"}
{"content": "学习不同语言，入门专用", "marks": "力荐"}
{"content": "入门教材，适合高中生", "marks": "推荐"}
{"content": "一群水军", "marks": "很差"}
{"content": "通俗易懂，另说一句这本书翻译得真好。", "marks": "力荐"}
{"content": "救我于水火之中", "marks": "力荐"}
{"content": "新手必备，讲得非常详细，打好基础很重要", "marks": "力荐"}
{"content": "实际上是冲着后面项目部分买的这本书，但是实际看下来。后面项目部分只不过是带你了解一下python的相关的库，和一些项目的实现方式。你知道了一些最基础的方式。对于那些库，估计看完都和我一样一头雾水，还是要用的时候看库的说明文档吧。后面项目部分的实际意义是带你又熟悉了一遍语法。还有一些根本没有讲解的奇怪语句。", "marks": "推荐"}
{"content": "封面扣一星", "marks": "推荐"}
{"content": "真正让我Python入门的书，作为一个真零基础，在踩过廖雪峰博客和40个G的Python视频这些坑之后，发现还是老老实实对着基础教材学一遍，把习题都做完，再去学习高级知识比较好", "marks": "力荐"}
{"content": "大三上学期读的，python是个很简单的语言，用来写一些自动化功能程序还是不错的。看完这本书，跟着敲了一个外星人入侵的游戏和一个个人博客，感觉不错", "marks": "推荐"}
{"content": "入门必备", "marks": "推荐"}
{"content": "当初怎么会选这门课的……", "marks": "推荐"}
{"content": "额。。完全是小白入门级的书啊。。稍微有点编程基础读起来很快的。。", "marks": "力荐"}
{"content": "入门书籍", "marks": "推荐"}
{"content": "后面三个项目 相对于前面的基础章节铺垫 有点跳跃", "marks": "推荐"}
{"content": "通俗易懂，入门必备，最好的python入门，没有之一", "marks": "力荐"}
{"content": "读完这一本，感觉还不够。", "marks": "力荐"}
{"content": "这种书不仅仅是python入门，也是编程入门书，有点基础的人看肯定不好，如果你一点编程不懂，从这本书开始学起是最好的", "marks": "力荐"}
{"content": "没看过其他的Python教程，不敢乱评价。没看完，看了点觉得写的有点低龄化，题目好智障啊", "marks": "推荐"}
{"content": "入门很详细 程序员的话不要读了过简单", "marks": "推荐"}
{"content": "超级入门级.", "marks": "力荐"}
{"content": "挺好的一本入门书", "marks": "力荐"}
{"content": "对任何上过必修 C 语言的本科生都不适合。\n太幼稚了。\n\n大概适合那种完全零基础的社会人员。。", "marks": "较差"}
{"content": "这本书讲的很基础，作为小白很受用。关键是下一本用什么呢", "marks": "力荐"}
{"content": "适合我这样的新手，看完之后学会了怎么点pizza", "marks": "推荐"}
{"content": "非常好的Python入门书籍，讲解的很细致，难得的是翻译和印刷质量也非常好，建议手打一遍代码，实在懒的话，作者在github放了所有的源码！", "marks": "力荐"}
{"content": "比《Python基础教程》排版更好一些，后边的一些实践项目也很实用。", "marks": "力荐"}
{"content": "理论+实践，很适用入门的书，后面的例子很详细。", "marks": "推荐"}
{"content": "科班出身的教师编写，非常适合初学编程和python的萌新，去掉了繁杂的知识点，可能让你无法获得进阶提升，但对于入门书籍来说，当你翻开书，开始读起来的时候，欲罢不能，因为很简单也很有趣，python真的是大道至简。", "marks": "推荐"}
{"content": "除了Heroku需要翻墙之外，所有的例子都可以动手实现，python入门好书。", "marks": "力荐"}
{"content": "是市面上相对比较少的Python3的入门书，感觉讲得简单易懂；购于2017.08.03；2017.08.03开始看；2017.08.05看完第一部分(基础知识) 用时 5h 43min", "marks": "力荐"}
{"content": "真真正正的入门书籍，而且讲解的很详细，新手可以毫不犹豫的入手了，看完这本书再去看廖雪峰的Python，相比直接看廖大大的教程，这样更轻松https://www.liaoxuefeng.com", "marks": "力荐"}
{"content": "很好的一本Python入门书，很详细。", "marks": "力荐"}
{"content": "对刚接触python的人来说特别合适，里面详细介绍了如何搭建环境，如何开始写第一行代码", "marks": "力荐"}
{"content": "首先书本质量很好。内容逻辑排版合理，知识点讲解细致，非常适合零基础入门，个人认为比python基础教程要好，讲解清晰不啰嗦", "marks": "力荐"}
{"content": "适合新手入门，通俗易懂，讲的不深。Geany里使用中文的话，要在第一行加上#coding=gbk", "marks": "力荐"}
{"content": "太入门，适合完全沒编程基礎的", "marks": "还行"}
{"content": "学习java大数据的可以加QQ群460570824，索取学习的视频资料", "marks": "推荐"}
{"content": "适合初学者，真的初学者", "marks": "推荐"}
{"content": "入门最好的教程之一", "marks": "力荐"}
{"content": "真的很耐读", "marks": "力荐"}
{"content": "这本非常适合入门，我看了两本非常好的python的入门书记，这是其一。基础结合项目，非常实用。", "marks": "力荐"}
{"content": "流畅，清晰，好书", "marks": "力荐"}
{"content": "零基础，完全零基础艺术生一枚。最近考虑转行学了这个，真的对新手太友好了，完全看的懂。不过学到django那一章节就看不懂了。好像要和前端相关", "marks": "力荐"}
{"content": "确实是面向初学者的书。前半部分很多形象的例子帮助理解编程基础，后半部分是3个项目，可以很快上手。但是内容不够深，想更深入学习python还得看其他书。", "marks": "推荐"}
{"content": "入门级，适合较少编码经验的同学读。", "marks": "推荐"}
{"content": "不错的入门书籍，就是后面的项目有些鸡肋，其他的都不错。", "marks": "力荐"}
{"content": "开头几章入门简直完美！", "marks": "力荐"}
{"content": "简要介绍Python的编程基础要素后，马上上车实战，爽！最喜欢是第11章，仿照书上的程序写了一个小爬虫，爬取一个国内漫画网站上的《进击的巨人》，成就感，满满的。遗憾的是没有涉及面向对象等方面，但是，可以成功带入门。", "marks": "力荐"}
{"content": "作为入门书浅显易懂，但课后习题过于简单，看了前面的示例就可以照猫画虎，挑战性不高。第二部分的几个小项目也较简单，涉及到了python的几种常见的应用。此书非常适合没有编程基础的同学。", "marks": "推荐"}
{"content": "很不错。对于理解laravel 框架很有用。", "marks": "力荐"}
{"content": "这本书虽然写得很基础，但总体说来，还算不错！", "marks": "推荐"}
{"content": "想要深入了解laravel原理的人可以仔细阅读～", "marks": "推荐"}
{"content": "在学校图书馆看的，讲解的不错，对于初学者看源码有帮助，我边看书边看源码边注释，最后大概能了解来龙去脉，但是细节讲解个别不到位，当然可以理解，要完整分析源码不是一件容易的事，总之，想了解源码的可以一看。", "marks": "还行"}
{"content": "这本书一开始不和你讲 Laravel，而是从 composer 入手，一步步教你怎么用 composer 组合各种组件 run 一个最小实例，这难能可贵。当然啦，国人作品，特别是多作者写作出品，难免质量参差不齐，后面几章就显得比较虎头蛇尾了。", "marks": "推荐"}
{"content": "作者对 laravel 理解比较深刻的了。", "marks": "力荐"}
{"content": "解析了框架关键技术的源码，正如作者所说，帮我们走过了盲人摸象的过程，赞赞赞!", "marks": "力荐"}
{"content": "很通俗，适合完全没有基础的人。", "marks": "推荐"}
{"content": "连截图都是中文的 哈哈\n译者再多翻译几本编程书嘛\n日本人写书真的很用心，用一个被用滥的词形容，就是“工匠精神”", "marks": "力荐"}
{"content": "具体的代码没仔细看，觉得这个倒不重要，但作者透露出的整个思维理念非常人性化，比如对代码行数与可阅读性的讨论。对于在国内应试教育下成长的人来说，还是会有一定启发作用。", "marks": "力荐"}
{"content": "最后是编出一个俄罗斯方块来，想买给我弟看~", "marks": "还行"}
{"content": "作者很用心，但是不是心目中的优秀入门书，当年如果看的是这本可能看不下去π_π", "marks": "还行"}
{"content": "读书中感觉自己是在修行而非单纯的学习", "marks": "力荐"}
{"content": "解决了很多以前看国内教材的问题，说不清的问题，非常值得读，终于学会编程了！！！", "marks": "力荐"}
{"content": "日本人的工匠精神，事无巨细的啰啰嗦嗦，就像一位慈祥的邻家宅男大叔教你编程。。。。。。原谅我的形容", "marks": "推荐"}
{"content": "太low了，感觉看不下去了", "marks": "较差"}
{"content": "好书，非常适合入门", "marks": "力荐"}
{"content": "Allen Downey wrote a series of Think X books where X = SomeLanguage. And they all share the boringly slow path of this book.", "marks": "较差"}
{"content": "比较基础，适合学生及入门", "marks": "力荐"}
{"content": "很好的python性能优化书，从cprofile模块到pypy有着全面的优化方案。", "marks": "推荐"}
{"content": "感觉讲的比较浅显……", "marks": "还行"}
{"content": "属于python的一本进阶书，但是性能优化的入门级别书籍。从性能优化的前提和方法，到对于复杂度，语言的使用技巧，再到内置模块的使用方法都有比较详细的说明和代码解释，还算是不错的一本书，思路值得借鉴。", "marks": "推荐"}
{"content": "讲到蛮务实的，一定程度上挽回了线程在我心里的形象...", "marks": "还行"}
{"content": "问题都蛮实在蛮经典的, 有一些小错误吧XD", "marks": "推荐"}
{"content": "图书馆里看到，觉得还挺新的，就借来了，章节分得挺细，讲完java实现后会在后面跟一串问题，很多问题还是环环相扣，层层递进的。因为准备找工作所以看的比较匆忙，翻译不差。", "marks": "推荐"}
{"content": "原文很经典，值得仔细阅读，中文版的还可以，只是有些时候翻译的有些偷工减料，最好是和原版的对照阅读，此书是Java版的，最新的版本是C/C++版的，还有python版的。", "marks": "力荐"}
{"content": "全面", "marks": "力荐"}
{"content": "中文版比较新，但内容并不新，用最新版的RN，示例已经不能运行", "marks": "还行"}
{"content": "内容有一点过时，依然值得一看（结合 stackoverflow 和 ignite脚手架，上手还是很快的", "marks": "推荐"}
{"content": "不错，就是贵。不知道React Native这种东西最终能不能火起来！", "marks": "力荐"}
{"content": "太初级。", "marks": "还行"}
{"content": "例子很多都不能跑，介绍的很全面", "marks": "推荐"}
{"content": "可能是自己缺乏 React 和客户端开发基础，读起来略枯燥。", "marks": "还行"}
{"content": "不建议读，基本没有实质内容: )", "marks": "还行"}
{"content": "草草翻完。RN 与 React 也是太像。可能之后需要再细看?", "marks": "还行"}
{"content": "今天到的书，从京东自提的。当晚后半夜看完。。。。睡觉💤💤", "marks": "较差"}
{"content": "React Native初级入门，虽走完了整个流程，但最后回过头去看发现并无多少实质内容。不过用它做做玩具，相信也是一个挺不错的选择。", "marks": "还行"}
{"content": "书中的代码已经无法运行，即使是github上的代码也和教程上的写法有较大差异，对于react不熟的朋友来说理解起来还是有一些费劲的", "marks": "还行"}
{"content": "github上有源码。而且源码一直有更新，可以跑", "marks": "推荐"}
{"content": "很简单 入门的书籍吧，不过版本有点老了", "marks": "还行"}
{"content": "加载和链接。Linux 系统下通过mmap系统调用把程序加载到内存中。mmap是把文件内容映射到内存空间中的系统调用。所谓“映射”，意思是可以通过读取内存直接获得文件内容，也可以通过写内存对文件内容进行变更。", "marks": "力荐"}
{"content": "优化那块只有10页？？感觉被坑了~_~", "marks": "还行"}
{"content": "作者讲述的思路很好，编译器的基本实现流程都说到了。但可惜的Cb是用java实现的，大量的类和继承让代码显得臃肿拖沓，而即使采用了这么多类，这么大的代码量却仍然还有C的大量特性没有实现。对比之前看过的另外一个实现C11标准的编译器8cc，采用C11实现，完成基本C11特性的基础上却只有不到6000行代码量，并且代码简洁易懂，可读性和参考价值颇高。综上，这本书只能用来了解编译器的基本实现流程，代码我觉得就不用过于深究，可读性和研究的价值不大。个人见解，请勿拍砖。", "marks": "还行"}
{"content": "好看的飞起~~~，最近正在搞JavaCC\n读到 IR 就不读了\n书确实不错", "marks": "推荐"}
{"content": "整本书对 javaCC 的依赖很强，不是很推荐", "marks": "还行"}
{"content": "用来大概了解编译流程挺合适，代码太多，不实际看源码一会就晕了。汇编部分没基础，跳过了", "marks": "推荐"}
{"content": "写的什么东西", "marks": "很差"}
{"content": "理论居多，基本上在书中找不到可运行的代码，导致学习起来有点迷茫，好像看了半天却啥都做不出来。相比之下《两周自制脚本语言》写得注重实践部分，并且把难点放在附录中做解释。", "marks": "较差"}
{"content": "日本人写的技术书有一个共同点，就是非常简单好懂。", "marks": "力荐"}
{"content": "20171025合图。感觉比大学教材好。移动客户端无法标记，问候产品经理全家。", "marks": "推荐"}
{"content": "很适合入门～ ", "marks": "还行"}
{"content": "很简单的入门书籍，读起来比小说还快。", "marks": "推荐"}
{"content": "基础概况吧", "marks": "推荐"}
{"content": "很浅显, 加上配图有助于理解. (完全不用代码描述, 实际上增加了理解难度)", "marks": "还行"}
{"content": "日本人真是闲的蛋疼，但他们写这种东西的确很受用，比什么Guidance好多了。", "marks": "推荐"}
{"content": "能写得这么简单，也算是很见功底了。不过话说回来，这么简单，对专业的人来说聊胜于无。对想入门的人来说，就当做开胃菜吧，也不是正经的入门书。", "marks": "还行"}
{"content": "京东618促销时买书了一堆书，这是其中之一。到手第一天看一些，苹果 WWDC 开始前看一些，最终在去北京出差的火车上看完。讲解简单明了，但内容少了点，让人意犹未尽。", "marks": "推荐"}
{"content": "各方面都有介绍，并且附有图解，算是不错的科普书吧，看完能大概知道这些算法是啥样的。", "marks": "推荐"}
{"content": "适合非理工科入门", "marks": "还行"}
{"content": "内容很简单，讲得很清楚。", "marks": "推荐"}
{"content": "虽然都是已经知道的一些知识，但西方的那套理论真是很形象易懂。20161021", "marks": "推荐"}
{"content": "非常非常适宜入门。", "marks": "力荐"}
{"content": "配漫画的启蒙书最可爱了", "marks": "推荐"}
{"content": "快速翻完，确实很适合入门。", "marks": "推荐"}
{"content": "科普读物，有助于在最短的时间内了解算法的总体情况", "marks": "推荐"}
{"content": "只是把思想讲明白了，可以作为第一本数据结构和算法书。。", "marks": "推荐"}
{"content": "日本人写的还是挺有趣的", "marks": "力荐"}
{"content": "不值得买。", "marks": "还行"}
{"content": "还不错，可以再读一遍。", "marks": "推荐"}
{"content": "算法相关，生动形象容易理解，内容很浅显基本，作为随手翻翻的算法启蒙书不错。", "marks": "还行"}
{"content": "写的倒是通俗易懂，只是几乎全是理论性文字，没有任何代码示例。搞编程没有示例怎么能行呢？", "marks": "较差"}
{"content": "非常轻脆的入门书...", "marks": "推荐"}
{"content": "简明实用的入门书。概念点到为止 化繁为简 足够浓缩。这样并非没有问题 比如习题的缺乏终归是个遗憾。不得不说的是 那么多书翻下来 这本的确是很行云流水地看完并记下不少东西 更容易抓住重点 无疑也利于更高效地理解和运用 至于说运用如何才能少些磕绊 还有待用心努力实践。已入坑。", "marks": "推荐"}
{"content": "<1h 翻完...总体来说, 轻, 薄, 精, 防侧漏...小白可入. ", "marks": "推荐"}
{"content": "标题党", "marks": "较差"}
{"content": "图书馆上架新书，仿佛黑夜里的一座灯塔，想着看完就可以自称精通Python了耶。现在出书越来越容易了，版权很便宜吗？20161017", "marks": "很差"}
{"content": "怎么说，真的真的真的很入门，太浅了，真的是向小白介绍，不适合程序员阅读。\n一日精通，这翻译名字就太浮夸。\n以及变量命名居然是 camelCase，读代码总是想起 JS。\n以及代码排版真是混乱，翻译也是，有些注释也翻译，中英文夹杂，各种字体夹杂，本来排版就不怎么工整的代码块，你感受下。\n以及有一些 Typo. \n看不出用心。\n真想学 Python，还是别拿这本书入门了。\n", "marks": "很差"}
{"content": "捋顺了一遍之前知识点，体系算是构建了～", "marks": "推荐"}
{"content": "的确轻薄== 入门的话极佳反正翻完也用不了多久", "marks": "推荐"}
{"content": "的确很简单，看完后，对Python是什么有个大概，最后一章的项目实践不错。", "marks": "推荐"}
{"content": "在美国图书网站看过的排名第一的Python书，知识讲解非常简练，并且善用样例来让读者快速理解，麻雀虽小，五脏俱全，适合初学者阅读的入门书。", "marks": "力荐"}
{"content": "0基础耐心一般的小白表示很好用\n边学边练还是挺好的", "marks": "推荐"}
{"content": "深入浅出的介绍了Go语言，不紧紧是Go语言，也介绍了编程语言一些通用的东西，非常靠谱的书籍。尤其是源码分析，感觉国内能做到这种程度的人并不多。", "marks": "力荐"}
{"content": "这应该是目前地球上面关于 Go 的最好的一本书了，哪怕跟那本 Go  圣经相比也毫不逊色。之前看了很多年的电子版，终于可以买一本纸书来翻阅。", "marks": "力荐"}
{"content": "还不错，可帮助快速对 Go 有个大致了解（包含实现层面）。", "marks": "推荐"}
{"content": "看了一下源码分析部分，确实写得很认真，一行一行地对代码进行解构。遗憾之处是，只讲了术而没有道，只有implementation而没有motivation 。如果只是学别人，那可能明白implementation就可以，但若自己设计，必然是要清楚motivation 的。", "marks": "推荐"}
{"content": "言简意赅", "marks": "推荐"}
{"content": "虽然有很多也是官方和一些牛人的blog上能看到的，但作者还是诚意满满，这本是go语言目前最好的书，没有之一。", "marks": "力荐"}
{"content": "如果没打算了解go源码的话（比如我） 还是换别的吧", "marks": "推荐"}
{"content": "第一次看到深入剖析源码的书，虽然全书一半都是代码，但是看得很舒服", "marks": "力荐"}
{"content": "言简意赅，不错", "marks": "推荐"}
{"content": "对golang的runtime，内存模型，gc写的很好，对golang的底层有了全新的认识。", "marks": "力荐"}
{"content": "不错的一本书", "marks": "力荐"}
{"content": "下卷还需要认真阅读一下", "marks": "推荐"}
{"content": "源码部分是菁华，还的刷两遍。", "marks": "推荐"}
{"content": "为啥评分这么高", "marks": "还行"}
{"content": "从1.4时代开始读源码剖析，原作者深入浅出贴近代码的分析方法令我收益很多。不过就这本书而言，前半部分更重要，后半部分大致看一下，知道脉络就行了，因为 go 还在不断迭代，代码更新很多", "marks": "力荐"}
{"content": "深入理解Go语言原理", "marks": "力荐"}
{"content": "这书可以称为Effective Go，比起Effective Java也不逊色", "marks": "力荐"}
{"content": "看过的代码最多的技术书。", "marks": "力荐"}
{"content": "国人写的好书，措辞干练，排版讨喜，适合Go进阶和源码学习。", "marks": "力荐"}
{"content": "读完上半部分，下半部分找时间补。", "marks": "力荐"}
{"content": "【2017.10.18】源码解析部分不错。", "marks": "推荐"}
{"content": "技术人员出书还真容易. 此书一半在堆砌对于基础语法的介绍, 另外一半用大段的代码填充内容, 对于源码分析和机制也是浅尝辄止, 囿于细节, 难以留下整体的印象. 如果作为网上公开的学习笔记倒是不错, 出书赚钱就有些不厚道了.", "marks": "很差"}
{"content": "已拜读，干货确认。", "marks": "力荐"}
{"content": "好评！深入浅出得讲解了go的运行原理，让我这个小白也能看懂go的源码！", "marks": "力荐"}
{"content": "比较符合我口味的一本书。是学习Go语言前比较系统的了解Go概貌的一本书。", "marks": "力荐"}
{"content": "之前读过，记录。\n看了前半部分。\n还需要再看看。", "marks": "推荐"}
{"content": "可以说是一本比较干货的书。适合有语言基础的人", "marks": "力荐"}
{"content": "不给5星，只是因为这本书不适合go语言初学者，源码解析甚至不适合很多并不需要真正了解go的人。。。请慎重。。我是开始读第二遍了。。。想象一下经过多次极致优化的运行时的源码，没有语法高亮的情况下，用着一两百页纸张来呈现，这绝对需要反复咀嚼的，书虽然买了，我现在还是用pdf看的，而且严重依赖里面的关键词搜索功能，就像书里面说的go的三大核心运行时模块为了性能互相耦合在一起，也就是说你看垃圾回收时会有部分routine的代码，routine又有垃圾回收的判断，一开始可能觉得没什么，但到后来页码一多，以前看过的东西就容易忘了。。脑容量在这种高度优化的耦合的代码面前总是显得很吃紧。。总之慎重！慎重！", "marks": "推荐"}
{"content": "很多地方都没解释清楚。。看者不会，会者不看", "marks": "较差"}
{"content": "语言精练，不带一点拖拉。读起来很流畅，之前读了一本 Go 的书，不断解释生怕读者看不懂。", "marks": "力荐"}
{"content": "这书属于那种，会了不看看了不会的那种。", "marks": "很差"}
{"content": "太浅，内容太少", "marks": "较差"}
{"content": "很薄很好读，但是内容很不简单，也值得玩味的书", "marks": "推荐"}
{"content": "超级实用！", "marks": "力荐"}
{"content": "实战内容写的简单实用", "marks": "还行"}
{"content": " 还不错．提供了on boarding的例子．可以作为提纲来看．需要大量的分析总结才能转化为能力", "marks": "推荐"}
{"content": "把Growth Hack阐述的比较清楚：消除来客疑虑，增强客户信息。", "marks": "推荐"}
{"content": "又看完了一本，仅用了三天时间。感觉大部分的东西都是点到为止，不知道是不是由于没有跟着书中代码敲一遍，感觉也是一般。不知道要看过多少本React才能遇到一本好的。", "marks": "较差"}
{"content": "简而言之，过时了。前端的东西新潮框架看书基本没用。框架产生到框架流行，需要个把月；流行了才会有人写书，写书又要个把月。写完书等翻译，又要个把月。算算一年过去了，等到这本译书实际到你手里的时候，版本号都从0.x提到15了...", "marks": "还行"}
{"content": "比较基础，有一点JS基础的人都能看得懂，并没有什么高深的思想。一直使用AngularJS，一直不理解如果JS中涉及大量逻辑代码，React要如何处理呢。毕竟Component的概念很大程度是面向用户界面组件，而非功能模块。再找其他书探寻一下吧。", "marks": "推荐"}
{"content": "这本书英文版出版于2015年，但是不知道为什么里面的代码显得比较老，基本不涉及ES6的内容，没有Redux相关的内容。举例又是和twitter相关的，所以整体来说质量一般，不建议阅读。", "marks": "较差"}
{"content": "作者在序言说，「我们应该面向未来编程」，这当然很好，但是既然这样，为什么作者不用 ES2015 来写书中的代码？！🤔\n一天看完了。包括 Flux 那章，了解了「解耦」思想实践。\n查漏补缺，一些小 tips 还是有点帮助。\n后面大段大段贴需要重构的代码，真是有点骗版费嫌疑。", "marks": "还行"}
{"content": "啰嗦！希望react的书用es6来写", "marks": "还行"}
{"content": "React入门的“第二本书”，参照例子学习开发过程。本打算给4星，但书中的代码排版看着就累，翻译有些瑕疵", "marks": "还行"}
{"content": "react入门书籍，代码例子较多，实战类", "marks": "推荐"}
{"content": "说句实话，别看这个。。", "marks": "较差"}
{"content": "书很烂 github上也不提供帮助和解惑 ", "marks": "很差"}
{"content": "我觉得挺难的, 别小看web开发啊混蛋!", "marks": "还行"}
{"content": "If you want to build a ship, don't drum up the men to gather wood, divide the work and give orders. Instead, teach them to yearn for the vast and endless sea. ", "marks": "力荐"}
{"content": "伯克利课程所用教材，涵盖面广，配合MOOC，好书推荐。为何减1星，因为ruby和rails的版本滞后了。", "marks": "推荐"}
{"content": "太赞了！9.9刀从amazon入的kindle版，配合Edx的课程，无敌了！", "marks": "力荐"}
{"content": "什麼都講了點但有點淺嘗輒止", "marks": "还行"}
{"content": "看了下目录，“你们的良心不痛吗？”", "marks": "很差"}
{"content": "没读完 不过有些不适合", "marks": "较差"}
{"content": "勿买，大坑。编码没有注释；英文翻译不准确；题目不给例子。", "marks": "很差"}
{"content": "排版很精美。这本书其实并不适合非专业的前端，因为讲的是一个一个平时并不常用的小技巧，如果没有足够的实战经验很难把这些知识体系化梳理起来，而只能看个热闹，所以只能算是装B利器了。不过偶尔放在旁边翻起来随便看看还是挺有乐趣的。", "marks": "推荐"}
{"content": "前端应该熟习css技法才能写出更加简洁高效的页面。  Js的强大dom控制力使得坊间流传着一堆奇淫技巧，其实原生css已经给出了答案。   加上我并不觉得为了实现浏览器的兼容需要折损实现，让那些不兼容的浏览器难看去吧，保证可读性即可。  适合希望用css简化代码的人", "marks": "推荐"}
{"content": "有一些其实不适用，浏览器支持的太少了，不过确实学到了不少", "marks": "力荐"}
{"content": "最棒的 CSS 书，实用场景的不注意的标签和正确姿势，非常棒。", "marks": "力荐"}
{"content": "如果你对CSS新特性有所了解，又不知道能干什么的时候。这本书可以让你脑洞大开，当然，因为只是涉及CSS部分讲解，对于实现方面，有各种各样的方式都能达到相似的效果。仅仅将其做为，“哦，还能这样想”系列阅读，会更有收获。", "marks": "推荐"}
{"content": "超级有趣，内容也没有想象那么难，各种css实现技巧，进阶书籍。", "marks": "力荐"}
{"content": "好书力荐！", "marks": "力荐"}
{"content": "中文技术书配合着英文版看才完美。", "marks": "力荐"}
{"content": "吐血推荐", "marks": "力荐"}
{"content": "比较高端的css书了", "marks": "力荐"}
{"content": "看完会有种从小工到专家的感觉~", "marks": "力荐"}
{"content": "实在一般，还定价这么贵，尼玛一本260页的书，卖100rmb！！！", "marks": "还行"}
{"content": "实践与理论并举的佳作", "marks": "力荐"}
{"content": "思路奇特，很多实现方式真是没想到呢。", "marks": "力荐"}
{"content": "前端平面设计权威指南", "marks": "力荐"}
{"content": "没读完，需要的时候再回头看", "marks": "力荐"}
{"content": "嗯，纸质挺好。", "marks": "推荐"}
{"content": "超酷的CSS书，超级棒。", "marks": "力荐"}
{"content": "确实是多年难得一见的重磅 CSS 书籍，看得很过瘾，CSS 进阶必读。", "marks": "力荐"}
{"content": "如果有6星的话，我想给她10星", "marks": "力荐"}
{"content": "奢侈的全彩印刷，挑了适合自己的几章阅读，因为不是专业的ui工程师，对于特效实现的业务场景比较少，不过作者的很多思路对于网页的布局和样式实现，可以给人新的启发，还是挺干货的书", "marks": "推荐"}
{"content": "用有限的语法创造无限的可能，这才是CSS的精妙之处！", "marks": "力荐"}
{"content": "超级好的一本css书", "marks": "力荐"}
{"content": "2016.46 全彩的书阅读体验太棒，很多css的独家技巧，推荐，唯一不足的地方，应该就是整本书像是博客合集，没什体系，就是很多非常棒的css技巧融合在一起", "marks": "力荐"}
{"content": "优雅实用", "marks": "力荐"}
{"content": "内容确实精彩，作者的 CSS 功底深厚，脑洞也大。适合已经很熟悉 CSS 的人了，就不大适合我这种渣渣。", "marks": "力荐"}
{"content": "好多干货，技术书籍应该需要这样的特点。需要一定的css编程经验读起来可能要顺利一点。", "marks": "推荐"}
{"content": "这本书更多的是介绍一些CSS的高阶用法，尤其是一些CSS3的用法，有不少奇技淫巧，值得一读。", "marks": "推荐"}
{"content": "继CSS权威指南后，第二本CSS好书，排版是我看过最好的，内容很丰富实用！", "marks": "力荐"}
{"content": "需要回顾", "marks": "力荐"}
{"content": "不是入门书籍，很多特殊的技巧，可以看出作者对 CSS 理解的深度。", "marks": "力荐"}
{"content": "很喜欢这本书hhh 重点在于传授一些实现技巧 作者也说了 这本书重点不在于设计 而是如何去实现这些设计～", "marks": "力荐"}
{"content": "书中的案例都是非常好的干货，条理清晰，易读易懂。", "marks": "力荐"}
{"content": "全彩还是很赞的，排版有点不爽，很多地方图示文字里提到了，图片却在另一页，经常要翻来翻去。", "marks": "推荐"}
{"content": "很好", "marks": "力荐"}
{"content": "自然是不错，不过有些必须实践的", "marks": "推荐"}
{"content": "css一些技巧很好 书全彩 ", "marks": "力荐"}
{"content": "讲了很多实用的小技巧", "marks": "推荐"}
{"content": "一是第一次领略了 CSS 的 DRY；二是内容规划可以作为进一步阅读 W3C 标准的索引；三是扩宽脑洞看如何实现某些具体的样式，虽然很多方法都已经被大家熟知。", "marks": "推荐"}
{"content": "这本书是我看到的排版最漂亮的书了，拿来收藏都不为过！当然，内容也很棒，提供很多实践技巧，开眼界，开思路，有时间再读一遍", "marks": "力荐"}
{"content": "买了好久了，终于用了一下午看完了，哈哈", "marks": "推荐"}
{"content": "给了一个写样式的思路", "marks": "推荐"}
{"content": "看了这本书，发现CSS也能如此的高端。看一遍，很多内容还是不能消化。", "marks": "力荐"}
{"content": "画质好评，彩色印刷，内容讲解的非常详细，技术点调理清晰，真的是一本值得学习收藏的好书", "marks": "力荐"}
{"content": "百姓网的前同事推荐，里面说了很多技巧和deom文档，网上都可以找到，若是不看书在项目中成长或者大牛指点下，我觉得自己的知识库不是很完整，还是多看下书，毕竟能超越仅仅完成工作需求，这就是差距，有个疑问，我看到评论说原生css，我不知道是个啥东西，还是新名词，哈哈", "marks": "力荐"}
{"content": "作者展示很多特别的实现方式，值得多看几遍的书，获益匪浅。", "marks": "推荐"}
{"content": "针对的都是实际工作中常范畴的实际问题，又能把每个点都讲透。做重构的错过这本书就太可惜了", "marks": "力荐"}
{"content": "实践很强的一本css书很喜欢", "marks": "力荐"}
{"content": "我看过的技术书里排版最精美的一本书了。内容很多各种各样的 CSS 小技巧，里面的思想很值得学习。", "marks": "力荐"}
{"content": "很不错，极力推荐\n", "marks": "力荐"}
{"content": "好书 后面的讲的动画第八章 由于基础欠佳 只做了简单的记录", "marks": "力荐"}
{"content": "内容翔实、精彩，彩页排版精美", "marks": "力荐"}
{"content": "这本书的排版在同类工具书里可以数一数二了，实用技巧外加装B利器，给那些热爱钻研的人，值得拥有，适合慢慢研读！每看一遍都有新发现！", "marks": "力荐"}
{"content": "css里面，真是非常好的书", "marks": "力荐"}
{"content": "好书推荐", "marks": "力荐"}
{"content": "超级超级爱的一本书，里面的例子大多都是我没想过的，提供了非常多关于css样式的解决办法，作者和翻译对于css的理解和运用都令我折服，看得出功力都非常高。强推一百年", "marks": "力荐"}
{"content": "Java 8提供的函数式编程能力意义不亚于Java 7的并发类库，Stream流处理就是单机版的Spark，还有CompleteFuture和JS里的Promise真是异曲同工。", "marks": "力荐"}
{"content": "大量借鉴 Scala 的 Java8 终于可以让程序写的不那么繁琐了，Stream, CompletableFuture 等都让人眼前一亮。事实上，虽然写起来啰嗦，但 Java 从来都是一门不差的语言，只是框架和社区一直把人往沟里带", "marks": "推荐"}
{"content": "有时候觉得看这么多书，学这么多东西又有什么用呢。生活不易，且行且珍惜", "marks": "力荐"}
{"content": "从两个角度来读：SCIP的解释版本（给SCIP的程序以组合以及新的命名）和从Java的设计模式和语法到函数式的阅读；", "marks": "力荐"}
{"content": "实在是看不下去啊", "marks": "还行"}
{"content": "终于读完了，收货很大，内容很有深度，改变上的改变是最深的。", "marks": "力荐"}
{"content": "我觉得一般，不够直白。", "marks": "还行"}
{"content": "难得一见的好书，讲解很清楚，终于算是了解了java新特性。此外，排版良心。", "marks": "力荐"}
{"content": "详细介绍了Java8函数式编程。", "marks": "力荐"}
{"content": "粗略过了一遍，后续再读。", "marks": "推荐"}
{"content": "这个月第四本", "marks": "推荐"}
{"content": "对Java8的新特性讲解的十分到位，尤其是lamdba表达式和流的操作。再者对于Java8并发处理很有独到见解。对于并行数据处理和组合式异步编程还需要更深的思考才能更加掌握。巩固Java基础的第一本，后面是编程思想。", "marks": "力荐"}
{"content": "略显啰嗦，但是有些地方写的还不错，我总是在想：如果一个程序员在一直不断的追求语言特性会不会对他的代码质量、编程思想有更多的帮助？", "marks": "推荐"}
{"content": "目前关于Java8最好的一本书", "marks": "力荐"}
{"content": "照着本书学习了一遍，同时利用Java8的新特性几乎完整的重构了一个微服务，没有用到什么特别的技巧，代码的可维护指数从50多提升到了100多，几乎翻倍 :) \n不过，看下后面和Scala的对比就知道Java还有很长的路要走，可惜Java9没有拿出什么像样的语言特性……", "marks": "力荐"}
{"content": "Java 8武功秘籍", "marks": "力荐"}
{"content": "单纯作为Java8的新特性来讲，非常详细到位的。使用了很多之前Java7的例子，来讲解Java8要解决什么问题，新手看起来很有感触，但是老手看起来有些冗余。 其中lamda表达式讲解的最为详细。推荐值得一看。", "marks": "推荐"}
{"content": "依据摩尔定律每年新增的晶体管数量已经无法使独立CPU核的速度更快了。简单来说，要让你的代码运行得更快，需要你的代码具备并行运算的能力。Java 8中的函数式编程支持主要就是为了支持并行运算能力。", "marks": "力荐"}
{"content": "3.19~4.23", "marks": "力荐"}
{"content": "可以说是in action系列书里的好书代表了，不仅仅讲了java，还有函数式。而且不像很多in action书全是堆例子，这本书里面还讲了很多原理和延伸。", "marks": "力荐"}
{"content": "算是 Java 8 引入的语言特性及 API 的参考吧。直接看 reference 可能更全面。", "marks": "推荐"}
{"content": "前半部分读的仔细，感知了lamda, stream的强大，以后新方法写起来。", "marks": "推荐"}
{"content": "强烈推荐。适合入门和进阶。如果我开始用java8的时候就读这本书，上手会快很多。本书系统讲解了lamada表达式，函数式编程，后面章节进入了深入探讨和scala对比升华，粗略读了一遍后面深入的章节还是没有很好理解。", "marks": "力荐"}
{"content": "以前需要几行、十几行、几十行的代码，现在只需一行，统统只需一行。。", "marks": "力荐"}
{"content": "很适合了解java8的新特性", "marks": "力荐"}
{"content": "断断续续读了一年", "marks": "力荐"}
{"content": "Java 8引入的lambda表达式大大的提高了代码可读性，stream接口操作集合感觉就是像在写SQL一样，实在是太方便了。这些特性用习惯后就再也离不开了，推荐还没试过Java 8的Java程序员赶快去试试。另外，是本好书。", "marks": "力荐"}
{"content": "对于想了解Java8相关特性的人来说还是非常棒的。以前就知道函数式，但是在Java8是如何设计及如何使用的并不是很清晰，本书讲解的算是比较清楚明白了。不过更多的还是要实践。", "marks": "力荐"}
{"content": "不止java8函数式,等于把java的演进也涵盖了...", "marks": "力荐"}
{"content": "读过《Java 8函数式编程》一书，这本书作为补充继续阅读，加深理解。", "marks": "力荐"}
{"content": "每个点都讲得比较细，知道每个api背后都有设计者自己的考量意图", "marks": "推荐"}
{"content": "Stream Api 和 Lambda 以及多核并发介绍的很详细，还没消化完。。再多练习练习吧。", "marks": "推荐"}
{"content": "LAMBDA从小白到入门，深层剖析JAVA语言的设计思想，感悟深刻。", "marks": "力荐"}
{"content": "了解Java8的新特性，这本书是讲解Java8的新特性最全最仔细的了。", "marks": "还行"}
{"content": "Java 怕是跟优雅没什么关系了", "marks": "推荐"}
{"content": "还好，挺清晰的", "marks": "推荐"}
{"content": "java8入门不错的书，看完一次基础上可以上手。讲解结合实例，很通俗易懂。", "marks": "力荐"}
{"content": "java8是一次重大的改版，新增了Lambda表达式、函数式接口、流处理等。这本书在介绍java8新特性方面是我目前看到最全最清晰的了，而且，中文翻译不是太坑，5星推荐", "marks": "力荐"}
{"content": "对JAVA8的新特性进行了详尽的介绍以及对应案例讲解,完全可以当做一本工具书随时进行查阅", "marks": "力荐"}
{"content": "终于读完，很不错，写的很详细。每个知识点都有例子讲解，学到很多Java8的特性，作为函数式编程入门很不错", "marks": "力荐"}
{"content": "通俗易懂 读起来比think in java爽的多 - -", "marks": "力荐"}
{"content": "很棒的一本书，对Java8新特性的解读说明实践很到位，五星。", "marks": "力荐"}
{"content": "\n\n大家可以点击加入群：606187239【JAVA大牛学习交流】\n 里面有Java高级大牛直播讲解知识点 走的就是高端路线 \n（如果你想跳槽换工作 但是技术又不够 或者工作上遇到了\n 瓶颈 我这里有一个JAVA的免费直播课程 讲的是高端的知识点\n 基础不好的误入哟", "marks": "力荐"}
{"content": "条理清晰：工程与知识的关系，编程环境的配置。当声明变量时，便创建了一个命名的存储位置。当给变量赋值时，便修改了它的值。程序中的所有变量及其当前值一同组成了程序的状态（state）。状态随程序的运行而变化，因此，应将状态图视为程序执行过程中特定时点的快照。", "marks": "力荐"}
{"content": "算不错的书哈。不过就是编辑器用的日食。还有图太多，太大。设计模式那章可以尝试写写代码。持续集成围绕着jenkins，推荐。", "marks": "还行"}
{"content": "算是第一批读者吧，写法比较独特，对传统嵌入式开发者有一定启发性。缺点也明显，薄薄一本，主题多了，自然深入性就稍差。But，还是非常值得一读。", "marks": "推荐"}
{"content": "比较贵，但是c的面相对象路数还是说清楚了。", "marks": "推荐"}
{"content": "本书重点讲解了嵌入式软件集成开发和测试的实践技巧，手把手的搭建Linux嵌入式开发环境；把C语言程序改写成面向对象程序的方法，C语言如何实现面向对象的多态、继承、封装、虚函数表等特性；学习状态模式、模版方法等程序设计模式；在TDD实践中对怪兽方法进行重构，以及嵌入式程序（与硬件相关）的Mock测试和Stub测试；持续集成的原理和工具，持续集成的自动化构建过程，常用工具git，集成服务器Jenkins的使用方法。总之这本书是嵌入式开发测试中实践技巧的一次全面总结，值得在开发中学习借鉴。", "marks": "推荐"}
{"content": "有些新的概念，比如面向对象，在很多代码都见过，看完这本书才知道那是面向对象。但每方面内容都不详细，很多地方都要自己摸索才能实际应用。", "marks": "推荐"}
{"content": "为了面试  也是豁出去了 @@   ", "marks": "推荐"}
{"content": "终于啃完", "marks": "还行"}
{"content": "常看常新，实践出真知。", "marks": "力荐"}
{"content": "书中的内容还是不错的，说的很细，图太多很好也。。。不算特别好。。。怎么说。。。太细了容易迷失。。3.5 吧。", "marks": "还行"}
{"content": "由于工作关系需要研究gcc，抱着很大希望买了回来，结果太失望了。我觉得这本书走到了另外一个极端，完全用图代替了文字，结果比没有图还失败， 不仅眼花缭乱，并且给阅读带来极大障碍。同时，对于一些背景知识和理论知识介绍的太少。另外，编辑能不能再细心一点，所有的代码都存在对齐问题。综上，我退货了。个人见解，不喜勿喷。", "marks": "较差"}
{"content": "技术原理和工程实现的关系。CPU和内存、硬盘等设备的速度不匹配，是冯·诺依曼结构计算机的一个核心问题，为了解决这个问题，科学家们绞尽脑汁，想尽了办法， 又引出了一堆概念： 缓存，DMA， 同步，异步，阻塞....", "marks": "力荐"}
{"content": "买了这本书，看了三四个小时退了。", "marks": "还行"}
{"content": "书的内容还是很不错的，就是排版读起来很累，放弃了。", "marks": "还行"}
{"content": "书中有大量的代码，如果开发gcc当参考资料是有用的，但是用这本书来学习编译原理就不推荐了。所以对于我这种gcc开发人员还是很有帮助的，省去了我一些看代码的时间，毕竟市面上原来没有这样的书。", "marks": "推荐"}
{"content": "内容很好，但欠缺些大局观；例子也从玩具到复杂跳转，没有过渡。期待一部Effective Swift。", "marks": "推荐"}
{"content": "需要反复研读", "marks": "力荐"}
{"content": "不如 effective OC 这种实用，但还是能更深入了解一些机制。另外，花费时间会比较长。", "marks": "推荐"}
{"content": "objc.io 出品，必属精品", "marks": "力荐"}
{"content": "在muni上看了一个月终于看完了 该开始好好读source code了 _(:з」∠)_", "marks": "推荐"}
{"content": "分章节对语言的各种结构做了较细致的讲解。即使写了一年半 Swift，仍读到了许多新鲜东西。但深度有些不足，毕竟不是一本很厚的书。章节之间关系不大。", "marks": "推荐"}
{"content": "看了前面八章，后面关于应用层面及调用层面的调优遇到瓶颈或用到再看。后陆陆续续看完，有些用不到长长见识，重点还是在前八章", "marks": "力荐"}
{"content": "还不错! 如果能多讲点过时的优化以及原理就好了~", "marks": "推荐"}
{"content": "G1 部分还行..填补了G1中文书的空白..", "marks": "还行"}
{"content": "本来是想买 java性能优化权威指南 的,结果买错了....书上的东西都蛮浅的,指导意义不大", "marks": "较差"}
{"content": "对jvm有进一步了解", "marks": "推荐"}
{"content": "失望了，内容虽然新，但都是皮毛，纵观全书，没有一个点讲的特别深入个透彻。还有内容组织上，用让人感觉前后颠倒。最后说说翻译，不知道译者没有有自己读读句子，我小学语文不好，真的没法段这冗长不通的句子，是谷歌翻译吗？", "marks": "较差"}
{"content": "有些地方翻译差了点", "marks": "还行"}
{"content": "这本书相比《Java性能优化权威指南》内容较新，包含Java8的内容，包含编译优化，GC优化，多线程优化等重要的内容，结合Java8新特性进行讲解，是时候更新一下陈旧的jvm知识了，非常不错！", "marks": "力荐"}
{"content": "翻译质量一般，但是内容很不错，加强对虚拟机的一些了解", "marks": "推荐"}
{"content": "比较全面，内容较新", "marks": "力荐"}
{"content": "为了理解gc那块看过来的，cms个人感觉讲的挺好的，和《深入理解java虚拟机》垃圾回收部分互为补充吧。有一点觉得挺赞：翻译的比较好，没有那种翻译腔！", "marks": "推荐"}
{"content": "和《java性能优化权威指南》相比，这本书的就像他的名字一样，缺少优化，读完之后你根本不知道该怎么优化，还是比较浅显的", "marks": "较差"}
{"content": "目前看到的最新的，我觉得值得再刷一遍，但是会翻的很快", "marks": "力荐"}
{"content": "Java 领域可优化的点非常多，比如GC、JVM、API的使用、Web 应用、数据库操作等，作者都给出了自己独特的见解。值得一看！", "marks": "力荐"}
{"content": "GC调优相关的讲得很详细", "marks": "推荐"}
{"content": "解释很清楚,有图有代码，好书", "marks": "推荐"}
{"content": "对我这种基础不好的人来说，很详细，很多东西解释清楚了。有时候你还要知道为什么这么做，这个很重要", "marks": "力荐"}
{"content": " 十分详细,但有些内容作者并没有讲的很详细,比如处理器的体系结构,建议配合CSAPP阅读更佳", "marks": "力荐"}
{"content": "难得一见的好书，通俗易懂，不过不是零基础可以看的书籍，强烈推荐，哈哈哈哈！！！", "marks": "力荐"}
{"content": "讲得很清楚,但要有一定的背景知识才能看懂,书的知识点有点散(可能是叙述风格造成的),如果书前言能提到如何阅读本书和面向哪些读者那就更好了", "marks": "力荐"}
{"content": "挺好  通俗易懂", "marks": "推荐"}
{"content": "入门简单", "marks": "力荐"}
{"content": "比较实在的基础算法书，代码也比较完整。不是那种要毁三观或是碾压智力的风格。", "marks": "推荐"}
{"content": "描述太粗略，追求生动却功力不足。可大致翻阅", "marks": "还行"}
{"content": "我是看了作者的博客，一并入手了两本（另外一本是关于图像的）。总的来说，本书内容属于是中规中矩的，一些常见的数据结构都有覆盖到，当然这也并不算是什么特点。我个人感觉，本书的亮点一是作者设计穿插的一些经典问题非常不错，二是所有算法、结构和经典问题都配有完整的程序代码，很有参考价值。", "marks": "力荐"}
{"content": "书两侧的留白不错 有问题引入和其他小标注 主要是面向学生比较简洁地梳理了一下各种结构", "marks": "力荐"}
{"content": "薄薄的小册子，容易读完，代码还需要调试", "marks": "还行"}
{"content": "c进阶", "marks": "力荐"}
{"content": "确实解除了很多疑惑，可以让我少踩一些坑，但，这个能占到篇幅2/3的大坨大坨的图案是什么鬼？！", "marks": "推荐"}
{"content": "各种贴代码，一连贴几页，连import都要全部贴进来，像培训班用的教材一样…还好是300-200的时候凑单买的…", "marks": "较差"}
{"content": "很适合入门的书籍，就是代码贴得多了点，减1星", "marks": "还行"}
{"content": "挺好的，不像传说的那样不堪。适合迅速入门。", "marks": "力荐"}
{"content": "快速翻了一遍。for review of nowcoder's wenda project", "marks": "还行"}
{"content": "知识结构比较丰富，都可能不是很细，对于大牛可能点一下就懂了，菜鸟不好说。", "marks": "还行"}
{"content": "该讲的基本都有涉及到，也介绍了Docker.", "marks": "还行"}
{"content": "方方面面给出了一个hello world，真要在实际开发中使用，远远不够。", "marks": "还行"}
{"content": "虽然大段的代码就是骗钱，搞得这么厚。不过覆盖的点还是比较全的，也是比较容易懂的，看的比较轻松愉快", "marks": "推荐"}
{"content": "扫了一遍。和上一本没什么太大差异。可能还没用这个技术吧，体会不出什么深度的内容。", "marks": "还行"}
{"content": "这本注重实践，重点在 Spring 本身和 Spring Boot 上面，最后提了下 Spring Cloud", "marks": "还行"}
{"content": "cook book性质的书，只有教你怎么操作，用的时候查好了", "marks": "还行"}
{"content": "不错", "marks": "推荐"}
{"content": "这本书不止介绍了spring boot，从spring基础，到spring mvc， spring boot，再到spring cloud，涵盖了spring生态圈的大部分技术点。书中对知识点讲解比较概括，主要是实例多，需要多动手实践和思考。另外，spring从最初的一个ioc容器，发展到现在的云生态系统，优秀的软件设计，开源以及生态圈的形成，确实值得好好学习、使用。 ", "marks": "推荐"}
{"content": "作为初期的 reference 还是挺不错的。更深入的原理需要自己看代码了。", "marks": "还行"}
{"content": "入门书，预览下spring boot。", "marks": "推荐"}
{"content": "入门还是不错的，内容多而不深入。超厚的一本书，大部分是代码，没高亮没兴趣细读。", "marks": "还行"}
{"content": "很多内容讲的不清楚，边看边搜索。适合快速上手。", "marks": "较差"}
{"content": "国内关于Spring Boot这方面的书很少，这好像是第一本？比较适合初学者，浅显易懂，涉及的面还是挺广的。", "marks": "还行"}
{"content": "不算很好的springBoot入门教材吧，各种Demo，适合翻着看", "marks": "还行"}
{"content": "主要介绍spring boot，后面有稍微介绍了下spring cloud", "marks": "推荐"}
{"content": "没什么实质内容", "marks": "较差"}
{"content": "内容略过时，只怪发展太快，东西不少，可以只挑用的看。有Web基础的SpringBoot初学者读物。建议速览。自定义部分后面翻过来再看。", "marks": "还行"}
{"content": "一本烂书", "marks": "很差"}
{"content": "类似作者学习笔记的东西,堆代码,相关说明不甚清楚.也不能说完全没用,但是全书连html,cs,js都贴到书里面,而且代码块的底色让人阅读起来很不舒服..翻翻还尚可,没有特别深入的东西.", "marks": "较差"}
{"content": "基础入门", "marks": "还行"}
{"content": "入门挺合适的。", "marks": "推荐"}
{"content": "这本书写的对不起“实战”这俩字！纯粹是使用指南，并且大部分还是翻译的官网上的。很多东西涉及的非常浅！只适合刚入门的人看！", "marks": "还行"}
{"content": "从spring讲到springboot，讲的还是很全很细的，应该算是最佳实践，对刚刚入门的我帮助还是很大的。", "marks": "推荐"}
{"content": "浪费了70大洋", "marks": "还行"}
{"content": "大段spring内容，教你如何做，完全没有为什么这么用，也没有个人的理解，建议看官方API，不建议购买，太贵了....", "marks": "较差"}
{"content": "看的实在受不了，不如去看官网示例。", "marks": "很差"}
{"content": "技术点阐述很全面，是了解上手Spring的很好的书籍", "marks": "力荐"}
{"content": "看了半天都是代码", "marks": "很差"}
{"content": "名字为了山寨In Action系列，内容简直就是各种黏贴，凑数", "marks": "很差"}
{"content": "线代没学好，现在来补课", "marks": "推荐"}
{"content": "这套里讲线代这本蛮形象生动的，值得一看", "marks": "推荐"}
{"content": "相当好的线代、数值计算读本，角度不错，就是整体叙述和排版方式让人思路有点绕", "marks": "推荐"}
{"content": "真的是浅显易懂，相比于教会你怎么计算，作者觉得让你理解它的含义要重要的多。这种精神确实是我们大学缺少的", "marks": "力荐"}
{"content": "线性代数＋数值计算，讲得很细", "marks": "推荐"}
{"content": "适合大龄毕业程序员复习线代 翻译也不错", "marks": "推荐"}
{"content": "标题党，面向的并非是程序员。并且讲的并不深入浅出", "marks": "较差"}
{"content": "看了一半，感觉还是说得挺清晰的，后半部分实用性比较低就直接忽略了", "marks": "还行"}
{"content": "特征向量、特征值——用图解释得非常清楚，易懂。看了才明白为什么要求特征向量啊！", "marks": "力荐"}
{"content": "相比概率统计那本，这本有点晦涩难懂，内容和考研大纲相比也深了不少。不过配套的demo挺好的，有助于理解矩阵的各种变换。", "marks": "推荐"}
{"content": "大致浏览了一遍，遇到问题再看吧…日本人对ruby真的是情有独钟啊", "marks": "力荐"}
{"content": "适合入门和泛读，里面很多是高等数学的东西。大学的时候看比较合适，形象的比喻有点太冗长，不适合研究生。", "marks": "推荐"}
{"content": "这本书着力于从矩阵的本质来介绍线性代数。尝试着尽量不引入复杂概念和计算，说清楚线性代数。 作者认为矩阵的本质是映射。并通过这个理解慢慢介绍了一些重要的线性代数概念，比如基底，维数等。个人感觉整本书虽然很希望用最简洁明了的方式介绍矩阵概念及应用，但是仍然难免引入复杂的推倒。布局上，补充材料和异常情况也占了很大篇幅，稍显凌乱。", "marks": "推荐"}
{"content": "对矩阵、秩、行列式会有很多形象的描述（图像化、空间化）。但是内容太少了，特别是缺少SVD以及一些稍微复杂一点的矩阵操作。", "marks": "推荐"}
{"content": "1.文章还是比较贴切，通俗易懂，高速背后的原理和运用的场景。\n2. 自己看的时候，还是跳的很多，主要在于跟自己做的东西，有一定的差距，但是，从了解学习线性代数的角度，不失为一篇好的书籍，\n3.后续可能需要深入线性代数，矩阵分析的时候，要冲看一下。", "marks": "推荐"}
{"content": "通俗易懂，帮助深层理解，好书。", "marks": "力荐"}
{"content": "太简单了，不推荐", "marks": "较差"}
{"content": "匆匆看了一下，感觉做程序员就是对自己的侮辱，应该好好把握现在发展趋势，学习新技术", "marks": "还行"}
{"content": "适合入门的书籍，如果你对HTTP，HTML，Python这些都不了解的话", "marks": "还行"}
{"content": "入门 每个知识点点到为止 全面浅层了解python爬虫的一本书 翻译的还行 只是长句断句让人揪心啊", "marks": "推荐"}
{"content": "Beautifulsoup", "marks": "力荐"}
{"content": "终于有本针对3.X的爬虫书了～", "marks": "力荐"}
{"content": "可以跳过代码去看，能对python的数据抓取相关工具有一个初步的认识", "marks": "推荐"}
{"content": "适合入门，感觉是各种爬虫库文档的精简版", "marks": "推荐"}
{"content": "很幽默", "marks": "推荐"}
{"content": "ORELLY的书我觉得到最后作为收藏正好，无论是浅显入门的还是那些略专业的工具书", "marks": "推荐"}
{"content": "Web Scraping with Python: Collecting Data from the Modern Web | Ryan Mitchell | download http://b-ok.org/book/2575517/98b82a", "marks": "推荐"}
{"content": "挺好的 有实例有供爬的网站 系统的介绍", "marks": "推荐"}
{"content": "还算入门，不过读完了该不会还是不会，实际操练才行……", "marks": "力荐"}
{"content": "语气不压迫，讲解清楚，翻译得好", "marks": "力荐"}
{"content": "打开了新世界的大门", "marks": "力荐"}
{"content": "其实不应当标注出这类书籍的，但看在这本书确实写的比较实在有价值，还是推荐。", "marks": "力荐"}
{"content": "爬虫入门推荐，内容不难，面面俱到，唯一遗憾的是没讲如何多线程和分布式爬取，篇幅有限可以理解。作者还分享了一些踩坑的细节，甚至跟爬虫看似没有直接关系的知识点也介绍了一下。代码不是很Pythonic，看起来作者应该主要是写Java的，不过代码质量可以，Python 3也好评。", "marks": "推荐"}
{"content": "科普书233，有点失望。", "marks": "还行"}
{"content": "初学爬虫挺有用的", "marks": "推荐"}
{"content": "入门用。感觉把爬虫可能涉及到的各方面问题都罗列开来，算是作者丰富经验的总结。不过也都是点到为止，要进一步了解的话还是需要更多参考其它资料或者实践。", "marks": "推荐"}
{"content": "由于写了一段时间的爬虫，很多东西我已经知道，所以只花了一天时间就翻完了，书中讲了一些反爬虫机制以及如何应对，也有和爬虫关系不太大的话题比如数据库存储等", "marks": "还行"}
{"content": "基础入门", "marks": "推荐"}
{"content": "想在网上爬个小东西时发现的教材。这本书太适合入门了，给了初学者想要的全部~", "marks": "力荐"}
{"content": "太水了，没有干货，某章还有一句JS是一门过时的技术😂", "marks": "很差"}
{"content": "过于入门…主要用bs4。且略微旧，scrapy已经支持python3了。", "marks": "还行"}
{"content": "这本书主要讲了两方面的内容，一是网络爬虫，爬取网站数据的基本原理，包括使用python的beautiful软件库，爬取网站数据的基本原理，复杂web页面的解析方法，爬取网络数据的数据存储管理方法，不同编码类型，不同，文档格式的数据读取方法，使用api采集web页面获取标准xml，json格式数据等。\n二是高级数据采集方法，主要包括非规范格式数据的数据清洗，穿越登录表，认证页面，cookie，JavaScript脚本等网站数据的采集方法，以及网站图片文字识别等技术。", "marks": "还行"}
{"content": "买个电子版方便很多，可以查找代码。", "marks": "还行"}
{"content": "自己抓数据有段时间了，这本书讲了爬虫的用途、思路和常用的工具（很多我都用过），如果我早一点发现这本书就好了（自己躺坑还是太累了", "marks": "力荐"}
{"content": "对爬虫的一些关键细节讲解的不错。整体上讲，本书内容全，有条理，但还不够细。", "marks": "还行"}
{"content": "缺点是选择的一些库并不是现在最合适的 然后非常适合入门 提供了一个完整的思路框架", "marks": "还行"}
{"content": "算是个入门，各种库提到了一些", "marks": "还行"}
{"content": "pycon奖品，翻了翻对tor那部分感兴趣，仔细读起来发现只是简单一提。内容有些过时，翻译痕迹严重，读完一遍没有收获。", "marks": "较差"}
{"content": "简单翻了一下，写爬虫必备。", "marks": "推荐"}
{"content": "简单入门", "marks": "推荐"}
{"content": "没上手之前认为爬虫很可怕，于是从去年暑期拖到现在，真正入门却只用了两天。一周后爬虫项目将暂告段落，回过头再看这本书，发现其是对爬虫全貌的概略，对了解整个过程，还是颇有意义的。", "marks": "还行"}
{"content": "上周简单翻了一遍，接下来看 Requests。20161118", "marks": "还行"}
{"content": "水", "marks": "较差"}
{"content": "介绍了BeautifulSoup(HTML解析)，scrapy(爬虫)，nltk（几个简单的nlp例子）和request（login，cookie）相关用法和示例", "marks": "还行"}
{"content": "读完就觉得流畅，干货也多，看得出是一个一线高手的实力总结。也确实是作者说的那种适合有一定基础的人看的书，后面的很多章节其实都可以独立成一本书。", "marks": "推荐"}
{"content": "GO GO GO!练习 练习，爬起来", "marks": "力荐"}
{"content": "可以的", "marks": "推荐"}
{"content": "带入门的书籍", "marks": "推荐"}
{"content": "不好。太简单了", "marks": "较差"}
{"content": "2017.3.18\n对于python刚入门的来说还是挺友好的\n介绍了很多新奇的东西", "marks": "还行"}
{"content": "全面性、入门性的书籍，提纲挈领。", "marks": "推荐"}
{"content": "无力吐槽，错误太多了，虽然说优美的代码就跟散文似的，但是作者你写个代码能不能直接就上散文？\n随便调用一个不存在的函数看起来很有道理诶？\n参数不指定缺省值也不赋值是几个意思？\n都说全书python3，这么新的版本，bs4不指定解析器是闹哪样？\n译者该尊重原文的代码不要翻译成中文行不行？代码缩进错误，中文词组顺序错误。\n全书这里推荐oreilly media，那里推荐sql cookbook，跪了\n第一版就是来骗钱的，我是小白鼠，呵呵。", "marks": "较差"}
{"content": "总体来说，讲了一个普通爬虫遇到的很多事情。最喜欢的还是图像文字处理那部分。", "marks": "力荐"}
{"content": "毕竟看的第一本爬虫书。", "marks": "推荐"}
{"content": "还是太浅显", "marks": "还行"}
{"content": "高级数据采集这一部分有空的时候可以读一读，没空就算了。", "marks": "还行"}
{"content": "每一点都写的不详细", "marks": "还行"}
{"content": "很有意思", "marks": "力荐"}
{"content": "python爬虫入门。", "marks": "推荐"}
{"content": "整体不错，但是不太深入", "marks": "推荐"}
{"content": "讲的比较浅显   适合新手", "marks": "推荐"}
{"content": "适合入门，涉及到了很多基础知识和工具。", "marks": "力荐"}
{"content": "一周看完，全而不深，入门好了。", "marks": "推荐"}
{"content": "还算不错，因为接触爬虫有段时间了，所以前半部分就当梳理和复习了。\n\n从第二部分里还是可以学到点不错的第三方库的，不过想要更深入的学习得将这些第三方库吃透才行。", "marks": "推荐"}
{"content": "广而不精", "marks": "还行"}
{"content": "针对python3，利用内置request库写最简单的爬虫，基本是拿来就可以用了，非常适合入门爬虫。", "marks": "力荐"}
{"content": "作者似乎写JS出身？有些例子似乎用面向对象的方法更好，另外很多例子在国内实现不了，GFW～～～", "marks": "还行"}
{"content": "python3爬虫入门", "marks": "推荐"}
{"content": "爬虫入门经典 知识点很全面", "marks": "推荐"}
{"content": "点到为止，有点浅。", "marks": "还行"}
{"content": "挑了几章读了，很棒的爬虫书", "marks": "推荐"}
{"content": "各种可以用到的框架知识的概括和介绍，具体还是要查各种文档以及亲身试验", "marks": "推荐"}
{"content": "数据采集的启迪书，不得不说这本书写得很浅显易懂，也出来得很及时，比较全但是深度还是略显不够", "marks": "推荐"}
{"content": "篇幅不大，三四天看完。对涉及的内容点到即止，属于带你入门，深究靠自己再去了解。\n对网络数据采集没有研究的人来说还是不错的，至少让你知道了有什么工具解决什么问题。", "marks": "推荐"}
{"content": "适合python3学习入门很快。", "marks": "推荐"}
{"content": "一般，讲的很浅，给个大概认识吧", "marks": "还行"}
{"content": "挺好的，系统的学习了一下爬虫。", "marks": "推荐"}
{"content": "本书对于爬虫技术介绍的很全面，而且大多数内容是点到为止。颇有一种“师父领进门修行在个人”的意味。从代码和写作风格可以看出确实是作者多年来的经验之谈。全书的文字风格随意但是又不缺严谨，有幽默的风格。很适合，初学者或是想我这样没有系统地学习过爬虫技术的人。", "marks": "推荐"}
{"content": "拿来入门可以，主要用bs4和正则表达式之类的来抓数据，生产环境里我一般用requests和lxml，如果网站反爬策略厉害，就用大杀器selenium，webdriver", "marks": "推荐"}
{"content": "文字和代码都很简洁，很适合想入门爬虫的人。\n翻译很多错误非常无脑简直让人无法忍受。", "marks": "推荐"}
{"content": "方方面面都讲到了。很有参考价值。虽然代码里有些许小错误，不影响整体阅读。", "marks": "力荐"}
{"content": "看了三遍。为什么作者很喜欢用内置函数名来命名变量", "marks": "推荐"}
{"content": "第一本爬虫书，扫清恐惧~", "marks": "力荐"}
{"content": "两百页的书，简单的介绍了 Python 爬虫的各方面的第一步，对于自己对爬虫的认识和法律的约束也有不错的见解。遗憾的是只是第一步，进阶内容很少提及。", "marks": "力荐"}
{"content": "全面但浅简，适合了解与入门。", "marks": "力荐"}
{"content": "高级的有点太难了，书上的代码有的跑不起来。\n前半部分写的好，后半部分开始飘", "marks": "很差"}
{"content": "很不错的爬虫入门书籍", "marks": "推荐"}
{"content": "很简单", "marks": "推荐"}
{"content": "编程还是很多年前的事了，嵌入式，汇编，C是当年我的长项，没有复杂晦涩的语法和长名词需要学习，之前从来没有学过Python，但这本书我看了两遍，一方面为Python的极简魅力所折服，另一方面为本书之内容深深地吸引了，他不但带领你从头到尾的学习了一遍如何使用Python访问网络，又如何使用Python和数据库、语义处理所连接，内容全面简单易懂，更重要的是他像其他工具书那样只讲一堆第三方库怎么用，而是把很多重要的功能点带你用极简的方式重新实现了一遍，哪怕你是从头开始研究如何实现中文分词，这样的领路人都是足够了呢。\n强力推荐极客入门阅读。", "marks": "力荐"}
{"content": "难得用python3讲解如何爬虫，对使用python3的人来说是一大福音。网上大部分的教程使用python2进行爬虫，和python3用的库有较大不同。\n但是python就是这样，年轻又有活力，意味着不仅仅是python本身，包括第三方库更新的也特别快。尽管这是一本2016年出版的书，但是书中的代码并不能完全复用，因为有些用到的库已经更新了：或者是接口，或者是输出，和书中的不尽相同。", "marks": "力荐"}
{"content": "爬虫入门作，BeautifulSoup护佑着你，不包含进阶知识", "marks": "推荐"}
{"content": "搞爬虫必备吧，不过挺基础的，不过也够用了", "marks": "推荐"}
{"content": "更像是一本索引，不能详细指导你完成项目，但能给你明确的技术方向。", "marks": "推荐"}
{"content": "bs介绍的很详细", "marks": "推荐"}
{"content": "挺不错的，市面上爬虫的书籍不多，这门当入门很合适。", "marks": "推荐"}
{"content": "这可能是最近看的几本书翻译得最好的了...强赞翻译\n作者代码风格有些坑爹,包括变量名覆盖内置函数等等....\n但这本书居然带来了一些乐趣...并不枯燥,很值得新手学习", "marks": "力荐"}
{"content": "学py，首推笨办法。这本书适合刷完笨办法之后，搭配着看，里面补充了很多有用的细节。文风俏皮，思路清晰，阅读它可正经危坐，也可喝着茶看他抖机灵。‘编著’的书多烂货，这本不是。", "marks": "推荐"}
{"content": "非常适合新手", "marks": "力荐"}
{"content": "刷完第一遍，好多东西还没看懂哇哇哇。还有，要多实践写代码呀呀呀，写它一个月的😂", "marks": "推荐"}
{"content": "很适合入门，讲了很多细节和经验", "marks": "推荐"}
{"content": "前半部分讲解python基础语法，语言比较诙谐幽默，结构也比较完整。但高级部分涉及较少。最后增加的项目部分，有狗尾续貂的感觉。入门书籍上tonado感觉不是很合理，讲的也不清楚（可能我太菜了）。\n入门不错，笨方法看完看老齐，项目部分舍弃，然后接下来廖雪峰教程。", "marks": "推荐"}
{"content": "没有连贯性，东扯一下，西扯一下，给人的感觉就是全书都要背，而且很墨迹，不建议新手小白购买。", "marks": "很差"}
{"content": "精通就别想了，不错的入门书。", "marks": "还行"}
{"content": "Gitbook 有完整版本。", "marks": "还行"}
{"content": "在网上看过觉得不错，然后决定买本书。全书就是完完全全的把网上的文章印在纸上，没做任何修改。很多地方读起来真是可笑，比如”不要copy代码，一定要手打输入”，怎么从书里copy代码到电脑上？网上内容不错不代表可以不负责任的出版图书。", "marks": "很差"}
{"content": "本书贯彻了一种授人以渔的思想，作者建议读者google,查文档等思想都很不错，对于小白来说是指了一条明路。书本身定位为小白入门，也不能强求太深入。但是，读完这本书会有一种马上找一本更高级的书，了解他没讲清的东西的冲动。喜忧参半吧", "marks": "推荐"}
{"content": "第一季和第二季的内容写得不错，很基础，很扫盲，读完以后很快就掌握了python的初级知识。但是，第三季的内容太过浅显，太过泛泛而谈。综上本书适合完全没有基础的初学者。", "marks": "推荐"}
{"content": "入门还是不错的，看起来不累。", "marks": "力荐"}
{"content": "跟说明书一样，看得很累", "marks": "较差"}
{"content": "朋友推荐才买的，说实话这本书挺令人失望的，没有连贯性，感觉就是贴点代码，再加几句故作聊天语气的废话。看着很枯燥，还不如直接啃官方的doc", "marks": "很差"}
{"content": "入门书。  书中小错误很多。  书中代码及其不易获得。 不推荐。", "marks": "较差"}
{"content": "太好了这书", "marks": "力荐"}
{"content": "书确实不错，练习很多。随着练习的增加，很多不明白的概念自然就会了。但是关键是，书中练习配套资料竟然不提供网络下载，配套练习文件不提供，从5章开始练习基本没法做，除非自己花精力输入文件再做练习。", "marks": "还行"}
{"content": "对python基础知识有个比较好的梳理，很适合初学者，还是很值得一看的！", "marks": "还行"}
{"content": "新手入门不错，高手略过", "marks": "力荐"}
{"content": "包含了我想了解的一些java/java8的基础知识，感觉翻译和代码都有些问题，不过还好我是粗略的看，没有花太长时间。", "marks": "还行"}
{"content": "一个c++ python Obj-C程序员的JAVA入门读物...", "marks": "推荐"}
{"content": "常用的都讲到了,读一遍不亏", "marks": "推荐"}
{"content": "基本特性过一遍", "marks": "推荐"}
{"content": "又是被翻译毁掉的好书...", "marks": "还行"}
{"content": "相对于核心技术来讲，这本书真的薄！关注点都在那些开发最为常用的技术点上，果然是给大忙人看的（ ・∀・）值得推荐，入门比编程思想好的多！", "marks": "力荐"}
{"content": "真的一般……这倒是在较集中的篇幅里浮光掠影介绍了很多库，但是基础语言知识没有介绍扎实啊", "marks": "还行"}
{"content": "Python3的入门书。个人觉得，如果完全没有编程基础的人来看这本书，由于对概念的解释的缺失，可能理解比较困难；反而是那些已有其他编程语言经验的人来说是一个很不错的入门书，而且后面也会介绍多方面的应用来扩展阅读。", "marks": "推荐"}
{"content": "相见恨晚的一本书，14年读了Python for Informatics，以为再也不用读Python入门书籍，结果发现，这本书实在是太赞，更加适合入门。", "marks": "力荐"}
{"content": "对于初级入门，我还没找到比它更好的，找到了我再更新。从第六章以后，就开始蒙圈了，但还是坚持读完了。作为一个新手，更需要一些以目标为导向的线上课程。努力。", "marks": "推荐"}
{"content": "“这本书只是入门教程，大部分内容是基础知识，实践方面内容不多。”", "marks": "推荐"}
{"content": "还算不错的py3入门书，有一定开发经验，可以很快读完，就是附录太多了", "marks": "还行"}
{"content": "很不错", "marks": "力荐"}
{"content": "Python 3不错的一本入门书籍，质量很高。", "marks": "力荐"}
{"content": "之前很多知识盲点读不下去，补充了一些知识之后再看，发现讲的真的是举重若轻。翻译也很流畅，国内要有如此的好书就好了。\n9月再次重读，发现依旧很不错，常读常新。", "marks": "力荐"}
{"content": "对于已经入门的读者来说很精练，内容宽泛节奏也很快，但不会觉得浅尝辄止，对很多概念的讲解非常生动形象，加上有不错的练习题，对进一步夯实语言基础非常有帮助，算是一本开眼界、长见识的书。唯一稍显遗憾的地方是讲网络和并发的那一章不怎么成系统，这一章作为基础教程细节略多、主体分散，读了几遍还是不怎么通透。不过这些领域的确需要更加专业和深入的学习了。", "marks": "力荐"}
{"content": "在苏州手机没电等人的时候看完了。比较简单", "marks": "推荐"}
{"content": "还不错的Python入门书，学习python是2017年最有趣的事情之一。", "marks": "推荐"}
{"content": "挑著過了一遍，挺不錯的Python基礎書 20170217", "marks": "推荐"}
{"content": "教材", "marks": "推荐"}
{"content": "python3的快速参考 有其他语言编程经验的快速学习python的绝佳书 后面的几章有点鸡肋", "marks": "推荐"}
{"content": "内容比较全面，习题也不是很偏", "marks": "还行"}
{"content": "适合初学，当工具书", "marks": "推荐"}
{"content": "写的很好，我是配合廖雪峰的网站一起看的。刚好相互补充。", "marks": "推荐"}
{"content": "我觉得写得好！", "marks": "力荐"}
{"content": "现在的Python入门书籍质量真的很高，比几年前的挑选余地要大多了。", "marks": "推荐"}
{"content": "有其他语言基础了看起来不费劲，翻译的也很友好\n习题有些简单", "marks": "推荐"}
{"content": "只能作为Python的一个简单入门，介绍语法等一些基础知识，它的重点还是放在前端和开发上的", "marks": "推荐"}
{"content": "不错的Python 入门书。", "marks": "力荐"}
{"content": "入门书", "marks": "力荐"}
{"content": "这本书迷一样的高分...但是读来感觉还是走马观花地介绍各种library", "marks": "还行"}
{"content": "浮光掠影般介绍了各种语法和各种库的hello world…太散了，也不够深入…", "marks": "还行"}
{"content": "不是特别深入，比一般的入门书要细很多。里面的应用虽然讲的不多，面还挺广的。值得一看。", "marks": "力荐"}
{"content": "如果一定要推荐一本语言入门的书籍，我强烈推荐这一本。作者说到，每个程序员他每天能写的代码量是固定的，如果使用高级的语言就意味着有更高的生产力以及创造力。同时作者又说到，如果你能快速的完成商业任务，你老板会喜欢你。全书覆盖了从入门的知识，到后边广泛的应用场景，让你感觉到Python似乎有无所不能的。通俗易懂，又层层递进，非常值得一看。🙂", "marks": "力荐"}
{"content": "还不错", "marks": "推荐"}
{"content": "特别基础的书，很快有个框架的意识，还需要读其他高阶的书去深入", "marks": "还行"}
{"content": "俺读过的Python书中，俺以为这本最好，没有之一。", "marks": "力荐"}
{"content": "pyhton 挺好玩的", "marks": "推荐"}
{"content": "作为斯莱特林的子弟，焉能不会大蛇语", "marks": "力荐"}
{"content": "浅尝辄止", "marks": "推荐"}
{"content": "很全面的入门书，基本都介绍到了，广而不深（毕竟页数在那里）", "marks": "推荐"}
{"content": "前半本真心好，后半本有点走马观花了。后半部分看完没什么印象了⋯⋯\n", "marks": "推荐"}
{"content": "读后感在这：http://www.ituring.com.cn/article/465318", "marks": "力荐"}
{"content": "看到第七章，后面草草看了。还需要多看前面的基础知识，很多都不理解。", "marks": "推荐"}
{"content": "比较适合初学者，不过感觉还是直接上项目快些", "marks": "推荐"}
{"content": "最好有一点点编程基础。把Python从宏观上讲了一下，想要往深处走，还得学习相应方向的书。", "marks": "推荐"}
{"content": "初学者适用，详细。", "marks": "力荐"}
{"content": "算是相当好的入门书了", "marks": "力荐"}
{"content": "全面系统但不深入，一个框架，21天怎么可能", "marks": "推荐"}
{"content": "理论知识满足的。很适合初学者。目前还在阅读中。", "marks": "推荐"}
{"content": "这本书的厚度用来垫显示器刚刚好", "marks": "力荐"}
{"content": "很老，提到的一些算法还比较有意思。其他的没什么看的。主要是 Apache Lucene。", "marks": "还行"}
{"content": "不错！", "marks": "力荐"}
{"content": "手册类", "marks": "较差"}
{"content": "Elasticsearch的分布式架构，索引结构，评分因子，索引控制，存储类型，性能优化。这本书是比较深入的说明，需要有一些应用基础。优化主要说到了内存、IO、热线程三个方面，我们发现线程数也是个主要的优化点，这一点书里没有提到。对cache的使用书里说的很详细，揭开了不少谜团。", "marks": "力荐"}
{"content": "感觉翻译的人不用心，不少比较明显的错别字，单词拼写错误等。\n搭建ES时，里面的一些配置说明有参考意义。\n但是对于原理性的东西，讲的比较浅。", "marks": "还行"}
{"content": "这本书应该是比较早的中文Elasticsearch书籍，现在的ES已经到了5.1版本，而书中讲解的版本则是0.9，所以阅读时经常会检查下这个特性是否废弃过改进过。除此之外，本书应该来说是一本比较优秀的书籍，书中介绍的内容适合我这种对ES有一定了解又想深入理解其中机制的读者。", "marks": "还行"}
{"content": "= = 这得多大孩子才看得懂？", "marks": "还行"}
{"content": "虽然无用，但对我很有帮助。", "marks": "力荐"}
{"content": "简明易懂，很适合初学者", "marks": "推荐"}
{"content": "看了几十页看不下去了，太简短以至于什么都讲不清。我以后还是多看严肃的教科书之类的吧", "marks": "较差"}
{"content": "(2016.9)哇终于找到它", "marks": "力荐"}
{"content": "真挺有意思的。跟着敲了几个小游戏和后面的贪吃蛇。感觉他分解游戏制作的思路挺值得学习的。", "marks": "推荐"}
{"content": "适合入门，整本书铺垫了一个叫贪吃蛇的游戏。", "marks": "推荐"}
{"content": "疯狂补充技能", "marks": "推荐"}
{"content": "20160209", "marks": "还行"}
{"content": "20160209", "marks": "还行"}
{"content": "以前别人说机械出版社垃圾我还不信，现在终于知道了，原版有长达好几十页的索引全没了，还卖的死贵，差点被坑，这么好的书完全被这个垃圾出版社糟蹋了。", "marks": "很差"}
{"content": "工欲善其事，必先利其器。学习python已有二年余载，然而这本书还是相当有营养。还要整理一下笔记~", "marks": "推荐"}
{"content": "例子的设计和排版再加强一点就更好了～", "marks": "推荐"}
{"content": "差不多用三天过了一遍，几乎每条都遇到过，需要时间的积累才能都遇全，有收获", "marks": "力荐"}
{"content": "很赞，很多Python的高级用法我也是读了这本书才知道的", "marks": "力荐"}
{"content": "比用啥查啥更进一步，适合实战。还没看完先标一个", "marks": "力荐"}
{"content": "比较赞，有时候看别人的代码只是知其然，一些地方可以让你做到知其所以然。\n自己水平还不是很够，有些东西没有用到过所以看见也没什么感受。所以这是一本推荐常来读一下的书~", "marks": "力荐"}
{"content": "好书，不过3，4，5章没能完全消化，需要以后再看", "marks": "推荐"}
{"content": "翻译得也不错", "marks": "力荐"}
{"content": "相比Effective Java，质量差了不少", "marks": "还行"}
{"content": "收获很多啊", "marks": "力荐"}
{"content": "OOP 的部分和元类的钩子比较好", "marks": "还行"}
{"content": "非常好的进阶书，以场景为背景讲述知识点，更加容易接受", "marks": "力荐"}
{"content": "目前能力只能看懂前两章，还是很有收获的！尤其是unicode与utf8编码的转换那块，简直是解决了前些日子遇到的一个大坑！后面的几章：类的部分目前没有明确的工程需求，并发那块计算机基础知识太渣。前路漫漫呀~\n另外我也真是得开看看python3了", "marks": "推荐"}
{"content": "还好，每次读这种书都有原来可以这么玩，到这种感受也只有在踩过坑的时候才能理解。看到的一些技巧在没踩过坑的时候根本想不起来。", "marks": "推荐"}
{"content": "分8章 59个主题讲述了python的使用技巧，作为一个重度使用Python两年的用户，从其中也能学到不少东西，而且书中内容都是实际工作中能经常使用到的内容，很值得一读", "marks": "力荐"}
{"content": "国内安心写书的人好少，写的书也觉得作者缺少写作水平~", "marks": "推荐"}
{"content": "适合有一定python基础的人读，200多页的书，涉及python的方方面面，读完之后收获很多~", "marks": "推荐"}
{"content": "1/4建议并不认同，1/4建议有更好的解决方案，1/4并没啥软用（凑篇幅的嫌疑），1/4建议很赞", "marks": "力荐"}
{"content": "还行，对于有基础的人来说相当于不错的进阶书籍。里面的一些奇技淫巧还是比较赞。", "marks": "力荐"}
{"content": "为什么不把代码写全？ 出版社太没有诚意，太垃圾的出版社。。。", "marks": "很差"}
{"content": "不错的一本小书，最近python写得多花了两天看了一下，对提升代码质量和工作质量还挺有帮助的。", "marks": "推荐"}
{"content": "我看过了我看过了我看过了！", "marks": "力荐"}
{"content": "很好的一本进阶书籍，对于python工作者来说可以提高平时的开发效率。", "marks": "力荐"}
{"content": "非常有意思的书，oop和元编程值得好好看看", "marks": "力荐"}
{"content": "Python进阶启蒙书", "marks": "推荐"}
{"content": "python的进阶书，讲的东西有深度但挺好懂的，虽然看完了一遍了，不过偶尔我还是会翻相关知识点", "marks": "力荐"}
{"content": "开头讲述倒排索引的部分比较清晰，后面的编程部分草草略过～", "marks": "还行"}
{"content": "第一章讲概念和原理，后面是代码注释，没细读。译者把书中的例子都替换为中文的对应例子，便于理解。", "marks": "推荐"}
{"content": "概念讲得清晰，但讲的东西并不多。", "marks": "还行"}
{"content": "了解搜索引擎中倒排索引的构建和查询的实现的核心", "marks": "推荐"}
{"content": "前言里说有，结果到了出版社的网站上看，根本找不到，书里面的wiser介绍也非常简略，根本没有安装的相关信息，只是提到它会用到什么库。", "marks": "较差"}
{"content": "有些例子举得一般 值得一看 但相比之下元编程比这本书更有用", "marks": "推荐"}
{"content": "有很多实用的建议，有收获。", "marks": "推荐"}
{"content": "翻了一下。。这是一种类似与博客写法的书。。。内容大部分都知道", "marks": "还行"}
{"content": "16016（0305-0313）。", "marks": "还行"}
{"content": "通过数学和物理问题引出操作方法，挺好的，适合大学生刚接触时看，不过没涉及太多统计的东西", "marks": "推荐"}
{"content": "简单扫了一遍 很入门 一看到物理就懵逼", "marks": "还行"}
{"content": "在把简单道理复杂化，让正常人类无法理解方面，本书相当成功", "marks": "较差"}
{"content": "虽然刚入手时乍一看觉得繁琐不知所云，但慢慢耐着性子读完之后，对常用数据结构有了更深一层的理解，常见的算法也能入门。对于我这种刚刚学会用python的外行来说，比起市面上满是别的语言实现的算法书，这本非常好用", "marks": "力荐"}
{"content": "完美还原了中国老式教材的混乱，晦涩，讲解生硬，详略不清，抓不住重点，简单问题复杂化·······\n", "marks": "很差"}
{"content": "还行吧，把重要的基础算法和数据结构都过了一遍。但是略过的内容也不少，文字描述晦涩难懂，还好有示例代码，但是代码又存在部分谬误（至少有三处错误，两处明显可更优化的写法）。", "marks": "还行"}
{"content": "不错。只是绪论部分会把很多人都吓跑吧", "marks": "推荐"}
{"content": "  在把简单道理复杂化，让正常人类无法理解方面，本书相当成功；\n   完美还原了中国老式教材的混乱，晦涩，讲解生硬，详略不清，抓不住重点，简单问题复杂化·······\n", "marks": "很差"}
{"content": "代码不写全是什么鬼啊\n", "marks": "力荐"}
{"content": "和数据结构与算法分析一起看的，算是数构的启蒙书，但是当初被python面对对象的高级用法整的酸爽", "marks": "还行"}
{"content": "裘宗燕教授继编译原理后的又一良心力作", "marks": "力荐"}
{"content": "虽然讲的挺好...但是就不能把代码给贴全了吗..", "marks": "较差"}
{"content": "这么垃圾的书还有8.1分？？", "marks": "很差"}
{"content": "非常实用，符合国人的思维和学习习惯。正在读～", "marks": "力荐"}
{"content": "python代码不能写全吗？垃圾的机械工业出版社，垃圾的编辑，垃圾的出版社", "marks": "很差"}
{"content": "写的不算特别简单明了，文字太多 。感觉一般。", "marks": "还行"}
{"content": "个人觉得写的不错，虽然一开始 字号行距厚度令人望而生畏，但是细看下来，作者写的很用心，很规范。而且对于python来说讲数据结构的汉语书仅此一本", "marks": "推荐"}
{"content": "从线性表，到字符串，栈和列队，二叉树，图，每一章的逻辑性都比较好，基本都是抛出问题-分析问题-解决问题的模式，对于读者理解每一种数据结构有相当大的帮助，或许绪论部分有些无聊，但是绪论这种东西，把后面的内容看完之后再来回顾，绝对会发现更多的东西。总的来说非常适合将Python作为第一门编程语言的人来学习数据结构和算法的。", "marks": "力荐"}
{"content": "内容还是相当不错的 认真看书做题编码能学到很多  \n相对来说还是有难度的 python基础一定要好 需要耐心去做练习", "marks": "力荐"}
{"content": "还行吧，看起来太费劲，程序一段一段的，讲的又太专业，完全可以写的稍微随意一点，这样理解起来也容易。\n\n还有一个问题就是，虽然是py写出来的，但是能明显感觉这些算法都是有很强的c的特色，也就是说很多python独有的特点并没有很好的利用，也没说明原因。当然了，这只是个人浅见，不知对错。\n\n总之，书是好书，好好读一定有收获。\n但是这种距离感，也确实考验人的耐力和毅力。", "marks": "还行"}
{"content": "知识点讲解时语言不够透彻，感觉作者技术还行但语文基础太差。。看得真心累。不推荐。", "marks": "很差"}
{"content": "晦涩难懂，佶屈聱牙，逻辑混乱，尽是废话，不知道作者凭什么当的清华教授", "marks": "很差"}
{"content": "还是叫做python进阶更好，而且这书抢钱啊，这么贵", "marks": "还行"}
{"content": "Violent Python中文版，都是介绍python能做什么什么的，还不如直接去看代码呢", "marks": "还行"}
{"content": "挺有趣的，可以系统的学习一下大致网络安全问题的分类，但是主要是用linux系统的，所以……", "marks": "推荐"}
{"content": "有点儿看不懂啊", "marks": "较差"}
{"content": "之前大概看了看，以后再接着读吧。", "marks": "推荐"}
{"content": "中文版排版略差，校对很不细心……\n中文版定价79？谁给你们的信心？！", "marks": "较差"}
{"content": "介绍一些python黑客工具，还要一小段历史典故", "marks": "还行"}
{"content": "有点虚...", "marks": "还行"}
{"content": "像一个个blog教程的拼凑…", "marks": "较差"}
{"content": "很好的入门读物", "marks": "推荐"}
{"content": "科普了几个常用库", "marks": "推荐"}
{"content": "全靠库系列，一般般", "marks": "还行"}
{"content": "和python黑帽子有点相似，看了下电子版便放弃了纸质版的念头，介绍了几个库的用法和一些攻击思路，有些还不太实用。", "marks": "还行"}
{"content": "豆瓣评分很低，这本书对于中国的python有革命性的引导作用，爬虫对于python的功能来说是九牛一毛，", "marks": "力荐"}
{"content": "全书最精彩的地方就是序言！", "marks": "还行"}
{"content": "略坑。", "marks": "还行"}
{"content": "着实不推荐，工具书一类", "marks": "还行"}
{"content": "目录里面看起来很高端， 实际上内容很垃圾。    这本书总结一下就是用python实现自动化漏洞利用，  但是这本书的问题是：1.  它里面的漏洞都极其老旧，很多三四十年前的漏洞 想学习漏洞挖掘的话这本书没什么帮助，内容只会涉及已有漏洞的利用。   2. 里面的python代码水平一般般， 如果你为了学习python，那么找本其他python入门书会更合适一点。", "marks": "很差"}
{"content": "对于原理方面的东西基本没有讲，对于很多做法完全理解不了，于是又转去看攻击原理", "marks": "还行"}
{"content": "感觉买坑了...以为是砖头书。。。", "marks": "还行"}
{"content": "整个用机器学习做一个实际问题的流程基本都有了，只是对代码和模型深入得很不够", "marks": "还行"}
{"content": "基础入门，覆盖很全", "marks": "推荐"}
{"content": "Every entry-level Data Scientist should read this book before he/she officially start working in the industry.", "marks": "力荐"}
{"content": "挺不错的一本讲swift的书，读起来比官方文档连贯易读！", "marks": "力荐"}
{"content": "以 Swift 2.0 为蓝本写的书，适合入门。至于 Swift 3.0，翻翻相关博客文章即可。", "marks": "力荐"}
{"content": "灵活，强大，值得更多的练习和投入", "marks": "推荐"}
{"content": "Matlab编程可以用Python完成，但是现在来看Mathematica依然无可替代。", "marks": "力荐"}
{"content": "看这本书的本意是希望借助mma进行数学运算，但是等我全看完了才发现这是编程入门书籍，虽然不是我想要学的，不过了解一下编程思想也不算是浪费时间。书里所举的例子都讲得很明白，语言通顺思路清晰，是相当self-contained的一本书。另外作者似乎有点自恋，明明谢了顶，还要数次加入自拍照，还很得意地提到自己的另一本书a new kind of science。可是这书在amazon.com上从一星到五星的评论票数都差不多，暂时就不去拜读了。", "marks": "力荐"}
{"content": "想象无穷的工具", "marks": "力荐"}
{"content": "入门书籍。刚开始感觉还算正常，越往后看越感觉神奇。不过需要查文档才能真正掌握。", "marks": "推荐"}
{"content": "Mathematica入门教程，wolfram官网可以下载nb格式文档", "marks": "力荐"}
{"content": "“TMD，竟然还能干这个？”快速翻阅本书的体会", "marks": "力荐"}
{"content": "内容很广泛也很浅显，非常适合于新手入门。但对于老手们来说，则实在是太过浅显了。", "marks": "力荐"}
{"content": "这是我学的第二个外语，第一个叫英语。", "marks": "力荐"}
{"content": "特点在于介绍新特性以及强大内置函数而已。", "marks": "推荐"}
{"content": "简单有趣", "marks": "力荐"}
{"content": "时间紧跳着看过一遍，没有那本python数据分析好，但是这本更接近实际应用，推荐先看那本，这本才能读透", "marks": "推荐"}
{"content": "有名无实，最好别买。不实用，code很皮毛。不如自己看manual。", "marks": "较差"}
{"content": "挺实用的书，就是python改版快，源码很多要改", "marks": "推荐"}
{"content": "python库手册+简单示例code。", "marks": "还行"}
{"content": "pandas", "marks": "还行"}
{"content": "如同任何一项体育运动，投资也有很多基本功，但经常会被忽略，自己以前也是。这就是其中之一。", "marks": "推荐"}
{"content": "果然只是手册...", "marks": "较差"}
{"content": "内容很不错，包括py日常库，优化方法等，绘图部分比较欠缺。", "marks": "力荐"}
{"content": "其实只是pandas库的示例", "marks": "还行"}
{"content": "书挺不错的，讲了很多实例，感觉有空可以回头再来看看", "marks": "推荐"}
{"content": "这书打印的令人不舒服", "marks": "还行"}
{"content": "方便的工具书，最近做的数据可视化都是查找的它！", "marks": "力荐"}
{"content": "挺不错的", "marks": "力荐"}
{"content": "不失为金融从业科技人员接触数据分析的入门书。", "marks": "推荐"}
{"content": "还是不错的，书中例子介绍很多，不太适合初学者", "marks": "推荐"}
{"content": "相当入门级。。", "marks": "较差"}
{"content": "从这本书上知道了Robert C. Martin的敏捷软件开发这本书。囧。", "marks": "还行"}
{"content": "深入浅出，写的挺好的，入门必读。", "marks": "力荐"}
{"content": "讲 string 的部分不如直接读 Go blog\n例子 (gopl.io) 都是很认真准备的，不过有时候会觉得认真过头了 … 例如一个讲基本类型的章节，示例是一个复杂的计算机图形生成算法 …\n最喜欢的是关于 goroutine 的两章，同样的程序用 Mutex 和 CSP 风格各写了一遍\n因为是 K&R 的 K，所以这本书也跟 TCPL 一样在小节后面会跟一些练习让你改示例里的代码实现某个效果", "marks": "推荐"}
{"content": "花两天粗略看完，入门+部分进阶+idiomatic。", "marks": "力荐"}
{"content": "介绍了golang所有特性, 穿插了很多best practice以及重要的标准库。一些事例代码贯穿整本书，随着语言特性的深入逐步优化，并且解读得非常细致。讲并发的两章很值得细读，有不少技巧，毕竟是golang的招牌。很少有编程语言书能不仅仅讲语言细节，还能关注很多general的topic,就算不用golang也能学到很多编程，并发，测试的技巧。原版文笔简练优美，阅读体验非常好，五星推荐。", "marks": "力荐"}
{"content": "名不虚传", "marks": "力荐"}
{"content": "。。。英文kindle看的云里雾里。。。", "marks": "力荐"}
{"content": "A detailed introduction", "marks": "还行"}
{"content": "互联网编程利器", "marks": "力荐"}
{"content": "http://golang-china.github.io/gopl-zh/ch0/ch0-01.html", "marks": "力荐"}
{"content": "最好的golang入门书籍。", "marks": "力荐"}
{"content": "各种例子举得非常棒~", "marks": "推荐"}
{"content": "Best 广度和深度都照顾到了. 参考中文版  http://download.csdn.net/detail/wfyeshi/9769574    \nhttp://docs.ruanjiadeng.com/gopl-zh/", "marks": "力荐"}
{"content": "推荐hashicorp家的开源产品，工业级的实现会比纯看书要好很多", "marks": "还行"}
{"content": "在图书馆翻完了，入门不错，不过都是基本", "marks": "推荐"}
{"content": "go入门", "marks": "推荐"}
{"content": "不废话", "marks": "力荐"}
{"content": "很系统的讲了golang的基本语法和基本应用，有些习题还是有难度的。还是得在平时工作中多用多写，边写边学。", "marks": "力荐"}
{"content": "Still reading in progress. It is well-written and useful all-around for both learning the language and shedding light on the general programming. It also reminds me the K&R sometimes (:", "marks": "力荐"}
{"content": "没想到……", "marks": "推荐"}
{"content": "可惜 R 已经仙逝，看来留课后习题是 K 的风格。", "marks": "力荐"}
{"content": "简洁，代码不错，不过不适合新手", "marks": "推荐"}
{"content": "读得艰难", "marks": "推荐"}
{"content": "看的繁体中文版，具体来讲，还是可以的。基本了解Go的特性。相对于C来说，Go少了针对复杂的指针调用，使用起来更加优雅。相对于Java而言，Go的函数式编程让Go又多了一份灵活。但是在大型的程序中，函数式编程很难扩展和管理，前期是很灵活，后期就会有很多的坑。 所以选择语言，还是要看自己的业务逻辑，Go还是比较年轻有活力的，期待它的发展。", "marks": "推荐"}
{"content": "读了一半，书很不错，但是似乎不太适合上手。", "marks": "推荐"}
{"content": "golang入门读这本就够了", "marks": "力荐"}
{"content": "我读的是中文版，翻译只能活凑合吧。 不过看完后，对GO应该比较熟悉了，也知道里面有哪些坑。", "marks": "推荐"}
{"content": "我是刷go by example后面再看这本书，发现里面示例代码完全是两个level的。", "marks": "力荐"}
{"content": "真没想到人生第一次读完的原版书竟然是它，业余时间读了接近三个月。\n语言简洁易懂，看完前五章后面基本不用查词典了。\n题目还没做完，如果有答案就好了。", "marks": "力荐"}
{"content": "毕竟Kernighan，这才应该是Go的第一本书。", "marks": "力荐"}
{"content": "学语言果然还是要看设计者自己写的书", "marks": "力荐"}
{"content": "Kernighan的文风极其流畅，完全达到了当年The C Programming Language的意境，将Go的种种娓娓道来，思路清晰，细节周全但不繁琐，知其然更知其所以然。估计只有Unix的老前辈们的造诣能写得出来吧。", "marks": "力荐"}
{"content": "从C到Go，编程语言复杂了不少。但依然很少有书能像Kernighan所写的一般，在对语言特性的逐步深入的同时，cover到很多general的话题，代码示例简洁有力不失优美又令人思考，书中简练文笔所散发出来的美感是每一个程序员应该一以贯之追求的东西。", "marks": "力荐"}
{"content": "在学完 Golang 的在线教程后来啃这本书的，书中由浅入深循序渐进地讲解了 Go 的基础和相对高级的使用技巧，增加对 Go 语言的深入理解。在 concurrency 编程这块，书中用了两章讲解了一些常用的 patterns，非常实用。总而言之，一本值得读 N 遍的好书 :)", "marks": "力荐"}
{"content": "Gopher圣经, 中文版: http://bitbucket.org/golang-china/gopl-zh/ 。\n需要私下交流的请转QQ群(513508541)", "marks": "力荐"}
{"content": "Go语言圣经", "marks": "力荐"}
{"content": "文笔流畅 读起来很舒服", "marks": "力荐"}
{"content": "简直又一本C++ Primer一般的巨作……done！", "marks": "力荐"}
{"content": "可以说是最好的Go语言书籍", "marks": "力荐"}
{"content": "内容丰富", "marks": "力荐"}
{"content": "挺好的, 就是例子作为一门入门书籍来说. 偏复杂", "marks": "力荐"}
{"content": "土气一点就叫做《go语言圣经》", "marks": "力荐"}
{"content": "一本让我纠结的书。书中有很经典的例子，作者在讲解例子的时候会偶尔提点一下读者一些注意事项和可以优化的地方。\r\r但这本书的缺点也同意明显，那就是重点不明显，讲述得有点啰嗦。最有价值的那几句话你根本没法快速判断在哪里，为了不错过这些宝贵的经验，只能一句一句认真的读，这对于我这种阅读速度快，也讲究效率的人来说很折磨。\r\r总结来说，这本书不适合用来入门和快速上手。go语言并不复杂也让这本书没有太大的研究价值。已弃，改看别的资料。", "marks": "还行"}
{"content": "这本书要求有较好的计算机基础，不太适合没有编程经验的人看。", "marks": "力荐"}
{"content": "框架很不错，细节比较差。", "marks": "还行"}
{"content": "这本书是面向的没有编程基础的人！！！对于一个前 Java 开发者来说，这本书能压缩成 100 页不到。很详细，但也很罗嗦，睡觉前的两个晚上 + 一个下午凑空看完了。实际阅读量 8 小时完全足够。\n为毛为毛为毛要叫这个“编程思想”的名字？跟 Java/C++ 编程思想的深度差别巨大好么？Bruce Eckel 大神一定不是主要的实际撰写者。", "marks": "还行"}
{"content": "内容过少偏过门，名不副实，差评。", "marks": "较差"}
{"content": "简单的总是重要的  然而重要的往往是难以做到的 ", "marks": "推荐"}
{"content": "和另一本《Scala学习手册》一起读，就知道这本书很辣鸡了。当然，这本书或许更偏OO些。每个特性都浅尝则止，不好不好。", "marks": "还行"}
{"content": "说实话，名不符实，讲的太少，太浅。完全达不到Java 编程思想的高度。", "marks": "还行"}
{"content": "会的人觉得浅，不会的人会觉得难。", "marks": "推荐"}
{"content": "可以看做是一本scala语法入门教程，覆盖了常用语法，对函数式编程只有微量涉及；由于是讲语法的，让人感觉不成体系，配合书中的习题学习效果还是不错的。翻译一般，有瑕疵，甚至还有段原版英文没翻译直接印上去。总的来说还是不错，看完此书，可以进阶读下一本《Scala函数式编程》效果会很好", "marks": "推荐"}
{"content": "语言层面的讲解偏多一些，并不能保证你看完了就可以用 scala 构造复杂 App。有一些章节翻译略烂，看不懂需要多翻一下 scala 官方文档（官方文档也很烂），当然有老司机带是最好的。想要掌握更多跟 fp 相关的内容，读 《scala 函数式编程》会好一些。", "marks": "还行"}
{"content": "奔着作者去读的", "marks": "推荐"}
{"content": "从英文书名来看，怎么也不会翻译成Scala编程思想把，你如果翻译成scala初级入门我还能给4星，这本书及其简单，适合从来没学过编程的或只有一点编程基础的人", "marks": "很差"}
{"content": "讲得过于浅了，我是读完才发现，MD连怎么输入数据都没讲？！！", "marks": "还行"}
{"content": "窃以为出版社和译者没安好心。    内容看了就知道。 ", "marks": "很差"}
{"content": "首先谢谢华章计算机的赠书，到了一个星期了，下班在家看了下这本书。作为后java语言的scala在大数据里应用非常广泛。这本《scala编程思想》是入门初学者的一本好书，书不算很厚，每一章是一个知识点，而且讲的都是非常基础，分别介绍了Scala的各个拿手好戏。 这本书的索引很详细，不但把章节单独抽出列表，还有图示和代码的索引，很贴心。 大多数的代码都可以在Scala的网站和下载的Scala例子中找到，很适合学习和分析。 Scala确实是更优秀的Java，而且我很欣赏它的设计理念，从逻辑上完整的补全了Java到现在为止出现的许多不足和不完备；而且它是那么精巧，易于使用，在XML和构造DSL是那么的容易，很值得深入地研究这个编程语言。各位大师对其的高度评价，并不是虚言。 当然了，书籍的印刷还不错。", "marks": "推荐"}
{"content": "设计模式方面，讲的比较清楚，先给定义，然后UML图，在一个简单的java的例子描述出来，然后讲解adnroid 源码中的关于这个模式的影子，不过源码讲的比较调用比较深入，陷进去深，没有看到整体的联系，只见树木不见森林。讲完源码部分大概还是能对该设计模式清楚很多的，之后又紧跟着的是在实际android开发中的应用该模式，对实际开发有蛮大作用,最后也就是些注意事项。\n总之，是一本不错的设计模式入门书籍，真对于实际开发，让人更容易理解和应用，源码部分，讲的不是很好，但是有助于理解设计模式，所以还是不要抱着学源码的心里看此书吧", "marks": "推荐"}
{"content": "设计模式加上这遍我过了第三遍了，我属于从入门开始就看设计模式的奇葩。作者讲解的很易懂，特别是前几章结合了自己项目的simpleimageloader来讲真nice。当然这书也有许多缺点。", "marks": "推荐"}
{"content": "这本书弥补了国内除了研究framework层的另一种android高端开发路线的缺陷，不像那些搞framework的很多作者都有些阳春白雪，这本书提示了大家很容易忽略的一些开发技巧和开发经验~是不一本不可不读的好书", "marks": "力荐"}
{"content": "设计模式和源码都有，但是初版书上代码排版是乱的", "marks": "推荐"}
{"content": "一本既讲设计模式的书又讲源码解析的书，将两者联系起来不是容易的事，作者挑了这个着力点的确吸引人。可惜完成的并不理想，为了和设计模式一一对应一些代码的选取显得牵强；不少代码又深入过头偏离了讲设计模式的主题，最后也讲不清楚。这个度确实难把握，源码一个功能或一个模块本就不是几页纸可以讲清楚的。个人认为源码解析应该要有整体的图画，由浅入深由高层到底层，分模块来讲解比较合适。总的来说，设计模式讲的不错，源码讲得一般，仍是一本值得一读的书。", "marks": "还行"}
{"content": "前几章还好，读到后面越觉晦涩。以后还要再读一遍。", "marks": "推荐"}
{"content": "真实世界里的设计模式～由于讲的都是大家熟悉的android源码，所以非常易懂，也更能体会为了解决实际问题时使用设计模式的思路。", "marks": "推荐"}
{"content": "还不错，对设计模式和系统源码有了更深的了解", "marks": "推荐"}
{"content": "一本 设计模式 + Android源码分析 的书。", "marks": "推荐"}
{"content": "首先，这本书的思路特别好，设计模式本就是软件开发领域发展到一定程度时前辈们总结提炼出来的，它既来源于真枪实战的代码，要想体会其精髓，何不通过优秀的开源项目去领悟呢？Android开源系统无论从代码的复杂程度还是作者的开发水平，都是数一数二的，因此对于设计模式，Android源码不可谓不是非常优质的学习资源。那么作者就是以这样一种思路，对于每一种设计模式都是以概念—>Android源码中的应用—>源码要点解析—>设计模式实战这几方面内容来介绍的，很有意思，在学习设计模式的同时又学习了Android源代码，不足呢就是这样一种源码的学习显得不够系统，因此不那么容易掌握。此外，个人认为设计模式更多的是编程中的招式，因此想要真正地会用、用好、用还是不用仍然需要自己在今后的开发中多思考多练习。", "marks": "力荐"}
{"content": "还可以吧，加深了下对设计模式的理解，分析的源码的例子都还可以，像看小故事一样，但是缺点就是割裂了整体的联系，不过本书的目的达到了，就是讲设计模式。", "marks": "推荐"}
{"content": "书中的设计模式只是简单列举实现一下，没有分析该设计模式如何解耦合，不如gof的设计模式详细，严谨。\n\n源码部分只是略微提及设计模式的影子，源码的分析给人一种掉进代码泥潭的感觉，只见树木不见森林。\n\n对比 android权威编程那本书，两者的的内容质量差距真是很大。\n", "marks": "还行"}
{"content": "好书！能够结合设计模式来解析 Android 源码，本来就是个很吸引人的切入点。\n作者写的很用心、内容很充实（导致书的字体偏小=。=），提到的很多知识点在实际开发中都很有借鉴意义，示例和Android源码解析也很详尽。虽然有不少错别字，但瑕不掩瑜，最后一章区分混淆模式很喜欢！", "marks": "力荐"}
{"content": "虽然知乎上有几个大神都表示要买本这书来看，但其实这书真的是一般。\n感觉改名叫做《设计模式概述&Android源代码文摘》比较贴切：1.设计模式真就只是概述而已，两三小段的文字介绍，加上一两个通俗易懂的例子(个别例子举得并不贴切，甚至有一定误导性) 2.源码，同样是草草了事。\n\n不过也是挺难为作者了，两位作者都是大神级的人物，无奈500页的文字要讲好23个设计模式和Android这样一个复杂系统的源码实在是太难。\n\n最后的结论是，这本书适合老鸟们用来查漏补缺、博采众长，但并不适合之前没有研究过设计模式和源码的新手们。", "marks": "还行"}
{"content": "书名太唬人了，书中的70%的内容都是独立开设计模式来讲Android机制，跟深入理解Android源码区别不大，而且设计模式讲解部分也是独立开Android源码的（这个暂不作为缺点），这样说吧，结合Android源码讲解设计模式的内容仅有10%（这个才是痛点）。", "marks": "较差"}
{"content": "书中的内容和书名的相关性不大，Android源码部分和设计模式部分大多数是分开的。最重要的是，关于设计模式部分说得不够详细。适合用来查漏补缺，但是不适用于专门学习设计模式与专门学习源码。", "marks": "还行"}
{"content": "相对来讲还不错。作者指出的一个观念很对，并发会越来越没落，本身设计单台并发程序非常不好设计，涉及到多线程，架构方面都不太好处理。本身目前的大数据处理，spark等等越来越成熟化，相对成本而言，不如直接使用spark。", "marks": "推荐"}
{"content": "本来当随便买的，没想到内容质量意外的好", "marks": "力荐"}
{"content": "太浅，手绘的系统图倒是一股清流，第一次见", "marks": "还行"}
{"content": "雨太多，跑步都跑不了了，趁机看完这本书。介绍的东西比较多，但是不深，整体读完好像也没有深刻的点。", "marks": "还行"}
{"content": "比翻译的那本《Java 并发编程实践》更容易看懂，基于 Java 7 写的，适合当做工具书。", "marks": "力荐"}
{"content": "不错的一本书，讲的很通俗易懂，代码实例很多，缺点就是大家诟病最多的UML图都是手画的看起来很low，然后讲的面很广但是都讲的很浅，适合入门。。", "marks": "推荐"}
{"content": "做为入门书来看,是很好的一本书了", "marks": "力荐"}
{"content": "虽然内容不深，但是相比在网上找资料，这本书把并发、多线程、锁相关知识成体系的梳理了一遍，特别受益。强力推荐给初学者。", "marks": "力荐"}
{"content": "以后还是多看看经典的📖", "marks": "还行"}
{"content": "java 并发的基础知识，覆盖面挺全的，想深入的话还得研究 jdk 源码", "marks": "推荐"}
{"content": "适合入门，蜻蜓点水的了解。", "marks": "还行"}
{"content": "最新出的一本关于java并发的书籍。前面的理论以及并发库知识，讲解的平淡无奇，印象深的是关于无锁的设计思想，插图都是手绘的。后面还介绍了java8对并发库的改进以及并行计算的支持，还有就是akka的介绍，但讲解的不够深入，很多代码是参考akka手册中的实例代码。", "marks": "还行"}
{"content": "看完那本经典的多线程以后感觉还不是很给力啊，想了解更多，看评论都说不错就入了一本。然而发现书中很多细节都没处理好。", "marks": "还行"}
{"content": "简单，国人写的看起来不累", "marks": "推荐"}
{"content": "介绍Java 并发由浅入深的书，不过这手写文字和插图有点掉档次。", "marks": "推荐"}
{"content": "国内难得一见的好书！JAVA的并发理论以及思想尽在书中！", "marks": "力荐"}
{"content": "在集群和分布式环境下，java内置锁逐渐失去了用武之地，但是锁和并发的思想还是通用而且值得学习的。看过java并发编程实战以后再读这本书，每一个知识点都比较精炼而且代码示例简单易懂，没有晦涩难懂的翻译词，手绘图也有一种亲切感。缺点是没有附源码，需要自己去github上找。", "marks": "推荐"}
{"content": "当做工具书或者入门书来看是很不错的，可以快速地帮你梳理Java并发的各个知识点，但是如果要深入的话，还需要自己研究，不知道给低分的是什么心态", "marks": "力荐"}
{"content": "有Java8的内容 有 Akka的内容介绍也很好  最后的第8章都是Eclipse的操作 不适合IDEA的用户", "marks": "推荐"}
{"content": "对Java并发基础讲解深入浅出，覆盖面比较全面，结合源码进行讲解，是作为并发入门的好书。", "marks": "力荐"}
{"content": "讲的面很广，但都不是很深入，拓展拓展知识面还是挺不错的", "marks": "还行"}
{"content": "Java多线程的入门级好书，就是书里的插图有点……", "marks": "推荐"}
{"content": "文字流畅，可作为java并发编程实战的补充。", "marks": "推荐"}
{"content": "入门书籍。大体先让你知道并发包都有什么，大概怎么用。想进阶，就要撸源码或换本书了。", "marks": "推荐"}
{"content": "第一本Java并发书，感觉学到了不少东西，但是缺乏一种醍醐灌顶的感觉。总起来说就是虽然例子不少，我还是不清楚在实际的项目中该如何使用这些技术", "marks": "推荐"}
{"content": "插图太丑了！真的是丑的让你没有欲望看！", "marks": "推荐"}
{"content": "代码不咋样 章节凑数的多 总结的少 感觉就像大杂烩", "marks": "很差"}
{"content": "差不多是对并发的一个基础介绍，内容泛但不深，只是书中的手绘图实在是太丑了，希望作者还是别再放了。", "marks": "还行"}
{"content": "书里面有作者的理解和绘图挺好的，但贴代码有点多了，看不懂", "marks": "还行"}
{"content": "本书极其敷衍，不建议读，里面好多小错误。", "marks": "较差"}
{"content": "一个非QT设计人员翻译的韩国棒子的书，看了第一页就看不下去了，看来只能回家垫桌子了。", "marks": "很差"}
{"content": "不配这个价格。入门级别。", "marks": "还行"}
{"content": "目前为止最合适的 clojure 入门书了，如果 2016 年还有人在学 clojure 的话可以看这个就足够了", "marks": "力荐"}
{"content": "入门不错，但是看了没用，得写", "marks": "推荐"}
{"content": "非常棒的Clojure的入门书。大部分概念阐述得很清楚，且详略得当，不是罗列所有的Clojure用法，立足在用Clojure写实际可用的程序，例如一开始就介绍了lein的使用。", "marks": "力荐"}
{"content": "实在太粗浅了，但凡有一点背景的人就完全完全不建议读，两三篇博客就能说清楚的内容能洋洋洒洒写一本书！还好原版不要钱。而且特别喜欢用一些乐队啊电影啊运动员啊举例子不了解的连一点intuition都没有，为啥就不能举点大家都知道的香蕉苹果大鸭梨的例子呢？！", "marks": "较差"}
{"content": "鉴于python水平和算法难度，改成'写给高中生的数据挖掘实践指南'比较合适", "marks": "还行"}
{"content": "浅显易懂，深入浅出。", "marks": "推荐"}
{"content": "非常通俗易懂，看完立即就能写出程序，就像很久以前看Head First Design Pattern一样的感觉。", "marks": "力荐"}
{"content": "习惯用字典代替矩阵", "marks": "还行"}
{"content": "快速了解", "marks": "还行"}
{"content": "图书馆借的，无用。", "marks": "很差"}
{"content": "说得很清楚。入门完全不错。", "marks": "力荐"}
{"content": "书很有趣 然而学渣并不适合这门课😂😂😂", "marks": "推荐"}
{"content": "这本书理论比较简单，书中错误较少，动手锻炼较多，如果每个代码都自己写出来，收获不少。总结：适合入门。", "marks": "推荐"}
{"content": "数据挖掘或是机器学习方面的入门书，如果想自己动手实现一个推荐系统的话，那么可以试试这本书，跟着里面的代码动手实现，感觉真的很棒。不涉及太深入的理论，对于大部分内容都是点到为止，当然是可以实现成可执行代码的程度。适合入门。\n\n典型的老外的写书风格，如果适应这种风格的话，可以试一试。，", "marks": "力荐"}
{"content": "语言很有亲和力，不论有没有数据挖掘或者写代码的经历都很适合读，不过毕竟是入门读物，涵盖的面很有限。", "marks": "力荐"}
{"content": "入门书 翻翻挺快的 有headfirst风格  适合没有经验的码农读", "marks": "推荐"}
{"content": "一本小众的书吧，不过对于初学者来说足够用了，这本书不是讲数据挖掘的理论，而是通过生活中的例子讲解了是数据挖掘，讲解了数据挖掘中常见的公式，而且通过python编程给出了源代码。公式的讲解不是从数学角度推理，演算，讲解的，而是从实用角度出发，通过例子，通过要解决的问题，一步步引出公式，使得公式非常容易接受和理解", "marks": "推荐"}
{"content": "风格类似head first，例题把概念解释得很清楚；排版再讲究一点作为入门书就圆满了。", "marks": "力荐"}
{"content": "睡前读物，非常适合入门！很好很不错，公式讲解详细，初中生都能看懂，读过后对于数据挖掘的基本概念和基本术语有很好的了解。", "marks": "推荐"}
{"content": "1. 本书可以让你少趟一些坑。\n2. 然而书中的“我觉得”有点多啊，看着信心不足。\n3. 可见写博客是多么重要，那么多面试者总是说自己记了多少笔记，鬼才信呢~", "marks": "还行"}
{"content": "老司机经验之谈，新人可以管中窥豹，司机同行可以借机吐槽共鸣", "marks": "力荐"}
{"content": "成书太勉强", "marks": "较差"}
{"content": "APP竞品技术分析的部分值得产品好好研读~~", "marks": "推荐"}
{"content": "今年看过的最好的一本Android/移动开发相关的技术图书。", "marks": "力荐"}
{"content": "6分，这本书在15年应该还不错，放在今天看亮点不是很多！", "marks": "还行"}
{"content": "详尽地介绍了大公司的流程，还有一些最佳实践和坑等。", "marks": "推荐"}
{"content": "网络基础架构，性能优化不错。竞品分析和crash都是难得的资料", "marks": "力荐"}
{"content": "前两章还有点干货，后面的比较水", "marks": "还行"}
{"content": "干货不少，proguard那一章不错，毕竟以前没有哪本书系统地总结过。竞品分析那一章也不错，涨姿势了，知识面宽了。作者用的是Eclipse,没有对Android Studio和Gradle的讲解。", "marks": "力荐"}
{"content": "实用", "marks": "推荐"}
{"content": "干货，涉及app崩溃收集、混淆技术、持续集成、团队管理", "marks": "力荐"}
{"content": "真正的实战", "marks": "力荐"}
{"content": "虽然结构比较不系统\n但是宝贵的是经验 感谢", "marks": "力荐"}
{"content": "一线技术人员的总结与分享, 可以学习与借鉴的很多. 特别是团队组织协调方面.", "marks": "推荐"}
{"content": "android进阶很有用", "marks": "力荐"}
{"content": "没有介绍很深入的东西，有一些工程实践也有点老了，好处是挺多东西结合实际来讲的，还是比较有指导意义。", "marks": "推荐"}
{"content": "真正讲一个app的研发，而不是单纯的码代码，书很快看完了，但是里面的思想全部掌握并运用还是任重而道远啊。", "marks": "推荐"}
{"content": "利用周末完结了，写的很好，见识了正规的团队研发，同时还介绍了一些重要但是平时自己没有用到的东西，谢谢作者。", "marks": "力荐"}
{"content": "还不错，相比技术对于移动开发的一些经验之谈值得借鉴", "marks": "推荐"}
{"content": "相对会偏基础一点点，看起来没那么累，另外觉得知识点不是特别的系统。\n", "marks": "还行"}
{"content": "作者的技术水平真是呵呵！！", "marks": "很差"}
{"content": "一般，书里不少内容有点过时了，而且作者说太多外话了，不太适合初级研发看", "marks": "还行"}
{"content": "强烈推荐，一口气看完，如果之前看过这本书，项目会少踩很多坑", "marks": "力荐"}
{"content": "还OK", "marks": "推荐"}
{"content": "就一本安卓开发的书，怎么名字敢叫App研发录。靠，我是iOS开发者啊，看安卓有个毛用", "marks": "很差"}
{"content": "不是一本纯粹的技术书，内容有点杂。", "marks": "还行"}
{"content": "还不错，看这本书就像你和一个工作多年的技术经理在聊天，当然中间有一些作者的crash总结，可以没事拿来翻翻看看自己的app有没有同样的crash。看得出来作者有着非常丰富的带技术团队的经验，而且平时善于总结、归纳问题，确实对于我的开发工作有很多值得借鉴的，不过书中一些技巧、开源库不是最新最好的，或者不是最棒的解决办法，可能是作者很久之前写的吧", "marks": "力荐"}
{"content": "比较适合开发组长大概浏览，了解概念及一些技术点（插件化、本地测试、Native&H5交互、多渠道打包、开发后门），需要再自己后续研究。包括团队管理方向、新人文档、编码规范等，都是比较适合组长的知识点。Crash基本没看，看了也记不住，遇到时再根据堆栈信息去找bug就行，没必要现在把这些东西看一遍记下来", "marks": "还行"}
{"content": "这本书还是比较接地气的，属于实用类书籍。", "marks": "推荐"}
{"content": "5天过完的一本书，其中第七章ProGuard的介绍还有点意思，其他章节不做评价。", "marks": "较差"}
{"content": "总归会在开发中遇到", "marks": "力荐"}
{"content": "android", "marks": "力荐"}
{"content": "这些经验很受用", "marks": "推荐"}
{"content": "虽然有些过时，但是还是有收获", "marks": "推荐"}
{"content": "花了一周看完了，讲的比较系统。内容不很多，很多时候都是针对于作者自己项目中的问题讲解一番，不知是是否因为自己水平不够，并没有很多共鸣。", "marks": "推荐"}
{"content": "技术牛逼的一本书", "marks": "力荐"}
{"content": "个人不推荐购买，我见过的书里面出奇的居然讲业务，到稍微想看的知识点往往几句话带过，完全是浪费时间", "marks": "较差"}
{"content": "知识内容浅尝辄止，告诉你有这么一个东西在。本书以实战为主，适合项目经验不太丰富的(比如说刚培训完，或者自学完android)，对此阶段人员会有比较高的价值。", "marks": "还行"}
{"content": "一本够我嚼两三年的书，大把大把的干货，感谢作者", "marks": "力荐"}
{"content": "书名是《app研发录》，不过感觉书的定位好像很模糊，既有普通Android工程师需要的技术内容，又有一些类似于产品经理所关心的开发流程之类的内容，除了前面讲的一个网络框架的设计让人有印象之外，还有就是一章专门用来讲crash，我也是醉了，所以感觉整本书并没有很多干货，有些内容也是浅尝即止，有人把它跟《Android开发艺术探索》相提并论，我觉得是不够资格的。", "marks": "还行"}
{"content": "“落地”，是阅读此书的最大感受，大到技术架构、竞品分析、发布流程，小到每个Crash、员工座位安排、开展技术分享、简历筛选，作者总在寻求落地的解决方案，细细阅读，你不觉得这种方案有多么高大上，不觉得背后有多么华丽的理论支撑，但是你会觉得，一切都是踏踏实实、真真切切可落地实践的，为工作带来不少的实践指导。\n\n建议移动开发从业者都阅读一下本书，如果你是一名程序员，有必要了解下你的leader背后要考虑的大局，以及做出某些决策的原因，这能帮助你更好的为团队分忧，承担更多的责任，获得更多的晋升空间。如果你是一名技术管理者，反思一下你的决策是否能落地，是否只是空谈，或者你的决策与你想达到的目标其实是两码事...完整如下\nhttp://www.jianshu.com/p/ea48332c82af", "marks": "力荐"}
{"content": "非常不错的书，都是作者亲身开发经验总结出来的干货，三言两语点出关键。比起让人云里雾里不知所云的书不知道要高到哪里去了！虽然不是很厚，但是对于现阶段的初级Android程序员的自己太合适不过了。", "marks": "力荐"}
{"content": "这本书值得打8分9分，内容浅显易懂，给算法不怎么好的前端人员一个非常不错的入门指导。读后意犹未尽，如果再深入一点相信会更好。", "marks": "推荐"}
{"content": "简单易懂，循序渐进。", "marks": "推荐"}
{"content": "内容简单，但是零基础的也看得懂。", "marks": "推荐"}
{"content": "一般。", "marks": "还行"}
{"content": "心好累，早知道有这本书就不用被迫看用Java实现的算法书了。", "marks": "推荐"}
{"content": "作为基础，常见数据结构和算法的入门很不错。数据结构少了AVL和红黑树的代码，算法主要集中于排序算法。", "marks": "推荐"}
{"content": "有些章节好，有些章节差，挑着看，当复习基础知识挺好。", "marks": "较差"}
{"content": "太简单了，不推荐学习过数据结构和算法的人在此处浪费时间。", "marks": "还行"}
{"content": "涉及了数组、队列、栈、链表、集合、散列表、二叉树、图这些基本的数据结构。。讲解得很清晰，对于前端开发非科班生学习数据结构比较有帮助。对科班生想学习JavaScript也应该是有帮助的。", "marks": "力荐"}
{"content": "如果能够更深入一些就好了", "marks": "推荐"}
{"content": "讲了基础的数据结构，适合数据结构和算法小白看看。存在一些错误，还是建议边看边敲，对照着《算法导论》和Sedgewick 的《算法》看", "marks": "推荐"}
{"content": "我默认这种名称都是高级内容了，但其实很初级。讲到中间还在讲数组。不过针对JavaScript而言，本身也没有高级特性，它的数据结构和算法也只能是转换一种形式而已。 ", "marks": "还行"}
{"content": "随便看看吧", "marks": "还行"}
{"content": "算是入门级的内容吧, 前面大部分都看得很愉快, 到最后面才感觉有点难度", "marks": "推荐"}
{"content": "简单易懂，数据结构入门必读", "marks": "推荐"}
{"content": "书里是基本数据结构的js实现，适合学js的小伙伴补数据结构的时候看", "marks": "力荐"}
{"content": "我的算法入门", "marks": "推荐"}
{"content": "读到最后一页才发现作者竟然是一位女性", "marks": "推荐"}
{"content": "没读过书，读这些书头真大", "marks": "推荐"}
{"content": "买阮一峰的es6送的一本书，计算机出生，对数据结构的基础是考过计算机三级和考研的数据结构，觉得书还是挺基础的，花了两个多星期的时间。", "marks": "力荐"}
{"content": "第一版小错误很多，对着勘误表，不影响阅读。适合我这种没接触过数据结构与算法的人学习，作者思路清晰，入门读者理解。", "marks": "推荐"}
{"content": "这本书其实挺不错的，能够快速掌握一些很基本的东西，写的也很清晰。比那本动物书的js算法要好。", "marks": "推荐"}
{"content": "说非常不错会不会暴露我的小白属性咩", "marks": "力荐"}
{"content": "两天读了一半，对初学者极其友好的一本书～", "marks": "力荐"}
{"content": "翻译一般，而且代码排版很多地方都乱掉了。内容有些晦涩。", "marks": "较差"}
{"content": "名为实战，可🌰也太多了，问题是🌰里面的使用逻辑解释得也不好，四周围满说明文字的python能看吗？总之看下来觉得还想找点文章之类的补充一下。不知道怎么这么多吹？", "marks": "还行"}
{"content": "写的很棒，对redis的实战应用有了一些了解，就是Python看的不是太懂。", "marks": "力荐"}
{"content": "不错，就是时效性稍差", "marks": "推荐"}
{"content": "一本实用的Redis入门书籍。可以考虑入手一本，拓宽Redis的应用思维。", "marks": "推荐"}
{"content": "有很多使用Redis的技巧可以学习参考。", "marks": "推荐"}
{"content": "书中提出了很多利用redis解决问题的方案，如果你已经对redis常用命令有一点点了解，那么这本书作为入门真的很好", "marks": "力荐"}
{"content": "使用Redis的几个场景主要是：缓存、非持久化状态信息、利用Redis丰富的数据结构和扩展功能，这本书在实际案例中Redis的使用讲解不错，至于Redis的原理，可直接看《Redis设计与实现》了", "marks": "推荐"}
{"content": "有趣，上次读是大三的时候了，那时候还不熟悉Python，所以读了两章就丢掉了，这次捡起来继续读。\n读完了觉得很棒，在之前redis在我的印象中是队列，缓存。现在觉得在某些场景下甚至可以作为主数据库用了，书中讲了许多业务场景值得借鉴。也许以后可以更加充分的利用这个简单强大的工具。", "marks": "力荐"}
{"content": "让我对redis的运作方式有了和之前不同的认识。之前认为他是队列，现在懂了，就是内存里面的数据库！", "marks": "力荐"}
{"content": "内容不错，里面讲了很多应用实例，Redis真的是强大！", "marks": "推荐"}
{"content": "一般般，大体介绍了redis，大部分都在讲怎么用redis实现怎样的功能，的确是实战", "marks": "还行"}
{"content": "redis应用指南", "marks": "推荐"}
{"content": "翻译的很棒，但不是太看得懂。只会了基本的操作，分片、队列、分布式等等都看不懂。。可能基础知识不够吧", "marks": "推荐"}
{"content": "书如其名，太贴近实战，我读不下去了……随便翻了翻，用到的时候再看吧，作者把redis当主数据库使用，但我总觉得不靠谱 这个书可读性真的一般，读起来好累", "marks": "力荐"}
{"content": "好像放在滨江了？？", "marks": "推荐"}
{"content": "基础部分很简洁，前几章特别是数据库调优很实用，然后我最近正好在用 hash 的部分，借鉴调优思路后发现确实占用内存小了蛮多。不过...后面几章就有点看不懂了，以后我对数据库了解更深后再回来啃啃看。", "marks": "还行"}
{"content": "非常好的一本书，不仅介绍 Redis 的一些知识，还能够以大量的应用场景介绍 Redis 中各种数据结构的使用。", "marks": "力荐"}
{"content": "实战", "marks": "力荐"}
{"content": "技巧型的书", "marks": "推荐"}
{"content": "一般般吧，感觉总体评分过高了。一是书的有些信息过时了；二是有些地方逻辑表达条理不清。", "marks": "还行"}
{"content": "redis入门必备，实战案例都非常好，看完你会知道redist不仅仅只是个缓存服务器。", "marks": "力荐"}
{"content": "用了比较多的实例，感觉非常不错，比较实用。可以结合redis设计与实现，弥补其中的一些短板。给赞", "marks": "力荐"}
{"content": "2017/10/24", "marks": "推荐"}
{"content": "好书！", "marks": "力荐"}
{"content": "redis入门好书，翻译质量也不错", "marks": "推荐"}
{"content": "内容编排不适合初学者，看到第6页看不下去了，明显是写给有经验的人看的", "marks": "较差"}
{"content": "大片大片的举例，但是例子全是Demo，没有看到真正的“实战”…╮(╯_╰)╭…而且demo越写越诡异", "marks": "还行"}
{"content": "深入浅出，虽然是本给小朋友看的书，但大学生看也有很多收获，用于 scratch 入门不错！", "marks": "力荐"}
{"content": "几乎不需要太多专业知识就能读懂，涉及很广，适合入门。这本书是我认真阅读的逆向工程的第一本书~", "marks": "推荐"}
{"content": "搞软件安全的可以看看，介绍的好多工具听都没听过。。", "marks": "推荐"}
{"content": "通俗易懂，适合入门", "marks": "力荐"}
{"content": "小点心~", "marks": "力荐"}
{"content": "不深入，但面面俱到", "marks": "力荐"}
{"content": "要深度没深度，要广度没广度，这一行真的想干好必须读点大部头。", "marks": "较差"}
{"content": "一点趣都没有", "marks": "很差"}
{"content": "自己只能看懂部分代码，汇编一脸懵逼😔p122", "marks": "推荐"}
{"content": "咳咳咳，我把我所有没看懂的东西都归结于操作系统原因，，，，，这个书对win7不友好，，，，一点也不，大家可以跟我一样想法喔", "marks": "推荐"}
{"content": "一本面试复习大纲，过一遍还是挺有用的", "marks": "还行"}
{"content": "这本书太可怕了，很多地方题都没有，尽然在分析如何选择ABCD四项，漏洞百出！！！", "marks": "很差"}
{"content": "其实我想打负分。", "marks": "很差"}
{"content": "到处都是错误，简直误人子弟", "marks": "很差"}
{"content": "到处都是错。。有些题感觉太偏面试基本不会问到", "marks": "较差"}
{"content": "这本书明显的错误很多。", "marks": "较差"}
{"content": "到处都是错，甚至不是一本认真校对过的书，无语", "marks": "还行"}
{"content": "书里的面试题没啥价值。但是看书使我更容易深入思考，挖掘出了很多模糊的知识点。书的提纲还是不错的，列出了面试需要具备的技能。", "marks": "还行"}
{"content": "新手突击用", "marks": "还行"}
{"content": "比较简单系统地整理了一些面试题，也有一些确实比较常见，适合新手或者基础比较差的读者全面了解一下大概知识，深度不够，而且有很多错误。", "marks": "还行"}
{"content": "下了pdf,就顺手翻了翻.都是浅显的知识,例子也很陈旧,毕竟到第四版了,跟不上时代了...", "marks": "较差"}
{"content": "可以做复习基础知识点用,题不多.", "marks": "推荐"}
{"content": "上面内容极多，然而都过去浅泛毫无实际意义，而且其中很多写代码例子给出的都是答案都是错的，据我本人亲手验证的已发现不少于5处，这本书对于应届生求职确实有一定的帮助，当更多的是一种误导，请求作者认真核对答案后再重新出版。", "marks": "较差"}
{"content": "很多题目的答案是错的，连试题解析也是有错的！大失所望！发邮件询问也没见回复。\n浪费钱，还害得差点记住错误的知识点。\n要不是自己有分析、动手实践题目，真是被坑死！", "marks": "很差"}
{"content": "这翻译……", "marks": "较差"}
{"content": "原版没问题，翻译极烂！推荐原版", "marks": "很差"}
{"content": "该提到的都提到了。。。", "marks": "推荐"}
{"content": "这翻译太糟糕了, 很多句子读着费劲。术语译法也不标准, 甚至前后都不一致。", "marks": "较差"}
{"content": "讲得比较全面，但是都不深。\n要是原来没有接触过并发程序设计可能会有点吃力吧。", "marks": "推荐"}
{"content": "狗屎一样的翻译", "marks": "较差"}
{"content": "最佳折腾elk，快把书翻烂了。", "marks": "力荐"}
{"content": "介绍了ELK", "marks": "还行"}
{"content": "ELK stack 权威指南节选出来的书", "marks": "较差"}
{"content": "大概看完了一遍，还是感觉需要有些基础才能理解好，里面讲解的一些实例我在生产上还没遇到，等遇到时再来看看。", "marks": "还行"}
{"content": "https://github.com/beijinglug/fsfs-zh/blob/master/docs/index.md", "marks": "推荐"}
{"content": "这本书居然没什么人读过？不过对于程序员来说一直在咬文嚼字版权、开源和 GNU，对于其他人来说因为涉及代码又有些难以理解。总体来说阅读体验不算特别优秀", "marks": "推荐"}
{"content": "再次科普吧，不过这本感觉看来相对枯燥", "marks": "还行"}
{"content": "5星back up", "marks": "力荐"}
{"content": "版权归作者所有，任何形式转载请联系作者。\n作者：Treadstone（来自豆瓣）\n来源：https://www.douban.com/note/593243179/\n\n斯托曼先生是一位近乎苛刻与固执的伟大的理想主义者，这一点从“自由软件(FreeSoftware)”的定义中不难看出。如今很多人依然认为理查德·斯托曼是一位极端、狂热的偏执症患者，但事实上，虽然很多人并不知道“斯托曼”、“自由软件”，但“自由软件”对世界的影响已经无处不在。", "marks": "力荐"}
{"content": "超赞！唯一的缺点就是要联网吧_(:зゝ∠)_", "marks": "力荐"}
{"content": "还行吧，不够系统但是各个反面都有讲到。如果细究的话很多东西在《C标准库》还有各种面试书中讲到，但是这个总结做的确实不错。有心人天不负，确实是很少有这么实用的书，内容也比较短小精悍。适合不断参考，其实写好程序真的不是那么简单，作者的建议很值得参考。", "marks": "推荐"}
{"content": "编程单是解决问题就够了吗？在校园中，我们几行代码草草了事，似乎得到答案就over了，但在职场中，解决问题有时反而是次要的，代码的书写习惯和编程应遵循的软件开发流程更值得我们关注。作者循循善诱，以师兄般亲切的口吻讲诉C程序员的编程规范，文章结构明了，清晰易懂，很适合C程序员求职者阅读。书的最后还分享了文章《我在南邮的3年》，读罢甚是感动，“熊哥”乃真性情人也。", "marks": "推荐"}
{"content": "有0星不打1星系列", "marks": "很差"}
{"content": "深入浅出的讲了很多理论知识，非常赞", "marks": "力荐"}
{"content": "总结了现代PHP的新特性和良好实践。", "marks": "推荐"}
{"content": "收获很大，尤其应该看第二部分<良好实践>和第三部分中的<调优>", "marks": "力荐"}
{"content": "技术变化就是快 PHP7.1 都出来了 书中还是有很多值得学习的地方", "marks": "推荐"}
{"content": "这本书较新，因此讲了很多更为规范化的PHP知识，很不错！", "marks": "推荐"}
{"content": "非常不错的一本书 ", "marks": "推荐"}
{"content": " PHP已经发展到7.0了，可是很多人还在用5－6年前或者更早的知识，看看这本书了解学习一下最新的PHP知识", "marks": "力荐"}
{"content": "算是不错的了，不过仍然过时了，现在 PHP 发展速度太快，再怎么新的书还是过时的", "marks": "推荐"}
{"content": "很细致并且全面的把该说的点都说了，很赞。一些模糊或未注意的点重新过了一遍，收获很大。", "marks": "力荐"}
{"content": "学了一点小东西，到后面几章测试，分析没有动手。后面还是要用用JMeter Bench之类的学习测测并发，测试也只会TDD也要动手用用PHPUnit单元测试下。总体来说，不错。", "marks": "推荐"}
{"content": "phper 必读. 系统的梳理了近些年来 PHP 界的发展, 为开发现在的 PHP 程序提供了相关知识. ", "marks": "推荐"}
{"content": "介绍了很多现代PHP的知识点", "marks": "推荐"}
{"content": "给你一个 完整的 php优化 系统知识架构", "marks": "力荐"}
{"content": "每个phper都应该看的一本最佳实践的书。", "marks": "力荐"}
{"content": "进阶必备", "marks": "力荐"}
{"content": "介绍新东西，开拓新视界", "marks": "推荐"}
{"content": "读的英文版pdf，非常有用的内容，现代的php应该拋掉旧包袱，遵循更好的实践了", "marks": "力荐"}
{"content": "作者是PHP之道（php the right way）的发起人，相比之下，之前学的PHP太low了。\n现在读完了，少给一颗星，本书后面部分，特别是第7章，不是针对PHP7的，里面有些shell是不符合你使用的机器或者VPS，这部分需要读者去参考网上的一些教程，自己试验性的配置一下lnmp环境，总体来说还可以，非常薄的一本书。", "marks": "推荐"}
{"content": "php实践必读。当然，前提是你有了PHP基础", "marks": "力荐"}
{"content": "讲的是PHP最新的一些技术和特性，对于想了解php新特性的人来说，是不错的。不过很多东西现在看来也不是最新的了。", "marks": "还行"}
{"content": "整体挺好的，像是一本手册，我想在以后开发PHP应用的时候想起来某个需要用的特性或者软件的时候，会到书中来找线索。", "marks": "推荐"}
{"content": "PHP正在重生", "marks": "力荐"}
{"content": "感觉很不错，适合有一些基础但又希望更深入地学习的。", "marks": "推荐"}
{"content": "讲的浅显易懂，并且对于还在使用传统方式开发php应用的程序员来说，非常值得一读。\n这种定位的图书非常容易沦为各种工具的使用说明书，这本书挑选的内容都是现代php开发中最重要的，对于详略把握的也非常不错，讲解的也挺清楚，有自己的系统，所以如果上面的东西你还不熟悉的话，立刻看一下吧~", "marks": "推荐"}
{"content": "简要介绍了php前沿", "marks": "力荐"}
{"content": "花了两天时间看了一下这本书。感觉讲的比较浅，适合刚入门（只懂语法的同学）看。介绍了一些PHP的脚新的开发方式，这点还是值得简单浏览一下，毕竟不用自己去找这些资料了。", "marks": "还行"}
{"content": "现代phper必读的书了", "marks": "力荐"}
{"content": "很容易看懂，而且不用死记硬背，并且提供了理解概率论的新方法。理工科还是多看国外的书吧。", "marks": "力荐"}
{"content": "1.概率是面积。2.协方差是椭圆。感觉这样的传授方法其实挺好。不过并未深入，也许高中学统计时候作辅导书，比国内的习题集要容易上手吧。", "marks": "推荐"}
{"content": "摊手，我觉得我还是应该去看正经教材", "marks": "还行"}
{"content": "拿来预习下学期的课应该绰绰有余了\n这学期学完概率论了，果然还是这本更深入，\n不过后面看的有点迷，反而看不懂了。\n教材跟这本书思维差异很大，一起看还真有压力", "marks": "推荐"}
{"content": "入门好书", "marks": "力荐"}
{"content": "很好的入门书", "marks": "力荐"}
{"content": "标题党，面向的并非是程序员。并且讲的并不深入浅出", "marks": "较差"}
{"content": "从上帝视角来理解概率问题，是一个有趣的方法。但与程序结合不如第一部紧密了，到后来抽象得有些看不下去……", "marks": "推荐"}
{"content": "太深", "marks": "较差"}
{"content": "作为非统计专业同学的基础课教程应该很不错。刚学完数理统计于是把这本书过了一遍，感觉整体难度可以，思想性中上，涉及到分析的内容时而严谨（多数需要作为进一步讨论的基础的内容）时而一笔带过（特别是多维变量、估计和检验的部分，有可能是我这部分比较弱所以感觉比较明显）。应该会当工具书留着。", "marks": "还行"}
{"content": "直观易懂。看这本书以前，还是要先学线性代数，可以看作者的线性代数书，又是一个坑哈哈。因为用图解释概率，现在看这本书学概率，真是比以前看那些教科书幸福多了！", "marks": "力荐"}
{"content": "辅助学习教材，图形化讲解，很多应用。学校教材为 《数理统计与数据分析》", "marks": "推荐"}
{"content": "我能说我是去年为了考研复习才买的这本吗，读来生动有趣有助于理解。不过并不能完全覆盖考研的内容，多维随机变量这部分讲得比较少。", "marks": "推荐"}
{"content": "入门好书，重新温故了一下当年没学好的概率统计", "marks": "力荐"}
{"content": "这本书说是面向无基础的人，的确如此。╮（╯＿╰）╭对于有高等数学基础的同学建议选择一本专业教材，对概念的解释比较清楚，这本书里讲的太乱", "marks": "较差"}
{"content": "有趣的概率论教材。", "marks": "推荐"}
{"content": "原书不错。翻译烂，搞不懂译者水平这么烂也有脸翻译", "marks": "较差"}
{"content": "很新的书，涉及到了，4.0.5。正数书中文名:入门。这本书很好的讲了是什么，怎么用，但是并未设计为什么", "marks": "力荐"}
{"content": "买这本书的目的：快速了解UI与动画部分的相关概念。算达到目的了。 这本书可作为快速读物，但又需要有一定基础，不少内容的连贯性比较差，甚至没有给出分析，就直接给出结论，神散，形也散。看完之后感觉跟我理解的“群英传”关系不大。如果资金有限的话，不推荐购买。之前看的android书的一些感受：《第一行代码》行文流畅，结构紧凑，适合初学者快速建立一个对Android的感性认识。《Android疯狂讲义》涉及面多，浅尝辄止，显得臃肿。《Android系统源代码情景分析》有结构，有深度，语言流畅，有因果。《50 Android Hacks》各种收集问题之解答，可以翻翻，不推荐购买。最后对于“群英传”这本书，我比较好奇的是，书背后那些给出美言的大加们有没有认真读过此书？一家之言，如有巧合，纯属雷同。", "marks": "较差"}
{"content": "不错，涉及android studio，还有一些优化等", "marks": "力荐"}
{"content": "看完后感觉写的很垃圾", "marks": "很差"}
{"content": "略失望", "marks": "还行"}
{"content": "之前看这本书跟Android开发艺术探索有绑在一起的套餐还特意留意了一下。\n看目录好像无法判断，所以我先去看作者的博客了。跟任玉刚的博客没法比，这位作者似乎没写出什么像样点的文章。\n虽说没看过评论过意不去，但是建议还是先去翻翻作者的博客再看买不买单比较好。反正我是连他的博客都看不下去，何况书。", "marks": "较差"}
{"content": "view部分还可以，但是也不算特详细，新手入门进阶还是能够有收获。", "marks": "推荐"}
{"content": "比《Android开发艺术探索》浅显一点，适合初级开发者", "marks": "推荐"}
{"content": "不能说写的很差，但是确实都是浅尝则止。不过自己对照着每个章节进行深入探索然后吸收，应该是极好的", "marks": "还行"}
{"content": "1、2、8、9、10、11、12，这几章有点多余，什么都写，什么都浅。3、4、5、6、7，这几章可以多看几遍。最后一章实例，没有看。总的来说，整本书一般般，像是博客文的合集，但又不如博客文那般的新并且有交流。", "marks": "还行"}
{"content": "大概看了看", "marks": "还行"}
{"content": "主要是开发技巧", "marks": "推荐"}
{"content": "进阶时可以读读 ", "marks": "推荐"}
{"content": "关于绘图和动画的内容写的很详细", "marks": "力荐"}
{"content": "不属于系统学习 Android 的书籍，选择了一些方面来讲解，实践性较好，能学到一些开发技术和技巧。不适合用于入门，也算不上高阶，快速提升阶段可以对照敲一些代码来学习。", "marks": "推荐"}
{"content": "语言的前后逻辑很不连贯，流畅性更是...不多说了，和其他同类书籍比起来真的是差太多", "marks": "较差"}
{"content": "中间几章关于VIEW和动画还有图像处理的不错，就是后面有些章节比较乏味，没有说的那么差", "marks": "还行"}
{"content": "想把自己跟入门类的书区别开来，做成进阶类的书，偏偏每每说完入门的东西要说到关键(进阶)的地方就戛然而止。整本书读完给我什么感觉呢？就是那种装逼失败的感觉，想买的同学自己想象下。", "marks": "较差"}
{"content": "前半部分还行。", "marks": "还行"}
{"content": "比较基础和入门的", "marks": "还行"}
{"content": "博客文章大杂烩，有项目经验的话一上午就可读完。内容确实挺实用。", "marks": "还行"}
{"content": "一本android进阶类的书籍，各章感觉很凌乱，没什么条理的样子。语言风格也比较生硬，大多是平铺直叙讲解概念性的东西，比较难懂。没买过此书的人建议先去看看作者博客上的文章再作决定吧。总之，这本书写的比较一般，不建议优先购买。", "marks": "较差"}
{"content": "希望作者后面写书能先对整本书有个大概主题，而非零散拼凑成书", "marks": "还行"}
{"content": "挺渣的，浪费钱", "marks": "还行"}
{"content": "双11为了凑单买的（ps：为了凑Android开发艺术探索的单）。书的内容还凑合，相比来说只能说凑合，可以阅读，但是代码规范很差，干货还行。", "marks": "还行"}
{"content": "还可以，结合代码 看书 ，才能完全明白。适合有android两个月基础的人看", "marks": "还行"}
{"content": "一天翻完了，讲得很易懂。感觉如果初学的时候能看看这本书就好了，可是现在，怎么都有种食之无味，弃之可惜的感觉，不够深入。", "marks": "还行"}
{"content": "浅尝戛止", "marks": "还行"}
{"content": "view部分还是挺不错的，有些章节一带而过有点鸡肋", "marks": "推荐"}
{"content": "很不错啊，喷子有点多哈", "marks": "推荐"}
{"content": "这书在亚马逊上，是跟开发艺术探索一块推荐的，可以说是鱼目混珠。", "marks": "较差"}
{"content": "书开头几个开发者是收了钱才那么评价这本书的吧，很多地方就简单介绍一下，没有深入讲解。渣渣", "marks": "很差"}
{"content": "《第一行代码》帮我打开了Android的大门，《Android群英传》又差点把门给我关上。。。", "marks": "很差"}
{"content": "进阶必备的书籍，看了评论，感觉有些人除了挑刺当喷子似乎就不会什么了。大家都知道徐医生，而挑刺的就是路人甲。", "marks": "推荐"}
{"content": "很早就看过，算是有帮助", "marks": "推荐"}
{"content": "杂乱无章，看着费劲，十分不建议新手入手", "marks": "很差"}
{"content": "很久之前看的还行,但不深入,很多内容浅尝辄止,给个3星吧.", "marks": "还行"}
{"content": "不错的书，帮助很大，支持下", "marks": "推荐"}
{"content": "看这本书简直是在浪费时间，写的什么垃圾，全是凑字数", "marks": "很差"}
{"content": "比较注重UI", "marks": "还行"}
{"content": "看了看第三章，讲解思路清晰，作为中高级入门还是很不错的", "marks": "力荐"}
{"content": "什么东西，就是大体一写，介绍的很烂，加上各种垃圾东西凑字数，还不如一些博客写的文章好，后悔，写下这个评论希望后面的人不要上当了", "marks": "很差"}
{"content": "整本书感觉就是在东拼西凑，没有一点连贯性", "marks": "较差"}
{"content": "虽然不像一本书，菜鸟的我接触到这本书的时候发现原来还有这样的进阶书籍，让我能够逐渐清晰的去思考进阶的问题，知识点比较杂和简单，但依旧值得一翻", "marks": "推荐"}
{"content": "部分可以当作工具书来查阅，但是总体来说文章上下结构乱七八糟，有前无后，特别是跑demo的时候不仔细，草草了事，像完成任务一般，辣鸡。", "marks": "较差"}
{"content": "其实这书是一个很尴尬的存在，基础的部分相比google官方的doc/tutorial没有明显的优势；所谓高级的部分其实就是把相关application framework层的代码简要解释一下，但是作者明显分析源码这方面功力不行，相关章节没有一个是真正能看的（没有重点，轻重混乱），甚至连demystify都做不到。最后八成是自己下了源码和书说goodbye。", "marks": "还行"}
{"content": "内容确实有干货，但是读起来让人有点恼火。\n作者说话让人觉得好烦，能别说【这个不难实现】【这个很简单】【这个我们在之前实现过】balabala之类么，就当成我们已经知道了别提这些话了行不。\n有些部分句子都读不通顺，逻辑让人觉得莫名其妙。还有，代码贴太多了。关键部分已经有了就别贴全部代码了，给个github地址让有需要的看就够了。\n-------12.17\n看完了这本书。中间一部分内容算是比较有价值的，其它的只能算是拼凑出来的。贴代码太多理所当然，讲优化讲不深，工具也没有说得多清楚，没有太多实践性的内容。这本书大概就是作者博客内容的大汇总。", "marks": "推荐"}
{"content": "// 以前就看了作者的CSDN，是个百度的大牛，做了动态加载的框架", "marks": "推荐"}
{"content": "这本书有点过誉了，作者贴了大量的Android源码，然后轻描淡写的说“从代码中我们可以看出…”，卧槽，你怎么那么容易看出来，或者说就算你看出来了，那你总得在代码附近写点注释吧？还有，买的正版书籍居然也能有这么多错误，有的句子都读不通顺，还有的句子居然前后是矛盾的", "marks": "较差"}
{"content": "与其说是一本书，还不如说是一本提纲，涉及的话题很多，但是具体到每个话题，基本都泛泛而谈，一带而过。看目录就知道了，大部分都只有1页甚至半页内容。稍微多点的页，就是贴好几页的代码，8+的评分，是在逗我？", "marks": "较差"}
{"content": "View, Drawable, 动画部分还不错，相关概念讲解的比较详细，推荐不熟悉这部分的人看。其他的部分：比如IPC，四大组件，线程消息循环，则是比较概括性的讲，【如果想深入了解这部分内容的话，推荐看罗升阳的《Android系统源码情景分析》很不错，注意不要深陷代码不能自拔，可以先看他的csdn博客很高质量】，最后的综合技术部分则比较浅，算是个入门介绍。作者在书中提到不少开发中需要注意的细节，一些坑的解决方案是比较有价值的。最后，看书是用来指导方向，要达到融会贯通还是需要去多读相关主题的源码，以及官方文档。还有就是口头禅比较多：“这个很简单”，“这个也很容易”，“这个很显然”，等等这些随意性的话语跟书的严谨性不搭。", "marks": "还行"}
{"content": "作为进阶书籍不错的。", "marks": "推荐"}
{"content": "草草翻了一遍，有内容，描述上可以更精炼，国产作品里面也算良心之作了吧。", "marks": "推荐"}
{"content": "大神带我", "marks": "力荐"}
{"content": "虽然没有预期的好，但是还不错。", "marks": "还行"}
{"content": "好书啊！！！", "marks": "力荐"}
{"content": "国内安卓技术书定位有点尴尬呀", "marks": "很差"}
{"content": "写作思路很清晰，赞。", "marks": "还行"}
{"content": "前四章不错，越往后看，越觉着评分高了。总体7.5分吧。", "marks": "推荐"}
{"content": "读于2016年。Android进阶书籍，非入门书籍，侧重源码解读。", "marks": "推荐"}
{"content": "第二遍读下来，依然很有收获", "marks": "力荐"}
{"content": "适合入门后读。", "marks": "力荐"}
{"content": "进阶", "marks": "推荐"}
{"content": "干货还是有一些的", "marks": "力荐"}
{"content": "感觉是读不完的，过段时间再看总能学到些什么。", "marks": "力荐"}
{"content": "Android 进阶的好资料书。", "marks": "推荐"}
{"content": "中国人写的书越来越好了，中国加油", "marks": "推荐"}
{"content": "还可以.笔记还没有做完.一些内容官网上都有,大家懒得总结,作者总结了.还有作者实际开发过程中遇到的一些情况.总体来说,不错的书.", "marks": "推荐"}
{"content": "囫囵吞枣读完了，还需要再反复读，特别是源码解析的部分。写得十分详细，不过略深。", "marks": "力荐"}
{"content": "这个是进阶书，实际开发经验超过1年或以上，再来看，会比较好。一定程度上，可以放在桌面上，经常参考。好书。", "marks": "力荐"}
{"content": "有少量几处讲解抓不住重点，大段的解释不如来一张图清晰，可能因为作者对本书的定位，对很多底层原理没有深入讲解，但仍不失为一本内容和结构都不错的好书。", "marks": "推荐"}
{"content": "要读的书之一   记不住啊喂  ，过段时间值得再看。好多东西没有理解清楚", "marks": "推荐"}
{"content": "有些地方写的不错是干货，有些地方又写的太浅", "marks": "推荐"}
{"content": "好书，干货足，用来进阶不错，从源码角度解释了不少重要类的工作原理", "marks": "力荐"}
{"content": "大半年啃完了；初级后这本书算是一本挺不错的进阶", "marks": "力荐"}
{"content": "非常合适的进阶书籍，填补了市面上的Android书籍空白", "marks": "力荐"}
{"content": "快看完了，觉得算是国内写的不错的书，有细节有分析，而且不枯燥，就是代码贴的难看了点，作者说是高阶书籍，但是读完觉得中阶水平读者可能收获更高些。难度还不到高阶", "marks": "推荐"}
{"content": "难能可贵", "marks": "力荐"}
{"content": "老是想进阶，买过一些书。要么就是太初级，要么就是太深入从内核编译开始讲起。这本书可以带着去了解framework，不过读的时候还是要自己阅读源码才能有所得，否则还是看完忘，推荐应用开发工程师阅读", "marks": "推荐"}
{"content": "书还是挺不错的，里面有的内容不是很详细就需要读者自己深入学习，可以作为一个学习的提纲，献上自己的读书笔记：\nhttp://wujingchao.github.io/2016/03/05/关于<<Android开发艺术探索>>读书笔记总结/", "marks": "推荐"}
{"content": "看知乎上多人推荐，双11 5折入，刚翻了一下，确实不错。具体如何不错，且待我读完一遍，再做分析。\n读完一遍后，确实受益匪浅。推荐给想要进阶的开发工程师。", "marks": "推荐"}
{"content": "非常优秀的一本书，把Android开发重要的几个基本面都讲解了一遍，也详细讲了实际开发中遇到的问题。真是Android界难得的一本好书，对作者的技术追求表示敬意。", "marks": "力荐"}
{"content": "中间和view相关的还可以，其他的部分基本就是贴源码，贴完源码一句话带过……当初就是冲着高评分买的，结果看完之后，觉得不值得，给个三星勉强吧", "marks": "还行"}
{"content": "干货很多", "marks": "力荐"}
{"content": "该书适合进阶段的程序员。书整体阐述了View、aidl、Activity这些知识简单的原理，没有停留在详细描述原理致使这书读起来不会过于枯燥。", "marks": "推荐"}
{"content": "入门必看", "marks": "力荐"}
{"content": "Android 进阶很有帮助", "marks": "力荐"}
{"content": "非常棒,用心制作", "marks": "力荐"}
{"content": "挺不错的，结合源码把很多知识点讲的挺透彻，值得一读！", "marks": "力荐"}
{"content": "还可以吧", "marks": "推荐"}
{"content": "花了三天看完，收获不少。作者书里自己写的代码都很详细地解释了思路。分析系统源码方面，细节有缺失，但是整个流程和思路都是清晰的", "marks": "力荐"}
{"content": "全是拷的整页的代码凑页数，还没注释，然后原理性的东西就几句话就带过了。", "marks": "很差"}
{"content": "我可以说，这本书写的不好吗？内容枯燥，在博客上10分钟能理解的东西，非要写一堆。然后结果是你看了半小时还云里雾里。推荐大家看一下他的标题，然后去谷歌一下，会更快。", "marks": "较差"}
{"content": "对于处女座的我来说，语法是我最不能容忍的。37p: 在Android中使用多进程只有一种方法......。其实还有另一种非常规的多进程方法，那就是JNI......。语法格式：只有xxx其实还有xxx。还有不少错误175p图4-1ViewGroup中没有perform方法。", "marks": "还行"}
{"content": "都是android进阶过程中的核心知识点，作者原来也是百度手机安全卫士的研发人员，感觉技术功底浑厚，进阶必备，棒棒哒", "marks": "力荐"}
{"content": "很显然，很容易，这个也很简单……\n作者的口头禅，已经到了丧心病狂的地步，都这么简单还看这个书做啥。\n\n书是好书，语言上减一颗星。", "marks": "推荐"}
{"content": "很好的一本android进阶书。", "marks": "力荐"}
{"content": "书到手上时间不长，看了超过四分之一了，的确很棒但是也有难度，需要多读几遍，有些地方从来没仔细琢磨过，看了之后受益匪浅啊，继续熬夜看[哈哈][偷笑]", "marks": "推荐"}
{"content": "一本进阶的书籍，需要耐心的去打通任督二脉。机遇求成的，出门左拐谷歌", "marks": "推荐"}
{"content": "如果做Android一段时间，有了一定积累，又想全面系统的取得进阶，这本书很适合", "marks": "力荐"}
{"content": "比较不错的书。对APP开发人员而言，framework层的原理讲的恰到好处。", "marks": "推荐"}
{"content": "学习android开发吃透官方文档和这本书基本可以独当一面了，对某些内容的深入探索", "marks": "力荐"}
{"content": "这是一本很不错的书籍，合适Android进阶的人群阅读。", "marks": "力荐"}
{"content": "泛而浅，已经过时了，不过还是感谢作者", "marks": "很差"}
{"content": "说实话还不错，但是就我一人发现有那么多错别字吗？", "marks": "还行"}
{"content": "满满都是面试题，，，", "marks": "推荐"}
{"content": "内容不错，不过作者语言能在组织好一点就更好了。", "marks": "推荐"}
{"content": "对于深入安卓开发的一步重要的阶梯", "marks": "推荐"}
{"content": "不错。想了解源码的可以一看。", "marks": "力荐"}
{"content": "不错的", "marks": "力荐"}
{"content": "前几章讲的还不错，后面就纯属贴源码了。", "marks": "还行"}
{"content": "还是自己看代码吧，看的微信读书版排版太差。内容讲的不清楚", "marks": "还行"}
{"content": "前面讲的很多原理还不错，后面就开始大段大段代码充篇数了。Spark这种东西还是需要自己亲手实验的，目前还没有一个实验的环境。", "marks": "还行"}
{"content": "讲的比较简洁明了，就是少了streaming相关的介绍，特别是checkpoint ", "marks": "力荐"}
{"content": "总的来说中规中矩吧。前几章讲得还算是清楚，后面开始大段大段的贴代码了，许多值得展开的地方也没有详细讲解。", "marks": "还行"}
{"content": "整本书，更像是作者的笔记或自我总结。全书排版乱，纸张也不好。编写思路没有一个总纲领，几个模块的分析，基本是想到哪里写到哪里。每个模块也分析得不太深入，逻辑不清晰。总之还是考虑别的书籍吧。", "marks": "很差"}
{"content": "半天读了一大半，感觉就是各种东西的大杂烩，买个电子版的翻翻就行了，勉强给个三星吧。", "marks": "还行"}
{"content": "最后感谢一下我的妻子,如果没有你的陪伴,我应该早就写完这本书了 23333", "marks": "力荐"}
{"content": "写给大学生或者毕业生的，对我这样的后端spring开发人员也有一定帮助。", "marks": "推荐"}
{"content": "非常浅，不过仍然有用。", "marks": "推荐"}
{"content": "算是全栈工程师的指引，内容浅而广。每章附录的书单质量都挺不错。", "marks": "推荐"}
{"content": "1.作者水平不错，很有见地  2.书名是web全栈工程师，但本质还是前端，作者的背景如此 3.书中黑了一把野生程序员，但是这本书是很适合野生程序员读的", "marks": "还行"}
{"content": "之前读过专栏, 书里也新增了一些内容", "marks": "推荐"}
{"content": "当年有一本书叫《人人都是产品经理》。", "marks": "很差"}
{"content": "非常适合新人去了解整个Web开发的流程，浅薄易懂，指导你们在这个领域做出一个长远的规划，专业知识讲的不多，故打三星", "marks": "还行"}
{"content": "书中很少提及技术详情，讲了一些全栈工程师的概念、技术栈甚至到设计、用户体验，广度还是很够的，这大概是作者工作成长过程的记录吧，对前端或者对程序员成长感兴趣的同学，推荐看看，前辈们的经验之谈，早点感受也蛮好的~", "marks": "推荐"}
{"content": "作者分享了自身成长经历，面试经验；介绍了公司的工作流程和各岗位的跨界合作；对在校学生和刚入社会的新人很有指导意义。行文流畅，通俗易懂，比喻贴切，对全栈工程师的理念解释的很透彻；涉及到的知识面很广，每章后面推荐的书单质量很高，作为延伸阅读是不错的选择；后记里的最后一段是点睛之笔……", "marks": "力荐"}
{"content": "所有的职场人士其实都应该关注一个问题：我们的目标用户是谁？你必须学会制作自己的作品集，向六种人展示自己的能力：老板&客户，潜在客户，潜在雇主/未来老板，潜在的朋友/合作者，任何其他人以及最重要的——你自己。全栈工程师可以在github上有自己的作品集建立个人品牌，那么你呢？", "marks": "推荐"}
{"content": "这是科普书", "marks": "较差"}
{"content": "受益 // 后记最后一句…………", "marks": "推荐"}
{"content": "国内的技术书籍写的越来越好了，非常赞！娓娓道来，像一个工作了几年的师兄跟你聊天一个感觉。全栈的路，任重而道远。", "marks": "推荐"}
{"content": "想给10颗星可以吗", "marks": "力荐"}
{"content": "了解下流程过了一遍！", "marks": "还行"}
{"content": "万一作者会成为我的上司呢？哈哈哈，强烈推荐给大学生，作者乐于分享，不然也不会出这本书啦，人肯定很nice，btw，头像很帅。20151218", "marks": "力荐"}
{"content": "挺无聊的一本书。。。", "marks": "还行"}
{"content": "力荐：对于有同样志向（即负责服务器的前端开发），但目前由没有达到这种水平或境界的同学，可以一读，技术点可能不深入，但对于职业规划的指导意义，还是非常足够的。", "marks": "力荐"}
{"content": "唔，并不是一本技术书籍，是对技术的一些从事的工具方法，对于毕业生还是有些帮助，其实花几个小时就看完了，还推迟了几个月才看", "marks": "还行"}
{"content": "2015.10.04,书内书单已整理为豆列", "marks": "推荐"}
{"content": "好书，填补了国内“全栈”的空白", "marks": "力荐"}
{"content": "可以翻阅一读", "marks": "推荐"}
{"content": "比较小白，但是对于全局性了解还是有帮助的内容也比较丰富。", "marks": "还行"}
{"content": "偏前端，不仅仅讲技术，还讲了对技术的态度以及一点点管理。技术是核心，管理是锦上添花。", "marks": "推荐"}
{"content": "书很不错 作者自己的心路历程和感悟", "marks": "力荐"}
{"content": "快速翻看了一遍", "marks": "还行"}
{"content": "如果三年前看到这本书该多好", "marks": "力荐"}
{"content": "在书店很快概览的，对这个领域好奇想了解，然而毕竟太外行，很多看不懂。看到有人说浅，真想哭。希望有朝也能读懂编程语言。——一个小白的心声", "marks": "推荐"}
{"content": "😂停电的原因才这么早读完。\n很适合入门，大致对前端了解，等以后实践还可以拿过来翻翻。\n8.11读第二遍，有不一样的感受，但是读的有的急躁。", "marks": "推荐"}
{"content": "书中提供了许多有关各个技术领域相关的参考，应该算是本书中最有价值的一部分", "marks": "还行"}
{"content": "web前端的入门介绍书，加入了作者对一些工作的思考，值得一读", "marks": "推荐"}
{"content": "涉及知识面较广，适合入门了解", "marks": "推荐"}
{"content": "作者介绍的很全面，对于开始接触Web开发，全栈的工程师都有帮助。也介绍了很多程序员的自我成长的经验。", "marks": "推荐"}
{"content": "这不是一本讲技术的书，但讲到的都很实在，字里行间展现了作者广阔的视角和不断突破角色限定所养成的的思维方式。可以作为互联网行业入门/科普书。", "marks": "力荐"}
{"content": "适合实习期的野生程序员阅读，涉及web开发，软素质，自我提升的全貌，虽然显得不够深入，但是中文社区很早就需要这样一本书了", "marks": "推荐"}
{"content": "貌似讲UI比较多。", "marks": "推荐"}
{"content": "了解下web全栈的内容", "marks": "推荐"}
{"content": "虽然不时散发出一股腾讯的异味。。", "marks": "还行"}
{"content": "挺快的看完，很多零碎的方法论散布各处。web全栈覆盖的技能真是很大，然后看到中段隐隐觉得：这么厉害的人，也只是做到这个程度了吗。心生沮丧。", "marks": "还行"}
{"content": "专业见识不仅需要深度 还需要广度 加油吧小百合", "marks": "还行"}
{"content": "各种知识栈的大杂烩，看了之后没啥印象，浪费时间。", "marks": "较差"}
{"content": "实际，有点见解。", "marks": "还行"}
{"content": "草草读过一遍，不解渴啊…", "marks": "还行"}
{"content": "还不错", "marks": "推荐"}
{"content": "这本书我开始是拒绝的，但后来在同事的推荐下，我刚刚读完了这本书，用了3天零散时间，内容和书名匹配，我建议每个前端人员都要读一读，作者写了很多内容，大部分都是引导介绍，没有深入展开，但我还是学到了很多以前自己不擅长的东西，如果这里面的内容你都融会贯通，那你就是一个合格的全栈工程师了，书中具体介绍的东西不多，比如工具，大部分是举例子，所以即便工具过时也不影响阅读理想，总之感谢作者，让我学到了很多东西", "marks": "力荐"}
{"content": "一本不错的前端设计师科普书，有志成为前端和全栈工程师的入门小白都可以看看，可以扩宽视野。推荐", "marks": "力荐"}
{"content": "并没有严格地局限于前后端技术的介绍，按作者的说法是集中于“全栈思维”的想法。这本书很好的帮助我理清了前后端各个层面的语言和框架", "marks": "推荐"}
{"content": "不是专门的技术书，最主要是对前端的认知和理解深刻啊，为什么我不是大三的时候就买！后悔不开森☹️", "marks": "力荐"}
{"content": "书是从big picture的角度讲了全栈工程师所需一些技术。但更喜欢的是对于技术成长上的分享，跨界思考，沉淀积累，影响力，管理理念，软实力等方面的切身体会。", "marks": "推荐"}
{"content": "非专业人士也能学到一些东西。", "marks": "力荐"}
{"content": "挺有帮助，讲了全栈工程师所需知识的方方面面，科普型的书，作者偏前端。最后一句喷了“最后，感谢我的妻子，如果没有你的陪伴，我应该早就写完这本书了“", "marks": "推荐"}
{"content": "非常差，如果是还没毕业的学生花1块钱买个电子版做课外阅读还可以", "marks": "很差"}
{"content": "赞～", "marks": "推荐"}
{"content": "非常好的一本书，现身说法但又不是那种一家之言，理论结合实际，每章节后都有推荐书目，从技术，人际，管理等方方面面进行全面的介绍，你可以从中学到很多。当然，篇幅有限所以介绍的不多，但基本足够了，毕竟不是一本专业技术书。作者非常棒！希望未来我也能成为这样的一个工程师。值得再读。", "marks": "推荐"}
{"content": "适合应届生来读。内容全面，涵盖背景、技术、工作、经验。软硬实力都有介绍，技术上面讲述得没有很深入下去。", "marks": "还行"}
{"content": "职业生涯规划建议。", "marks": "推荐"}
{"content": "适合看电子版~\n先精后广，一专多长", "marks": "较差"}
{"content": "2016.37，适合野生程序员看，内容铺的比较广，也比较浅，三星推荐吧，部分内容已经过时了，作者最后一句总结很搞笑“感谢妻子，如果没有你的陪伴，我早就写完这本书了。。”", "marks": "还行"}
{"content": "内容略浅显，很适合学生党吧。推荐的书倒还成", "marks": "还行"}
{"content": "内容还算充实，值得一读", "marks": "推荐"}
{"content": "还行吧，资深流水账", "marks": "还行"}
{"content": "如同书名说得一样", "marks": "力荐"}
{"content": "里面推荐的学习方法，还有很多工具确实挺好用的。虽然不是一本严肃的技术书籍，但是是一本指引方向，偏向感性的引导性书籍", "marks": "推荐"}
{"content": "工程师的自我修养", "marks": "还行"}
{"content": "技能固然重要, 然而, 思维方式才是最重要的. \n书中很多观点对广大IT从业者都有启发意义.", "marks": "力荐"}
{"content": "拓展了视野，值得一阅。", "marks": "推荐"}
{"content": "比小说还好看的一本书，我有时都服了自己的口味。", "marks": "推荐"}
{"content": "有些意见还是很适合刚入门的看的。偏web前端。挺亲切。就是内容还是太一扫而过了。", "marks": "还行"}
{"content": "被作者整本书的最后一句话逗乐了哈。", "marks": "推荐"}
{"content": "写的虽然不深，但是涉及面非常广，作者告诉我们应该灵活应用技术", "marks": "还行"}
{"content": "书挺不错的，可以全方面的了解web全栈的技术栈", "marks": "推荐"}
{"content": "技术归根到底是一个市场行为，要从商业角度去思考。作者相当年轻，又那么努力，我辈要加油了。作者求职那一段很有启发，关注最前沿的领域，用学到悟到的概念理解，做一个与众不同的自我简历。提出了野生程序员的概念。", "marks": "推荐"}
{"content": "全书内容像是一个过来人对新人说的话，内容浅而广，适合刚入行业的人看看。也对那些专注于一方面又想成为全栈的人会有很大的启发。因为本身接触过很多这方面的知识，所以对我个人而言没什么收获。", "marks": "推荐"}
{"content": "昨天买的，今天看完，因为昨天晚上没忍住看到了3点。\n写得很好，自己这两年在慢慢地从『野生程序员』向『专业程序员』转变\n最近刚好也在学iOS和Node，还好之前有一点点PHP经验，对于Node并不难理解。\n我，也走在全栈的路上了。", "marks": "力荐"}
{"content": "前几个月看的，有点忘了，概念介绍的还挺清楚的", "marks": "推荐"}
{"content": "想成为一个Web全栈工程师，任重而道远。", "marks": "力荐"}
{"content": "花了一周时间读完，对于像我这样一个迷茫在全栈城池外的野生程序员来说，这是一份难得的指引。从题目可以看出，对全栈技术解析并非此书的本意，特别是对于新人来说，这更像是一本指南。作者对自身的一些经历和感悟，也能让人产生共鸣。作为一本工程师读物，语言朴实亲切，排版简明轻快，插图配色恰到好处，应该说还是值得一阅的。", "marks": "力荐"}
{"content": "看得出作者水平很高，不过...说是WEB全栈，但是对后端的理解流于表面，对于语言和架构的讨论也是如此。大概就是知乎上的前端全栈吧...倒是程序员的声望、工程思维相关的地方讲得很好。另外\"你\"被批量替换成\"您\"导致有些地方特别奇怪，全书的最后一句倒可以算点睛之笔", "marks": "还行"}
{"content": "学生读读不错", "marks": "还行"}
{"content": "书也就两百页，纸质不错。内容泛泛而谈，让人对web工程师的知识储备和工作内容有大概了解，没什么技术性，适合新人。", "marks": "推荐"}
{"content": "第一小节讲了什么是web全栈工程师，后面就一直在讲一些无聊的东西，比如实习生的建议。对我而言用处不大，再往后偏重讲的是web前端的东西，比如优化等等看不下去了…", "marks": "较差"}
{"content": "指导性的书，讲的比较宽泛，具体需要去扩展阅读", "marks": "推荐"}
{"content": "扫盲书，入行时看的，很有帮助", "marks": "推荐"}
{"content": "2016年读的书，讲了关于设计与web开发的知识。不是实践型书籍，作者的一些观点很赞同。", "marks": "推荐"}
{"content": "列出了全栈工程师的基本技能🌲", "marks": "力荐"}
{"content": "总的来说还可以吧，前面的部分有一些干货，但是讲的太泛泛了，确实是博文转成图书的，连贯性也较为一般。不过对于全栈工程师的理解和解读倒是很有见解。", "marks": "还行"}
{"content": "适合大学生和应届毕业生阅读，作者全面介绍了互联网的基本知识和行业状况，也有作者的一些感悟，也可以说是作者毕业五年成长的一些总结，值得一看。", "marks": "力荐"}
{"content": "作者写这本书时应该没有想到“全栈”现在被黑的有多惨……但是作者心中的全栈工程师应该是指高级前端工程师吧。总而言之，一个优秀的 programmer，所掌握的知识应兼具广度和深度，除此之外，还得具备除 coding 之外的其他技能（如设计、管理）。当然最主要的一点那就是，无论从事哪个职业，人都要不断地思考", "marks": "推荐"}
{"content": "一本web开发大杂烩。", "marks": "推荐"}
{"content": "对全栈工程师的理解比较到位", "marks": "力荐"}
{"content": "对初入职场而且又做前后端开发的人来说，这本书还行，各个方面都带过，当然了，这本书范围很广，但是都不怎么深入，可以起到一个了解技术栈的作用，每个章节后面也都会有推荐的书籍，可以挑个感兴趣的方面深入钻研一下", "marks": "还行"}
{"content": "对于想做全栈工程师的人来说是一本不错的书，作者作为腾讯的老员工，分享了很多公司中的实际业务技巧，同时也借鉴了其他优秀书籍里面的经典，对于想要进一步提升的人来说可以去读读每一章后面的推荐书籍", "marks": "推荐"}
{"content": "作为一个新人来讲，很有启发。", "marks": "推荐"}
{"content": "对于作者的技术学习方式和成长路线非常认同，这本书更像是作者的个人总结回顾，虽然内容相对浅显、点到为止，但可以作为一个很好的参考，全局地去看Web全栈工程师涉及的技能点，更有作者珍贵的心得体会和经验教训。", "marks": "推荐"}
{"content": "如果早两年看到这本书的话，能少走很多弯路。 全书覆盖了开发过程中的大体流程，文笔恳切。力推", "marks": "力荐"}
{"content": "随笔形式，介绍 Web 全栈", "marks": "推荐"}
{"content": "作者介绍了web全栈开发的相关流程和技术，以及工程师所需的其他技能如沟通，时间管理等。每个章节附加的书籍值得继续阅读。整体比较通俗易懂。", "marks": "推荐"}
{"content": "只是粗略地翻了一下。很多作者的经验之谈，有足够的广度。许多中肯的建议。作为小白，我觉得可以借此拓展一下技术视野。全栈什么的还没这个能力，确实要先专注某个方向深入下去，努力积淀自己，之后才能以更宏大的视角来看待和解决问题。\n忘记一点，开的书单确实都挺好。", "marks": "还行"}
{"content": "没什么内容，介绍性的书，就指个大方向然后你自己去学就行了", "marks": "推荐"}
{"content": "难得见一本随便翻翻就能读完的书了...", "marks": "推荐"}
{"content": "强烈推荐，太多干货了，解决了自学前端的我好多好多问题啊", "marks": "力荐"}
{"content": "书籍开始介绍作者的求职经历，给了我很大的启示，有点感慨本书籍为何不早点出版。很好的解析了何为野生程序员，以及如何做到全栈工程师。很好的书籍不错", "marks": "推荐"}
{"content": "帮助入门者，有一个对Web全栈开发的整体认识，可以指明一些方向，很开心能够看到这个一本连载博客类的书。", "marks": "还行"}
{"content": "可以开拓视野", "marks": "还行"}
{"content": "专业领域结合实践，值得推荐", "marks": "力荐"}
{"content": "实习因不愉快辞职。回学校找WEB工具书学习，无意中在旁见到，随便翻翻上瘾了，Web开发的启蒙，希望我的程序员路能走得更远。", "marks": "力荐"}
{"content": "很赞，发人深省，不仅只写代码 更要全面发展", "marks": "力荐"}
{"content": "内容比较泛比较杂，讲得比较通俗易懂，比较适合入门。", "marks": "推荐"}
{"content": "大学僧可以看看，几下就看完了。", "marks": "推荐"}
{"content": "2017.12.06", "marks": "还行"}
{"content": "以作者的工作角度简述了前端工程师该如何转向全栈工程师，总体上，从这本书中得到很多未来的职位方向启发。作者每个章节后推荐的书确实不错，已经研读了其中几本。作为一个后端工程师，前端工作一直都停留在比较肤浅的层面，读完这本书之后，感觉找到了前后端研发工作的交汇点，受益颇多。", "marks": "推荐"}
{"content": "适合前端新人，可以快速了解web的各个技术栈，书里还推荐了很多书", "marks": "推荐"}
{"content": "让我更好的了解前端的职业发展与方向", "marks": "推荐"}
{"content": "这不是一本讲某种技术的书，这是一本分享经验的书。通过本书知道了很多从来没有听过的事", "marks": "力荐"}
{"content": "非常好的Web技术方面的书，写得非常幽默。", "marks": "力荐"}
{"content": "作者的观点给了我很多启发。我想我会再一次翻阅这本书，在我困惑时，让我醒悟", "marks": "力荐"}
{"content": "受益匪浅!", "marks": "推荐"}
{"content": "全书比较通俗易懂,举例子印象比较深刻,说的让人明白,不像有的书写得云里雾里的,是全栈开发比较好入门推荐的书籍之一.", "marks": "推荐"}
{"content": "这本书还是不错的，作者经历丰富 适合大学生", "marks": "力荐"}
{"content": "励志做前端的我在大二看到这本书，感觉很不错，内容4星，个人有用加1星", "marks": "力荐"}
{"content": "有些讲解的不错", "marks": "推荐"}
{"content": "如果仅仅考虑工程应用而不是原理，我想其实这本书比大多数市面上的算法书其实更好", "marks": "推荐"}
{"content": "刷题！", "marks": "力荐"}
{"content": "太贵了", "marks": "较差"}
{"content": "刷题神书", "marks": "力荐"}
{"content": "题太多了……和剑指offer配合看较好，作为补充。", "marks": "还行"}
{"content": "还不错", "marks": "力荐"}
{"content": "看了左老师课程之后购买的。老师性情中人，讲解到位。不过算法还是需要自己多动手。刷题时经常拿这本书看看是很有益处的", "marks": "力荐"}
{"content": "动态规划是我见过讲的最好的，左神的视频也看过，算法讲的很容易理解", "marks": "力荐"}
{"content": "在读中，但是用java写的，我关于数据结构习惯思维还是c语言。总是看着看着想用c怎么实现呢？然后马上敲自己的狗头！这明明是java写的！只能在电脑上敲一遍代码来帮助理解（忧伤", "marks": "力荐"}
{"content": "已经读了一半了，写的真的不错， 如果能在代码的关键位置加些注释，那就更完美了， 给五星不犹豫", "marks": "力荐"}
{"content": "讲的很清楚", "marks": "力荐"}
{"content": "神书，好多面试题都能在这本书上找到原型", "marks": "力荐"}
{"content": "amazing", "marks": "力荐"}
{"content": "书写得深入浅出，值得阅读，体会和练习，Top Python books", "marks": "力荐"}
{"content": "好久没遇到读着很爽的技术类书籍了，这本就是。\n就像听一个老司机讲经历，你在边上情不自禁的喊666。", "marks": "力荐"}
{"content": "里面有些东东确实我不知道 🤗", "marks": "推荐"}
{"content": "Python领域最好的书了", "marks": "力荐"}
{"content": "python 高阶必备", "marks": "力荐"}
{"content": "这是一本神书", "marks": "力荐"}
{"content": "用一些例子详细讲述了python中一些语法的来龙去脉,非常值得一读.", "marks": "力荐"}
{"content": "先看着吧，希望能看完", "marks": "力荐"}
{"content": "看过最棒的python书", "marks": "力荐"}
{"content": "make your python 666", "marks": "力荐"}
{"content": "目前为止读过最好的 Python 中级书籍", "marks": "力荐"}
{"content": "神书, 读完后, 感觉 Python 真的美啊, 好多特性, 怎么以前自己就忽略了呢?", "marks": "力荐"}
{"content": "学习到了如果项目没有legacy，就直接上Python3", "marks": "力荐"}
{"content": "这本书其实不再是那么基础的东西了，对一些重要的库以及 Python 的语言特性深入阐述，总之很适合用来提高自己 Python 编写技能。这本书让我知道，Python 它并非想象中的那样简单，很值得啃一啃~", "marks": "推荐"}
{"content": "拖延症晚期", "marks": "推荐"}
{"content": "深入浅出", "marks": "力荐"}
{"content": "非常好!", "marks": "力荐"}
{"content": "读完此书, 感觉内力大增. Python进阶不可多得的一本好书. 力荐.", "marks": "力荐"}
{"content": "对Python进阶非常有用,用非常简单明了的方法把Python的特性讲解的非常清楚", "marks": "力荐"}
{"content": "深刻，详细，适合深入了解python特性", "marks": "力荐"}
{"content": "内容实在有深度、论述全面有广度，好书！深度、广度、实用性同时兼备，好书！", "marks": "力荐"}
{"content": "Python最佳进阶", "marks": "力荐"}
{"content": "深入浅出  非常不错！！", "marks": "力荐"}
{"content": "看过的质量最高的Python 书籍，pythonic ", "marks": "力荐"}
{"content": "惊艳", "marks": "力荐"}
{"content": "学Python唯一推荐看的书，然后就是官方文档和Tutorial", "marks": "力荐"}
{"content": "Python 进阶不二之选，讲的很清楚", "marks": "力荐"}
{"content": "介绍了各种pythonic的写法，看了之后发现自己以前根本就不会python……", "marks": "力荐"}
{"content": "还行，没那么差。对比了老的开发模型（Java + OO）和函数式模型（CQRS，我们一直使用但不知道叫什么的模型）。自嘲了 Java 黑了 Maven。最后给出了动静态语言的推荐和理由。主要还是用 Java 8 讲解的。当然，我自己还是更习惯从数据抽象，而不是对象抽象。", "marks": "还行"}
{"content": "英国办公室的大神，awayday时候听过他的session，很不错。", "marks": "还行"}
{"content": "前三章很受启发，后面几章很一般。", "marks": "推荐"}
{"content": "前几章还行，后面就有点泛泛而谈了。", "marks": "还行"}
{"content": "讲道理就是用来入门的", "marks": "推荐"}
{"content": "Java 8命令式到对象式到函数式，里面例子一目了然。关键是设计模式的进化论。", "marks": "力荐"}
{"content": "读了这本书，很有启发。", "marks": "力荐"}
{"content": "前面几章还不错，后面几章比较水。", "marks": "较差"}
{"content": "差了那么一口气。", "marks": "还行"}
{"content": "作者用groovy scala clojure java四种语言跟你讲什么是函数式，我觉得如果没有基础的话，更有可能让大家更难follow他", "marks": "推荐"}
{"content": "只说了一点函数编程术语，实现过程不讲，而是直接调用别的语言的实现，看了没啥收获。", "marks": "较差"}
{"content": "说得不透彻, 函数式编程的东西也说得不深入.", "marks": "还行"}
{"content": "对相关api有了新的了解，但其实那么多语言的范例并不是很必要，当然，因为我只熟java和Scala。", "marks": "推荐"}
{"content": "一直觉得讲函数式编程在于思想，而不在于用几种语言实现。书中更多的是用几种语言实现同一个特性，有点像语法对比。反而弱化了函数式思想的内容。", "marks": "还行"}
{"content": "函数式入门书，挺不错。你要是学了scala或者groovy，但是对函数式不太了解，看了这本书，会让你更加理解语言和其函数式特性。", "marks": "力荐"}
{"content": "函数式编程，弱化数据结构的设计，可以专注程序的逻辑。喜欢。。。", "marks": "推荐"}
{"content": "用了多种语言来介绍函数式编程特性，在不同语法之间来回切换，看到好累，还不如专门学一门纯粹些的函数式编程语言。而且感觉对于函数式编程的精妙之处表现得还不够。", "marks": "还行"}
{"content": "FP 入门读物", "marks": "还行"}
{"content": "在没啥FP实战经验的前提下看这本书，有点刻舟求剑的意味。话说Dietzler的Access定律说的真对。。。（第一本用kindle看完的书，mark下", "marks": "推荐"}
{"content": "作为前端，看这本书了解其他需要的函数式方案还是很不错的。但很多内容在js场景是不能用的，需要配合js版本的函数式书籍一起看", "marks": "推荐"}
{"content": "对比OO，过程式编程，讲述函式编程的思维。", "marks": "推荐"}
{"content": "感觉一般吧，内容浅显，概念一笔带过，不太深入", "marks": "推荐"}
{"content": "讲了一些基本的函数式编程概念在各个 JVM 语言上的实践，以实例来讲思维，一百多页的内容看到最后想总结的时候发现可能就一百多字的重点。", "marks": "推荐"}
{"content": "对函数式编程的思想讲解的挺深入浅出的", "marks": "推荐"}
{"content": "简单的入门书，很有启发，但东西不多", "marks": "推荐"}
{"content": "很棒的书，然而后面两章并没有看完。还算是很易懂的，例子也很多。", "marks": "推荐"}
{"content": "一本言简意赅的薄书，把一些基本原则讲了一下。", "marks": "推荐"}
{"content": "没看懂，，囧rz。。。", "marks": "较差"}
{"content": "对我这个学clojure有一段时间的人而言意义巨大。遇到的问题几乎都得到了一定的解答，不可多得的良品。", "marks": "力荐"}
{"content": "用三种语言讲了函数式编程，多少让人读着有些烦躁。 或许是我太急躁了。", "marks": "推荐"}
{"content": "读起来酣畅淋漓，不过阅读前需要事先对Groovy或Scala或Clojure有一定了解", "marks": "推荐"}
{"content": "很受启发！", "marks": "推荐"}
{"content": "看的英文原版，讲的挺到位的，比较基础。 关于函数式与命令式的思考方式。不过已经对scala有1年左右的学习经验，所以这本书并没有带来太多新的给我，讲的东西基本上都在学习scala的过程中通过各种博客，书籍掌握了", "marks": "推荐"}
{"content": "没太多体会，可能是还没有这方面的代码经验…", "marks": "还行"}
{"content": "非常值得推荐的一本书，通过jvm语言总结归纳出函数式的特点，对于学习scala、groovy都很有帮助", "marks": "力荐"}
{"content": "函数式编程之前只是听说，这本书主要就是介绍这种思想，对于实现每个都用了好几种编程语言来实现，可以很好的了解什么是函数式编程。粗读了两天，最大收获，了解了什么是函数式编程。", "marks": "推荐"}
{"content": "很浅显易懂，比如filter，map在不同语言的实现上的区别。\njava语言由于简单和设计上的问题，局限性还是过大了。", "marks": "推荐"}
{"content": "入门不错，介绍了FP的一些思想和概念。如果已经有了解过FP，花个半天也就能翻完了", "marks": "力荐"}
{"content": "看了之后收货很少.也许是因为之前写过不少Scala,Lisp的原因,换句话说,如果已经系统仔细地看过某个函数式语言的书,就用不着看这本书.", "marks": "较差"}
{"content": "本书前半部分内容还不错，后半部分偏软件工程内容略多，显得有点虚。", "marks": "还行"}
{"content": "若干新概念很晦涩，对实际工作帮助不大。", "marks": "较差"}
{"content": "SOA的简要介绍与概念索引，方法论的东西还是需要结合实际去实践才可以的。", "marks": "推荐"}
{"content": "数据结构是和算法息息相关的，这本书还是非常不错的。各种细节讲的比较到位。", "marks": "推荐"}
{"content": "实现数据结构的一本好书，比较基础实用", "marks": "推荐"}
{"content": "好书", "marks": "力荐"}
{"content": "写得还是蛮详细的，对于深刻理解docker很有帮忙，但是正因为太详细，所以也很容易迷失。", "marks": "推荐"}
{"content": "读起来干巴巴的,没啥意思.", "marks": "还行"}
{"content": "作者手把手教你看docker代码及go。用此书入门docker其实不大适合。但是从源码的角度倒是对docker有了几分了解。其他就是实践的问题。", "marks": "还行"}
{"content": "只能粗读 达不到里面的深度，不过总体介绍的框架还是很好的。翻看了", "marks": "推荐"}
{"content": "这本书其实不错，虽然说是源码分析，作者都会介绍一下原理，也会对相关技术技术做介绍，并没有大片的代码。感兴趣可以快速看一下。", "marks": "推荐"}
{"content": "作为一个完全没有看过go语言，没有用过docker的人都能很轻松的读懂，我觉得这本书写的非常好。", "marks": "力荐"}
{"content": "主要是更新太块了，还是读的在线文档。", "marks": "力荐"}
{"content": "国内第一本关于源码解析的书，其实应该算是一本 docker 源码 introduction", "marks": "还行"}
{"content": "每当我处于和平，不再战斗和抵抗，似乎我又可以开始写诗了", "marks": "推荐"}
{"content": "修，苦，苦源头。离苦。修行，无我，专注当下，初学者心态，骄傲，心无杂念。反思。无目标。", "marks": "还行"}
{"content": "有点水。。。", "marks": "较差"}
{"content": "20171025合图。移动客户端无法标记，问候产品经理全家。", "marks": "还行"}
{"content": "一种态度和生活、工作方式", "marks": "力荐"}
{"content": "很糟糕。哪有那么多乱七八糟的事情，想写就写想生气就生气。 翻译很差", "marks": "较差"}
{"content": "时间管理，情绪管理。", "marks": "还行"}
{"content": "吃饭、睡觉、写程序、上班都是在修行", "marks": "推荐"}
{"content": "挺不错的一本书，起码让我认识了很多。五星。", "marks": "力荐"}
{"content": "有些地方还是有启发，参考笔记下来的部分。但总体来说有点无聊", "marks": "还行"}
{"content": "很难得邂逅这样一本将程序员与禅结合起来的书籍，更难能可贵的是作者（德国技术前辈）参禅的造诣之深厚。“这本书会让你对自己和周围的世界感到安宁。其中充满了真知灼见，有助于对生命保持正念与祥和。”  ——与国学经典《道德经》和《周易》教与人的道理有异曲同工之妙。", "marks": "推荐"}
{"content": "编程之外的读物。", "marks": "还行"}
{"content": "只能说是个有点课外知识的程序员", "marks": "还行"}
{"content": "内心的宁静", "marks": "力荐"}
{"content": "专注；心无杂念；虚怀若谷；无我；不要设置职业目标；敏事慎言；正念、观照、觉察；做自己的老板；玩物养志；淡泊宁静", "marks": "还行"}
{"content": "虽然方向很好，但作者似乎对禅只是一知半解。", "marks": "还行"}
{"content": "很大收获，对工作了的程序员更有效果。爱上了禅的思想。", "marks": "推荐"}
{"content": "人活着就是修行", "marks": "推荐"}
{"content": "【读书笔记】程序员之禅\n1.确实是德国人的特点，规则感，纪律感，认真。时间管理的优先排序，团队配合的角色定位，除了挣钱还有更重要的事～家庭、爱好。\n2.每个人都在追求完美的自己。时时处处可修行。\n3.摘录“程序员之禅的10条法则：1、专注；2、心无杂念；3、初学者心态；4、无我；5、不要设置职业目标；6、敏事慎言；7、正念、观照、察觉；8、做自己的老板；9、玩物养志；10、淡泊宁静。”", "marks": "还行"}
{"content": "这本书太对我胃口了！就是要以这种『特别』混江湖！", "marks": "力荐"}
{"content": "虽然书名看起来很烂，但对我而言，有用的书就是好书。", "marks": "推荐"}
{"content": "看看", "marks": "推荐"}
{"content": "写的很细致，学习Net-SNMP必备", "marks": "力荐"}
{"content": "看完这本书才来评价的，作者写得很认真，涉及到了SNMP开发的各个方面。书中的例子也很好，直接copy到项目中就能用。", "marks": "力荐"}
